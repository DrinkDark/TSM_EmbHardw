
sobel.elf:     file format elf32-littlenios2
sobel.elf
architecture: nios2:r1, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x00000244

Program Header:
    LOAD off    0x00001000 vaddr 0x00000000 paddr 0x00000000 align 2**12
         filesz 0x00000020 memsz 0x00000020 flags r-x
    LOAD off    0x00001020 vaddr 0x00000020 paddr 0x00000020 align 2**12
         filesz 0x000124cc memsz 0x000124cc flags r-x
    LOAD off    0x000134ec vaddr 0x000124ec paddr 0x00013fd8 align 2**12
         filesz 0x00001aec memsz 0x00001aec flags rw-
    LOAD off    0x00015ac4 vaddr 0x00015ac4 paddr 0x00015ac4 align 2**12
         filesz 0x00000000 memsz 0x00000190 flags rw-

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .entry        00000020  00000000  00000000  00001000  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .exceptions   00000224  00000020  00000020  00001020  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .text         00011ac0  00000244  00000244  00001244  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       000007e8  00011d04  00011d04  00012d04  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .rwdata       00001aec  000124ec  00013fd8  000134ec  2**2
                  CONTENTS, ALLOC, LOAD, DATA, SMALL_DATA
  5 .bss          00000190  00015ac4  00015ac4  00015ac4  2**2
                  ALLOC, SMALL_DATA
  6 .sdram_ctrl   00000000  00015c54  00015c54  00014fd8  2**0
                  CONTENTS
  7 .comment      00000023  00000000  00000000  00014fd8  2**0
                  CONTENTS, READONLY
  8 .debug_aranges 00000fd8  00000000  00000000  00015000  2**3
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_info   00024c0f  00000000  00000000  00015fd8  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_abbrev 0000997f  00000000  00000000  0003abe7  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_line   0000bea4  00000000  00000000  00044566  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_frame  0000228c  00000000  00000000  0005040c  2**2
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_str    00003b86  00000000  00000000  00052698  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_loc    000190e8  00000000  00000000  0005621e  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_alt_sim_info 00000060  00000000  00000000  0006f308  2**2
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_ranges 00001b70  00000000  00000000  0006f368  2**3
                  CONTENTS, READONLY, DEBUGGING
 17 .thread_model 00000003  00000000  00000000  000749f2  2**0
                  CONTENTS, READONLY
 18 .cpu          0000000c  00000000  00000000  000749f5  2**0
                  CONTENTS, READONLY
 19 .qsys         00000001  00000000  00000000  00074a01  2**0
                  CONTENTS, READONLY
 20 .simulation_enabled 00000001  00000000  00000000  00074a02  2**0
                  CONTENTS, READONLY
 21 .sysid_hash   00000004  00000000  00000000  00074a03  2**0
                  CONTENTS, READONLY
 22 .sysid_base   00000004  00000000  00000000  00074a07  2**0
                  CONTENTS, READONLY
 23 .sysid_time   00000004  00000000  00000000  00074a0b  2**0
                  CONTENTS, READONLY
 24 .stderr_dev   00000009  00000000  00000000  00074a0f  2**0
                  CONTENTS, READONLY
 25 .stdin_dev    00000009  00000000  00000000  00074a18  2**0
                  CONTENTS, READONLY
 26 .stdout_dev   00000009  00000000  00000000  00074a21  2**0
                  CONTENTS, READONLY
 27 .sopc_system_name 0000000b  00000000  00000000  00074a2a  2**0
                  CONTENTS, READONLY
 28 .quartus_project_dir 00000057  00000000  00000000  00074a35  2**0
                  CONTENTS, READONLY
 29 .jdi          00005ad8  00000000  00000000  00074a8c  2**0
                  CONTENTS, READONLY
 30 .sopcinfo     000747ce  00000000  00000000  0007a564  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
00000000 l    d  .entry	00000000 .entry
00000020 l    d  .exceptions	00000000 .exceptions
00000244 l    d  .text	00000000 .text
00011d04 l    d  .rodata	00000000 .rodata
000124ec l    d  .rwdata	00000000 .rwdata
00015ac4 l    d  .bss	00000000 .bss
00015c54 l    d  .sdram_ctrl	00000000 .sdram_ctrl
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_alt_sim_info	00000000 .debug_alt_sim_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    df *ABS*	00000000 C:/Users/adrie/OneDrive/Documents/HES/Master/TSM_EmbHardw/Labo/mse_demo/software/sobel_bsp//obj/HAL/src/crt0.o
0000028c l       .text	00000000 alt_after_alt_main
00000000 l    df *ABS*	00000000 alt_irq_handler.c
00000000 l    df *ABS*	00000000 alt_instruction_exception_entry.c
00000000 l    df *ABS*	00000000 camera.c
00000000 l    df *ABS*	00000000 dipswitch.c
00000000 l    df *ABS*	00000000 grayscale.c
00000000 l    df *ABS*	00000000 i2c.c
00000000 l    df *ABS*	00000000 lcd_simple.c
00000000 l    df *ABS*	00000000 main.c
00000000 l    df *ABS*	00000000 sobel.c
00000000 l    df *ABS*	00000000 vga.c
00000000 l    df *ABS*	00000000 addsf3.c
00000000 l    df *ABS*	00000000 divsf3.c
00000000 l    df *ABS*	00000000 floatsisf.c
00000000 l    df *ABS*	00000000 floatunsisf.c
00000000 l    df *ABS*	00000000 extendsfdf2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 malloc.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 memcpy.c
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 puts.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 strlen.c
00000000 l    df *ABS*	00000000 vfprintf.c
0001233a l     O .rodata	00000010 zeroes.4404
000057a4 l     F .text	000000bc __sbprintf
0001234a l     O .rodata	00000010 blanks.4403
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 dtoa.c
000059b4 l     F .text	00000200 quorem
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 findfp.c
000074e4 l     F .text	00000008 __fp_unlock
000074f8 l     F .text	0000019c __sinit.part.1
00007694 l     F .text	00000008 __fp_lock
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 impure.c
000128f4 l     O .rwdata	00000424 impure_data
00000000 l    df *ABS*	00000000 int_errno.c
00000000 l    df *ABS*	00000000 locale.c
00012d38 l     O .rwdata	00000020 lc_ctype_charset
00012d18 l     O .rwdata	00000020 lc_message_charset
00012d58 l     O .rwdata	00000038 lconv
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 memchr.c
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 mprec.c
0001237c l     O .rodata	0000000c p05.2768
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 s_fpclassify.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 vfprintf.c
0000a0e8 l     F .text	000000fc __sprint_r.part.0
000124b0 l     O .rodata	00000010 blanks.4348
000124a0 l     O .rodata	00000010 zeroes.4349
0000b674 l     F .text	000000bc __sbprintf
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fclose.c
00000000 l    df *ABS*	00000000 fputwc.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 wcrtomb.c
00000000 l    df *ABS*	00000000 wctomb_r.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 lib2-divmod.c
00000000 l    df *ABS*	00000000 adddf3.c
00000000 l    df *ABS*	00000000 divdf3.c
00000000 l    df *ABS*	00000000 eqdf2.c
00000000 l    df *ABS*	00000000 gedf2.c
00000000 l    df *ABS*	00000000 ledf2.c
00000000 l    df *ABS*	00000000 muldf3.c
00000000 l    df *ABS*	00000000 subdf3.c
00000000 l    df *ABS*	00000000 fixdfsi.c
00000000 l    df *ABS*	00000000 floatsidf.c
00000000 l    df *ABS*	00000000 floatunsidf.c
00000000 l    df *ABS*	00000000 alt_close.c
0000f2cc l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_dev.c
0000f3d8 l     F .text	0000002c alt_dev_null_write
00000000 l    df *ABS*	00000000 alt_errno.c
00000000 l    df *ABS*	00000000 alt_fstat.c
0000f404 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_isatty.c
0000f4f0 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_load.c
0000f5d0 l     F .text	00000068 alt_load_section
00000000 l    df *ABS*	00000000 alt_lseek.c
0000f6bc l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_main.c
00000000 l    df *ABS*	00000000 alt_malloc_lock.c
00000000 l    df *ABS*	00000000 alt_read.c
0000f890 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_release_fd.c
00000000 l    df *ABS*	00000000 alt_sbrk.c
00013fc8 l     O .rwdata	00000004 heap_end
00000000 l    df *ABS*	00000000 alt_usleep.c
00000000 l    df *ABS*	00000000 alt_write.c
0000fb0c l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_sys_init.c
0000fc40 l     F .text	00000034 alt_dev_reg
00012f38 l     O .rwdata	00001060 jtag_uart
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_fd.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_init.c
0000ff4c l     F .text	0000020c altera_avalon_jtag_uart_irq
00010158 l     F .text	000000a0 altera_avalon_jtag_uart_timeout
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_ioctl.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_read.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_write.c
00000000 l    df *ABS*	00000000 altera_avalon_timer_sc.c
00010790 l     F .text	00000078 alt_avalon_timer_sc_irq
00000000 l    df *ABS*	00000000 altera_avalon_timer_ts.c
00000000 l    df *ABS*	00000000 altera_avalon_timer_vars.c
00000000 l    df *ABS*	00000000 alt_alarm_start.c
00000000 l    df *ABS*	00000000 alt_busy_sleep.c
00000000 l    df *ABS*	00000000 alt_dcache_flush_all.c
00000000 l    df *ABS*	00000000 alt_dev_llist_insert.c
00010c38 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_do_ctors.c
00000000 l    df *ABS*	00000000 alt_do_dtors.c
00000000 l    df *ABS*	00000000 alt_icache_flush_all.c
00000000 l    df *ABS*	00000000 alt_iic.c
00000000 l    df *ABS*	00000000 alt_iic_isr_register.c
00000000 l    df *ABS*	00000000 alt_io_redirect.c
000110ac l     F .text	000000c4 alt_open_fd
00000000 l    df *ABS*	00000000 alt_irq_vars.c
00000000 l    df *ABS*	00000000 alt_open.c
000111ec l     F .text	0000003c alt_get_errno
00011228 l     F .text	000000c4 alt_file_locked
00000000 l    df *ABS*	00000000 alt_tick.c
00000000 l    df *ABS*	00000000 altera_nios2_gen2_irq.c
00000000 l    df *ABS*	00000000 alt_find_dev.c
00000000 l    df *ABS*	00000000 alt_find_file.c
00000000 l    df *ABS*	00000000 alt_get_fd.c
00000000 l    df *ABS*	00000000 alt_icache_flush.c
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 memcmp.c
00000000 l    df *ABS*	00000000 __atexit.c
00000000 l    df *ABS*	00000000 __call_atexit.c
00000000 l    df *ABS*	00000000 alt_exit.c
00015b28 g     O .bss	00000004 alt_instruction_exception_handler
00009780 g     F .text	00000074 _mprec_log10
00001b14 g     F .text	00000214 sobel
0000986c g     F .text	0000008c __any_on
0000bc10 g     F .text	00000054 _isatty_r
00012388 g     O .rodata	00000028 __mprec_tinytens
0000f7cc g     F .text	0000007c alt_main
000033d0 g     F .text	000000c0 _puts_r
00015b54 g     O .bss	00000100 alt_irq
0000bc64 g     F .text	00000060 _lseek_r
000121e5 g     O .rodata	00000009 gy_array
00013fd8 g       *ABS*	00000000 __flash_rwdata_start
0000de5c g     F .text	00000088 .hidden __eqdf2
00015c54 g       *ABS*	00000000 __alt_heap_start
00003394 g     F .text	0000003c printf
0000be7c g     F .text	0000009c _wcrtomb_r
00009fa8 g     F .text	0000005c __sseek
00007834 g     F .text	00000010 __sinit
0000bd24 g     F .text	00000140 __swbuf_r
000082fc g     F .text	0000007c _setlocale_r
0000769c g     F .text	00000068 __sfmoreglue
0000f86c g     F .text	00000024 __malloc_unlock
00000a10 g     F .text	00000014 LCD_Write_Command
00015ad4 g     O .bss	00000004 sobel_width
00002220 g     F .text	00000440 .hidden __divsf3
00015b18 g     O .bss	00000004 altera_avalon_timer_ts_freq
00008678 g     F .text	0000015c memmove
00000a24 g     F .text	00000014 LCD_Write_Data
0000781c g     F .text	00000018 _cleanup
000088fc g     F .text	000000a8 _Balloc
0000dee4 g     F .text	000000dc .hidden __gtdf2
000115e4 g     F .text	00000024 altera_nios2_gen2_irq_init
00000000 g     F .entry	0000001c __reset
00000020 g       *ABS*	00000000 __flash_exceptions_start
000005a8 g     F .text	00000024 cam_get_xsize
0000bbb4 g     F .text	0000005c _fstat_r
00015af8 g     O .bss	00000004 errno
00009f24 g     F .text	00000008 __seofread
00015b0c g     O .bss	00000004 alt_argv
0001bf98 g       *ABS*	00000000 _gp
0000fadc g     F .text	00000030 usleep
00000668 g     F .text	00000074 cam_set_image_pointer
00012db8 g     O .rwdata	00000180 alt_fd_list
00001d38 g     F .text	00000010 vga_set_pointer
00011608 g     F .text	00000090 alt_find_dev
0000321c g     F .text	00000148 memcpy
000074ec g     F .text	0000000c _cleanup_r
0000f148 g     F .text	000000dc .hidden __floatsidf
00011170 g     F .text	0000007c alt_io_redirect
0000dfc0 g     F .text	000000f4 .hidden __ltdf2
00011d04 g       *ABS*	00000000 __DTOR_END__
00003490 g     F .text	00000014 puts
000118d4 g     F .text	0000009c alt_exception_cause_generated_bad_addr
00009e5c g     F .text	00000074 __fpclassifyd
000096dc g     F .text	000000a4 __ratio
0000b658 g     F .text	0000001c __vfiprintf_internal
00010350 g     F .text	0000021c altera_avalon_jtag_uart_read
000029e8 g     F .text	00000014 malloc
00003364 g     F .text	00000030 _printf_r
00000864 g     F .text	00000008 get_grayscale_picture
0000cc0c g     F .text	00000064 .hidden __udivsi3
00011d64 g     O .rodata	00000128 lens_roll_off_tbl
00000290 g     F .text	00000318 init_camera
0000f52c g     F .text	000000a4 isatty
000123d8 g     O .rodata	000000c8 __mprec_tens
00008378 g     F .text	0000000c __locale_charset
00011844 g     F .text	00000090 alt_icache_flush
00015af4 g     O .bss	00000004 __malloc_top_pad
00013fa8 g     O .rwdata	00000004 __mb_cur_max
000083a8 g     F .text	0000000c _localeconv_r
00001580 g     F .text	00000100 sobel_x
00008d08 g     F .text	0000003c __i2b
00007cb8 g     F .text	000004bc __sfvwrite_r
00000a38 g     F .text	00000414 init_LCD
000034a4 g     F .text	00000054 _sbrk_r
000005f0 g     F .text	00000078 cam_get_profiling
0000bcc4 g     F .text	00000060 _read_r
00015ad8 g     O .bss	00000004 sobel_result
00013fc0 g     O .rwdata	00000004 alt_max_fd
0000b8a8 g     F .text	000000f0 _fclose_r
000074b4 g     F .text	00000030 fflush
00015af0 g     O .bss	00000004 __malloc_max_sbrked_mem
00002874 g     F .text	00000110 .hidden __extendsfdf2
00015acc g     O .bss	00000004 grayscale_array
0000ccc8 g     F .text	000008ac .hidden __adddf3
000005cc g     F .text	00000024 cam_get_ysize
00009484 g     F .text	0000010c __b2d
0000c5dc g     F .text	00000538 .hidden __umoddi3
0000f6f8 g     F .text	000000d4 lseek
0000092c g     F .text	0000008c i2c_short_read
00013fa0 g     O .rwdata	00000004 _global_impure_ptr
000098f8 g     F .text	00000564 _realloc_r
00015c54 g       *ABS*	00000000 __bss_end
00010fbc g     F .text	000000f0 alt_iic_isr_register
000114dc g     F .text	00000108 alt_tick
0000c064 g     F .text	00000578 .hidden __udivdi3
0000bb10 g     F .text	00000024 _fputwc_r
000123b0 g     O .rodata	00000028 __mprec_bigtens
00008aec g     F .text	00000104 __s2b
0000f224 g     F .text	000000a8 .hidden __floatunsidf
000091c4 g     F .text	00000060 __mcmp
00007854 g     F .text	00000018 __fp_lock_all
00010f70 g     F .text	0000004c alt_ic_irq_enabled
00015ac4 g     O .bss	00000004 grayscape_height
00011440 g     F .text	0000009c alt_alarm_stop
00015b1c g     O .bss	00000004 alt_irq_active
000000fc g     F .exceptions	000000d4 alt_irq_handler
00012d90 g     O .rwdata	00000028 alt_dev_null
00000ed8 g     F .text	00000078 transfer_LCD_with_dma
00010bf0 g     F .text	00000048 alt_dcache_flush_all
00008bf0 g     F .text	00000068 __hi0bits
0000f0c8 g     F .text	00000080 .hidden __fixdfsi
00013fd8 g       *ABS*	00000000 __ram_rwdata_end
00013fb8 g     O .rwdata	00000008 alt_dev_list
0000fb48 g     F .text	000000f8 write
0001097c g     F .text	00000020 alt_timestamp_freq
000124ec g       *ABS*	00000000 __ram_rodata_end
0000f440 g     F .text	000000b0 fstat
0000dfc0 g     F .text	000000f4 .hidden __ledf2
00008f3c g     F .text	00000140 __pow5mult
0000a1fc g     F .text	0000145c ___vfiprintf_internal_r
00015b04 g     O .bss	00000004 __nlocale_changed
0000cc70 g     F .text	00000058 .hidden __umodsi3
00001d28 g     F .text	00000008 GetSobel_rgb
00015c54 g       *ABS*	00000000 end
00001d30 g     F .text	00000008 GetSobelResult
00000700 g     F .text	00000020 take_picture_blocking
00000760 g     F .text	00000014 DIPSW_get_value
000018f8 g     F .text	00000168 sobel_y_with_rgb
0000fe8c g     F .text	000000c0 altera_avalon_jtag_uart_init
000001d0 g     F .exceptions	00000074 alt_instruction_exception_entry
000006f0 g     F .text	00000010 current_image_pointer
00011d04 g       *ABS*	00000000 __CTOR_LIST__
01000000 g       *ABS*	00000000 __alt_stack_pointer
00010808 g     F .text	0000007c alt_avalon_timer_sc_init
00002984 g     F .text	00000064 .hidden __clzsi2
0001056c g     F .text	00000224 altera_avalon_jtag_uart_write
00007844 g     F .text	00000004 __sfp_lock_acquire
00008594 g     F .text	000000e4 memchr
00003590 g     F .text	000021f8 ___vfprintf_internal_r
000079a8 g     F .text	00000310 _free_r
00008384 g     F .text	00000010 __locale_mb_cur_max
000017fc g     F .text	000000fc sobel_y
00011e8c g     O .rodata	00000140 noise_reduction_reg_settings_array
00011b50 g     F .text	00000180 __call_exitprocs
00015b00 g     O .bss	00000004 __mlocale_changed
00013f98 g     O .rwdata	00000004 __malloc_sbrk_base
00000244 g     F .text	0000004c _start
00015b20 g     O .bss	00000004 _alt_tick_rate
0000907c g     F .text	00000148 __lshift
00015b24 g     O .bss	00000004 _alt_nticks
0000f8cc g     F .text	000000fc read
0000fcac g     F .text	0000007c alt_sys_init
00002660 g     F .text	00000124 .hidden __floatsisf
00001680 g     F .text	0000017c sobel_x_with_rgb
00011a38 g     F .text	00000118 __register_exitproc
00008d44 g     F .text	000001f8 __multiply
000101f8 g     F .text	00000068 altera_avalon_jtag_uart_close
000124ec g       *ABS*	00000000 __ram_rwdata_start
00011d04 g       *ABS*	00000000 __ram_rodata_start
00015b2c g     O .bss	00000028 __malloc_current_mallinfo
00009590 g     F .text	0000014c __d2b
00015adc g     O .bss	00000004 sobel_height
00000720 g     F .text	00000014 enable_continues_mode
0000fd28 g     F .text	00000060 altera_avalon_jtag_uart_read_fd
000013e0 g     F .text	000000e4 init_sobel_arrays
000117a0 g     F .text	000000a4 alt_get_fd
00010ac8 g     F .text	00000128 alt_busy_sleep
00000000 g       *ABS*	00000000 __alt_mem_sdram_ctrl
0000b790 g     F .text	00000054 _close_r
000119bc g     F .text	0000007c memcmp
0000fde8 g     F .text	00000050 altera_avalon_jtag_uart_close_fd
00015c54 g       *ABS*	00000000 __alt_stack_base
0000fe38 g     F .text	00000054 altera_avalon_jtag_uart_ioctl_fd
00005860 g     F .text	00000154 __swsetup_r
0000d574 g     F .text	000008e8 .hidden __divdf3
00007704 g     F .text	00000118 __sfp
000097f4 g     F .text	00000078 __copybits
000124ec g     O .rwdata	00000408 __malloc_av_
00007850 g     F .text	00000004 __sinit_lock_release
0000e0b4 g     F .text	00000718 .hidden __muldf3
00009ed0 g     F .text	00000054 __sread
00011698 g     F .text	00000108 alt_find_file
00010c74 g     F .text	000000a4 alt_dev_llist_insert
0000f848 g     F .text	00000024 __malloc_lock
0000fa2c g     F .text	000000b0 sbrk
00007458 g     F .text	0000005c _fflush_r
0000b7e4 g     F .text	000000c4 _calloc_r
00015ac4 g       *ABS*	00000000 __bss_start
000087d4 g     F .text	00000128 memset
00000f50 g     F .text	00000490 main
00015b10 g     O .bss	00000004 alt_envp
00015aec g     O .bss	00000004 __malloc_max_total_mem
00000854 g     F .text	00000008 get_grayscale_width
0000fd88 g     F .text	00000060 altera_avalon_jtag_uart_write_fd
0000be64 g     F .text	00000018 __swbuf
00015ae0 g     O .bss	00000004 sobel_x_result
0000a004 g     F .text	00000008 __sclose
01000000 g       *ABS*	00000000 __alt_heap_limit
0000b998 g     F .text	00000014 fclose
00010884 g     F .text	00000078 alt_timestamp_start
00005bb4 g     F .text	00001688 _dtoa_r
00002a10 g     F .text	0000080c _malloc_r
0000bfd8 g     F .text	00000030 __ascii_wctomb
00013fc4 g     O .rwdata	00000004 alt_errno
00008174 g     F .text	000000c4 _fwalk
0000cb14 g     F .text	00000084 .hidden __divsi3
00007884 g     F .text	00000124 _malloc_trim_r
00011d04 g       *ABS*	00000000 __CTOR_END__
00015ac8 g     O .bss	00000004 grayscale_width
0000a00c g     F .text	000000dc strcmp
00000e4c g     F .text	0000008c transfer_LCD_no_dma
00011d04 g       *ABS*	00000000 __flash_rodata_start
00011d04 g       *ABS*	00000000 __DTOR_LIST__
0000de5c g     F .text	00000088 .hidden __nedf2
00011fcc g     O .rodata	00000118 preview_snapshot_mode_reg_settings_array
0000fc74 g     F .text	00000038 alt_irq_init
0000f9c8 g     F .text	00000064 alt_release_fd
00000884 g     F .text	000000a8 i2c_auto_detect
000121f7 g     O .rodata	00000100 .hidden __clz_tab
000006dc g     F .text	00000014 current_image_valid
00015afc g     O .bss	00000004 _PathLocale
0000086c g     F .text	00000018 i2c_busy_wait
00011970 g     F .text	00000014 atexit
0000b730 g     F .text	00000060 _write_r
000083b4 g     F .text	00000018 setlocale
00013fa4 g     O .rwdata	00000004 _impure_ptr
00015b08 g     O .bss	00000004 alt_argc
0000723c g     F .text	0000021c __sflush_r
00015b14 g     O .bss	00000004 altera_avalon_timer_ts_base
00010d78 g     F .text	00000060 _do_dtors
000083a0 g     F .text	00000008 __locale_cjk_lang
00000020 g       .exceptions	00000000 alt_irq_entry
00009420 g     F .text	00000064 __ulp
0000786c g     F .text	00000018 __fp_unlock_all
00013fb0 g     O .rwdata	00000008 alt_fs_list
00015ae4 g     O .bss	00000004 sobel_y_result
000009b8 g     F .text	00000058 i2c_short_write
00000020 g       *ABS*	00000000 __ram_exceptions_start
00015ad0 g     O .bss	00000002 LCD_height
000083cc g     F .text	0000000c localeconv
000108fc g     F .text	00000080 alt_timestamp
00001d48 g     F .text	00000010 vga_set_swap
00010e0c g     F .text	00000050 alt_ic_isr_register
00001a60 g     F .text	000000b4 sobel_threshold
00013fd8 g       *ABS*	00000000 _edata
00015c54 g       *ABS*	00000000 _end
0000b9ac g     F .text	00000164 __fputwc
00000244 g       *ABS*	00000000 __ram_exceptions_end
00010260 g     F .text	000000f0 altera_avalon_jtag_uart_ioctl
000121ee g     O .rodata	00000009 gx_array
00010ee4 g     F .text	0000008c alt_ic_irq_disable
00009f2c g     F .text	0000007c __swrite
00013f9c g     O .rwdata	00000004 __malloc_trim_threshold
00015ad2 g     O .bss	00000002 LCD_width
00000774 g     F .text	000000e0 conv_grayscale
00008394 g     F .text	0000000c __locale_msgcharset
00011984 g     F .text	00000038 exit
00008238 g     F .text	000000c4 _fwalk_reent
00002784 g     F .text	000000f0 .hidden __floatunsisf
00009224 g     F .text	000001fc __mdiff
0000cb98 g     F .text	00000074 .hidden __modsi3
01000000 g       *ABS*	00000000 __alt_data_end
00000020 g     F .exceptions	00000000 alt_exception
00007848 g     F .text	00000004 __sfp_lock_release
0000085c g     F .text	00000008 get_grayscale_height
00011cd0 g     F .text	00000034 _exit
000014c4 g     F .text	000000bc sobel_mac
0001099c g     F .text	0000012c alt_alarm_start
000083d8 g     F .text	000001bc __smakebuf_r
00015ae8 g     O .bss	00000004 sobel_rgb565
000034f8 g     F .text	00000098 strlen
000112ec g     F .text	00000154 open
0000dee4 g     F .text	000000dc .hidden __gedf2
00013fac g     O .rwdata	00000004 __wctomb
0000a1e4 g     F .text	00000018 __sprint_r
00010dd8 g     F .text	00000034 alt_icache_flush_all
00013fcc g     O .rwdata	00000004 alt_priority_mask
00010e5c g     F .text	00000088 alt_ic_irq_enable
00005788 g     F .text	0000001c __vfprintf_internal
0000c008 g     F .text	0000005c _wctomb_r
0000e7cc g     F .text	000008fc .hidden __subdf3
00008c58 g     F .text	000000b0 __lo0bits
00013fd0 g     O .rwdata	00000008 alt_alarm_list
00010d18 g     F .text	00000060 _do_ctors
0000bf18 g     F .text	000000c0 wcrtomb
0000f308 g     F .text	000000d0 close
00001d58 g     F .text	000004c8 .hidden __addsf3
0000f638 g     F .text	00000084 alt_load
0000bb34 g     F .text	00000080 fputwc
000029fc g     F .text	00000014 free
0000784c g     F .text	00000004 __sinit_lock_acquire
000089cc g     F .text	00000120 __multadd
000089a4 g     F .text	00000028 _Bfree
00000734 g     F .text	0000002c new_image_available



Disassembly of section .entry:

00000000 <__reset>:
#if NIOS2_ICACHE_SIZE > 0 && defined(ALT_ALLOW_CODE_AT_RESET) && (!defined(ALT_SIM_OPTIMIZE) || defined(NIOS2_ECC_PRESENT))
    /* Assume the instruction cache size is always a power of two. */
#if NIOS2_ICACHE_SIZE > 0x8000
    movhi r2, %hi(NIOS2_ICACHE_SIZE)
#else
    movui r2, NIOS2_ICACHE_SIZE
   0:	00900014 	movui	r2,16384
#endif

0:
    initi r2
   4:	1001483a 	initi	r2
    addi r2, r2, -NIOS2_ICACHE_LINE_SIZE
   8:	10bff804 	addi	r2,r2,-32
    bgt r2, zero, 0b
   c:	00bffd16 	blt	zero,r2,4 <__alt_data_end+0xff000004>
 * Jump to the _start entry point in the .text section if reset code
 * is allowed or if optimizing for RTL simulation.
 */
#if defined(ALT_ALLOW_CODE_AT_RESET) || defined(ALT_SIM_OPTIMIZE)
    /* Jump to the _start entry point in the .text section. */
    movhi r1, %hi(_start)
  10:	00400034 	movhi	at,0
    ori r1, r1, %lo(_start)
  14:	08409114 	ori	at,at,580
    jmp r1
  18:	0800683a 	jmp	at
  1c:	00000000 	call	0 <__reset>

Disassembly of section .exceptions:

00000020 <alt_exception>:

#else /* ALT_EXCEPTION_STACK disabled */
        /* 
         * Reserve space on normal stack for registers about to be pushed.
         */
        addi  sp, sp, -76
  20:	deffed04 	addi	sp,sp,-76
         * documentation for details).
         *
         * Leave a gap in the stack frame at 4(sp) for the muldiv handler to
         * store zero into.
         */
        stw   ra,  0(sp)
  24:	dfc00015 	stw	ra,0(sp)
        stw   r1,   8(sp)
  28:	d8400215 	stw	at,8(sp)
        stw   r2,  12(sp)
  2c:	d8800315 	stw	r2,12(sp)
        stw   r3,  16(sp)
  30:	d8c00415 	stw	r3,16(sp)
        stw   r4,  20(sp)
  34:	d9000515 	stw	r4,20(sp)
        stw   r5,  24(sp)
  38:	d9400615 	stw	r5,24(sp)
        stw   r6,  28(sp)
  3c:	d9800715 	stw	r6,28(sp)
        stw   r7,  32(sp)
  40:	d9c00815 	stw	r7,32(sp)
        rdctl r5, estatus   /* Read early to avoid usage stall */
  44:	000b307a 	rdctl	r5,estatus
        stw   r8,  36(sp)
  48:	da000915 	stw	r8,36(sp)
        stw   r9,  40(sp)
  4c:	da400a15 	stw	r9,40(sp)
        stw   r10, 44(sp)
  50:	da800b15 	stw	r10,44(sp)
        stw   r11, 48(sp)
  54:	dac00c15 	stw	r11,48(sp)
        stw   r12, 52(sp)
  58:	db000d15 	stw	r12,52(sp)
        stw   r13, 56(sp)
  5c:	db400e15 	stw	r13,56(sp)
        stw   r14, 60(sp)
  60:	db800f15 	stw	r14,60(sp)
        stw   r15, 64(sp)
  64:	dbc01015 	stw	r15,64(sp)
        /*
         * ea-4 contains the address of the instruction being executed
         * when the exception occured. For interrupt exceptions, we will
         * will be re-issue the isntruction. Store it in 72(sp)
         */
        stw   r5,  68(sp)  /* estatus */
  68:	d9401115 	stw	r5,68(sp)
        addi  r15, ea, -4  /* instruction that caused exception */
  6c:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
  70:	dbc01215 	stw	r15,72(sp)
#else
        /*
         * Test to see if the exception was a software exception or caused 
         * by an external interrupt, and vector accordingly.
         */
        rdctl r4, ipending
  74:	0009313a 	rdctl	r4,ipending
        andi  r2, r5, 1
  78:	2880004c 	andi	r2,r5,1
        beq   r2, zero, .Lnot_irq
  7c:	10000326 	beq	r2,zero,8c <alt_exception+0x6c>
        beq   r4, zero, .Lnot_irq
  80:	20000226 	beq	r4,zero,8c <alt_exception+0x6c>
        /*
         * Now that all necessary registers have been preserved, call 
         * alt_irq_handler() to process the interrupts.
         */

        call alt_irq_handler
  84:	00000fc0 	call	fc <alt_irq_handler>

        .section .exceptions.irqreturn, "xa"

        br    .Lexception_exit
  88:	00000706 	br	a8 <alt_exception+0x88>
         * upon completion, so we write ea (address of instruction *after*
         * the one where the exception occured) into 72(sp). The actual
         * instruction that caused the exception is written in r2, which these
         * handlers will utilize.
         */
        stw ea, 72(sp) /* EA is PC+4 so will skip over instruction causing exception */
  8c:	df401215 	stw	ea,72(sp)
.Lunknown_16bit:
        addi.n r4, r4, 2 /* Need PC+2 to skip over instruction causing exception */
        stw r4, 72(sp)

#else /* CDX is not Enabled and all instructions are 32bits */
        ldw r2, -4(ea) /* Instruction value that caused exception */
  90:	e8bfff17 	ldw	r2,-4(ea)
         * debugger is present) or go into an infinite loop since the
         * handling behavior is undefined; in that case we will not return here.
         */

        /* Load exception-causing address as first argument (r4) */
        addi   r4, ea, -4
  94:	e93fff04 	addi	r4,ea,-4

        /* Call the instruction-exception entry */
        call   alt_instruction_exception_entry
  98:	00001d00 	call	1d0 <alt_instruction_exception_entry>
         * instruction
         *
         * Return code was 0: Skip. The instruction after the exception is
         * already stored in 72(sp).
         */
        bne   r2, r0, .Lexception_exit
  9c:	1000021e 	bne	r2,zero,a8 <alt_exception+0x88>

        /*
         * Otherwise, modify 72(sp) to re-issue the instruction that caused the
         * exception.
         */
        addi  r15, ea, -4  /* instruction that caused exception */
  a0:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
  a4:	dbc01215 	stw	r15,72(sp)
        /* 
         * Restore the saved registers, so that all general purpose registers 
         * have been restored to their state at the time the interrupt occured.
         */

        ldw   r5,  68(sp)
  a8:	d9401117 	ldw	r5,68(sp)
        ldw   ea,  72(sp)  /* This becomes the PC once eret is executed */
  ac:	df401217 	ldw	ea,72(sp)
        ldw   ra,   0(sp)
  b0:	dfc00017 	ldw	ra,0(sp)

        wrctl estatus, r5
  b4:	2801707a 	wrctl	estatus,r5

        ldw   r1,   8(sp)
  b8:	d8400217 	ldw	at,8(sp)
        ldw   r2,  12(sp)
  bc:	d8800317 	ldw	r2,12(sp)
        ldw   r3,  16(sp)
  c0:	d8c00417 	ldw	r3,16(sp)
        ldw   r4,  20(sp)
  c4:	d9000517 	ldw	r4,20(sp)
        ldw   r5,  24(sp)
  c8:	d9400617 	ldw	r5,24(sp)
        ldw   r6,  28(sp)
  cc:	d9800717 	ldw	r6,28(sp)
        ldw   r7,  32(sp)
  d0:	d9c00817 	ldw	r7,32(sp)

#if defined(ALT_EXCEPTION_STACK) && defined(ALT_STACK_CHECK)
        ldw   et, %gprel(alt_exception_old_stack_limit)(gp)
#endif

        ldw   r8,  36(sp)
  d4:	da000917 	ldw	r8,36(sp)
        ldw   r9,  40(sp)
  d8:	da400a17 	ldw	r9,40(sp)
        ldw   r10, 44(sp)
  dc:	da800b17 	ldw	r10,44(sp)
        ldw   r11, 48(sp)
  e0:	dac00c17 	ldw	r11,48(sp)
        ldw   r12, 52(sp)
  e4:	db000d17 	ldw	r12,52(sp)
        ldw   r13, 56(sp)
  e8:	db400e17 	ldw	r13,56(sp)
        ldw   r14, 60(sp)
  ec:	db800f17 	ldw	r14,60(sp)
        ldw   r15, 64(sp)
  f0:	dbc01017 	ldw	r15,64(sp)
        stw   et, %gprel(alt_stack_limit_value)(gp)
        stw   zero, %gprel(alt_exception_old_stack_limit)(gp)
#endif /* ALT_STACK_CHECK */
        ldw   sp,  76(sp)
#else /* ALT_EXCEPTION_STACK disabled */
        addi  sp, sp, 76
  f4:	dec01304 	addi	sp,sp,76

        /*
         * Return to the interrupted instruction.
         */

        eret
  f8:	ef80083a 	eret

000000fc <alt_irq_handler>:
 * instruction is present if the macro ALT_CI_INTERRUPT_VECTOR defined.
 */

void alt_irq_handler (void) __attribute__ ((section (".exceptions")));
void alt_irq_handler (void)
{
  fc:	defff904 	addi	sp,sp,-28
 100:	dfc00615 	stw	ra,24(sp)
 104:	df000515 	stw	fp,20(sp)
 108:	df000504 	addi	fp,sp,20
  
  /*
   * Notify the operating system that we are at interrupt level.
   */ 
  
  ALT_OS_INT_ENTER();
 10c:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
 110:	0005313a 	rdctl	r2,ipending
 114:	e0bffe15 	stw	r2,-8(fp)

  return active;
 118:	e0bffe17 	ldw	r2,-8(fp)
   * Consider the case where the high priority interupt is asserted during
   * the interrupt entry sequence for a lower priority interrupt to see why
   * this is the case.
   */

  active = alt_irq_pending ();
 11c:	e0bffb15 	stw	r2,-20(fp)

  do
  {
    i = 0;
 120:	e03ffd15 	stw	zero,-12(fp)
    mask = 1;
 124:	00800044 	movi	r2,1
 128:	e0bffc15 	stw	r2,-16(fp)
     * called to clear the interrupt condition.
     */

    do
    {
      if (active & mask)
 12c:	e0fffb17 	ldw	r3,-20(fp)
 130:	e0bffc17 	ldw	r2,-16(fp)
 134:	1884703a 	and	r2,r3,r2
 138:	10001426 	beq	r2,zero,18c <alt_irq_handler+0x90>
      { 
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
        alt_irq[i].handler(alt_irq[i].context); 
 13c:	00800074 	movhi	r2,1
 140:	1096d504 	addi	r2,r2,23380
 144:	e0fffd17 	ldw	r3,-12(fp)
 148:	180690fa 	slli	r3,r3,3
 14c:	10c5883a 	add	r2,r2,r3
 150:	10c00017 	ldw	r3,0(r2)
 154:	00800074 	movhi	r2,1
 158:	1096d504 	addi	r2,r2,23380
 15c:	e13ffd17 	ldw	r4,-12(fp)
 160:	200890fa 	slli	r4,r4,3
 164:	1105883a 	add	r2,r2,r4
 168:	10800104 	addi	r2,r2,4
 16c:	10800017 	ldw	r2,0(r2)
 170:	1009883a 	mov	r4,r2
 174:	183ee83a 	callr	r3
#else
        alt_irq[i].handler(alt_irq[i].context, i); 
#endif
        break;
 178:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
 17c:	0005313a 	rdctl	r2,ipending
 180:	e0bfff15 	stw	r2,-4(fp)

  return active;
 184:	e0bfff17 	ldw	r2,-4(fp)
 188:	00000706 	br	1a8 <alt_irq_handler+0xac>
      }
      mask <<= 1;
 18c:	e0bffc17 	ldw	r2,-16(fp)
 190:	1085883a 	add	r2,r2,r2
 194:	e0bffc15 	stw	r2,-16(fp)
      i++;
 198:	e0bffd17 	ldw	r2,-12(fp)
 19c:	10800044 	addi	r2,r2,1
 1a0:	e0bffd15 	stw	r2,-12(fp)

    } while (1);
 1a4:	003fe106 	br	12c <__alt_data_end+0xff00012c>

    active = alt_irq_pending ();
 1a8:	e0bffb15 	stw	r2,-20(fp)
    
  } while (active);
 1ac:	e0bffb17 	ldw	r2,-20(fp)
 1b0:	103fdb1e 	bne	r2,zero,120 <__alt_data_end+0xff000120>

  /*
   * Notify the operating system that interrupt processing is complete.
   */ 

  ALT_OS_INT_EXIT();
 1b4:	0001883a 	nop
}
 1b8:	0001883a 	nop
 1bc:	e037883a 	mov	sp,fp
 1c0:	dfc00117 	ldw	ra,4(sp)
 1c4:	df000017 	ldw	fp,0(sp)
 1c8:	dec00204 	addi	sp,sp,8
 1cc:	f800283a 	ret

000001d0 <alt_instruction_exception_entry>:
 * that handler if it has been registered. Absent a handler, it will
 * break break or hang as discussed below.
 */
int 
alt_instruction_exception_entry (alt_u32 exception_pc)
{
 1d0:	defffb04 	addi	sp,sp,-20
 1d4:	dfc00415 	stw	ra,16(sp)
 1d8:	df000315 	stw	fp,12(sp)
 1dc:	df000304 	addi	fp,sp,12
 1e0:	e13fff15 	stw	r4,-4(fp)
 * NIOS2_EXCEPTION_CAUSE_NOT_PRESENT. Your handling routine should
 * check the validity of the cause argument before proceeding.
 */
#ifdef NIOS2_HAS_EXTRA_EXCEPTION_INFO
  /* Get exception cause & "badaddr" */
  NIOS2_READ_EXCEPTION(cause);
 1e4:	000531fa 	rdctl	r2,exception
 1e8:	e0bffd15 	stw	r2,-12(fp)
  cause = ( (cause & NIOS2_EXCEPTION_REG_CAUSE_MASK) >>
 1ec:	e0bffd17 	ldw	r2,-12(fp)
 1f0:	10801f0c 	andi	r2,r2,124
 1f4:	1004d0ba 	srli	r2,r2,2
 1f8:	e0bffd15 	stw	r2,-12(fp)
              NIOS2_EXCEPTION_REG_CAUSE_OFST );

  NIOS2_READ_BADADDR(badaddr);
 1fc:	0005333a 	rdctl	r2,badaddr
 200:	e0bffe15 	stw	r2,-8(fp)
#else
  cause = NIOS2_EXCEPTION_CAUSE_NOT_PRESENT;
  badaddr = 0;
#endif /* NIOS2_HAS_EXTRA_EXCEPTION_INFO */

  if(alt_instruction_exception_handler) {
 204:	d0a6e417 	ldw	r2,-25712(gp)
 208:	10000726 	beq	r2,zero,228 <alt_instruction_exception_entry+0x58>
     * Call handler. Its return value indicates whether the exception-causing
     * instruction should be re-issued. The code that called us,
     * alt_eceptions_entry.S, will look at this value and adjust the ea
     * register as necessary
     */
    return alt_instruction_exception_handler(cause, exception_pc, badaddr);
 20c:	d0a6e417 	ldw	r2,-25712(gp)
 210:	e0fffd17 	ldw	r3,-12(fp)
 214:	e1bffe17 	ldw	r6,-8(fp)
 218:	e17fff17 	ldw	r5,-4(fp)
 21c:	1809883a 	mov	r4,r3
 220:	103ee83a 	callr	r2
 224:	00000206 	br	230 <alt_instruction_exception_entry+0x60>
   *    (a peripheral which negates its interrupt output before its
   *    interrupt handler has been executed will cause spurious interrupts)
   */
  else {
#ifdef NIOS2_HAS_DEBUG_STUB
    NIOS2_BREAK();
 228:	003da03a 	break	0
      ;
#endif /* NIOS2_HAS_DEBUG_STUB */
  }

  /* We should not get here. Remove compiler warning. */
  return NIOS2_EXCEPTION_RETURN_REISSUE_INST;
 22c:	0005883a 	mov	r2,zero
}
 230:	e037883a 	mov	sp,fp
 234:	dfc00117 	ldw	ra,4(sp)
 238:	df000017 	ldw	fp,0(sp)
 23c:	dec00204 	addi	sp,sp,8
 240:	f800283a 	ret

Disassembly of section .text:

00000244 <_start>:

    /* Assume the data cache size is always a power of two. */
#if NIOS2_DCACHE_SIZE > 0x8000
    movhi r2, %hi(NIOS2_DCACHE_SIZE)
#else
    movui r2, NIOS2_DCACHE_SIZE
     244:	00900014 	movui	r2,16384
#endif

0:
    initd 0(r2)
     248:	10000033 	initd	0(r2)
#ifdef NIOS2_ECC_PRESENT
    addi r2, r2, -4
#else
    addi r2, r2, -NIOS2_DCACHE_LINE_SIZE
     24c:	10bff804 	addi	r2,r2,-32
#endif
    bgt r2, zero, 0b
     250:	00bffd16 	blt	zero,r2,248 <__alt_data_end+0xff000248>

    /*
     * Now that the caches are initialized, set up the stack pointer and global pointer.
     * The values provided by the linker are assumed to be correctly aligned.
     */
    movhi sp, %hi(__alt_stack_pointer)
     254:	06c04034 	movhi	sp,256
    ori sp, sp, %lo(__alt_stack_pointer)
     258:	dec00014 	ori	sp,sp,0
    movhi gp, %hi(_gp)
     25c:	06800074 	movhi	gp,1
    ori gp, gp, %lo(_gp)
     260:	d6afe614 	ori	gp,gp,49048
 */
#ifndef ALT_SIM_OPTIMIZE
    /* Log that the BSS is about to be cleared. */
    ALT_LOG_PUTS(alt_log_msg_bss)

    movhi r2, %hi(__bss_start)
     264:	00800074 	movhi	r2,1
    ori r2, r2, %lo(__bss_start)
     268:	1096b114 	ori	r2,r2,23236

    movhi r3, %hi(__bss_end)
     26c:	00c00074 	movhi	r3,1
    ori r3, r3, %lo(__bss_end)
     270:	18d71514 	ori	r3,r3,23636

    beq r2, r3, 1f
     274:	10c00326 	beq	r2,r3,284 <_start+0x40>

0:
    stw zero, (r2)
     278:	10000015 	stw	zero,0(r2)
    addi r2, r2, 4
     27c:	10800104 	addi	r2,r2,4
    bltu r2, r3, 0b
     280:	10fffd36 	bltu	r2,r3,278 <__alt_data_end+0xff000278>
     * section aren't defined until alt_load() has been called).
     */
    mov   et, zero
#endif

    call alt_load
     284:	000f6380 	call	f638 <alt_load>

    /* Log that alt_main is about to be called. */
    ALT_LOG_PUTS(alt_log_msg_alt_main)

    /* Call the C entry point. It should never return. */
    call alt_main
     288:	000f7cc0 	call	f7cc <alt_main>

0000028c <alt_after_alt_main>:

    /* Wait in infinite loop in case alt_main does return. */
alt_after_alt_main:
    br alt_after_alt_main
     28c:	003fff06 	br	28c <__alt_data_end+0xff00028c>

00000290 <init_camera>:
     290:	00804034 	movhi	r2,256
     294:	10842744 	addi	r2,r2,4253
     298:	00c00084 	movi	r3,2
     29c:	10c00025 	stbio	r3,0(r2)
     2a0:	00804034 	movhi	r2,256
     2a4:	10841304 	addi	r2,r2,4172
     2a8:	00c00044 	movi	r3,1
     2ac:	10c00025 	stbio	r3,0(r2)
     2b0:	008003f4 	movhi	r2,15
     2b4:	10909004 	addi	r2,r2,16960
     2b8:	0001883a 	nop
     2bc:	10bfffc4 	addi	r2,r2,-1
     2c0:	103ffd1e 	bne	r2,zero,2b8 <__alt_data_end+0xff0002b8>
     2c4:	00804034 	movhi	r2,256
     2c8:	10841304 	addi	r2,r2,4172
     2cc:	10000025 	stbio	zero,0(r2)
     2d0:	008003f4 	movhi	r2,15
     2d4:	10909004 	addi	r2,r2,16960
     2d8:	0001883a 	nop
     2dc:	10bfffc4 	addi	r2,r2,-1
     2e0:	103ffd1e 	bne	r2,zero,2d8 <__alt_data_end+0xff0002d8>
     2e4:	defffc04 	addi	sp,sp,-16
     2e8:	01800044 	movi	r6,1
     2ec:	014ce184 	movi	r5,13190
     2f0:	01001e04 	movi	r4,120
     2f4:	dfc00315 	stw	ra,12(sp)
     2f8:	dc800215 	stw	r18,8(sp)
     2fc:	dc400115 	stw	r17,4(sp)
     300:	dc000015 	stw	r16,0(sp)
     304:	00009b80 	call	9b8 <i2c_short_write>
     308:	000d883a 	mov	r6,zero
     30c:	014ce184 	movi	r5,13190
     310:	01001e04 	movi	r4,120
     314:	00009b80 	call	9b8 <i2c_short_write>
     318:	008003f4 	movhi	r2,15
     31c:	10909004 	addi	r2,r2,16960
     320:	0001883a 	nop
     324:	10bfffc4 	addi	r2,r2,-1
     328:	103ffd1e 	bne	r2,zero,320 <__alt_data_end+0xff000320>
     32c:	01803104 	movi	r6,196
     330:	014c0684 	movi	r5,12314
     334:	01001e04 	movi	r4,120
     338:	00009b80 	call	9b8 <i2c_short_write>
     33c:	01800204 	movi	r6,8
     340:	014c8084 	movi	r5,12802
     344:	01001e04 	movi	r4,120
     348:	00009b80 	call	9b8 <i2c_short_write>
     34c:	0180c744 	movi	r6,797
     350:	014cfd04 	movi	r5,13300
     354:	01001e04 	movi	r4,120
     358:	00009b80 	call	9b8 <i2c_short_write>
     35c:	008000b4 	movhi	r2,2
     360:	10a1a804 	addi	r2,r2,-31072
     364:	0001883a 	nop
     368:	10bfffc4 	addi	r2,r2,-1
     36c:	103ffd1e 	bne	r2,zero,364 <__alt_data_end+0xff000364>
     370:	01a3c254 	movui	r6,36617
     374:	014d0784 	movi	r5,13342
     378:	01001e04 	movi	r4,120
     37c:	00009b80 	call	9b8 <i2c_short_write>
     380:	01805404 	movi	r6,336
     384:	014d0704 	movi	r5,13340
     388:	01001e04 	movi	r4,120
     38c:	00009b80 	call	9b8 <i2c_short_write>
     390:	01a3c254 	movui	r6,36617
     394:	014d0784 	movi	r5,13342
     398:	01001e04 	movi	r4,120
     39c:	00009b80 	call	9b8 <i2c_short_write>
     3a0:	008000b4 	movhi	r2,2
     3a4:	10a1a804 	addi	r2,r2,-31072
     3a8:	0001883a 	nop
     3ac:	10bfffc4 	addi	r2,r2,-1
     3b0:	103ffd1e 	bne	r2,zero,3a8 <__alt_data_end+0xff0003a8>
     3b4:	04000074 	movhi	r16,1
     3b8:	8407f304 	addi	r16,r16,8140
     3bc:	01a3c214 	movui	r6,36616
     3c0:	014d0784 	movi	r5,13342
     3c4:	01001e04 	movi	r4,120
     3c8:	00009b80 	call	9b8 <i2c_short_write>
     3cc:	84400084 	addi	r17,r16,2
     3d0:	84804604 	addi	r18,r16,280
     3d4:	8980000b 	ldhu	r6,0(r17)
     3d8:	8140000b 	ldhu	r5,0(r16)
     3dc:	01001e04 	movi	r4,120
     3e0:	84000104 	addi	r16,r16,4
     3e4:	00009b80 	call	9b8 <i2c_short_write>
     3e8:	8c400104 	addi	r17,r17,4
     3ec:	84bff91e 	bne	r16,r18,3d4 <__alt_data_end+0xff0003d4>
     3f0:	04000074 	movhi	r16,1
     3f4:	8407a304 	addi	r16,r16,7820
     3f8:	84400084 	addi	r17,r16,2
     3fc:	84805004 	addi	r18,r16,320
     400:	8980000b 	ldhu	r6,0(r17)
     404:	8140000b 	ldhu	r5,0(r16)
     408:	01001e04 	movi	r4,120
     40c:	84000104 	addi	r16,r16,4
     410:	00009b80 	call	9b8 <i2c_short_write>
     414:	8c400104 	addi	r17,r17,4
     418:	943ff91e 	bne	r18,r16,400 <__alt_data_end+0xff000400>
     41c:	018164c4 	movi	r6,1427
     420:	014d6904 	movi	r5,13732
     424:	01001e04 	movi	r4,120
     428:	00009b80 	call	9b8 <i2c_short_write>
     42c:	0189e644 	movi	r6,10137
     430:	014ce304 	movi	r5,13196
     434:	01001e04 	movi	r4,120
     438:	00009b80 	call	9b8 <i2c_short_write>
     43c:	01991004 	movi	r6,25664
     440:	014ce404 	movi	r5,13200
     444:	01001e04 	movi	r4,120
     448:	00009b80 	call	9b8 <i2c_short_write>
     44c:	008000b4 	movhi	r2,2
     450:	10a1a804 	addi	r2,r2,-31072
     454:	0001883a 	nop
     458:	10bfffc4 	addi	r2,r2,-1
     45c:	103ffd1e 	bne	r2,zero,454 <__alt_data_end+0xff000454>
     460:	0189e6c4 	movi	r6,10139
     464:	014ce304 	movi	r5,13196
     468:	01001e04 	movi	r4,120
     46c:	00009b80 	call	9b8 <i2c_short_write>
     470:	01991004 	movi	r6,25664
     474:	014ce404 	movi	r5,13200
     478:	01001e04 	movi	r4,120
     47c:	00009b80 	call	9b8 <i2c_short_write>
     480:	008000b4 	movhi	r2,2
     484:	10a1a804 	addi	r2,r2,-31072
     488:	0001883a 	nop
     48c:	10bfffc4 	addi	r2,r2,-1
     490:	103ffd1e 	bne	r2,zero,488 <__alt_data_end+0xff000488>
     494:	01a840d4 	movui	r6,41219
     498:	014ce304 	movi	r5,13196
     49c:	01001e04 	movi	r4,120
     4a0:	00009b80 	call	9b8 <i2c_short_write>
     4a4:	01800144 	movi	r6,5
     4a8:	014ce404 	movi	r5,13200
     4ac:	01001e04 	movi	r4,120
     4b0:	00009b80 	call	9b8 <i2c_short_write>
     4b4:	008000b4 	movhi	r2,2
     4b8:	10a1a804 	addi	r2,r2,-31072
     4bc:	0001883a 	nop
     4c0:	10bfffc4 	addi	r2,r2,-1
     4c4:	103ffd1e 	bne	r2,zero,4bc <__alt_data_end+0xff0004bc>
     4c8:	01a840d4 	movui	r6,41219
     4cc:	014ce304 	movi	r5,13196
     4d0:	01001e04 	movi	r4,120
     4d4:	00009b80 	call	9b8 <i2c_short_write>
     4d8:	01800184 	movi	r6,6
     4dc:	014ce404 	movi	r5,13200
     4e0:	01001e04 	movi	r4,120
     4e4:	00009b80 	call	9b8 <i2c_short_write>
     4e8:	008000b4 	movhi	r2,2
     4ec:	10a1a804 	addi	r2,r2,-31072
     4f0:	0001883a 	nop
     4f4:	10bfffc4 	addi	r2,r2,-1
     4f8:	103ffd1e 	bne	r2,zero,4f0 <__alt_data_end+0xff0004f0>
     4fc:	04000074 	movhi	r16,1
     500:	84075904 	addi	r16,r16,7524
     504:	84400084 	addi	r17,r16,2
     508:	84804a04 	addi	r18,r16,296
     50c:	8980000b 	ldhu	r6,0(r17)
     510:	8140000b 	ldhu	r5,0(r16)
     514:	01001e04 	movi	r4,120
     518:	84000104 	addi	r16,r16,4
     51c:	00009b80 	call	9b8 <i2c_short_write>
     520:	8c400104 	addi	r17,r17,4
     524:	943ff91e 	bne	r18,r16,50c <__alt_data_end+0xff00050c>
     528:	008003f4 	movhi	r2,15
     52c:	10909004 	addi	r2,r2,16960
     530:	0001883a 	nop
     534:	10bfffc4 	addi	r2,r2,-1
     538:	103ffd1e 	bne	r2,zero,530 <__alt_data_end+0xff000530>
     53c:	01800804 	movi	r6,32
     540:	014ccb84 	movi	r5,13102
     544:	01001e04 	movi	r4,120
     548:	00009b80 	call	9b8 <i2c_short_write>
     54c:	008003f4 	movhi	r2,15
     550:	10909004 	addi	r2,r2,16960
     554:	0001883a 	nop
     558:	10bfffc4 	addi	r2,r2,-1
     55c:	103ffd1e 	bne	r2,zero,554 <__alt_data_end+0xff000554>
     560:	01800884 	movi	r6,34
     564:	014d0104 	movi	r5,13316
     568:	01001e04 	movi	r4,120
     56c:	00009b80 	call	9b8 <i2c_short_write>
     570:	008003f4 	movhi	r2,15
     574:	10909004 	addi	r2,r2,16960
     578:	0001883a 	nop
     57c:	10bfffc4 	addi	r2,r2,-1
     580:	103ffd1e 	bne	r2,zero,578 <__alt_data_end+0xff000578>
     584:	018009c4 	movi	r6,39
     588:	014c1004 	movi	r5,12352
     58c:	01001e04 	movi	r4,120
     590:	dfc00317 	ldw	ra,12(sp)
     594:	dc800217 	ldw	r18,8(sp)
     598:	dc400117 	ldw	r17,4(sp)
     59c:	dc000017 	ldw	r16,0(sp)
     5a0:	dec00404 	addi	sp,sp,16
     5a4:	00009b81 	jmpi	9b8 <i2c_short_write>

000005a8 <cam_get_xsize>:
     5a8:	00c04034 	movhi	r3,256
     5ac:	18c41304 	addi	r3,r3,4172
     5b0:	18800023 	ldbuio	r2,0(r3)
     5b4:	1080010c 	andi	r2,r2,4
     5b8:	103ffd26 	beq	r2,zero,5b0 <__alt_data_end+0xff0005b0>
     5bc:	00804034 	movhi	r2,256
     5c0:	10841004 	addi	r2,r2,4160
     5c4:	1080002b 	ldhuio	r2,0(r2)
     5c8:	f800283a 	ret

000005cc <cam_get_ysize>:
     5cc:	00c04034 	movhi	r3,256
     5d0:	18c41304 	addi	r3,r3,4172
     5d4:	18800023 	ldbuio	r2,0(r3)
     5d8:	1080010c 	andi	r2,r2,4
     5dc:	103ffd26 	beq	r2,zero,5d4 <__alt_data_end+0xff0005d4>
     5e0:	00804034 	movhi	r2,256
     5e4:	10841104 	addi	r2,r2,4164
     5e8:	1080002b 	ldhuio	r2,0(r2)
     5ec:	f800283a 	ret

000005f0 <cam_get_profiling>:
     5f0:	00c04034 	movhi	r3,256
     5f4:	18c41304 	addi	r3,r3,4172
     5f8:	18800023 	ldbuio	r2,0(r3)
     5fc:	1080010c 	andi	r2,r2,4
     600:	103ffd26 	beq	r2,zero,5f8 <__alt_data_end+0xff0005f8>
     604:	00804034 	movhi	r2,256
     608:	deffff04 	addi	sp,sp,-4
     60c:	10841004 	addi	r2,r2,4160
     610:	dfc00015 	stw	ra,0(sp)
     614:	1140002b 	ldhuio	r5,0(r2)
     618:	01000074 	movhi	r4,1
     61c:	21074104 	addi	r4,r4,7428
     620:	297fffcc 	andi	r5,r5,65535
     624:	00033940 	call	3394 <printf>
     628:	00804034 	movhi	r2,256
     62c:	10841104 	addi	r2,r2,4164
     630:	1140002b 	ldhuio	r5,0(r2)
     634:	01000074 	movhi	r4,1
     638:	21074904 	addi	r4,r4,7460
     63c:	297fffcc 	andi	r5,r5,65535
     640:	00033940 	call	3394 <printf>
     644:	00804034 	movhi	r2,256
     648:	10841204 	addi	r2,r2,4168
     64c:	1140002b 	ldhuio	r5,0(r2)
     650:	01000074 	movhi	r4,1
     654:	21075104 	addi	r4,r4,7492
     658:	297fffcc 	andi	r5,r5,65535
     65c:	dfc00017 	ldw	ra,0(sp)
     660:	dec00104 	addi	sp,sp,4
     664:	00033941 	jmpi	3394 <printf>

00000668 <cam_set_image_pointer>:
     668:	21003fcc 	andi	r4,r4,255
     66c:	2100201c 	xori	r4,r4,128
     670:	213fe004 	addi	r4,r4,-128
     674:	00800044 	movi	r2,1
     678:	20801226 	beq	r4,r2,6c4 <cam_set_image_pointer+0x5c>
     67c:	11000c0e 	bge	r2,r4,6b0 <cam_set_image_pointer+0x48>
     680:	00800084 	movi	r2,2
     684:	20800626 	beq	r4,r2,6a0 <cam_set_image_pointer+0x38>
     688:	008000c4 	movi	r2,3
     68c:	2080111e 	bne	r4,r2,6d4 <cam_set_image_pointer+0x6c>
     690:	00804034 	movhi	r2,256
     694:	10841704 	addi	r2,r2,4188
     698:	11400035 	stwio	r5,0(r2)
     69c:	f800283a 	ret
     6a0:	00804034 	movhi	r2,256
     6a4:	10841604 	addi	r2,r2,4184
     6a8:	11400035 	stwio	r5,0(r2)
     6ac:	f800283a 	ret
     6b0:	2000091e 	bne	r4,zero,6d8 <cam_set_image_pointer+0x70>
     6b4:	00804034 	movhi	r2,256
     6b8:	10841404 	addi	r2,r2,4176
     6bc:	11400035 	stwio	r5,0(r2)
     6c0:	f800283a 	ret
     6c4:	00804034 	movhi	r2,256
     6c8:	10841504 	addi	r2,r2,4180
     6cc:	11400035 	stwio	r5,0(r2)
     6d0:	f800283a 	ret
     6d4:	f800283a 	ret
     6d8:	f800283a 	ret

000006dc <current_image_valid>:
     6dc:	00804034 	movhi	r2,256
     6e0:	10841304 	addi	r2,r2,4172
     6e4:	1080002b 	ldhuio	r2,0(r2)
     6e8:	1080800c 	andi	r2,r2,512
     6ec:	f800283a 	ret

000006f0 <current_image_pointer>:
     6f0:	00804034 	movhi	r2,256
     6f4:	10841404 	addi	r2,r2,4176
     6f8:	10800037 	ldwio	r2,0(r2)
     6fc:	f800283a 	ret

00000700 <take_picture_blocking>:
     700:	00c04034 	movhi	r3,256
     704:	18c41304 	addi	r3,r3,4172
     708:	00800204 	movi	r2,8
     70c:	1880002d 	sthio	r2,0(r3)
     710:	1880002b 	ldhuio	r2,0(r3)
     714:	1080020c 	andi	r2,r2,8
     718:	103ffd1e 	bne	r2,zero,710 <__alt_data_end+0xff000710>
     71c:	f800283a 	ret

00000720 <enable_continues_mode>:
     720:	00804034 	movhi	r2,256
     724:	10841304 	addi	r2,r2,4172
     728:	00c00404 	movi	r3,16
     72c:	10c0002d 	sthio	r3,0(r2)
     730:	f800283a 	ret

00000734 <new_image_available>:
     734:	00c04034 	movhi	r3,256
     738:	18c41304 	addi	r3,r3,4172
     73c:	1880002b 	ldhuio	r2,0(r3)
     740:	1080200c 	andi	r2,r2,128
     744:	1000021e 	bne	r2,zero,750 <new_image_available+0x1c>
     748:	0005883a 	mov	r2,zero
     74c:	f800283a 	ret
     750:	00804004 	movi	r2,256
     754:	1880002d 	sthio	r2,0(r3)
     758:	00800044 	movi	r2,1
     75c:	f800283a 	ret

00000760 <DIPSW_get_value>:
     760:	00804034 	movhi	r2,256
     764:	10842804 	addi	r2,r2,4256
     768:	10800023 	ldbuio	r2,0(r2)
     76c:	0084303a 	nor	r2,zero,r2
     770:	f800283a 	ret

00000774 <conv_grayscale>:
     774:	d0a6cd17 	ldw	r2,-25804(gp)
     778:	defffc04 	addi	sp,sp,-16
     77c:	dc800215 	stw	r18,8(sp)
     780:	dc400115 	stw	r17,4(sp)
     784:	dc000015 	stw	r16,0(sp)
     788:	dfc00315 	stw	ra,12(sp)
     78c:	d166cc15 	stw	r5,-25808(gp)
     790:	d1a6cb15 	stw	r6,-25812(gp)
     794:	2821883a 	mov	r16,r5
     798:	3023883a 	mov	r17,r6
     79c:	2025883a 	mov	r18,r4
     7a0:	10000226 	beq	r2,zero,7ac <conv_grayscale+0x38>
     7a4:	1009883a 	mov	r4,r2
     7a8:	00029fc0 	call	29fc <free>
     7ac:	8449383a 	mul	r4,r16,r17
     7b0:	00029e80 	call	29e8 <malloc>
     7b4:	d0a6cd15 	stw	r2,-25804(gp)
     7b8:	0440200e 	bge	zero,r17,83c <conv_grayscale+0xc8>
     7bc:	840d883a 	add	r6,r16,r16
     7c0:	9009883a 	mov	r4,r18
     7c4:	8017883a 	mov	r11,r16
     7c8:	000b883a 	mov	r5,zero
     7cc:	0400170e 	bge	zero,r16,82c <conv_grayscale+0xb8>
     7d0:	5c13c83a 	sub	r9,r11,r16
     7d4:	2015883a 	mov	r10,r4
     7d8:	5080000b 	ldhu	r2,0(r10)
     7dc:	100ed17a 	srli	r7,r2,5
     7e0:	1010d2fa 	srli	r8,r2,11
     7e4:	100690fa 	slli	r3,r2,3
     7e8:	39cf883a 	add	r7,r7,r7
     7ec:	400490fa 	slli	r2,r8,3
     7f0:	39cf883a 	add	r7,r7,r7
     7f4:	39c03fcc 	andi	r7,r7,255
     7f8:	39c01724 	muli	r7,r7,92
     7fc:	108006e4 	muli	r2,r2,27
     800:	18c03fcc 	andi	r3,r3,255
     804:	18c00264 	muli	r3,r3,9
     808:	3885883a 	add	r2,r7,r2
     80c:	d1e6cd17 	ldw	r7,-25804(gp)
     810:	10c5883a 	add	r2,r2,r3
     814:	1005d1fa 	srai	r2,r2,7
     818:	3a4f883a 	add	r7,r7,r9
     81c:	38800025 	stbio	r2,0(r7)
     820:	4a400044 	addi	r9,r9,1
     824:	52800084 	addi	r10,r10,2
     828:	5a7feb1e 	bne	r11,r9,7d8 <__alt_data_end+0xff0007d8>
     82c:	29400044 	addi	r5,r5,1
     830:	2189883a 	add	r4,r4,r6
     834:	5c17883a 	add	r11,r11,r16
     838:	897fe41e 	bne	r17,r5,7cc <__alt_data_end+0xff0007cc>
     83c:	dfc00317 	ldw	ra,12(sp)
     840:	dc800217 	ldw	r18,8(sp)
     844:	dc400117 	ldw	r17,4(sp)
     848:	dc000017 	ldw	r16,0(sp)
     84c:	dec00404 	addi	sp,sp,16
     850:	f800283a 	ret

00000854 <get_grayscale_width>:
     854:	d0a6cc17 	ldw	r2,-25808(gp)
     858:	f800283a 	ret

0000085c <get_grayscale_height>:
     85c:	d0a6cb17 	ldw	r2,-25812(gp)
     860:	f800283a 	ret

00000864 <get_grayscale_picture>:
     864:	d0a6cd17 	ldw	r2,-25804(gp)
     868:	f800283a 	ret

0000086c <i2c_busy_wait>:
     86c:	00c04034 	movhi	r3,256
     870:	18c42704 	addi	r3,r3,4252
     874:	18800037 	ldwio	r2,0(r3)
     878:	108000cc 	andi	r2,r2,3
     87c:	103ffd1e 	bne	r2,zero,874 <__alt_data_end+0xff000874>
     880:	f800283a 	ret

00000884 <i2c_auto_detect>:
     884:	01004034 	movhi	r4,256
     888:	21042704 	addi	r4,r4,4252
     88c:	00c04034 	movhi	r3,256
     890:	18c42704 	addi	r3,r3,4252
     894:	20800037 	ldwio	r2,0(r4)
     898:	108000cc 	andi	r2,r2,3
     89c:	103ffb1e 	bne	r2,zero,88c <__alt_data_end+0xff00088c>
     8a0:	00800104 	movi	r2,4
     8a4:	18800035 	stwio	r2,0(r3)
     8a8:	18800037 	ldwio	r2,0(r3)
     8ac:	108000cc 	andi	r2,r2,3
     8b0:	103ffd1e 	bne	r2,zero,8a8 <__alt_data_end+0xff0008a8>
     8b4:	00804034 	movhi	r2,256
     8b8:	defffc04 	addi	sp,sp,-16
     8bc:	10842504 	addi	r2,r2,4244
     8c0:	dfc00315 	stw	ra,12(sp)
     8c4:	dc800215 	stw	r18,8(sp)
     8c8:	dc400115 	stw	r17,4(sp)
     8cc:	dc000015 	stw	r16,0(sp)
     8d0:	14800037 	ldwio	r18,0(r2)
     8d4:	01000074 	movhi	r4,1
     8d8:	21083904 	addi	r4,r4,8420
     8dc:	900b883a 	mov	r5,r18
     8e0:	0021883a 	mov	r16,zero
     8e4:	00033940 	call	3394 <printf>
     8e8:	04800a0e 	bge	zero,r18,914 <i2c_auto_detect+0x90>
     8ec:	04404034 	movhi	r17,256
     8f0:	8c442404 	addi	r17,r17,4240
     8f4:	8c000035 	stwio	r16,0(r17)
     8f8:	89800037 	ldwio	r6,0(r17)
     8fc:	01000074 	movhi	r4,1
     900:	800b883a 	mov	r5,r16
     904:	21084204 	addi	r4,r4,8456
     908:	84000044 	addi	r16,r16,1
     90c:	00033940 	call	3394 <printf>
     910:	943ff81e 	bne	r18,r16,8f4 <__alt_data_end+0xff0008f4>
     914:	dfc00317 	ldw	ra,12(sp)
     918:	dc800217 	ldw	r18,8(sp)
     91c:	dc400117 	ldw	r17,4(sp)
     920:	dc000017 	ldw	r16,0(sp)
     924:	dec00404 	addi	sp,sp,16
     928:	f800283a 	ret

0000092c <i2c_short_read>:
     92c:	01804034 	movhi	r6,256
     930:	31842704 	addi	r6,r6,4252
     934:	00c04034 	movhi	r3,256
     938:	18c42704 	addi	r3,r3,4252
     93c:	30800037 	ldwio	r2,0(r6)
     940:	108000cc 	andi	r2,r2,3
     944:	103ffb1e 	bne	r2,zero,934 <__alt_data_end+0xff000934>
     948:	00804034 	movhi	r2,256
     94c:	21003fcc 	andi	r4,r4,255
     950:	10842404 	addi	r2,r2,4240
     954:	11000025 	stbio	r4,0(r2)
     958:	00804034 	movhi	r2,256
     95c:	10842504 	addi	r2,r2,4244
     960:	1140002d 	sthio	r5,0(r2)
     964:	008010c4 	movi	r2,67
     968:	18800025 	stbio	r2,0(r3)
     96c:	180b883a 	mov	r5,r3
     970:	00c04034 	movhi	r3,256
     974:	18c42704 	addi	r3,r3,4252
     978:	28800037 	ldwio	r2,0(r5)
     97c:	108000cc 	andi	r2,r2,3
     980:	103ffb1e 	bne	r2,zero,970 <__alt_data_end+0xff000970>
     984:	00804034 	movhi	r2,256
     988:	21000044 	addi	r4,r4,1
     98c:	10842404 	addi	r2,r2,4240
     990:	11000025 	stbio	r4,0(r2)
     994:	00800884 	movi	r2,34
     998:	18800025 	stbio	r2,0(r3)
     99c:	18800037 	ldwio	r2,0(r3)
     9a0:	108000cc 	andi	r2,r2,3
     9a4:	103ffd1e 	bne	r2,zero,99c <__alt_data_end+0xff00099c>
     9a8:	00804034 	movhi	r2,256
     9ac:	10842604 	addi	r2,r2,4248
     9b0:	10800037 	ldwio	r2,0(r2)
     9b4:	f800283a 	ret

000009b8 <i2c_short_write>:
     9b8:	01c04034 	movhi	r7,256
     9bc:	39c42704 	addi	r7,r7,4252
     9c0:	00c04034 	movhi	r3,256
     9c4:	18c42704 	addi	r3,r3,4252
     9c8:	38800037 	ldwio	r2,0(r7)
     9cc:	108000cc 	andi	r2,r2,3
     9d0:	103ffb1e 	bne	r2,zero,9c0 <__alt_data_end+0xff0009c0>
     9d4:	00804034 	movhi	r2,256
     9d8:	10842404 	addi	r2,r2,4240
     9dc:	11000025 	stbio	r4,0(r2)
     9e0:	00804034 	movhi	r2,256
     9e4:	10842504 	addi	r2,r2,4244
     9e8:	1140002d 	sthio	r5,0(r2)
     9ec:	00804034 	movhi	r2,256
     9f0:	10842604 	addi	r2,r2,4248
     9f4:	1180002d 	sthio	r6,0(r2)
     9f8:	00801084 	movi	r2,66
     9fc:	18800025 	stbio	r2,0(r3)
     a00:	18800037 	ldwio	r2,0(r3)
     a04:	108000cc 	andi	r2,r2,3
     a08:	103ffd1e 	bne	r2,zero,a00 <__alt_data_end+0xff000a00>
     a0c:	f800283a 	ret

00000a10 <LCD_Write_Command>:
     a10:	00804034 	movhi	r2,256
     a14:	10841804 	addi	r2,r2,4192
     a18:	1100002d 	sthio	r4,0(r2)
     a1c:	01000284 	movi	r4,10
     a20:	000fadc1 	jmpi	fadc <usleep>

00000a24 <LCD_Write_Data>:
     a24:	00804034 	movhi	r2,256
     a28:	10841904 	addi	r2,r2,4196
     a2c:	1100002d 	sthio	r4,0(r2)
     a30:	01000284 	movi	r4,10
     a34:	000fadc1 	jmpi	fadc <usleep>

00000a38 <init_LCD>:
     a38:	defff704 	addi	sp,sp,-36
     a3c:	00804034 	movhi	r2,256
     a40:	dd400515 	stw	r21,20(sp)
     a44:	dfc00815 	stw	ra,32(sp)
     a48:	ddc00715 	stw	r23,28(sp)
     a4c:	dd800615 	stw	r22,24(sp)
     a50:	dd000415 	stw	r20,16(sp)
     a54:	dcc00315 	stw	r19,12(sp)
     a58:	dc800215 	stw	r18,8(sp)
     a5c:	dc400115 	stw	r17,4(sp)
     a60:	dc000015 	stw	r16,0(sp)
     a64:	05400084 	movi	r21,2
     a68:	10841a04 	addi	r2,r2,4200
     a6c:	1540002d 	sthio	r21,0(r2)
     a70:	04804034 	movhi	r18,256
     a74:	94841804 	addi	r18,r18,4192
     a78:	00800a04 	movi	r2,40
     a7c:	9080002d 	sthio	r2,0(r18)
     a80:	04000284 	movi	r16,10
     a84:	8009883a 	mov	r4,r16
     a88:	000fadc0 	call	fadc <usleep>
     a8c:	05c00444 	movi	r23,17
     a90:	95c0002d 	sthio	r23,0(r18)
     a94:	8009883a 	mov	r4,r16
     a98:	04404034 	movhi	r17,256
     a9c:	8c441904 	addi	r17,r17,4196
     aa0:	000fadc0 	call	fadc <usleep>
     aa4:	0027883a 	mov	r19,zero
     aa8:	8cc0002d 	sthio	r19,0(r17)
     aac:	8009883a 	mov	r4,r16
     ab0:	000fadc0 	call	fadc <usleep>
     ab4:	008032c4 	movi	r2,203
     ab8:	9080002d 	sthio	r2,0(r18)
     abc:	8009883a 	mov	r4,r16
     ac0:	000fadc0 	call	fadc <usleep>
     ac4:	00800e44 	movi	r2,57
     ac8:	8880002d 	sthio	r2,0(r17)
     acc:	8009883a 	mov	r4,r16
     ad0:	000fadc0 	call	fadc <usleep>
     ad4:	00800b04 	movi	r2,44
     ad8:	8880002d 	sthio	r2,0(r17)
     adc:	8009883a 	mov	r4,r16
     ae0:	000fadc0 	call	fadc <usleep>
     ae4:	8cc0002d 	sthio	r19,0(r17)
     ae8:	8009883a 	mov	r4,r16
     aec:	000fadc0 	call	fadc <usleep>
     af0:	00800d04 	movi	r2,52
     af4:	8880002d 	sthio	r2,0(r17)
     af8:	8009883a 	mov	r4,r16
     afc:	000fadc0 	call	fadc <usleep>
     b00:	8d40002d 	sthio	r21,0(r17)
     b04:	8009883a 	mov	r4,r16
     b08:	000fadc0 	call	fadc <usleep>
     b0c:	008033c4 	movi	r2,207
     b10:	9080002d 	sthio	r2,0(r18)
     b14:	8009883a 	mov	r4,r16
     b18:	000fadc0 	call	fadc <usleep>
     b1c:	8cc0002d 	sthio	r19,0(r17)
     b20:	8009883a 	mov	r4,r16
     b24:	000fadc0 	call	fadc <usleep>
     b28:	05802044 	movi	r22,129
     b2c:	8d80002d 	sthio	r22,0(r17)
     b30:	8009883a 	mov	r4,r16
     b34:	000fadc0 	call	fadc <usleep>
     b38:	00800c04 	movi	r2,48
     b3c:	8880002d 	sthio	r2,0(r17)
     b40:	8009883a 	mov	r4,r16
     b44:	000fadc0 	call	fadc <usleep>
     b48:	00803a04 	movi	r2,232
     b4c:	9080002d 	sthio	r2,0(r18)
     b50:	8009883a 	mov	r4,r16
     b54:	000fadc0 	call	fadc <usleep>
     b58:	00802144 	movi	r2,133
     b5c:	8880002d 	sthio	r2,0(r17)
     b60:	8009883a 	mov	r4,r16
     b64:	000fadc0 	call	fadc <usleep>
     b68:	05000044 	movi	r20,1
     b6c:	8d00002d 	sthio	r20,0(r17)
     b70:	8009883a 	mov	r4,r16
     b74:	000fadc0 	call	fadc <usleep>
     b78:	00801e44 	movi	r2,121
     b7c:	8880002d 	sthio	r2,0(r17)
     b80:	8009883a 	mov	r4,r16
     b84:	000fadc0 	call	fadc <usleep>
     b88:	00803a84 	movi	r2,234
     b8c:	9080002d 	sthio	r2,0(r18)
     b90:	8009883a 	mov	r4,r16
     b94:	000fadc0 	call	fadc <usleep>
     b98:	8cc0002d 	sthio	r19,0(r17)
     b9c:	8009883a 	mov	r4,r16
     ba0:	000fadc0 	call	fadc <usleep>
     ba4:	8cc0002d 	sthio	r19,0(r17)
     ba8:	8009883a 	mov	r4,r16
     bac:	000fadc0 	call	fadc <usleep>
     bb0:	00801904 	movi	r2,100
     bb4:	8880002d 	sthio	r2,0(r17)
     bb8:	8009883a 	mov	r4,r16
     bbc:	000fadc0 	call	fadc <usleep>
     bc0:	008000c4 	movi	r2,3
     bc4:	8880002d 	sthio	r2,0(r17)
     bc8:	8009883a 	mov	r4,r16
     bcc:	000fadc0 	call	fadc <usleep>
     bd0:	00800484 	movi	r2,18
     bd4:	8880002d 	sthio	r2,0(r17)
     bd8:	8009883a 	mov	r4,r16
     bdc:	000fadc0 	call	fadc <usleep>
     be0:	8d80002d 	sthio	r22,0(r17)
     be4:	8009883a 	mov	r4,r16
     be8:	000fadc0 	call	fadc <usleep>
     bec:	00803dc4 	movi	r2,247
     bf0:	9080002d 	sthio	r2,0(r18)
     bf4:	8009883a 	mov	r4,r16
     bf8:	000fadc0 	call	fadc <usleep>
     bfc:	00800804 	movi	r2,32
     c00:	8880002d 	sthio	r2,0(r17)
     c04:	8009883a 	mov	r4,r16
     c08:	000fadc0 	call	fadc <usleep>
     c0c:	00803004 	movi	r2,192
     c10:	9080002d 	sthio	r2,0(r18)
     c14:	8009883a 	mov	r4,r16
     c18:	000fadc0 	call	fadc <usleep>
     c1c:	05800984 	movi	r22,38
     c20:	8d80002d 	sthio	r22,0(r17)
     c24:	8009883a 	mov	r4,r16
     c28:	000fadc0 	call	fadc <usleep>
     c2c:	00800104 	movi	r2,4
     c30:	8880002d 	sthio	r2,0(r17)
     c34:	8009883a 	mov	r4,r16
     c38:	000fadc0 	call	fadc <usleep>
     c3c:	00803044 	movi	r2,193
     c40:	9080002d 	sthio	r2,0(r18)
     c44:	8009883a 	mov	r4,r16
     c48:	000fadc0 	call	fadc <usleep>
     c4c:	8dc0002d 	sthio	r23,0(r17)
     c50:	8009883a 	mov	r4,r16
     c54:	000fadc0 	call	fadc <usleep>
     c58:	00803144 	movi	r2,197
     c5c:	9080002d 	sthio	r2,0(r18)
     c60:	8009883a 	mov	r4,r16
     c64:	000fadc0 	call	fadc <usleep>
     c68:	00800d44 	movi	r2,53
     c6c:	8880002d 	sthio	r2,0(r17)
     c70:	8009883a 	mov	r4,r16
     c74:	000fadc0 	call	fadc <usleep>
     c78:	00800f84 	movi	r2,62
     c7c:	8880002d 	sthio	r2,0(r17)
     c80:	8009883a 	mov	r4,r16
     c84:	000fadc0 	call	fadc <usleep>
     c88:	008031c4 	movi	r2,199
     c8c:	9080002d 	sthio	r2,0(r18)
     c90:	8009883a 	mov	r4,r16
     c94:	000fadc0 	call	fadc <usleep>
     c98:	00802f84 	movi	r2,190
     c9c:	8880002d 	sthio	r2,0(r17)
     ca0:	8009883a 	mov	r4,r16
     ca4:	000fadc0 	call	fadc <usleep>
     ca8:	00802c44 	movi	r2,177
     cac:	9080002d 	sthio	r2,0(r18)
     cb0:	8009883a 	mov	r4,r16
     cb4:	000fadc0 	call	fadc <usleep>
     cb8:	8cc0002d 	sthio	r19,0(r17)
     cbc:	8009883a 	mov	r4,r16
     cc0:	000fadc0 	call	fadc <usleep>
     cc4:	00800404 	movi	r2,16
     cc8:	8880002d 	sthio	r2,0(r17)
     ccc:	8009883a 	mov	r4,r16
     cd0:	000fadc0 	call	fadc <usleep>
     cd4:	00800e84 	movi	r2,58
     cd8:	9080002d 	sthio	r2,0(r18)
     cdc:	8009883a 	mov	r4,r16
     ce0:	000fadc0 	call	fadc <usleep>
     ce4:	00801544 	movi	r2,85
     ce8:	8880002d 	sthio	r2,0(r17)
     cec:	8009883a 	mov	r4,r16
     cf0:	000fadc0 	call	fadc <usleep>
     cf4:	00802d84 	movi	r2,182
     cf8:	9080002d 	sthio	r2,0(r18)
     cfc:	8009883a 	mov	r4,r16
     d00:	000fadc0 	call	fadc <usleep>
     d04:	8c00002d 	sthio	r16,0(r17)
     d08:	8009883a 	mov	r4,r16
     d0c:	000fadc0 	call	fadc <usleep>
     d10:	00802884 	movi	r2,162
     d14:	8880002d 	sthio	r2,0(r17)
     d18:	8009883a 	mov	r4,r16
     d1c:	000fadc0 	call	fadc <usleep>
     d20:	00803c84 	movi	r2,242
     d24:	9080002d 	sthio	r2,0(r18)
     d28:	8009883a 	mov	r4,r16
     d2c:	000fadc0 	call	fadc <usleep>
     d30:	8d40002d 	sthio	r21,0(r17)
     d34:	8009883a 	mov	r4,r16
     d38:	000fadc0 	call	fadc <usleep>
     d3c:	9580002d 	sthio	r22,0(r18)
     d40:	8009883a 	mov	r4,r16
     d44:	000fadc0 	call	fadc <usleep>
     d48:	8d00002d 	sthio	r20,0(r17)
     d4c:	8009883a 	mov	r4,r16
     d50:	000fadc0 	call	fadc <usleep>
     d54:	00800d84 	movi	r2,54
     d58:	9080002d 	sthio	r2,0(r18)
     d5c:	8009883a 	mov	r4,r16
     d60:	000fadc0 	call	fadc <usleep>
     d64:	8cc0002d 	sthio	r19,0(r17)
     d68:	8009883a 	mov	r4,r16
     d6c:	000fadc0 	call	fadc <usleep>
     d70:	00800a84 	movi	r2,42
     d74:	9080002d 	sthio	r2,0(r18)
     d78:	8009883a 	mov	r4,r16
     d7c:	000fadc0 	call	fadc <usleep>
     d80:	8cc0002d 	sthio	r19,0(r17)
     d84:	8009883a 	mov	r4,r16
     d88:	000fadc0 	call	fadc <usleep>
     d8c:	8cc0002d 	sthio	r19,0(r17)
     d90:	8009883a 	mov	r4,r16
     d94:	000fadc0 	call	fadc <usleep>
     d98:	8cc0002d 	sthio	r19,0(r17)
     d9c:	8009883a 	mov	r4,r16
     da0:	000fadc0 	call	fadc <usleep>
     da4:	00803bc4 	movi	r2,239
     da8:	8880002d 	sthio	r2,0(r17)
     dac:	8009883a 	mov	r4,r16
     db0:	000fadc0 	call	fadc <usleep>
     db4:	00800ac4 	movi	r2,43
     db8:	9080002d 	sthio	r2,0(r18)
     dbc:	8009883a 	mov	r4,r16
     dc0:	000fadc0 	call	fadc <usleep>
     dc4:	8cc0002d 	sthio	r19,0(r17)
     dc8:	8009883a 	mov	r4,r16
     dcc:	000fadc0 	call	fadc <usleep>
     dd0:	8cc0002d 	sthio	r19,0(r17)
     dd4:	8009883a 	mov	r4,r16
     dd8:	000fadc0 	call	fadc <usleep>
     ddc:	8d00002d 	sthio	r20,0(r17)
     de0:	8009883a 	mov	r4,r16
     de4:	000fadc0 	call	fadc <usleep>
     de8:	00800fc4 	movi	r2,63
     dec:	8880002d 	sthio	r2,0(r17)
     df0:	8009883a 	mov	r4,r16
     df4:	000fadc0 	call	fadc <usleep>
     df8:	00c04034 	movhi	r3,256
     dfc:	00803c04 	movi	r2,240
     e00:	18c41d04 	addi	r3,r3,4212
     e04:	18800035 	stwio	r2,0(r3)
     e08:	d0a6ce8d 	sth	r2,-25798(gp)
     e0c:	00805004 	movi	r2,320
     e10:	d0a6ce0d 	sth	r2,-25800(gp)
     e14:	00800a44 	movi	r2,41
     e18:	9080002d 	sthio	r2,0(r18)
     e1c:	8009883a 	mov	r4,r16
     e20:	dfc00817 	ldw	ra,32(sp)
     e24:	ddc00717 	ldw	r23,28(sp)
     e28:	dd800617 	ldw	r22,24(sp)
     e2c:	dd400517 	ldw	r21,20(sp)
     e30:	dd000417 	ldw	r20,16(sp)
     e34:	dcc00317 	ldw	r19,12(sp)
     e38:	dc800217 	ldw	r18,8(sp)
     e3c:	dc400117 	ldw	r17,4(sp)
     e40:	dc000017 	ldw	r16,0(sp)
     e44:	dec00904 	addi	sp,sp,36
     e48:	000fadc1 	jmpi	fadc <usleep>

00000e4c <transfer_LCD_no_dma>:
     e4c:	defffb04 	addi	sp,sp,-20
     e50:	00804034 	movhi	r2,256
     e54:	dc000015 	stw	r16,0(sp)
     e58:	dfc00415 	stw	ra,16(sp)
     e5c:	dcc00315 	stw	r19,12(sp)
     e60:	dc800215 	stw	r18,8(sp)
     e64:	dc400115 	stw	r17,4(sp)
     e68:	2021883a 	mov	r16,r4
     e6c:	10841e04 	addi	r2,r2,4216
     e70:	11400035 	stwio	r5,0(r2)
     e74:	00804034 	movhi	r2,256
     e78:	10841804 	addi	r2,r2,4192
     e7c:	00c00b04 	movi	r3,44
     e80:	10c0002d 	sthio	r3,0(r2)
     e84:	29a5383a 	mul	r18,r5,r6
     e88:	01000284 	movi	r4,10
     e8c:	000fadc0 	call	fadc <usleep>
     e90:	90000a26 	beq	r18,zero,ebc <transfer_LCD_no_dma+0x70>
     e94:	04c04034 	movhi	r19,256
     e98:	9cc41904 	addi	r19,r19,4196
     e9c:	0023883a 	mov	r17,zero
     ea0:	8080000b 	ldhu	r2,0(r16)
     ea4:	9880002d 	sthio	r2,0(r19)
     ea8:	01000284 	movi	r4,10
     eac:	8c400044 	addi	r17,r17,1
     eb0:	000fadc0 	call	fadc <usleep>
     eb4:	84000084 	addi	r16,r16,2
     eb8:	8cbff91e 	bne	r17,r18,ea0 <__alt_data_end+0xff000ea0>
     ebc:	dfc00417 	ldw	ra,16(sp)
     ec0:	dcc00317 	ldw	r19,12(sp)
     ec4:	dc800217 	ldw	r18,8(sp)
     ec8:	dc400117 	ldw	r17,4(sp)
     ecc:	dc000017 	ldw	r16,0(sp)
     ed0:	dec00504 	addi	sp,sp,20
     ed4:	f800283a 	ret

00000ed8 <transfer_LCD_with_dma>:
     ed8:	d0a6ce0b 	ldhu	r2,-25800(gp)
     edc:	3080010e 	bge	r6,r2,ee4 <transfer_LCD_with_dma+0xc>
     ee0:	3005883a 	mov	r2,r6
     ee4:	d0e6ce8b 	ldhu	r3,-25798(gp)
     ee8:	28c0010e 	bge	r5,r3,ef0 <transfer_LCD_with_dma+0x18>
     eec:	2807883a 	mov	r3,r5
     ef0:	01804034 	movhi	r6,256
     ef4:	31841e04 	addi	r6,r6,4216
     ef8:	31400035 	stwio	r5,0(r6)
     efc:	01404034 	movhi	r5,256
     f00:	29441b04 	addi	r5,r5,4204
     f04:	29000035 	stwio	r4,0(r5)
     f08:	18ffffcc 	andi	r3,r3,65535
     f0c:	10bfffcc 	andi	r2,r2,65535
     f10:	1885383a 	mul	r2,r3,r2
     f14:	00c04034 	movhi	r3,256
     f18:	18c41c04 	addi	r3,r3,4208
     f1c:	18800035 	stwio	r2,0(r3)
     f20:	39c03fcc 	andi	r7,r7,255
     f24:	39c0201c 	xori	r7,r7,128
     f28:	00804034 	movhi	r2,256
     f2c:	39ffe004 	addi	r7,r7,-128
     f30:	10841a04 	addi	r2,r2,4200
     f34:	38000326 	beq	r7,zero,f44 <transfer_LCD_with_dma+0x6c>
     f38:	00c04404 	movi	r3,272
     f3c:	10c0002d 	sthio	r3,0(r2)
     f40:	f800283a 	ret
     f44:	00c04004 	movi	r3,256
     f48:	10c0002d 	sthio	r3,0(r2)
     f4c:	f800283a 	ret

00000f50 <main>:
     f50:	defff304 	addi	sp,sp,-52
     f54:	dfc00c15 	stw	ra,48(sp)
     f58:	ddc00a15 	stw	r23,40(sp)
     f5c:	dd800915 	stw	r22,36(sp)
     f60:	dd400815 	stw	r21,32(sp)
     f64:	dd000715 	stw	r20,28(sp)
     f68:	dcc00615 	stw	r19,24(sp)
     f6c:	dc800515 	stw	r18,20(sp)
     f70:	dc400415 	stw	r17,16(sp)
     f74:	dc000315 	stw	r16,12(sp)
     f78:	df000b15 	stw	fp,44(sp)
     f7c:	0000a380 	call	a38 <init_LCD>
     f80:	00002900 	call	290 <init_camera>
     f84:	01000604 	movi	r4,24
     f88:	0001d480 	call	1d48 <vga_set_swap>
     f8c:	00108840 	call	10884 <alt_timestamp_start>
     f90:	01000074 	movhi	r4,1
     f94:	21084b04 	addi	r4,r4,8492
     f98:	00034900 	call	3490 <puts>
     f9c:	00005f00 	call	5f0 <cam_get_profiling>
     fa0:	00005a80 	call	5a8 <cam_get_xsize>
     fa4:	1021883a 	mov	r16,r2
     fa8:	00005cc0 	call	5cc <cam_get_ysize>
     fac:	10bfffcc 	andi	r2,r2,65535
     fb0:	813fffcc 	andi	r4,r16,65535
     fb4:	2089383a 	mul	r4,r4,r2
     fb8:	056aaaf4 	movhi	r21,43691
     fbc:	ad6aaac4 	addi	r21,r21,-21845
     fc0:	00029e80 	call	29e8 <malloc>
     fc4:	102f883a 	mov	r23,r2
     fc8:	00005a80 	call	5a8 <cam_get_xsize>
     fcc:	1021883a 	mov	r16,r2
     fd0:	00005cc0 	call	5cc <cam_get_ysize>
     fd4:	10bfffcc 	andi	r2,r2,65535
     fd8:	813fffcc 	andi	r4,r16,65535
     fdc:	2089383a 	mul	r4,r4,r2
     fe0:	0027883a 	mov	r19,zero
     fe4:	0025883a 	mov	r18,zero
     fe8:	00029e80 	call	29e8 <malloc>
     fec:	102d883a 	mov	r22,r2
     ff0:	00005a80 	call	5a8 <cam_get_xsize>
     ff4:	1021883a 	mov	r16,r2
     ff8:	00005cc0 	call	5cc <cam_get_ysize>
     ffc:	10bfffcc 	andi	r2,r2,65535
    1000:	813fffcc 	andi	r4,r16,65535
    1004:	2089383a 	mul	r4,r4,r2
    1008:	0029883a 	mov	r20,zero
    100c:	00029e80 	call	29e8 <malloc>
    1010:	1023883a 	mov	r17,r2
    1014:	00005a80 	call	5a8 <cam_get_xsize>
    1018:	1021883a 	mov	r16,r2
    101c:	00005cc0 	call	5cc <cam_get_ysize>
    1020:	10bfffcc 	andi	r2,r2,65535
    1024:	813fffcc 	andi	r4,r16,65535
    1028:	2089383a 	mul	r4,r4,r2
    102c:	00029e80 	call	29e8 <malloc>
    1030:	b80b883a 	mov	r5,r23
    1034:	0009883a 	mov	r4,zero
    1038:	1021883a 	mov	r16,r2
    103c:	00006680 	call	668 <cam_set_image_pointer>
    1040:	b00b883a 	mov	r5,r22
    1044:	01000044 	movi	r4,1
    1048:	00006680 	call	668 <cam_set_image_pointer>
    104c:	880b883a 	mov	r5,r17
    1050:	01000084 	movi	r4,2
    1054:	00006680 	call	668 <cam_set_image_pointer>
    1058:	800b883a 	mov	r5,r16
    105c:	010000c4 	movi	r4,3
    1060:	00006680 	call	668 <cam_set_image_pointer>
    1064:	00007200 	call	720 <enable_continues_mode>
    1068:	00005a80 	call	5a8 <cam_get_xsize>
    106c:	1021883a 	mov	r16,r2
    1070:	00005cc0 	call	5cc <cam_get_ysize>
    1074:	813fffcc 	andi	r4,r16,65535
    1078:	2008d07a 	srli	r4,r4,1
    107c:	117fffcc 	andi	r5,r2,65535
    1080:	00013e00 	call	13e0 <init_sobel_arrays>
    1084:	00007340 	call	734 <new_image_available>
    1088:	10803fcc 	andi	r2,r2,255
    108c:	1080201c 	xori	r2,r2,128
    1090:	10bfe004 	addi	r2,r2,-128
    1094:	103ffb26 	beq	r2,zero,1084 <__alt_data_end+0xff001084>
    1098:	00006dc0 	call	6dc <current_image_valid>
    109c:	10bfffcc 	andi	r2,r2,65535
    10a0:	10a0001c 	xori	r2,r2,32768
    10a4:	10a00004 	addi	r2,r2,-32768
    10a8:	103ff626 	beq	r2,zero,1084 <__alt_data_end+0xff001084>
    10ac:	00007600 	call	760 <DIPSW_get_value>
    10b0:	1021883a 	mov	r16,r2
    10b4:	844001cc 	andi	r17,r16,7
    10b8:	00006f00 	call	6f0 <current_image_pointer>
    10bc:	05800044 	movi	r22,1
    10c0:	102f883a 	mov	r23,r2
    10c4:	8d80a526 	beq	r17,r22,135c <main+0x40c>
    10c8:	88009126 	beq	r17,zero,1310 <main+0x3c0>
    10cc:	00800084 	movi	r2,2
    10d0:	88808326 	beq	r17,r2,12e0 <main+0x390>
    10d4:	008000c4 	movi	r2,3
    10d8:	8880231e 	bne	r17,r2,1168 <main+0x218>
    10dc:	00005a80 	call	5a8 <cam_get_xsize>
    10e0:	1023883a 	mov	r17,r2
    10e4:	00005cc0 	call	5cc <cam_get_ysize>
    10e8:	897fffcc 	andi	r5,r17,65535
    10ec:	280ad07a 	srli	r5,r5,1
    10f0:	11bfffcc 	andi	r6,r2,65535
    10f4:	b809883a 	mov	r4,r23
    10f8:	00007740 	call	774 <conv_grayscale>
    10fc:	00008640 	call	864 <get_grayscale_picture>
    1100:	1009883a 	mov	r4,r2
    1104:	1023883a 	mov	r17,r2
    1108:	00015800 	call	1580 <sobel_x>
    110c:	8809883a 	mov	r4,r17
    1110:	00018f80 	call	18f8 <sobel_y_with_rgb>
    1114:	0001d280 	call	1d28 <GetSobel_rgb>
    1118:	102d883a 	mov	r22,r2
    111c:	00005a80 	call	5a8 <cam_get_xsize>
    1120:	1023883a 	mov	r17,r2
    1124:	00005cc0 	call	5cc <cam_get_ysize>
    1128:	897fffcc 	andi	r5,r17,65535
    112c:	280ad07a 	srli	r5,r5,1
    1130:	84003fcc 	andi	r16,r16,255
    1134:	01204414 	movui	r4,33040
    1138:	8400201c 	xori	r16,r16,128
    113c:	000f883a 	mov	r7,zero
    1140:	11bfffcc 	andi	r6,r2,65535
    1144:	b109883a 	add	r4,r22,r4
    1148:	843fe004 	addi	r16,r16,-128
    114c:	0000ed80 	call	ed8 <transfer_LCD_with_dma>
    1150:	803fcc0e 	bge	r16,zero,1084 <__alt_data_end+0xff001084>
    1154:	01000204 	movi	r4,8
    1158:	0001d480 	call	1d48 <vga_set_swap>
    115c:	b009883a 	mov	r4,r22
    1160:	0001d380 	call	1d38 <vga_set_pointer>
    1164:	003fc706 	br	1084 <__alt_data_end+0xff001084>
    1168:	00108840 	call	10884 <alt_timestamp_start>
    116c:	00108fc0 	call	108fc <alt_timestamp>
    1170:	1023883a 	mov	r17,r2
    1174:	00005a80 	call	5a8 <cam_get_xsize>
    1178:	1039883a 	mov	fp,r2
    117c:	00005cc0 	call	5cc <cam_get_ysize>
    1180:	e17fffcc 	andi	r5,fp,65535
    1184:	280ad07a 	srli	r5,r5,1
    1188:	11bfffcc 	andi	r6,r2,65535
    118c:	b809883a 	mov	r4,r23
    1190:	00007740 	call	774 <conv_grayscale>
    1194:	00008640 	call	864 <get_grayscale_picture>
    1198:	d8800215 	stw	r2,8(sp)
    119c:	00108fc0 	call	108fc <alt_timestamp>
    11a0:	1479c83a 	sub	fp,r2,r17
    11a4:	e54a383a 	mulxuu	r5,fp,r21
    11a8:	01000074 	movhi	r4,1
    11ac:	21085004 	addi	r4,r4,8512
    11b0:	280ad47a 	srli	r5,r5,17
    11b4:	84003fcc 	andi	r16,r16,255
    11b8:	8400201c 	xori	r16,r16,128
    11bc:	00033940 	call	3394 <printf>
    11c0:	00108fc0 	call	108fc <alt_timestamp>
    11c4:	d8c00217 	ldw	r3,8(sp)
    11c8:	01402004 	movi	r5,128
    11cc:	102f883a 	mov	r23,r2
    11d0:	1809883a 	mov	r4,r3
    11d4:	0001b140 	call	1b14 <sobel>
    11d8:	00108fc0 	call	108fc <alt_timestamp>
    11dc:	15e3c83a 	sub	r17,r2,r23
    11e0:	8d4a383a 	mulxuu	r5,r17,r21
    11e4:	01000074 	movhi	r4,1
    11e8:	21085804 	addi	r4,r4,8544
    11ec:	280ad47a 	srli	r5,r5,17
    11f0:	843fe004 	addi	r16,r16,-128
    11f4:	00033940 	call	3394 <printf>
    11f8:	0001d300 	call	1d30 <GetSobelResult>
    11fc:	102f883a 	mov	r23,r2
    1200:	00005a80 	call	5a8 <cam_get_xsize>
    1204:	1007883a 	mov	r3,r2
    1208:	d8c00215 	stw	r3,8(sp)
    120c:	00005cc0 	call	5cc <cam_get_ysize>
    1210:	d8c00217 	ldw	r3,8(sp)
    1214:	b00f883a 	mov	r7,r22
    1218:	11bfffcc 	andi	r6,r2,65535
    121c:	197fffcc 	andi	r5,r3,65535
    1220:	280ad07a 	srli	r5,r5,1
    1224:	b9102204 	addi	r4,r23,16520
    1228:	0000ed80 	call	ed8 <transfer_LCD_with_dma>
    122c:	80006716 	blt	r16,zero,13cc <main+0x47c>
    1230:	e463883a 	add	r17,fp,r17
    1234:	8d60383a 	mulxuu	r16,r17,r21
    1238:	01000074 	movhi	r4,1
    123c:	21086104 	addi	r4,r4,8580
    1240:	8020d47a 	srli	r16,r16,17
    1244:	9cc00044 	addi	r19,r19,1
    1248:	800b883a 	mov	r5,r16
    124c:	00033940 	call	3394 <printf>
    1250:	8809883a 	mov	r4,r17
    1254:	00027840 	call	2784 <__floatunsisf>
    1258:	01130ff4 	movhi	r4,19519
    125c:	100b883a 	mov	r5,r2
    1260:	212f0804 	addi	r4,r4,-17376
    1264:	00022200 	call	2220 <__divsf3>
    1268:	1009883a 	mov	r4,r2
    126c:	a429883a 	add	r20,r20,r16
    1270:	1021883a 	mov	r16,r2
    1274:	00028740 	call	2874 <__extendsfdf2>
    1278:	01000074 	movhi	r4,1
    127c:	100d883a 	mov	r6,r2
    1280:	180f883a 	mov	r7,r3
    1284:	21086804 	addi	r4,r4,8608
    1288:	01400084 	movi	r5,2
    128c:	00033940 	call	3394 <printf>
    1290:	800b883a 	mov	r5,r16
    1294:	9009883a 	mov	r4,r18
    1298:	0001d580 	call	1d58 <__addsf3>
    129c:	9809883a 	mov	r4,r19
    12a0:	1025883a 	mov	r18,r2
    12a4:	00026600 	call	2660 <__floatsisf>
    12a8:	100b883a 	mov	r5,r2
    12ac:	9009883a 	mov	r4,r18
    12b0:	00022200 	call	2220 <__divsf3>
    12b4:	1009883a 	mov	r4,r2
    12b8:	00028740 	call	2874 <__extendsfdf2>
    12bc:	01000074 	movhi	r4,1
    12c0:	21086c04 	addi	r4,r4,8624
    12c4:	dcc00115 	stw	r19,4(sp)
    12c8:	d8c00015 	stw	r3,0(sp)
    12cc:	100f883a 	mov	r7,r2
    12d0:	01800084 	movi	r6,2
    12d4:	a4cb203a 	divu	r5,r20,r19
    12d8:	00033940 	call	3394 <printf>
    12dc:	003f6906 	br	1084 <__alt_data_end+0xff001084>
    12e0:	00005a80 	call	5a8 <cam_get_xsize>
    12e4:	1023883a 	mov	r17,r2
    12e8:	00005cc0 	call	5cc <cam_get_ysize>
    12ec:	897fffcc 	andi	r5,r17,65535
    12f0:	280ad07a 	srli	r5,r5,1
    12f4:	b809883a 	mov	r4,r23
    12f8:	11bfffcc 	andi	r6,r2,65535
    12fc:	00007740 	call	774 <conv_grayscale>
    1300:	00008640 	call	864 <get_grayscale_picture>
    1304:	1009883a 	mov	r4,r2
    1308:	00016800 	call	1680 <sobel_x_with_rgb>
    130c:	003f8106 	br	1114 <__alt_data_end+0xff001114>
    1310:	00005a80 	call	5a8 <cam_get_xsize>
    1314:	1023883a 	mov	r17,r2
    1318:	00005cc0 	call	5cc <cam_get_ysize>
    131c:	897fffcc 	andi	r5,r17,65535
    1320:	280ad07a 	srli	r5,r5,1
    1324:	84003fcc 	andi	r16,r16,255
    1328:	01204414 	movui	r4,33040
    132c:	8400201c 	xori	r16,r16,128
    1330:	000f883a 	mov	r7,zero
    1334:	11bfffcc 	andi	r6,r2,65535
    1338:	b909883a 	add	r4,r23,r4
    133c:	843fe004 	addi	r16,r16,-128
    1340:	0000ed80 	call	ed8 <transfer_LCD_with_dma>
    1344:	803f4f0e 	bge	r16,zero,1084 <__alt_data_end+0xff001084>
    1348:	01000204 	movi	r4,8
    134c:	0001d480 	call	1d48 <vga_set_swap>
    1350:	b809883a 	mov	r4,r23
    1354:	0001d380 	call	1d38 <vga_set_pointer>
    1358:	003f4a06 	br	1084 <__alt_data_end+0xff001084>
    135c:	00005a80 	call	5a8 <cam_get_xsize>
    1360:	102d883a 	mov	r22,r2
    1364:	00005cc0 	call	5cc <cam_get_ysize>
    1368:	b17fffcc 	andi	r5,r22,65535
    136c:	280ad07a 	srli	r5,r5,1
    1370:	b809883a 	mov	r4,r23
    1374:	11bfffcc 	andi	r6,r2,65535
    1378:	00007740 	call	774 <conv_grayscale>
    137c:	00008640 	call	864 <get_grayscale_picture>
    1380:	102f883a 	mov	r23,r2
    1384:	00005a80 	call	5a8 <cam_get_xsize>
    1388:	102d883a 	mov	r22,r2
    138c:	00005cc0 	call	5cc <cam_get_ysize>
    1390:	b17fffcc 	andi	r5,r22,65535
    1394:	280ad07a 	srli	r5,r5,1
    1398:	84003fcc 	andi	r16,r16,255
    139c:	8400201c 	xori	r16,r16,128
    13a0:	880f883a 	mov	r7,r17
    13a4:	11bfffcc 	andi	r6,r2,65535
    13a8:	b9102204 	addi	r4,r23,16520
    13ac:	843fe004 	addi	r16,r16,-128
    13b0:	0000ed80 	call	ed8 <transfer_LCD_with_dma>
    13b4:	803f330e 	bge	r16,zero,1084 <__alt_data_end+0xff001084>
    13b8:	01000604 	movi	r4,24
    13bc:	0001d480 	call	1d48 <vga_set_swap>
    13c0:	b809883a 	mov	r4,r23
    13c4:	0001d380 	call	1d38 <vga_set_pointer>
    13c8:	003f2e06 	br	1084 <__alt_data_end+0xff001084>
    13cc:	01000604 	movi	r4,24
    13d0:	0001d480 	call	1d48 <vga_set_swap>
    13d4:	b809883a 	mov	r4,r23
    13d8:	0001d380 	call	1d38 <vga_set_pointer>
    13dc:	003f9406 	br	1230 <__alt_data_end+0xff001230>

000013e0 <init_sobel_arrays>:
    13e0:	d0a6d217 	ldw	r2,-25784(gp)
    13e4:	defffd04 	addi	sp,sp,-12
    13e8:	dc400115 	stw	r17,4(sp)
    13ec:	dc000015 	stw	r16,0(sp)
    13f0:	dfc00215 	stw	ra,8(sp)
    13f4:	d126cf15 	stw	r4,-25796(gp)
    13f8:	d166d115 	stw	r5,-25788(gp)
    13fc:	2023883a 	mov	r17,r4
    1400:	2821883a 	mov	r16,r5
    1404:	10000226 	beq	r2,zero,1410 <init_sobel_arrays+0x30>
    1408:	1009883a 	mov	r4,r2
    140c:	00029fc0 	call	29fc <free>
    1410:	8c21383a 	mul	r16,r17,r16
    1414:	8423883a 	add	r17,r16,r16
    1418:	8809883a 	mov	r4,r17
    141c:	00029e80 	call	29e8 <malloc>
    1420:	d126d317 	ldw	r4,-25780(gp)
    1424:	d0a6d215 	stw	r2,-25784(gp)
    1428:	20000126 	beq	r4,zero,1430 <init_sobel_arrays+0x50>
    142c:	00029fc0 	call	29fc <free>
    1430:	8809883a 	mov	r4,r17
    1434:	00029e80 	call	29e8 <malloc>
    1438:	d126d017 	ldw	r4,-25792(gp)
    143c:	d0a6d315 	stw	r2,-25780(gp)
    1440:	20000126 	beq	r4,zero,1448 <init_sobel_arrays+0x68>
    1444:	00029fc0 	call	29fc <free>
    1448:	8009883a 	mov	r4,r16
    144c:	00029e80 	call	29e8 <malloc>
    1450:	d126d417 	ldw	r4,-25776(gp)
    1454:	d0a6d015 	stw	r2,-25792(gp)
    1458:	20000126 	beq	r4,zero,1460 <init_sobel_arrays+0x80>
    145c:	00029fc0 	call	29fc <free>
    1460:	8809883a 	mov	r4,r17
    1464:	00029e80 	call	29e8 <malloc>
    1468:	d0a6d415 	stw	r2,-25776(gp)
    146c:	0005883a 	mov	r2,zero
    1470:	04000f0e 	bge	zero,r16,14b0 <init_sobel_arrays+0xd0>
    1474:	d226d217 	ldw	r8,-25784(gp)
    1478:	d1e6d317 	ldw	r7,-25780(gp)
    147c:	d1a6d017 	ldw	r6,-25792(gp)
    1480:	1087883a 	add	r3,r2,r2
    1484:	40d1883a 	add	r8,r8,r3
    1488:	4000000d 	sth	zero,0(r8)
    148c:	38cf883a 	add	r7,r7,r3
    1490:	308d883a 	add	r6,r6,r2
    1494:	3800000d 	sth	zero,0(r7)
    1498:	30000005 	stb	zero,0(r6)
    149c:	d1a6d417 	ldw	r6,-25776(gp)
    14a0:	10800044 	addi	r2,r2,1
    14a4:	30c7883a 	add	r3,r6,r3
    14a8:	1800000d 	sth	zero,0(r3)
    14ac:	80bff11e 	bne	r16,r2,1474 <__alt_data_end+0xff001474>
    14b0:	dfc00217 	ldw	ra,8(sp)
    14b4:	dc400117 	ldw	r17,4(sp)
    14b8:	dc000017 	ldw	r16,0(sp)
    14bc:	dec00304 	addi	sp,sp,12
    14c0:	f800283a 	ret

000014c4 <sobel_mac>:
    14c4:	da800017 	ldw	r10,0(sp)
    14c8:	31bfffc4 	addi	r6,r6,-1
    14cc:	38c00047 	ldb	r3,1(r7)
    14d0:	328d383a 	mul	r6,r6,r10
    14d4:	3b8000c7 	ldb	r14,3(r7)
    14d8:	3a000107 	ldb	r8,4(r7)
    14dc:	5185883a 	add	r2,r10,r6
    14e0:	2893883a 	add	r9,r5,r2
    14e4:	314d883a 	add	r6,r6,r5
    14e8:	218d883a 	add	r6,r4,r6
    14ec:	2253883a 	add	r9,r4,r9
    14f0:	33000003 	ldbu	r12,0(r6)
    14f4:	5095883a 	add	r10,r10,r2
    14f8:	48bfffc3 	ldbu	r2,-1(r9)
    14fc:	5155883a 	add	r10,r10,r5
    1500:	4ac00003 	ldbu	r11,0(r9)
    1504:	229b883a 	add	r13,r4,r10
    1508:	49000043 	ldbu	r4,1(r9)
    150c:	3a800147 	ldb	r10,5(r7)
    1510:	139d383a 	mul	r14,r2,r14
    1514:	60d9383a 	mul	r12,r12,r3
    1518:	68800003 	ldbu	r2,0(r13)
    151c:	38c001c7 	ldb	r3,7(r7)
    1520:	5a17383a 	mul	r11,r11,r8
    1524:	33ffffc3 	ldbu	r15,-1(r6)
    1528:	3a000007 	ldb	r8,0(r7)
    152c:	2295383a 	mul	r10,r4,r10
    1530:	31000043 	ldbu	r4,1(r6)
    1534:	39800087 	ldb	r6,2(r7)
    1538:	730b883a 	add	r5,r14,r12
    153c:	10d3383a 	mul	r9,r2,r3
    1540:	6b3fffc3 	ldbu	r12,-1(r13)
    1544:	38c00187 	ldb	r3,6(r7)
    1548:	2acb883a 	add	r5,r5,r11
    154c:	7a11383a 	mul	r8,r15,r8
    1550:	6ac00043 	ldbu	r11,1(r13)
    1554:	39c00207 	ldb	r7,8(r7)
    1558:	2a8b883a 	add	r5,r5,r10
    155c:	2189383a 	mul	r4,r4,r6
    1560:	2a45883a 	add	r2,r5,r9
    1564:	60c7383a 	mul	r3,r12,r3
    1568:	1205883a 	add	r2,r2,r8
    156c:	59cb383a 	mul	r5,r11,r7
    1570:	1105883a 	add	r2,r2,r4
    1574:	10c5883a 	add	r2,r2,r3
    1578:	1145883a 	add	r2,r2,r5
    157c:	f800283a 	ret

00001580 <sobel_x>:
    1580:	defff904 	addi	sp,sp,-28
    1584:	dc400115 	stw	r17,4(sp)
    1588:	d466d117 	ldw	r17,-25788(gp)
    158c:	dc000015 	stw	r16,0(sp)
    1590:	dfc00615 	stw	ra,24(sp)
    1594:	dd400515 	stw	r21,20(sp)
    1598:	dd000415 	stw	r20,16(sp)
    159c:	dcc00315 	stw	r19,12(sp)
    15a0:	dc800215 	stw	r18,8(sp)
    15a4:	04000084 	movi	r16,2
    15a8:	84402c0e 	bge	r16,r17,165c <sobel_x+0xdc>
    15ac:	d366cf17 	ldw	r13,-25796(gp)
    15b0:	d3a6d217 	ldw	r14,-25784(gp)
    15b4:	8c7fffc4 	addi	r17,r17,-1
    15b8:	6b65883a 	add	r18,r13,r13
    15bc:	9405883a 	add	r2,r18,r16
    15c0:	2499883a 	add	r12,r4,r18
    15c4:	709d883a 	add	r14,r14,r2
    15c8:	03c00044 	movi	r15,1
    15cc:	6c27883a 	add	r19,r13,r16
    15d0:	693f883a 	add	ra,r13,r4
    15d4:	83401c0e 	bge	r16,r13,1648 <sobel_x+0xc8>
    15d8:	f817883a 	mov	r11,ra
    15dc:	22800084 	addi	r10,r4,2
    15e0:	990d883a 	add	r6,r19,r4
    15e4:	62400084 	addi	r9,r12,2
    15e8:	7011883a 	mov	r8,r14
    15ec:	600f883a 	mov	r7,r12
    15f0:	4d000003 	ldbu	r20,0(r9)
    15f4:	50c00003 	ldbu	r3,0(r10)
    15f8:	59400003 	ldbu	r5,0(r11)
    15fc:	30800003 	ldbu	r2,0(r6)
    1600:	1d07883a 	add	r3,r3,r20
    1604:	25400003 	ldbu	r21,0(r4)
    1608:	1947c83a 	sub	r3,r3,r5
    160c:	3d000003 	ldbu	r20,0(r7)
    1610:	194bc83a 	sub	r5,r3,r5
    1614:	1087883a 	add	r3,r2,r2
    1618:	28c7883a 	add	r3,r5,r3
    161c:	1d45c83a 	sub	r2,r3,r21
    1620:	1505c83a 	sub	r2,r2,r20
    1624:	4080000d 	sth	r2,0(r8)
    1628:	31800044 	addi	r6,r6,1
    162c:	21000044 	addi	r4,r4,1
    1630:	5ac00044 	addi	r11,r11,1
    1634:	52800044 	addi	r10,r10,1
    1638:	39c00044 	addi	r7,r7,1
    163c:	4a400044 	addi	r9,r9,1
    1640:	42000084 	addi	r8,r8,2
    1644:	61bfea1e 	bne	r12,r6,15f0 <__alt_data_end+0xff0015f0>
    1648:	7bc00044 	addi	r15,r15,1
    164c:	f809883a 	mov	r4,ra
    1650:	6359883a 	add	r12,r12,r13
    1654:	749d883a 	add	r14,r14,r18
    1658:	7c7fdd1e 	bne	r15,r17,15d0 <__alt_data_end+0xff0015d0>
    165c:	dfc00617 	ldw	ra,24(sp)
    1660:	dd400517 	ldw	r21,20(sp)
    1664:	dd000417 	ldw	r20,16(sp)
    1668:	dcc00317 	ldw	r19,12(sp)
    166c:	dc800217 	ldw	r18,8(sp)
    1670:	dc400117 	ldw	r17,4(sp)
    1674:	dc000017 	ldw	r16,0(sp)
    1678:	dec00704 	addi	sp,sp,28
    167c:	f800283a 	ret

00001680 <sobel_x_with_rgb>:
    1680:	defff504 	addi	sp,sp,-44
    1684:	dd800715 	stw	r22,28(sp)
    1688:	d5a6d117 	ldw	r22,-25788(gp)
    168c:	dfc00a15 	stw	ra,40(sp)
    1690:	df000915 	stw	fp,36(sp)
    1694:	ddc00815 	stw	r23,32(sp)
    1698:	dd400615 	stw	r21,24(sp)
    169c:	dd000515 	stw	r20,20(sp)
    16a0:	dcc00415 	stw	r19,16(sp)
    16a4:	dc800315 	stw	r18,12(sp)
    16a8:	dc400215 	stw	r17,8(sp)
    16ac:	dc000115 	stw	r16,4(sp)
    16b0:	b5bfffc4 	addi	r22,r22,-1
    16b4:	00800044 	movi	r2,1
    16b8:	1580440e 	bge	r2,r22,17cc <sobel_x_with_rgb+0x14c>
    16bc:	d7e6cf17 	ldw	ra,-25796(gp)
    16c0:	d4a6d217 	ldw	r18,-25784(gp)
    16c4:	d466d417 	ldw	r17,-25776(gp)
    16c8:	ffe9883a 	add	r20,ra,ra
    16cc:	a0800084 	addi	r2,r20,2
    16d0:	04000084 	movi	r16,2
    16d4:	90a5883a 	add	r18,r18,r2
    16d8:	88a3883a 	add	r17,r17,r2
    16dc:	fc05883a 	add	r2,ra,r16
    16e0:	27df883a 	add	r15,r4,ra
    16e4:	802f883a 	mov	r23,r16
    16e8:	87f9c83a 	sub	fp,r16,ra
    16ec:	d8800015 	stw	r2,0(sp)
    16f0:	bfc02f0e 	bge	r23,ra,17b0 <sobel_x_with_rgb+0x130>
    16f4:	d8800017 	ldw	r2,0(sp)
    16f8:	7fe7883a 	add	r19,r15,ra
    16fc:	802b883a 	mov	r21,r16
    1700:	7fdbc83a 	sub	r13,r15,ra
    1704:	e3cf883a 	add	r7,fp,r15
    1708:	7b000084 	addi	r12,r15,2
    170c:	9817883a 	mov	r11,r19
    1710:	13d5883a 	add	r10,r2,r15
    1714:	881d883a 	mov	r14,r17
    1718:	9013883a 	mov	r9,r18
    171c:	7811883a 	mov	r8,r15
    1720:	00000b06 	br	1750 <sobel_x_with_rgb+0xd0>
    1724:	180692fa 	slli	r3,r3,11
    1728:	70c0000d 	sth	r3,0(r14)
    172c:	39c00044 	addi	r7,r7,1
    1730:	6b400044 	addi	r13,r13,1
    1734:	42000044 	addi	r8,r8,1
    1738:	63000044 	addi	r12,r12,1
    173c:	5ac00044 	addi	r11,r11,1
    1740:	52800044 	addi	r10,r10,1
    1744:	4a400084 	addi	r9,r9,2
    1748:	73800084 	addi	r14,r14,2
    174c:	79c01a26 	beq	r15,r7,17b8 <sobel_x_with_rgb+0x138>
    1750:	50800003 	ldbu	r2,0(r10)
    1754:	39400003 	ldbu	r5,0(r7)
    1758:	41800003 	ldbu	r6,0(r8)
    175c:	60c00003 	ldbu	r3,0(r12)
    1760:	288b883a 	add	r5,r5,r2
    1764:	298bc83a 	sub	r5,r5,r6
    1768:	68800003 	ldbu	r2,0(r13)
    176c:	59000003 	ldbu	r4,0(r11)
    1770:	298bc83a 	sub	r5,r5,r6
    1774:	18c7883a 	add	r3,r3,r3
    1778:	28c7883a 	add	r3,r5,r3
    177c:	1887c83a 	sub	r3,r3,r2
    1780:	1905c83a 	sub	r2,r3,r4
    1784:	4880000d 	sth	r2,0(r9)
    1788:	10bfffcc 	andi	r2,r2,65535
    178c:	10a0001c 	xori	r2,r2,32768
    1790:	10a00004 	addi	r2,r2,-32768
    1794:	1007d0fa 	srai	r3,r2,3
    1798:	103fe20e 	bge	r2,zero,1724 <__alt_data_end+0xff001724>
    179c:	0085c83a 	sub	r2,zero,r2
    17a0:	1005d0ba 	srai	r2,r2,2
    17a4:	1004917a 	slli	r2,r2,5
    17a8:	7080000d 	sth	r2,0(r14)
    17ac:	003fdf06 	br	172c <__alt_data_end+0xff00172c>
    17b0:	802b883a 	mov	r21,r16
    17b4:	7fe7883a 	add	r19,r15,ra
    17b8:	84000044 	addi	r16,r16,1
    17bc:	981f883a 	mov	r15,r19
    17c0:	9525883a 	add	r18,r18,r20
    17c4:	8d23883a 	add	r17,r17,r20
    17c8:	adbfc916 	blt	r21,r22,16f0 <__alt_data_end+0xff0016f0>
    17cc:	dfc00a17 	ldw	ra,40(sp)
    17d0:	df000917 	ldw	fp,36(sp)
    17d4:	ddc00817 	ldw	r23,32(sp)
    17d8:	dd800717 	ldw	r22,28(sp)
    17dc:	dd400617 	ldw	r21,24(sp)
    17e0:	dd000517 	ldw	r20,20(sp)
    17e4:	dcc00417 	ldw	r19,16(sp)
    17e8:	dc800317 	ldw	r18,12(sp)
    17ec:	dc400217 	ldw	r17,8(sp)
    17f0:	dc000117 	ldw	r16,4(sp)
    17f4:	dec00b04 	addi	sp,sp,44
    17f8:	f800283a 	ret

000017fc <sobel_y>:
    17fc:	defff904 	addi	sp,sp,-28
    1800:	dc800215 	stw	r18,8(sp)
    1804:	d4a6d117 	ldw	r18,-25788(gp)
    1808:	dc400115 	stw	r17,4(sp)
    180c:	dfc00615 	stw	ra,24(sp)
    1810:	dd400515 	stw	r21,20(sp)
    1814:	dd000415 	stw	r20,16(sp)
    1818:	dcc00315 	stw	r19,12(sp)
    181c:	dc000015 	stw	r16,0(sp)
    1820:	04400084 	movi	r17,2
    1824:	8c802b0e 	bge	r17,r18,18d4 <sobel_y+0xd8>
    1828:	d3e6cf17 	ldw	r15,-25796(gp)
    182c:	d3a6d317 	ldw	r14,-25780(gp)
    1830:	07c00044 	movi	ra,1
    1834:	7be1883a 	add	r16,r15,r15
    1838:	8467883a 	add	r19,r16,r17
    183c:	74dd883a 	add	r14,r14,r19
    1840:	94bfffc4 	addi	r18,r18,-1
    1844:	87e9883a 	add	r20,r16,ra
    1848:	8bc01e0e 	bge	r17,r15,18c4 <sobel_y+0xc8>
    184c:	810f883a 	add	r7,r16,r4
    1850:	23000044 	addi	r12,r4,1
    1854:	21800084 	addi	r6,r4,2
    1858:	a117883a 	add	r11,r20,r4
    185c:	9915883a 	add	r10,r19,r4
    1860:	3bdbc83a 	sub	r13,r7,r15
    1864:	7013883a 	mov	r9,r14
    1868:	2011883a 	mov	r8,r4
    186c:	31400003 	ldbu	r5,0(r6)
    1870:	60800003 	ldbu	r2,0(r12)
    1874:	40c00003 	ldbu	r3,0(r8)
    1878:	5d400003 	ldbu	r21,0(r11)
    187c:	31800044 	addi	r6,r6,1
    1880:	1947883a 	add	r3,r3,r5
    1884:	108b883a 	add	r5,r2,r2
    1888:	1947883a 	add	r3,r3,r5
    188c:	38800003 	ldbu	r2,0(r7)
    1890:	51400003 	ldbu	r5,0(r10)
    1894:	1d47c83a 	sub	r3,r3,r21
    1898:	1d47c83a 	sub	r3,r3,r21
    189c:	1885c83a 	sub	r2,r3,r2
    18a0:	1145c83a 	sub	r2,r2,r5
    18a4:	4880000d 	sth	r2,0(r9)
    18a8:	42000044 	addi	r8,r8,1
    18ac:	63000044 	addi	r12,r12,1
    18b0:	5ac00044 	addi	r11,r11,1
    18b4:	39c00044 	addi	r7,r7,1
    18b8:	52800044 	addi	r10,r10,1
    18bc:	4a400084 	addi	r9,r9,2
    18c0:	69bfea1e 	bne	r13,r6,186c <__alt_data_end+0xff00186c>
    18c4:	ffc00044 	addi	ra,ra,1
    18c8:	23c9883a 	add	r4,r4,r15
    18cc:	741d883a 	add	r14,r14,r16
    18d0:	97ffdd1e 	bne	r18,ra,1848 <__alt_data_end+0xff001848>
    18d4:	dfc00617 	ldw	ra,24(sp)
    18d8:	dd400517 	ldw	r21,20(sp)
    18dc:	dd000417 	ldw	r20,16(sp)
    18e0:	dcc00317 	ldw	r19,12(sp)
    18e4:	dc800217 	ldw	r18,8(sp)
    18e8:	dc400117 	ldw	r17,4(sp)
    18ec:	dc000017 	ldw	r16,0(sp)
    18f0:	dec00704 	addi	sp,sp,28
    18f4:	f800283a 	ret

000018f8 <sobel_y_with_rgb>:
    18f8:	defff604 	addi	sp,sp,-40
    18fc:	dcc00315 	stw	r19,12(sp)
    1900:	d4e6d117 	ldw	r19,-25788(gp)
    1904:	dfc00915 	stw	ra,36(sp)
    1908:	df000815 	stw	fp,32(sp)
    190c:	ddc00715 	stw	r23,28(sp)
    1910:	dd800615 	stw	r22,24(sp)
    1914:	dd400515 	stw	r21,20(sp)
    1918:	dd000415 	stw	r20,16(sp)
    191c:	dc800215 	stw	r18,8(sp)
    1920:	dc400115 	stw	r17,4(sp)
    1924:	dc000015 	stw	r16,0(sp)
    1928:	9cffffc4 	addi	r19,r19,-1
    192c:	00800044 	movi	r2,1
    1930:	14c03f0e 	bge	r2,r19,1a30 <sobel_y_with_rgb+0x138>
    1934:	d466cf17 	ldw	r17,-25796(gp)
    1938:	d426d317 	ldw	r16,-25780(gp)
    193c:	d7e6d417 	ldw	ra,-25776(gp)
    1940:	8c5d883a 	add	r14,r17,r17
    1944:	75000084 	addi	r20,r14,2
    1948:	03c00084 	movi	r15,2
    194c:	8521883a 	add	r16,r16,r20
    1950:	fd3f883a 	add	ra,ra,r20
    1954:	782b883a 	mov	r21,r15
    1958:	70ad883a 	add	r22,r14,r2
    195c:	7825883a 	mov	r18,r15
    1960:	ac402e0e 	bge	r21,r17,1a1c <sobel_y_with_rgb+0x124>
    1964:	238d883a 	add	r6,r4,r14
    1968:	7825883a 	mov	r18,r15
    196c:	22c00044 	addi	r11,r4,1
    1970:	22800084 	addi	r10,r4,2
    1974:	b113883a 	add	r9,r22,r4
    1978:	a10b883a 	add	r5,r20,r4
    197c:	899b883a 	add	r13,r17,r6
    1980:	f819883a 	mov	r12,ra
    1984:	8011883a 	mov	r8,r16
    1988:	200f883a 	mov	r7,r4
    198c:	00000b06 	br	19bc <sobel_y_with_rgb+0xc4>
    1990:	180692fa 	slli	r3,r3,11
    1994:	60c0000d 	sth	r3,0(r12)
    1998:	29400044 	addi	r5,r5,1
    199c:	39c00044 	addi	r7,r7,1
    19a0:	5ac00044 	addi	r11,r11,1
    19a4:	52800044 	addi	r10,r10,1
    19a8:	31800044 	addi	r6,r6,1
    19ac:	4a400044 	addi	r9,r9,1
    19b0:	42000084 	addi	r8,r8,2
    19b4:	63000084 	addi	r12,r12,2
    19b8:	69401826 	beq	r13,r5,1a1c <sobel_y_with_rgb+0x124>
    19bc:	50800003 	ldbu	r2,0(r10)
    19c0:	3f000003 	ldbu	fp,0(r7)
    19c4:	58c00003 	ldbu	r3,0(r11)
    19c8:	4dc00003 	ldbu	r23,0(r9)
    19cc:	e0b9883a 	add	fp,fp,r2
    19d0:	18c7883a 	add	r3,r3,r3
    19d4:	30800003 	ldbu	r2,0(r6)
    19d8:	e0c7883a 	add	r3,fp,r3
    19dc:	1dc7c83a 	sub	r3,r3,r23
    19e0:	2f000003 	ldbu	fp,0(r5)
    19e4:	1dc7c83a 	sub	r3,r3,r23
    19e8:	1885c83a 	sub	r2,r3,r2
    19ec:	1705c83a 	sub	r2,r2,fp
    19f0:	4080000d 	sth	r2,0(r8)
    19f4:	10bfffcc 	andi	r2,r2,65535
    19f8:	10a0001c 	xori	r2,r2,32768
    19fc:	10a00004 	addi	r2,r2,-32768
    1a00:	1007d0fa 	srai	r3,r2,3
    1a04:	103fe20e 	bge	r2,zero,1990 <__alt_data_end+0xff001990>
    1a08:	0085c83a 	sub	r2,zero,r2
    1a0c:	1005d0ba 	srai	r2,r2,2
    1a10:	1004917a 	slli	r2,r2,5
    1a14:	6080000d 	sth	r2,0(r12)
    1a18:	003fdf06 	br	1998 <__alt_data_end+0xff001998>
    1a1c:	7bc00044 	addi	r15,r15,1
    1a20:	2449883a 	add	r4,r4,r17
    1a24:	83a1883a 	add	r16,r16,r14
    1a28:	fbbf883a 	add	ra,ra,r14
    1a2c:	94ffcb16 	blt	r18,r19,195c <__alt_data_end+0xff00195c>
    1a30:	dfc00917 	ldw	ra,36(sp)
    1a34:	df000817 	ldw	fp,32(sp)
    1a38:	ddc00717 	ldw	r23,28(sp)
    1a3c:	dd800617 	ldw	r22,24(sp)
    1a40:	dd400517 	ldw	r21,20(sp)
    1a44:	dd000417 	ldw	r20,16(sp)
    1a48:	dcc00317 	ldw	r19,12(sp)
    1a4c:	dc800217 	ldw	r18,8(sp)
    1a50:	dc400117 	ldw	r17,4(sp)
    1a54:	dc000017 	ldw	r16,0(sp)
    1a58:	dec00a04 	addi	sp,sp,40
    1a5c:	f800283a 	ret

00001a60 <sobel_threshold>:
    1a60:	d0a6d117 	ldw	r2,-25788(gp)
    1a64:	02400084 	movi	r9,2
    1a68:	4880290e 	bge	r9,r2,1b10 <sobel_threshold+0xb0>
    1a6c:	223fffcc 	andi	r8,r4,65535
    1a70:	d0e6cf17 	ldw	r3,-25796(gp)
    1a74:	4220001c 	xori	r8,r8,32768
    1a78:	01c00044 	movi	r7,1
    1a7c:	42200004 	addi	r8,r8,-32768
    1a80:	48c0200e 	bge	r9,r3,1b04 <sobel_threshold+0xa4>
    1a84:	01400044 	movi	r5,1
    1a88:	00000c06 	br	1abc <sobel_threshold+0x5c>
    1a8c:	2080000f 	ldh	r2,0(r4)
    1a90:	10001916 	blt	r2,zero,1af8 <sobel_threshold+0x98>
    1a94:	3085883a 	add	r2,r6,r2
    1a98:	10bfffcc 	andi	r2,r2,65535
    1a9c:	10a0001c 	xori	r2,r2,32768
    1aa0:	10a00004 	addi	r2,r2,-32768
    1aa4:	4084803a 	cmplt	r2,r8,r2
    1aa8:	0085c83a 	sub	r2,zero,r2
    1aac:	18800005 	stb	r2,0(r3)
    1ab0:	d0e6cf17 	ldw	r3,-25796(gp)
    1ab4:	18bfffc4 	addi	r2,r3,-1
    1ab8:	2880110e 	bge	r5,r2,1b00 <sobel_threshold+0xa0>
    1abc:	38c7383a 	mul	r3,r7,r3
    1ac0:	d1a6d317 	ldw	r6,-25780(gp)
    1ac4:	d126d217 	ldw	r4,-25784(gp)
    1ac8:	1947883a 	add	r3,r3,r5
    1acc:	18c5883a 	add	r2,r3,r3
    1ad0:	308d883a 	add	r6,r6,r2
    1ad4:	2089883a 	add	r4,r4,r2
    1ad8:	3180000f 	ldh	r6,0(r6)
    1adc:	d0a6d017 	ldw	r2,-25792(gp)
    1ae0:	29400044 	addi	r5,r5,1
    1ae4:	10c7883a 	add	r3,r2,r3
    1ae8:	303fe80e 	bge	r6,zero,1a8c <__alt_data_end+0xff001a8c>
    1aec:	2080000f 	ldh	r2,0(r4)
    1af0:	018dc83a 	sub	r6,zero,r6
    1af4:	103fe70e 	bge	r2,zero,1a94 <__alt_data_end+0xff001a94>
    1af8:	0085c83a 	sub	r2,zero,r2
    1afc:	003fe506 	br	1a94 <__alt_data_end+0xff001a94>
    1b00:	d0a6d117 	ldw	r2,-25788(gp)
    1b04:	39c00044 	addi	r7,r7,1
    1b08:	113fffc4 	addi	r4,r2,-1
    1b0c:	393fdc16 	blt	r7,r4,1a80 <__alt_data_end+0xff001a80>
    1b10:	f800283a 	ret

00001b14 <sobel>:
    1b14:	d0a6d117 	ldw	r2,-25788(gp)
    1b18:	defff504 	addi	sp,sp,-44
    1b1c:	df000915 	stw	fp,36(sp)
    1b20:	dc400215 	stw	r17,8(sp)
    1b24:	dfc00a15 	stw	ra,40(sp)
    1b28:	ddc00815 	stw	r23,32(sp)
    1b2c:	dd800715 	stw	r22,28(sp)
    1b30:	dd400615 	stw	r21,24(sp)
    1b34:	dd000515 	stw	r20,20(sp)
    1b38:	dcc00415 	stw	r19,16(sp)
    1b3c:	dc800315 	stw	r18,12(sp)
    1b40:	dc000115 	stw	r16,4(sp)
    1b44:	04400084 	movi	r17,2
    1b48:	df000904 	addi	fp,sp,36
    1b4c:	8880690e 	bge	r17,r2,1cf4 <sobel+0x1e0>
    1b50:	2cffffcc 	andi	r19,r5,65535
    1b54:	9ce0001c 	xori	r19,r19,32768
    1b58:	2021883a 	mov	r16,r4
    1b5c:	04800044 	movi	r18,1
    1b60:	9ce00004 	addi	r19,r19,-32768
    1b64:	d526cf17 	ldw	r20,-25796(gp)
    1b68:	917fffc4 	addi	r5,r18,-1
    1b6c:	e6fff715 	stw	sp,-36(fp)
    1b70:	a08000c4 	addi	r2,r20,3
    1b74:	1004d0ba 	srli	r2,r2,2
    1b78:	2d0b383a 	mul	r5,r5,r20
    1b7c:	a4af383a 	mul	r23,r20,r18
    1b80:	1085883a 	add	r2,r2,r2
    1b84:	1085883a 	add	r2,r2,r2
    1b88:	d8b7c83a 	sub	sp,sp,r2
    1b8c:	d823883a 	mov	r17,sp
    1b90:	d8b7c83a 	sub	sp,sp,r2
    1b94:	d82d883a 	mov	r22,sp
    1b98:	a00d883a 	mov	r6,r20
    1b9c:	d8b7c83a 	sub	sp,sp,r2
    1ba0:	814b883a 	add	r5,r16,r5
    1ba4:	8809883a 	mov	r4,r17
    1ba8:	000321c0 	call	321c <memcpy>
    1bac:	a00d883a 	mov	r6,r20
    1bb0:	85cb883a 	add	r5,r16,r23
    1bb4:	b009883a 	mov	r4,r22
    1bb8:	000321c0 	call	321c <memcpy>
    1bbc:	a5cb883a 	add	r5,r20,r23
    1bc0:	a00d883a 	mov	r6,r20
    1bc4:	814b883a 	add	r5,r16,r5
    1bc8:	d809883a 	mov	r4,sp
    1bcc:	000321c0 	call	321c <memcpy>
    1bd0:	00800084 	movi	r2,2
    1bd4:	95400044 	addi	r21,r18,1
    1bd8:	1500410e 	bge	r2,r20,1ce0 <sobel+0x1cc>
    1bdc:	8809883a 	mov	r4,r17
    1be0:	b011883a 	mov	r8,r22
    1be4:	8b800044 	addi	r14,r17,1
    1be8:	8b400084 	addi	r13,r17,2
    1bec:	b3000084 	addi	r12,r22,2
    1bf0:	dac00044 	addi	r11,sp,1
    1bf4:	d815883a 	mov	r10,sp
    1bf8:	da400084 	addi	r9,sp,2
    1bfc:	01c00044 	movi	r7,1
    1c00:	00001c06 	br	1c74 <sobel+0x160>
    1c04:	71400003 	ldbu	r5,0(r14)
    1c08:	58800003 	ldbu	r2,0(r11)
    1c0c:	294b883a 	add	r5,r5,r5
    1c10:	2fcb883a 	add	r5,r5,ra
    1c14:	288bc83a 	sub	r5,r5,r2
    1c18:	288bc83a 	sub	r5,r5,r2
    1c1c:	28c7c83a 	sub	r3,r5,r3
    1c20:	1d87c83a 	sub	r3,r3,r22
    1c24:	18bfffcc 	andi	r2,r3,65535
    1c28:	10a0001c 	xori	r2,r2,32768
    1c2c:	10a00004 	addi	r2,r2,-32768
    1c30:	10002916 	blt	r2,zero,1cd8 <sobel+0x1c4>
    1c34:	7885883a 	add	r2,r15,r2
    1c38:	10bfffcc 	andi	r2,r2,65535
    1c3c:	14c5c032 	custom	0,r2,r2,r19
    1c40:	30800005 	stb	r2,0(r6)
    1c44:	d526cf17 	ldw	r20,-25796(gp)
    1c48:	21000044 	addi	r4,r4,1
    1c4c:	73800044 	addi	r14,r14,1
    1c50:	a0bfffc4 	addi	r2,r20,-1
    1c54:	42000044 	addi	r8,r8,1
    1c58:	6b400044 	addi	r13,r13,1
    1c5c:	63000044 	addi	r12,r12,1
    1c60:	5ac00044 	addi	r11,r11,1
    1c64:	52800044 	addi	r10,r10,1
    1c68:	4a400044 	addi	r9,r9,1
    1c6c:	38801c0e 	bge	r7,r2,1ce0 <sobel+0x1cc>
    1c70:	a4af383a 	mul	r23,r20,r18
    1c74:	40800003 	ldbu	r2,0(r8)
    1c78:	6fc00003 	ldbu	ra,0(r13)
    1c7c:	4d800003 	ldbu	r22,0(r9)
    1c80:	61800003 	ldbu	r6,0(r12)
    1c84:	0085c83a 	sub	r2,zero,r2
    1c88:	23c00003 	ldbu	r15,0(r4)
    1c8c:	fd8b883a 	add	r5,ra,r22
    1c90:	1085883a 	add	r2,r2,r2
    1c94:	1145883a 	add	r2,r2,r5
    1c98:	50c00003 	ldbu	r3,0(r10)
    1c9c:	318d883a 	add	r6,r6,r6
    1ca0:	118d883a 	add	r6,r2,r6
    1ca4:	33c5c83a 	sub	r2,r6,r15
    1ca8:	10c5c83a 	sub	r2,r2,r3
    1cac:	7fff883a 	add	ra,r15,ra
    1cb0:	d1a6d017 	ldw	r6,-25792(gp)
    1cb4:	13ffffcc 	andi	r15,r2,65535
    1cb8:	7be0001c 	xori	r15,r15,32768
    1cbc:	b9ef883a 	add	r23,r23,r7
    1cc0:	7be00004 	addi	r15,r15,-32768
    1cc4:	35cd883a 	add	r6,r6,r23
    1cc8:	39c00044 	addi	r7,r7,1
    1ccc:	783fcd0e 	bge	r15,zero,1c04 <__alt_data_end+0xff001c04>
    1cd0:	03dfc83a 	sub	r15,zero,r15
    1cd4:	003fcb06 	br	1c04 <__alt_data_end+0xff001c04>
    1cd8:	0085c83a 	sub	r2,zero,r2
    1cdc:	003fd506 	br	1c34 <__alt_data_end+0xff001c34>
    1ce0:	d0a6d117 	ldw	r2,-25788(gp)
    1ce4:	a825883a 	mov	r18,r21
    1ce8:	e6fff717 	ldw	sp,-36(fp)
    1cec:	10bfffc4 	addi	r2,r2,-1
    1cf0:	a8bf9c16 	blt	r21,r2,1b64 <__alt_data_end+0xff001b64>
    1cf4:	e6fff804 	addi	sp,fp,-32
    1cf8:	dfc00917 	ldw	ra,36(sp)
    1cfc:	df000817 	ldw	fp,32(sp)
    1d00:	ddc00717 	ldw	r23,28(sp)
    1d04:	dd800617 	ldw	r22,24(sp)
    1d08:	dd400517 	ldw	r21,20(sp)
    1d0c:	dd000417 	ldw	r20,16(sp)
    1d10:	dcc00317 	ldw	r19,12(sp)
    1d14:	dc800217 	ldw	r18,8(sp)
    1d18:	dc400117 	ldw	r17,4(sp)
    1d1c:	dc000017 	ldw	r16,0(sp)
    1d20:	dec00a04 	addi	sp,sp,40
    1d24:	f800283a 	ret

00001d28 <GetSobel_rgb>:
    1d28:	d0a6d417 	ldw	r2,-25776(gp)
    1d2c:	f800283a 	ret

00001d30 <GetSobelResult>:
    1d30:	d0a6d017 	ldw	r2,-25792(gp)
    1d34:	f800283a 	ret

00001d38 <vga_set_pointer>:
    1d38:	00804034 	movhi	r2,256
    1d3c:	10843404 	addi	r2,r2,4304
    1d40:	11000035 	stwio	r4,0(r2)
    1d44:	f800283a 	ret

00001d48 <vga_set_swap>:
    1d48:	00804034 	movhi	r2,256
    1d4c:	10843504 	addi	r2,r2,4308
    1d50:	11000025 	stbio	r4,0(r2)
    1d54:	f800283a 	ret

00001d58 <__addsf3>:
    1d58:	defffc04 	addi	sp,sp,-16
    1d5c:	2004d7fa 	srli	r2,r4,31
    1d60:	280cd5fa 	srli	r6,r5,23
    1d64:	dc000015 	stw	r16,0(sp)
    1d68:	00c02034 	movhi	r3,128
    1d6c:	2020d5fa 	srli	r16,r4,23
    1d70:	280ed7fa 	srli	r7,r5,31
    1d74:	18ffffc4 	addi	r3,r3,-1
    1d78:	dc400115 	stw	r17,4(sp)
    1d7c:	1908703a 	and	r4,r3,r4
    1d80:	194a703a 	and	r5,r3,r5
    1d84:	dfc00315 	stw	ra,12(sp)
    1d88:	dc800215 	stw	r18,8(sp)
    1d8c:	14403fcc 	andi	r17,r2,255
    1d90:	84003fcc 	andi	r16,r16,255
    1d94:	200890fa 	slli	r4,r4,3
    1d98:	31803fcc 	andi	r6,r6,255
    1d9c:	280a90fa 	slli	r5,r5,3
    1da0:	89c05026 	beq	r17,r7,1ee4 <__addsf3+0x18c>
    1da4:	8185c83a 	sub	r2,r16,r6
    1da8:	00807a0e 	bge	zero,r2,1f94 <__addsf3+0x23c>
    1dac:	30001e1e 	bne	r6,zero,1e28 <__addsf3+0xd0>
    1db0:	28006d1e 	bne	r5,zero,1f68 <__addsf3+0x210>
    1db4:	208001cc 	andi	r2,r4,7
    1db8:	10000426 	beq	r2,zero,1dcc <__addsf3+0x74>
    1dbc:	208003cc 	andi	r2,r4,15
    1dc0:	00c00104 	movi	r3,4
    1dc4:	10c00126 	beq	r2,r3,1dcc <__addsf3+0x74>
    1dc8:	20c9883a 	add	r4,r4,r3
    1dcc:	2081002c 	andhi	r2,r4,1024
    1dd0:	10003926 	beq	r2,zero,1eb8 <__addsf3+0x160>
    1dd4:	84000044 	addi	r16,r16,1
    1dd8:	00803fc4 	movi	r2,255
    1ddc:	80807826 	beq	r16,r2,1fc0 <__addsf3+0x268>
    1de0:	200891ba 	slli	r4,r4,6
    1de4:	8805883a 	mov	r2,r17
    1de8:	2008d27a 	srli	r4,r4,9
    1dec:	84003fcc 	andi	r16,r16,255
    1df0:	800695fa 	slli	r3,r16,23
    1df4:	10803fcc 	andi	r2,r2,255
    1df8:	04002034 	movhi	r16,128
    1dfc:	843fffc4 	addi	r16,r16,-1
    1e00:	100497fa 	slli	r2,r2,31
    1e04:	2408703a 	and	r4,r4,r16
    1e08:	20e0b03a 	or	r16,r4,r3
    1e0c:	8084b03a 	or	r2,r16,r2
    1e10:	dfc00317 	ldw	ra,12(sp)
    1e14:	dc800217 	ldw	r18,8(sp)
    1e18:	dc400117 	ldw	r17,4(sp)
    1e1c:	dc000017 	ldw	r16,0(sp)
    1e20:	dec00404 	addi	sp,sp,16
    1e24:	f800283a 	ret
    1e28:	00c03fc4 	movi	r3,255
    1e2c:	80ffe126 	beq	r16,r3,1db4 <__alt_data_end+0xff001db4>
    1e30:	29410034 	orhi	r5,r5,1024
    1e34:	00c006c4 	movi	r3,27
    1e38:	18807516 	blt	r3,r2,2010 <__addsf3+0x2b8>
    1e3c:	00c00804 	movi	r3,32
    1e40:	1887c83a 	sub	r3,r3,r2
    1e44:	28c6983a 	sll	r3,r5,r3
    1e48:	288ad83a 	srl	r5,r5,r2
    1e4c:	1804c03a 	cmpne	r2,r3,zero
    1e50:	288ab03a 	or	r5,r5,r2
    1e54:	2149c83a 	sub	r4,r4,r5
    1e58:	2081002c 	andhi	r2,r4,1024
    1e5c:	10001426 	beq	r2,zero,1eb0 <__addsf3+0x158>
    1e60:	04810034 	movhi	r18,1024
    1e64:	94bfffc4 	addi	r18,r18,-1
    1e68:	24a4703a 	and	r18,r4,r18
    1e6c:	9009883a 	mov	r4,r18
    1e70:	00029840 	call	2984 <__clzsi2>
    1e74:	10bffec4 	addi	r2,r2,-5
    1e78:	90a4983a 	sll	r18,r18,r2
    1e7c:	14005416 	blt	r2,r16,1fd0 <__addsf3+0x278>
    1e80:	1405c83a 	sub	r2,r2,r16
    1e84:	11000044 	addi	r4,r2,1
    1e88:	00800804 	movi	r2,32
    1e8c:	1105c83a 	sub	r2,r2,r4
    1e90:	9084983a 	sll	r2,r18,r2
    1e94:	9124d83a 	srl	r18,r18,r4
    1e98:	0021883a 	mov	r16,zero
    1e9c:	1008c03a 	cmpne	r4,r2,zero
    1ea0:	9108b03a 	or	r4,r18,r4
    1ea4:	003fc306 	br	1db4 <__alt_data_end+0xff001db4>
    1ea8:	1000db26 	beq	r2,zero,2218 <__addsf3+0x4c0>
    1eac:	1009883a 	mov	r4,r2
    1eb0:	208001cc 	andi	r2,r4,7
    1eb4:	103fc11e 	bne	r2,zero,1dbc <__alt_data_end+0xff001dbc>
    1eb8:	2006d0fa 	srli	r3,r4,3
    1ebc:	01003fc4 	movi	r4,255
    1ec0:	8805883a 	mov	r2,r17
    1ec4:	8100241e 	bne	r16,r4,1f58 <__addsf3+0x200>
    1ec8:	18006e26 	beq	r3,zero,2084 <__addsf3+0x32c>
    1ecc:	19001034 	orhi	r4,r3,64
    1ed0:	00c02034 	movhi	r3,128
    1ed4:	18ffffc4 	addi	r3,r3,-1
    1ed8:	043fffc4 	movi	r16,-1
    1edc:	20c8703a 	and	r4,r4,r3
    1ee0:	003fc206 	br	1dec <__alt_data_end+0xff001dec>
    1ee4:	8187c83a 	sub	r3,r16,r6
    1ee8:	00c03e0e 	bge	zero,r3,1fe4 <__addsf3+0x28c>
    1eec:	30002326 	beq	r6,zero,1f7c <__addsf3+0x224>
    1ef0:	01803fc4 	movi	r6,255
    1ef4:	81bfaf26 	beq	r16,r6,1db4 <__alt_data_end+0xff001db4>
    1ef8:	29410034 	orhi	r5,r5,1024
    1efc:	018006c4 	movi	r6,27
    1f00:	30c07416 	blt	r6,r3,20d4 <__addsf3+0x37c>
    1f04:	01800804 	movi	r6,32
    1f08:	30cdc83a 	sub	r6,r6,r3
    1f0c:	298c983a 	sll	r6,r5,r6
    1f10:	28cad83a 	srl	r5,r5,r3
    1f14:	3006c03a 	cmpne	r3,r6,zero
    1f18:	28cab03a 	or	r5,r5,r3
    1f1c:	2149883a 	add	r4,r4,r5
    1f20:	20c1002c 	andhi	r3,r4,1024
    1f24:	183fe226 	beq	r3,zero,1eb0 <__alt_data_end+0xff001eb0>
    1f28:	84000044 	addi	r16,r16,1
    1f2c:	00c03fc4 	movi	r3,255
    1f30:	80c05426 	beq	r16,r3,2084 <__addsf3+0x32c>
    1f34:	00bf0034 	movhi	r2,64512
    1f38:	10bfffc4 	addi	r2,r2,-1
    1f3c:	20c0004c 	andi	r3,r4,1
    1f40:	2088703a 	and	r4,r4,r2
    1f44:	2008d07a 	srli	r4,r4,1
    1f48:	20c8b03a 	or	r4,r4,r3
    1f4c:	003f9906 	br	1db4 <__alt_data_end+0xff001db4>
    1f50:	0007883a 	mov	r3,zero
    1f54:	0005883a 	mov	r2,zero
    1f58:	01002034 	movhi	r4,128
    1f5c:	213fffc4 	addi	r4,r4,-1
    1f60:	1908703a 	and	r4,r3,r4
    1f64:	003fa106 	br	1dec <__alt_data_end+0xff001dec>
    1f68:	10bfffc4 	addi	r2,r2,-1
    1f6c:	103fb926 	beq	r2,zero,1e54 <__alt_data_end+0xff001e54>
    1f70:	00c03fc4 	movi	r3,255
    1f74:	80ffaf1e 	bne	r16,r3,1e34 <__alt_data_end+0xff001e34>
    1f78:	003f8e06 	br	1db4 <__alt_data_end+0xff001db4>
    1f7c:	283f8d26 	beq	r5,zero,1db4 <__alt_data_end+0xff001db4>
    1f80:	18ffffc4 	addi	r3,r3,-1
    1f84:	183fe526 	beq	r3,zero,1f1c <__alt_data_end+0xff001f1c>
    1f88:	01803fc4 	movi	r6,255
    1f8c:	81bfdb1e 	bne	r16,r6,1efc <__alt_data_end+0xff001efc>
    1f90:	003f8806 	br	1db4 <__alt_data_end+0xff001db4>
    1f94:	1000201e 	bne	r2,zero,2018 <__addsf3+0x2c0>
    1f98:	80800044 	addi	r2,r16,1
    1f9c:	10803fcc 	andi	r2,r2,255
    1fa0:	01800044 	movi	r6,1
    1fa4:	3080450e 	bge	r6,r2,20bc <__addsf3+0x364>
    1fa8:	2165c83a 	sub	r18,r4,r5
    1fac:	90c1002c 	andhi	r3,r18,1024
    1fb0:	18002b26 	beq	r3,zero,2060 <__addsf3+0x308>
    1fb4:	2925c83a 	sub	r18,r5,r4
    1fb8:	3823883a 	mov	r17,r7
    1fbc:	003fab06 	br	1e6c <__alt_data_end+0xff001e6c>
    1fc0:	8805883a 	mov	r2,r17
    1fc4:	043fffc4 	movi	r16,-1
    1fc8:	0009883a 	mov	r4,zero
    1fcc:	003f8706 	br	1dec <__alt_data_end+0xff001dec>
    1fd0:	013f0034 	movhi	r4,64512
    1fd4:	213fffc4 	addi	r4,r4,-1
    1fd8:	80a1c83a 	sub	r16,r16,r2
    1fdc:	9108703a 	and	r4,r18,r4
    1fe0:	003f7406 	br	1db4 <__alt_data_end+0xff001db4>
    1fe4:	1800411e 	bne	r3,zero,20ec <__addsf3+0x394>
    1fe8:	80c00044 	addi	r3,r16,1
    1fec:	19c03fcc 	andi	r7,r3,255
    1ff0:	01800044 	movi	r6,1
    1ff4:	31c0260e 	bge	r6,r7,2090 <__addsf3+0x338>
    1ff8:	01803fc4 	movi	r6,255
    1ffc:	19802126 	beq	r3,r6,2084 <__addsf3+0x32c>
    2000:	2149883a 	add	r4,r4,r5
    2004:	2008d07a 	srli	r4,r4,1
    2008:	1821883a 	mov	r16,r3
    200c:	003f6906 	br	1db4 <__alt_data_end+0xff001db4>
    2010:	01400044 	movi	r5,1
    2014:	003f8f06 	br	1e54 <__alt_data_end+0xff001e54>
    2018:	8000151e 	bne	r16,zero,2070 <__addsf3+0x318>
    201c:	20002f26 	beq	r4,zero,20dc <__addsf3+0x384>
    2020:	0084303a 	nor	r2,zero,r2
    2024:	10000a26 	beq	r2,zero,2050 <__addsf3+0x2f8>
    2028:	00c03fc4 	movi	r3,255
    202c:	30c02b26 	beq	r6,r3,20dc <__addsf3+0x384>
    2030:	00c006c4 	movi	r3,27
    2034:	18806d16 	blt	r3,r2,21ec <__addsf3+0x494>
    2038:	00c00804 	movi	r3,32
    203c:	1887c83a 	sub	r3,r3,r2
    2040:	20c6983a 	sll	r3,r4,r3
    2044:	2084d83a 	srl	r2,r4,r2
    2048:	1808c03a 	cmpne	r4,r3,zero
    204c:	1108b03a 	or	r4,r2,r4
    2050:	2909c83a 	sub	r4,r5,r4
    2054:	3021883a 	mov	r16,r6
    2058:	3823883a 	mov	r17,r7
    205c:	003f7e06 	br	1e58 <__alt_data_end+0xff001e58>
    2060:	903f821e 	bne	r18,zero,1e6c <__alt_data_end+0xff001e6c>
    2064:	0005883a 	mov	r2,zero
    2068:	0021883a 	mov	r16,zero
    206c:	003fba06 	br	1f58 <__alt_data_end+0xff001f58>
    2070:	00c03fc4 	movi	r3,255
    2074:	30c01926 	beq	r6,r3,20dc <__addsf3+0x384>
    2078:	0085c83a 	sub	r2,zero,r2
    207c:	21010034 	orhi	r4,r4,1024
    2080:	003feb06 	br	2030 <__alt_data_end+0xff002030>
    2084:	043fffc4 	movi	r16,-1
    2088:	0009883a 	mov	r4,zero
    208c:	003f5706 	br	1dec <__alt_data_end+0xff001dec>
    2090:	80004a1e 	bne	r16,zero,21bc <__addsf3+0x464>
    2094:	20005926 	beq	r4,zero,21fc <__addsf3+0x4a4>
    2098:	283f4626 	beq	r5,zero,1db4 <__alt_data_end+0xff001db4>
    209c:	2149883a 	add	r4,r4,r5
    20a0:	2081002c 	andhi	r2,r4,1024
    20a4:	103f8226 	beq	r2,zero,1eb0 <__alt_data_end+0xff001eb0>
    20a8:	00bf0034 	movhi	r2,64512
    20ac:	10bfffc4 	addi	r2,r2,-1
    20b0:	3021883a 	mov	r16,r6
    20b4:	2088703a 	and	r4,r4,r2
    20b8:	003f3e06 	br	1db4 <__alt_data_end+0xff001db4>
    20bc:	8000121e 	bne	r16,zero,2108 <__addsf3+0x3b0>
    20c0:	2000261e 	bne	r4,zero,215c <__addsf3+0x404>
    20c4:	283fa226 	beq	r5,zero,1f50 <__alt_data_end+0xff001f50>
    20c8:	2809883a 	mov	r4,r5
    20cc:	3823883a 	mov	r17,r7
    20d0:	003f3806 	br	1db4 <__alt_data_end+0xff001db4>
    20d4:	01400044 	movi	r5,1
    20d8:	003f9006 	br	1f1c <__alt_data_end+0xff001f1c>
    20dc:	2809883a 	mov	r4,r5
    20e0:	3021883a 	mov	r16,r6
    20e4:	3823883a 	mov	r17,r7
    20e8:	003f3206 	br	1db4 <__alt_data_end+0xff001db4>
    20ec:	80000c1e 	bne	r16,zero,2120 <__addsf3+0x3c8>
    20f0:	20002f26 	beq	r4,zero,21b0 <__addsf3+0x458>
    20f4:	00c6303a 	nor	r3,zero,r3
    20f8:	18002b1e 	bne	r3,zero,21a8 <__addsf3+0x450>
    20fc:	2149883a 	add	r4,r4,r5
    2100:	3021883a 	mov	r16,r6
    2104:	003f8606 	br	1f20 <__alt_data_end+0xff001f20>
    2108:	20001b1e 	bne	r4,zero,2178 <__addsf3+0x420>
    210c:	28003926 	beq	r5,zero,21f4 <__addsf3+0x49c>
    2110:	2809883a 	mov	r4,r5
    2114:	3823883a 	mov	r17,r7
    2118:	04003fc4 	movi	r16,255
    211c:	003f2506 	br	1db4 <__alt_data_end+0xff001db4>
    2120:	01c03fc4 	movi	r7,255
    2124:	31c02226 	beq	r6,r7,21b0 <__addsf3+0x458>
    2128:	00c7c83a 	sub	r3,zero,r3
    212c:	21010034 	orhi	r4,r4,1024
    2130:	01c006c4 	movi	r7,27
    2134:	38c03616 	blt	r7,r3,2210 <__addsf3+0x4b8>
    2138:	01c00804 	movi	r7,32
    213c:	38cfc83a 	sub	r7,r7,r3
    2140:	21ce983a 	sll	r7,r4,r7
    2144:	20c6d83a 	srl	r3,r4,r3
    2148:	3808c03a 	cmpne	r4,r7,zero
    214c:	1906b03a 	or	r3,r3,r4
    2150:	1949883a 	add	r4,r3,r5
    2154:	3021883a 	mov	r16,r6
    2158:	003f7106 	br	1f20 <__alt_data_end+0xff001f20>
    215c:	283f1526 	beq	r5,zero,1db4 <__alt_data_end+0xff001db4>
    2160:	2145c83a 	sub	r2,r4,r5
    2164:	10c1002c 	andhi	r3,r2,1024
    2168:	183f4f26 	beq	r3,zero,1ea8 <__alt_data_end+0xff001ea8>
    216c:	2909c83a 	sub	r4,r5,r4
    2170:	3823883a 	mov	r17,r7
    2174:	003f0f06 	br	1db4 <__alt_data_end+0xff001db4>
    2178:	28001a26 	beq	r5,zero,21e4 <__addsf3+0x48c>
    217c:	2008d0fa 	srli	r4,r4,3
    2180:	2080102c 	andhi	r2,r4,64
    2184:	10000526 	beq	r2,zero,219c <__addsf3+0x444>
    2188:	280ad0fa 	srli	r5,r5,3
    218c:	2880102c 	andhi	r2,r5,64
    2190:	1000021e 	bne	r2,zero,219c <__addsf3+0x444>
    2194:	2809883a 	mov	r4,r5
    2198:	3823883a 	mov	r17,r7
    219c:	200890fa 	slli	r4,r4,3
    21a0:	04003fc4 	movi	r16,255
    21a4:	003f0306 	br	1db4 <__alt_data_end+0xff001db4>
    21a8:	01c03fc4 	movi	r7,255
    21ac:	31ffe01e 	bne	r6,r7,2130 <__alt_data_end+0xff002130>
    21b0:	2809883a 	mov	r4,r5
    21b4:	3021883a 	mov	r16,r6
    21b8:	003efe06 	br	1db4 <__alt_data_end+0xff001db4>
    21bc:	20001126 	beq	r4,zero,2204 <__addsf3+0x4ac>
    21c0:	28000826 	beq	r5,zero,21e4 <__addsf3+0x48c>
    21c4:	2008d0fa 	srli	r4,r4,3
    21c8:	2080102c 	andhi	r2,r4,64
    21cc:	103ff326 	beq	r2,zero,219c <__alt_data_end+0xff00219c>
    21d0:	280ad0fa 	srli	r5,r5,3
    21d4:	2880102c 	andhi	r2,r5,64
    21d8:	103ff01e 	bne	r2,zero,219c <__alt_data_end+0xff00219c>
    21dc:	2809883a 	mov	r4,r5
    21e0:	003fee06 	br	219c <__alt_data_end+0xff00219c>
    21e4:	04003fc4 	movi	r16,255
    21e8:	003ef206 	br	1db4 <__alt_data_end+0xff001db4>
    21ec:	01000044 	movi	r4,1
    21f0:	003f9706 	br	2050 <__alt_data_end+0xff002050>
    21f4:	0005883a 	mov	r2,zero
    21f8:	003f3406 	br	1ecc <__alt_data_end+0xff001ecc>
    21fc:	2809883a 	mov	r4,r5
    2200:	003eec06 	br	1db4 <__alt_data_end+0xff001db4>
    2204:	2809883a 	mov	r4,r5
    2208:	04003fc4 	movi	r16,255
    220c:	003ee906 	br	1db4 <__alt_data_end+0xff001db4>
    2210:	00c00044 	movi	r3,1
    2214:	003fce06 	br	2150 <__alt_data_end+0xff002150>
    2218:	0005883a 	mov	r2,zero
    221c:	003f4e06 	br	1f58 <__alt_data_end+0xff001f58>

00002220 <__divsf3>:
    2220:	defff504 	addi	sp,sp,-44
    2224:	200cd5fa 	srli	r6,r4,23
    2228:	dcc00415 	stw	r19,16(sp)
    222c:	2026d7fa 	srli	r19,r4,31
    2230:	00c02034 	movhi	r3,128
    2234:	dd800715 	stw	r22,28(sp)
    2238:	dd000515 	stw	r20,20(sp)
    223c:	dc800315 	stw	r18,12(sp)
    2240:	18ffffc4 	addi	r3,r3,-1
    2244:	dfc00a15 	stw	ra,40(sp)
    2248:	df000915 	stw	fp,36(sp)
    224c:	ddc00815 	stw	r23,32(sp)
    2250:	dd400615 	stw	r21,24(sp)
    2254:	dc400215 	stw	r17,8(sp)
    2258:	dc000115 	stw	r16,4(sp)
    225c:	35003fcc 	andi	r20,r6,255
    2260:	1924703a 	and	r18,r3,r4
    2264:	9d803fcc 	andi	r22,r19,255
    2268:	a0005226 	beq	r20,zero,23b4 <__divsf3+0x194>
    226c:	00803fc4 	movi	r2,255
    2270:	a0802e26 	beq	r20,r2,232c <__divsf3+0x10c>
    2274:	91002034 	orhi	r4,r18,128
    2278:	202490fa 	slli	r18,r4,3
    227c:	a53fe044 	addi	r20,r20,-127
    2280:	0021883a 	mov	r16,zero
    2284:	002f883a 	mov	r23,zero
    2288:	280cd5fa 	srli	r6,r5,23
    228c:	282ad7fa 	srli	r21,r5,31
    2290:	00c02034 	movhi	r3,128
    2294:	18ffffc4 	addi	r3,r3,-1
    2298:	31803fcc 	andi	r6,r6,255
    229c:	1962703a 	and	r17,r3,r5
    22a0:	af003fcc 	andi	fp,r21,255
    22a4:	30004a26 	beq	r6,zero,23d0 <__divsf3+0x1b0>
    22a8:	00803fc4 	movi	r2,255
    22ac:	30804526 	beq	r6,r2,23c4 <__divsf3+0x1a4>
    22b0:	89402034 	orhi	r5,r17,128
    22b4:	282290fa 	slli	r17,r5,3
    22b8:	31bfe044 	addi	r6,r6,-127
    22bc:	000b883a 	mov	r5,zero
    22c0:	2c20b03a 	or	r16,r5,r16
    22c4:	802090ba 	slli	r16,r16,2
    22c8:	00800034 	movhi	r2,0
    22cc:	1088bb04 	addi	r2,r2,8940
    22d0:	80a1883a 	add	r16,r16,r2
    22d4:	81000017 	ldw	r4,0(r16)
    22d8:	9d46f03a 	xor	r3,r19,r21
    22dc:	180f883a 	mov	r7,r3
    22e0:	18803fcc 	andi	r2,r3,255
    22e4:	a18dc83a 	sub	r6,r20,r6
    22e8:	2000683a 	jmp	r4
    22ec:	000024d0 	cmplti	zero,zero,147
    22f0:	00002354 	movui	zero,141
    22f4:	000024c4 	movi	zero,147
    22f8:	00002340 	call	234 <alt_instruction_exception_entry+0x64>
    22fc:	000024c4 	movi	zero,147
    2300:	0000249c 	xori	zero,zero,146
    2304:	000024c4 	movi	zero,147
    2308:	00002340 	call	234 <alt_instruction_exception_entry+0x64>
    230c:	00002354 	movui	zero,141
    2310:	00002354 	movui	zero,141
    2314:	0000249c 	xori	zero,zero,146
    2318:	00002340 	call	234 <alt_instruction_exception_entry+0x64>
    231c:	000025b0 	cmpltui	zero,zero,150
    2320:	000025b0 	cmpltui	zero,zero,150
    2324:	000025b0 	cmpltui	zero,zero,150
    2328:	00002564 	muli	zero,zero,149
    232c:	9000581e 	bne	r18,zero,2490 <__divsf3+0x270>
    2330:	04000204 	movi	r16,8
    2334:	05c00084 	movi	r23,2
    2338:	003fd306 	br	2288 <__alt_data_end+0xff002288>
    233c:	0023883a 	mov	r17,zero
    2340:	e02d883a 	mov	r22,fp
    2344:	282f883a 	mov	r23,r5
    2348:	00800084 	movi	r2,2
    234c:	b8808f1e 	bne	r23,r2,258c <__divsf3+0x36c>
    2350:	b005883a 	mov	r2,r22
    2354:	11c0004c 	andi	r7,r2,1
    2358:	013fffc4 	movi	r4,-1
    235c:	000d883a 	mov	r6,zero
    2360:	21003fcc 	andi	r4,r4,255
    2364:	200895fa 	slli	r4,r4,23
    2368:	38803fcc 	andi	r2,r7,255
    236c:	00c02034 	movhi	r3,128
    2370:	100497fa 	slli	r2,r2,31
    2374:	18ffffc4 	addi	r3,r3,-1
    2378:	30c6703a 	and	r3,r6,r3
    237c:	1906b03a 	or	r3,r3,r4
    2380:	1884b03a 	or	r2,r3,r2
    2384:	dfc00a17 	ldw	ra,40(sp)
    2388:	df000917 	ldw	fp,36(sp)
    238c:	ddc00817 	ldw	r23,32(sp)
    2390:	dd800717 	ldw	r22,28(sp)
    2394:	dd400617 	ldw	r21,24(sp)
    2398:	dd000517 	ldw	r20,20(sp)
    239c:	dcc00417 	ldw	r19,16(sp)
    23a0:	dc800317 	ldw	r18,12(sp)
    23a4:	dc400217 	ldw	r17,8(sp)
    23a8:	dc000117 	ldw	r16,4(sp)
    23ac:	dec00b04 	addi	sp,sp,44
    23b0:	f800283a 	ret
    23b4:	90002b1e 	bne	r18,zero,2464 <__divsf3+0x244>
    23b8:	04000104 	movi	r16,4
    23bc:	05c00044 	movi	r23,1
    23c0:	003fb106 	br	2288 <__alt_data_end+0xff002288>
    23c4:	8800251e 	bne	r17,zero,245c <__divsf3+0x23c>
    23c8:	01400084 	movi	r5,2
    23cc:	00000206 	br	23d8 <__divsf3+0x1b8>
    23d0:	88001a1e 	bne	r17,zero,243c <__divsf3+0x21c>
    23d4:	01400044 	movi	r5,1
    23d8:	8160b03a 	or	r16,r16,r5
    23dc:	802090ba 	slli	r16,r16,2
    23e0:	00c00034 	movhi	r3,0
    23e4:	18c8ff04 	addi	r3,r3,9212
    23e8:	80e1883a 	add	r16,r16,r3
    23ec:	80c00017 	ldw	r3,0(r16)
    23f0:	9d44f03a 	xor	r2,r19,r21
    23f4:	a18dc83a 	sub	r6,r20,r6
    23f8:	1800683a 	jmp	r3
    23fc:	00002354 	movui	zero,141
    2400:	00002354 	movui	zero,141
    2404:	000025a0 	cmpeqi	zero,zero,150
    2408:	0000233c 	xorhi	zero,zero,140
    240c:	000025a0 	cmpeqi	zero,zero,150
    2410:	0000249c 	xori	zero,zero,146
    2414:	000025a0 	cmpeqi	zero,zero,150
    2418:	0000233c 	xorhi	zero,zero,140
    241c:	00002354 	movui	zero,141
    2420:	00002354 	movui	zero,141
    2424:	0000249c 	xori	zero,zero,146
    2428:	0000233c 	xorhi	zero,zero,140
    242c:	000025b0 	cmpltui	zero,zero,150
    2430:	000025b0 	cmpltui	zero,zero,150
    2434:	000025b0 	cmpltui	zero,zero,150
    2438:	000025c8 	cmpgei	zero,zero,151
    243c:	8809883a 	mov	r4,r17
    2440:	00029840 	call	2984 <__clzsi2>
    2444:	10fffec4 	addi	r3,r2,-5
    2448:	10801d84 	addi	r2,r2,118
    244c:	88e2983a 	sll	r17,r17,r3
    2450:	008dc83a 	sub	r6,zero,r2
    2454:	000b883a 	mov	r5,zero
    2458:	003f9906 	br	22c0 <__alt_data_end+0xff0022c0>
    245c:	014000c4 	movi	r5,3
    2460:	003f9706 	br	22c0 <__alt_data_end+0xff0022c0>
    2464:	9009883a 	mov	r4,r18
    2468:	d9400015 	stw	r5,0(sp)
    246c:	00029840 	call	2984 <__clzsi2>
    2470:	10fffec4 	addi	r3,r2,-5
    2474:	11801d84 	addi	r6,r2,118
    2478:	90e4983a 	sll	r18,r18,r3
    247c:	01a9c83a 	sub	r20,zero,r6
    2480:	0021883a 	mov	r16,zero
    2484:	002f883a 	mov	r23,zero
    2488:	d9400017 	ldw	r5,0(sp)
    248c:	003f7e06 	br	2288 <__alt_data_end+0xff002288>
    2490:	04000304 	movi	r16,12
    2494:	05c000c4 	movi	r23,3
    2498:	003f7b06 	br	2288 <__alt_data_end+0xff002288>
    249c:	01802034 	movhi	r6,128
    24a0:	000f883a 	mov	r7,zero
    24a4:	31bfffc4 	addi	r6,r6,-1
    24a8:	013fffc4 	movi	r4,-1
    24ac:	003fac06 	br	2360 <__alt_data_end+0xff002360>
    24b0:	01400044 	movi	r5,1
    24b4:	2909c83a 	sub	r4,r5,r4
    24b8:	00c006c4 	movi	r3,27
    24bc:	19004b0e 	bge	r3,r4,25ec <__divsf3+0x3cc>
    24c0:	114e703a 	and	r7,r2,r5
    24c4:	0009883a 	mov	r4,zero
    24c8:	000d883a 	mov	r6,zero
    24cc:	003fa406 	br	2360 <__alt_data_end+0xff002360>
    24d0:	9006917a 	slli	r3,r18,5
    24d4:	8822917a 	slli	r17,r17,5
    24d8:	1c40372e 	bgeu	r3,r17,25b8 <__divsf3+0x398>
    24dc:	31bfffc4 	addi	r6,r6,-1
    24e0:	010006c4 	movi	r4,27
    24e4:	000b883a 	mov	r5,zero
    24e8:	180f883a 	mov	r7,r3
    24ec:	294b883a 	add	r5,r5,r5
    24f0:	18c7883a 	add	r3,r3,r3
    24f4:	38000116 	blt	r7,zero,24fc <__divsf3+0x2dc>
    24f8:	1c400236 	bltu	r3,r17,2504 <__divsf3+0x2e4>
    24fc:	1c47c83a 	sub	r3,r3,r17
    2500:	29400054 	ori	r5,r5,1
    2504:	213fffc4 	addi	r4,r4,-1
    2508:	203ff71e 	bne	r4,zero,24e8 <__alt_data_end+0xff0024e8>
    250c:	1806c03a 	cmpne	r3,r3,zero
    2510:	1962b03a 	or	r17,r3,r5
    2514:	31001fc4 	addi	r4,r6,127
    2518:	013fe50e 	bge	zero,r4,24b0 <__alt_data_end+0xff0024b0>
    251c:	88c001cc 	andi	r3,r17,7
    2520:	18000426 	beq	r3,zero,2534 <__divsf3+0x314>
    2524:	88c003cc 	andi	r3,r17,15
    2528:	01400104 	movi	r5,4
    252c:	19400126 	beq	r3,r5,2534 <__divsf3+0x314>
    2530:	8963883a 	add	r17,r17,r5
    2534:	88c2002c 	andhi	r3,r17,2048
    2538:	18000426 	beq	r3,zero,254c <__divsf3+0x32c>
    253c:	00fe0034 	movhi	r3,63488
    2540:	18ffffc4 	addi	r3,r3,-1
    2544:	31002004 	addi	r4,r6,128
    2548:	88e2703a 	and	r17,r17,r3
    254c:	00c03f84 	movi	r3,254
    2550:	193f8016 	blt	r3,r4,2354 <__alt_data_end+0xff002354>
    2554:	880c91ba 	slli	r6,r17,6
    2558:	11c0004c 	andi	r7,r2,1
    255c:	300cd27a 	srli	r6,r6,9
    2560:	003f7f06 	br	2360 <__alt_data_end+0xff002360>
    2564:	9080102c 	andhi	r2,r18,64
    2568:	10000226 	beq	r2,zero,2574 <__divsf3+0x354>
    256c:	8880102c 	andhi	r2,r17,64
    2570:	10001826 	beq	r2,zero,25d4 <__divsf3+0x3b4>
    2574:	00802034 	movhi	r2,128
    2578:	91801034 	orhi	r6,r18,64
    257c:	10bfffc4 	addi	r2,r2,-1
    2580:	980f883a 	mov	r7,r19
    2584:	308c703a 	and	r6,r6,r2
    2588:	003fc706 	br	24a8 <__alt_data_end+0xff0024a8>
    258c:	008000c4 	movi	r2,3
    2590:	b8802d26 	beq	r23,r2,2648 <__divsf3+0x428>
    2594:	00c00044 	movi	r3,1
    2598:	b005883a 	mov	r2,r22
    259c:	b8ffdd1e 	bne	r23,r3,2514 <__alt_data_end+0xff002514>
    25a0:	11c0004c 	andi	r7,r2,1
    25a4:	0009883a 	mov	r4,zero
    25a8:	000d883a 	mov	r6,zero
    25ac:	003f6c06 	br	2360 <__alt_data_end+0xff002360>
    25b0:	9023883a 	mov	r17,r18
    25b4:	003f6406 	br	2348 <__alt_data_end+0xff002348>
    25b8:	1c47c83a 	sub	r3,r3,r17
    25bc:	01000684 	movi	r4,26
    25c0:	01400044 	movi	r5,1
    25c4:	003fc806 	br	24e8 <__alt_data_end+0xff0024e8>
    25c8:	9080102c 	andhi	r2,r18,64
    25cc:	103fe926 	beq	r2,zero,2574 <__alt_data_end+0xff002574>
    25d0:	0023883a 	mov	r17,zero
    25d4:	00802034 	movhi	r2,128
    25d8:	89801034 	orhi	r6,r17,64
    25dc:	10bfffc4 	addi	r2,r2,-1
    25e0:	a80f883a 	mov	r7,r21
    25e4:	308c703a 	and	r6,r6,r2
    25e8:	003faf06 	br	24a8 <__alt_data_end+0xff0024a8>
    25ec:	01c00804 	movi	r7,32
    25f0:	390fc83a 	sub	r7,r7,r4
    25f4:	89ce983a 	sll	r7,r17,r7
    25f8:	890ad83a 	srl	r5,r17,r4
    25fc:	380ec03a 	cmpne	r7,r7,zero
    2600:	29cab03a 	or	r5,r5,r7
    2604:	28c001cc 	andi	r3,r5,7
    2608:	18000426 	beq	r3,zero,261c <__divsf3+0x3fc>
    260c:	28c003cc 	andi	r3,r5,15
    2610:	01000104 	movi	r4,4
    2614:	19000126 	beq	r3,r4,261c <__divsf3+0x3fc>
    2618:	290b883a 	add	r5,r5,r4
    261c:	28c1002c 	andhi	r3,r5,1024
    2620:	18000426 	beq	r3,zero,2634 <__divsf3+0x414>
    2624:	11c0004c 	andi	r7,r2,1
    2628:	01000044 	movi	r4,1
    262c:	000d883a 	mov	r6,zero
    2630:	003f4b06 	br	2360 <__alt_data_end+0xff002360>
    2634:	280a91ba 	slli	r5,r5,6
    2638:	11c0004c 	andi	r7,r2,1
    263c:	0009883a 	mov	r4,zero
    2640:	280cd27a 	srli	r6,r5,9
    2644:	003f4606 	br	2360 <__alt_data_end+0xff002360>
    2648:	00802034 	movhi	r2,128
    264c:	89801034 	orhi	r6,r17,64
    2650:	10bfffc4 	addi	r2,r2,-1
    2654:	b00f883a 	mov	r7,r22
    2658:	308c703a 	and	r6,r6,r2
    265c:	003f9206 	br	24a8 <__alt_data_end+0xff0024a8>

00002660 <__floatsisf>:
    2660:	defffd04 	addi	sp,sp,-12
    2664:	dfc00215 	stw	ra,8(sp)
    2668:	dc400115 	stw	r17,4(sp)
    266c:	dc000015 	stw	r16,0(sp)
    2670:	20003526 	beq	r4,zero,2748 <__floatsisf+0xe8>
    2674:	2021883a 	mov	r16,r4
    2678:	2022d7fa 	srli	r17,r4,31
    267c:	20003616 	blt	r4,zero,2758 <__floatsisf+0xf8>
    2680:	8009883a 	mov	r4,r16
    2684:	00029840 	call	2984 <__clzsi2>
    2688:	00c02784 	movi	r3,158
    268c:	1887c83a 	sub	r3,r3,r2
    2690:	01002584 	movi	r4,150
    2694:	20c01416 	blt	r4,r3,26e8 <__floatsisf+0x88>
    2698:	20c9c83a 	sub	r4,r4,r3
    269c:	8120983a 	sll	r16,r16,r4
    26a0:	00802034 	movhi	r2,128
    26a4:	10bfffc4 	addi	r2,r2,-1
    26a8:	8809883a 	mov	r4,r17
    26ac:	80a0703a 	and	r16,r16,r2
    26b0:	18803fcc 	andi	r2,r3,255
    26b4:	100695fa 	slli	r3,r2,23
    26b8:	20803fcc 	andi	r2,r4,255
    26bc:	100897fa 	slli	r4,r2,31
    26c0:	00802034 	movhi	r2,128
    26c4:	10bfffc4 	addi	r2,r2,-1
    26c8:	8084703a 	and	r2,r16,r2
    26cc:	10c4b03a 	or	r2,r2,r3
    26d0:	1104b03a 	or	r2,r2,r4
    26d4:	dfc00217 	ldw	ra,8(sp)
    26d8:	dc400117 	ldw	r17,4(sp)
    26dc:	dc000017 	ldw	r16,0(sp)
    26e0:	dec00304 	addi	sp,sp,12
    26e4:	f800283a 	ret
    26e8:	01002644 	movi	r4,153
    26ec:	20c01c16 	blt	r4,r3,2760 <__floatsisf+0x100>
    26f0:	20c9c83a 	sub	r4,r4,r3
    26f4:	8120983a 	sll	r16,r16,r4
    26f8:	013f0034 	movhi	r4,64512
    26fc:	213fffc4 	addi	r4,r4,-1
    2700:	814001cc 	andi	r5,r16,7
    2704:	8108703a 	and	r4,r16,r4
    2708:	28000426 	beq	r5,zero,271c <__floatsisf+0xbc>
    270c:	840003cc 	andi	r16,r16,15
    2710:	01400104 	movi	r5,4
    2714:	81400126 	beq	r16,r5,271c <__floatsisf+0xbc>
    2718:	2149883a 	add	r4,r4,r5
    271c:	2141002c 	andhi	r5,r4,1024
    2720:	28000526 	beq	r5,zero,2738 <__floatsisf+0xd8>
    2724:	00c027c4 	movi	r3,159
    2728:	1887c83a 	sub	r3,r3,r2
    272c:	00bf0034 	movhi	r2,64512
    2730:	10bfffc4 	addi	r2,r2,-1
    2734:	2088703a 	and	r4,r4,r2
    2738:	202091ba 	slli	r16,r4,6
    273c:	8809883a 	mov	r4,r17
    2740:	8020d27a 	srli	r16,r16,9
    2744:	003fda06 	br	26b0 <__alt_data_end+0xff0026b0>
    2748:	0009883a 	mov	r4,zero
    274c:	0007883a 	mov	r3,zero
    2750:	0021883a 	mov	r16,zero
    2754:	003fd606 	br	26b0 <__alt_data_end+0xff0026b0>
    2758:	0121c83a 	sub	r16,zero,r4
    275c:	003fc806 	br	2680 <__alt_data_end+0xff002680>
    2760:	01002e44 	movi	r4,185
    2764:	20c9c83a 	sub	r4,r4,r3
    2768:	01400144 	movi	r5,5
    276c:	8108983a 	sll	r4,r16,r4
    2770:	288bc83a 	sub	r5,r5,r2
    2774:	8160d83a 	srl	r16,r16,r5
    2778:	2008c03a 	cmpne	r4,r4,zero
    277c:	8120b03a 	or	r16,r16,r4
    2780:	003fdd06 	br	26f8 <__alt_data_end+0xff0026f8>

00002784 <__floatunsisf>:
    2784:	defffe04 	addi	sp,sp,-8
    2788:	dfc00115 	stw	ra,4(sp)
    278c:	dc000015 	stw	r16,0(sp)
    2790:	20002c26 	beq	r4,zero,2844 <__floatunsisf+0xc0>
    2794:	2021883a 	mov	r16,r4
    2798:	00029840 	call	2984 <__clzsi2>
    279c:	00c02784 	movi	r3,158
    27a0:	1887c83a 	sub	r3,r3,r2
    27a4:	01002584 	movi	r4,150
    27a8:	20c00f16 	blt	r4,r3,27e8 <__floatunsisf+0x64>
    27ac:	20c9c83a 	sub	r4,r4,r3
    27b0:	8108983a 	sll	r4,r16,r4
    27b4:	00802034 	movhi	r2,128
    27b8:	10bfffc4 	addi	r2,r2,-1
    27bc:	2088703a 	and	r4,r4,r2
    27c0:	18803fcc 	andi	r2,r3,255
    27c4:	100695fa 	slli	r3,r2,23
    27c8:	00802034 	movhi	r2,128
    27cc:	10bfffc4 	addi	r2,r2,-1
    27d0:	2084703a 	and	r2,r4,r2
    27d4:	10c4b03a 	or	r2,r2,r3
    27d8:	dfc00117 	ldw	ra,4(sp)
    27dc:	dc000017 	ldw	r16,0(sp)
    27e0:	dec00204 	addi	sp,sp,8
    27e4:	f800283a 	ret
    27e8:	01002644 	movi	r4,153
    27ec:	20c01816 	blt	r4,r3,2850 <__floatunsisf+0xcc>
    27f0:	20c9c83a 	sub	r4,r4,r3
    27f4:	8108983a 	sll	r4,r16,r4
    27f8:	017f0034 	movhi	r5,64512
    27fc:	297fffc4 	addi	r5,r5,-1
    2800:	218001cc 	andi	r6,r4,7
    2804:	214a703a 	and	r5,r4,r5
    2808:	30000426 	beq	r6,zero,281c <__floatunsisf+0x98>
    280c:	210003cc 	andi	r4,r4,15
    2810:	01800104 	movi	r6,4
    2814:	21800126 	beq	r4,r6,281c <__floatunsisf+0x98>
    2818:	298b883a 	add	r5,r5,r6
    281c:	2901002c 	andhi	r4,r5,1024
    2820:	20000526 	beq	r4,zero,2838 <__floatunsisf+0xb4>
    2824:	00c027c4 	movi	r3,159
    2828:	1887c83a 	sub	r3,r3,r2
    282c:	00bf0034 	movhi	r2,64512
    2830:	10bfffc4 	addi	r2,r2,-1
    2834:	288a703a 	and	r5,r5,r2
    2838:	280891ba 	slli	r4,r5,6
    283c:	2008d27a 	srli	r4,r4,9
    2840:	003fdf06 	br	27c0 <__alt_data_end+0xff0027c0>
    2844:	0007883a 	mov	r3,zero
    2848:	0009883a 	mov	r4,zero
    284c:	003fdc06 	br	27c0 <__alt_data_end+0xff0027c0>
    2850:	01402e44 	movi	r5,185
    2854:	28cbc83a 	sub	r5,r5,r3
    2858:	01000144 	movi	r4,5
    285c:	2089c83a 	sub	r4,r4,r2
    2860:	814a983a 	sll	r5,r16,r5
    2864:	8108d83a 	srl	r4,r16,r4
    2868:	2820c03a 	cmpne	r16,r5,zero
    286c:	2408b03a 	or	r4,r4,r16
    2870:	003fe106 	br	27f8 <__alt_data_end+0xff0027f8>

00002874 <__extendsfdf2>:
    2874:	200ad5fa 	srli	r5,r4,23
    2878:	defffd04 	addi	sp,sp,-12
    287c:	dc400115 	stw	r17,4(sp)
    2880:	29403fcc 	andi	r5,r5,255
    2884:	29800044 	addi	r6,r5,1
    2888:	04402034 	movhi	r17,128
    288c:	dc000015 	stw	r16,0(sp)
    2890:	8c7fffc4 	addi	r17,r17,-1
    2894:	dfc00215 	stw	ra,8(sp)
    2898:	31803fcc 	andi	r6,r6,255
    289c:	00800044 	movi	r2,1
    28a0:	8922703a 	and	r17,r17,r4
    28a4:	2020d7fa 	srli	r16,r4,31
    28a8:	1180110e 	bge	r2,r6,28f0 <__extendsfdf2+0x7c>
    28ac:	880cd0fa 	srli	r6,r17,3
    28b0:	8822977a 	slli	r17,r17,29
    28b4:	2940e004 	addi	r5,r5,896
    28b8:	2941ffcc 	andi	r5,r5,2047
    28bc:	2804953a 	slli	r2,r5,20
    28c0:	01400434 	movhi	r5,16
    28c4:	800697fa 	slli	r3,r16,31
    28c8:	297fffc4 	addi	r5,r5,-1
    28cc:	314a703a 	and	r5,r6,r5
    28d0:	288ab03a 	or	r5,r5,r2
    28d4:	28c6b03a 	or	r3,r5,r3
    28d8:	8805883a 	mov	r2,r17
    28dc:	dfc00217 	ldw	ra,8(sp)
    28e0:	dc400117 	ldw	r17,4(sp)
    28e4:	dc000017 	ldw	r16,0(sp)
    28e8:	dec00304 	addi	sp,sp,12
    28ec:	f800283a 	ret
    28f0:	2800111e 	bne	r5,zero,2938 <__extendsfdf2+0xc4>
    28f4:	88001c26 	beq	r17,zero,2968 <__extendsfdf2+0xf4>
    28f8:	8809883a 	mov	r4,r17
    28fc:	00029840 	call	2984 <__clzsi2>
    2900:	00c00284 	movi	r3,10
    2904:	18801b16 	blt	r3,r2,2974 <__extendsfdf2+0x100>
    2908:	018002c4 	movi	r6,11
    290c:	308dc83a 	sub	r6,r6,r2
    2910:	11000544 	addi	r4,r2,21
    2914:	8986d83a 	srl	r3,r17,r6
    2918:	8922983a 	sll	r17,r17,r4
    291c:	0180e244 	movi	r6,905
    2920:	01400434 	movhi	r5,16
    2924:	3085c83a 	sub	r2,r6,r2
    2928:	297fffc4 	addi	r5,r5,-1
    292c:	194c703a 	and	r6,r3,r5
    2930:	1141ffcc 	andi	r5,r2,2047
    2934:	003fe006 	br	28b8 <__alt_data_end+0xff0028b8>
    2938:	88000826 	beq	r17,zero,295c <__extendsfdf2+0xe8>
    293c:	880cd0fa 	srli	r6,r17,3
    2940:	00800434 	movhi	r2,16
    2944:	10bfffc4 	addi	r2,r2,-1
    2948:	31800234 	orhi	r6,r6,8
    294c:	8822977a 	slli	r17,r17,29
    2950:	308c703a 	and	r6,r6,r2
    2954:	0141ffc4 	movi	r5,2047
    2958:	003fd706 	br	28b8 <__alt_data_end+0xff0028b8>
    295c:	0141ffc4 	movi	r5,2047
    2960:	000d883a 	mov	r6,zero
    2964:	003fd406 	br	28b8 <__alt_data_end+0xff0028b8>
    2968:	000b883a 	mov	r5,zero
    296c:	000d883a 	mov	r6,zero
    2970:	003fd106 	br	28b8 <__alt_data_end+0xff0028b8>
    2974:	11bffd44 	addi	r6,r2,-11
    2978:	8986983a 	sll	r3,r17,r6
    297c:	0023883a 	mov	r17,zero
    2980:	003fe606 	br	291c <__alt_data_end+0xff00291c>

00002984 <__clzsi2>:
    2984:	00bfffd4 	movui	r2,65535
    2988:	11000536 	bltu	r2,r4,29a0 <__clzsi2+0x1c>
    298c:	00803fc4 	movi	r2,255
    2990:	11000f36 	bltu	r2,r4,29d0 <__clzsi2+0x4c>
    2994:	00800804 	movi	r2,32
    2998:	0007883a 	mov	r3,zero
    299c:	00000506 	br	29b4 <__clzsi2+0x30>
    29a0:	00804034 	movhi	r2,256
    29a4:	10bfffc4 	addi	r2,r2,-1
    29a8:	11000c2e 	bgeu	r2,r4,29dc <__clzsi2+0x58>
    29ac:	00800204 	movi	r2,8
    29b0:	00c00604 	movi	r3,24
    29b4:	20c8d83a 	srl	r4,r4,r3
    29b8:	00c00074 	movhi	r3,1
    29bc:	18c87dc4 	addi	r3,r3,8695
    29c0:	1909883a 	add	r4,r3,r4
    29c4:	20c00003 	ldbu	r3,0(r4)
    29c8:	10c5c83a 	sub	r2,r2,r3
    29cc:	f800283a 	ret
    29d0:	00800604 	movi	r2,24
    29d4:	00c00204 	movi	r3,8
    29d8:	003ff606 	br	29b4 <__alt_data_end+0xff0029b4>
    29dc:	00800404 	movi	r2,16
    29e0:	1007883a 	mov	r3,r2
    29e4:	003ff306 	br	29b4 <__alt_data_end+0xff0029b4>

000029e8 <malloc>:
    29e8:	00800074 	movhi	r2,1
    29ec:	108fe904 	addi	r2,r2,16292
    29f0:	200b883a 	mov	r5,r4
    29f4:	11000017 	ldw	r4,0(r2)
    29f8:	0002a101 	jmpi	2a10 <_malloc_r>

000029fc <free>:
    29fc:	00800074 	movhi	r2,1
    2a00:	108fe904 	addi	r2,r2,16292
    2a04:	200b883a 	mov	r5,r4
    2a08:	11000017 	ldw	r4,0(r2)
    2a0c:	00079a81 	jmpi	79a8 <_free_r>

00002a10 <_malloc_r>:
    2a10:	defff504 	addi	sp,sp,-44
    2a14:	dc800315 	stw	r18,12(sp)
    2a18:	dfc00a15 	stw	ra,40(sp)
    2a1c:	df000915 	stw	fp,36(sp)
    2a20:	ddc00815 	stw	r23,32(sp)
    2a24:	dd800715 	stw	r22,28(sp)
    2a28:	dd400615 	stw	r21,24(sp)
    2a2c:	dd000515 	stw	r20,20(sp)
    2a30:	dcc00415 	stw	r19,16(sp)
    2a34:	dc400215 	stw	r17,8(sp)
    2a38:	dc000115 	stw	r16,4(sp)
    2a3c:	288002c4 	addi	r2,r5,11
    2a40:	00c00584 	movi	r3,22
    2a44:	2025883a 	mov	r18,r4
    2a48:	18807f2e 	bgeu	r3,r2,2c48 <_malloc_r+0x238>
    2a4c:	047ffe04 	movi	r17,-8
    2a50:	1462703a 	and	r17,r2,r17
    2a54:	8800a316 	blt	r17,zero,2ce4 <_malloc_r+0x2d4>
    2a58:	8940a236 	bltu	r17,r5,2ce4 <_malloc_r+0x2d4>
    2a5c:	000f8480 	call	f848 <__malloc_lock>
    2a60:	00807dc4 	movi	r2,503
    2a64:	1441e92e 	bgeu	r2,r17,320c <_malloc_r+0x7fc>
    2a68:	8804d27a 	srli	r2,r17,9
    2a6c:	1000a126 	beq	r2,zero,2cf4 <_malloc_r+0x2e4>
    2a70:	00c00104 	movi	r3,4
    2a74:	18811e36 	bltu	r3,r2,2ef0 <_malloc_r+0x4e0>
    2a78:	8804d1ba 	srli	r2,r17,6
    2a7c:	12000e44 	addi	r8,r2,57
    2a80:	11c00e04 	addi	r7,r2,56
    2a84:	4209883a 	add	r4,r8,r8
    2a88:	04c00074 	movhi	r19,1
    2a8c:	2109883a 	add	r4,r4,r4
    2a90:	9cc93b04 	addi	r19,r19,9452
    2a94:	2109883a 	add	r4,r4,r4
    2a98:	9909883a 	add	r4,r19,r4
    2a9c:	24000117 	ldw	r16,4(r4)
    2aa0:	213ffe04 	addi	r4,r4,-8
    2aa4:	24009726 	beq	r4,r16,2d04 <_malloc_r+0x2f4>
    2aa8:	80800117 	ldw	r2,4(r16)
    2aac:	01bfff04 	movi	r6,-4
    2ab0:	014003c4 	movi	r5,15
    2ab4:	1184703a 	and	r2,r2,r6
    2ab8:	1447c83a 	sub	r3,r2,r17
    2abc:	28c00716 	blt	r5,r3,2adc <_malloc_r+0xcc>
    2ac0:	1800920e 	bge	r3,zero,2d0c <_malloc_r+0x2fc>
    2ac4:	84000317 	ldw	r16,12(r16)
    2ac8:	24008e26 	beq	r4,r16,2d04 <_malloc_r+0x2f4>
    2acc:	80800117 	ldw	r2,4(r16)
    2ad0:	1184703a 	and	r2,r2,r6
    2ad4:	1447c83a 	sub	r3,r2,r17
    2ad8:	28fff90e 	bge	r5,r3,2ac0 <__alt_data_end+0xff002ac0>
    2adc:	3809883a 	mov	r4,r7
    2ae0:	01800074 	movhi	r6,1
    2ae4:	9c000417 	ldw	r16,16(r19)
    2ae8:	31893b04 	addi	r6,r6,9452
    2aec:	32000204 	addi	r8,r6,8
    2af0:	82013426 	beq	r16,r8,2fc4 <_malloc_r+0x5b4>
    2af4:	80c00117 	ldw	r3,4(r16)
    2af8:	00bfff04 	movi	r2,-4
    2afc:	188e703a 	and	r7,r3,r2
    2b00:	3c45c83a 	sub	r2,r7,r17
    2b04:	00c003c4 	movi	r3,15
    2b08:	18811f16 	blt	r3,r2,2f88 <_malloc_r+0x578>
    2b0c:	32000515 	stw	r8,20(r6)
    2b10:	32000415 	stw	r8,16(r6)
    2b14:	10007f0e 	bge	r2,zero,2d14 <_malloc_r+0x304>
    2b18:	00807fc4 	movi	r2,511
    2b1c:	11c0fd36 	bltu	r2,r7,2f14 <_malloc_r+0x504>
    2b20:	3806d0fa 	srli	r3,r7,3
    2b24:	01c00044 	movi	r7,1
    2b28:	30800117 	ldw	r2,4(r6)
    2b2c:	19400044 	addi	r5,r3,1
    2b30:	294b883a 	add	r5,r5,r5
    2b34:	1807d0ba 	srai	r3,r3,2
    2b38:	294b883a 	add	r5,r5,r5
    2b3c:	294b883a 	add	r5,r5,r5
    2b40:	298b883a 	add	r5,r5,r6
    2b44:	38c6983a 	sll	r3,r7,r3
    2b48:	29c00017 	ldw	r7,0(r5)
    2b4c:	2a7ffe04 	addi	r9,r5,-8
    2b50:	1886b03a 	or	r3,r3,r2
    2b54:	82400315 	stw	r9,12(r16)
    2b58:	81c00215 	stw	r7,8(r16)
    2b5c:	30c00115 	stw	r3,4(r6)
    2b60:	2c000015 	stw	r16,0(r5)
    2b64:	3c000315 	stw	r16,12(r7)
    2b68:	2005d0ba 	srai	r2,r4,2
    2b6c:	01400044 	movi	r5,1
    2b70:	288a983a 	sll	r5,r5,r2
    2b74:	19406f36 	bltu	r3,r5,2d34 <_malloc_r+0x324>
    2b78:	28c4703a 	and	r2,r5,r3
    2b7c:	10000a1e 	bne	r2,zero,2ba8 <_malloc_r+0x198>
    2b80:	00bfff04 	movi	r2,-4
    2b84:	294b883a 	add	r5,r5,r5
    2b88:	2088703a 	and	r4,r4,r2
    2b8c:	28c4703a 	and	r2,r5,r3
    2b90:	21000104 	addi	r4,r4,4
    2b94:	1000041e 	bne	r2,zero,2ba8 <_malloc_r+0x198>
    2b98:	294b883a 	add	r5,r5,r5
    2b9c:	28c4703a 	and	r2,r5,r3
    2ba0:	21000104 	addi	r4,r4,4
    2ba4:	103ffc26 	beq	r2,zero,2b98 <__alt_data_end+0xff002b98>
    2ba8:	02bfff04 	movi	r10,-4
    2bac:	024003c4 	movi	r9,15
    2bb0:	21800044 	addi	r6,r4,1
    2bb4:	318d883a 	add	r6,r6,r6
    2bb8:	318d883a 	add	r6,r6,r6
    2bbc:	318d883a 	add	r6,r6,r6
    2bc0:	998d883a 	add	r6,r19,r6
    2bc4:	333ffe04 	addi	r12,r6,-8
    2bc8:	2017883a 	mov	r11,r4
    2bcc:	31800104 	addi	r6,r6,4
    2bd0:	34000017 	ldw	r16,0(r6)
    2bd4:	31fffd04 	addi	r7,r6,-12
    2bd8:	81c0041e 	bne	r16,r7,2bec <_malloc_r+0x1dc>
    2bdc:	0000fb06 	br	2fcc <_malloc_r+0x5bc>
    2be0:	1801030e 	bge	r3,zero,2ff0 <_malloc_r+0x5e0>
    2be4:	84000317 	ldw	r16,12(r16)
    2be8:	81c0f826 	beq	r16,r7,2fcc <_malloc_r+0x5bc>
    2bec:	80800117 	ldw	r2,4(r16)
    2bf0:	1284703a 	and	r2,r2,r10
    2bf4:	1447c83a 	sub	r3,r2,r17
    2bf8:	48fff90e 	bge	r9,r3,2be0 <__alt_data_end+0xff002be0>
    2bfc:	80800317 	ldw	r2,12(r16)
    2c00:	81000217 	ldw	r4,8(r16)
    2c04:	89400054 	ori	r5,r17,1
    2c08:	81400115 	stw	r5,4(r16)
    2c0c:	20800315 	stw	r2,12(r4)
    2c10:	11000215 	stw	r4,8(r2)
    2c14:	8463883a 	add	r17,r16,r17
    2c18:	9c400515 	stw	r17,20(r19)
    2c1c:	9c400415 	stw	r17,16(r19)
    2c20:	18800054 	ori	r2,r3,1
    2c24:	88800115 	stw	r2,4(r17)
    2c28:	8a000315 	stw	r8,12(r17)
    2c2c:	8a000215 	stw	r8,8(r17)
    2c30:	88e3883a 	add	r17,r17,r3
    2c34:	88c00015 	stw	r3,0(r17)
    2c38:	9009883a 	mov	r4,r18
    2c3c:	000f86c0 	call	f86c <__malloc_unlock>
    2c40:	80800204 	addi	r2,r16,8
    2c44:	00001b06 	br	2cb4 <_malloc_r+0x2a4>
    2c48:	04400404 	movi	r17,16
    2c4c:	89402536 	bltu	r17,r5,2ce4 <_malloc_r+0x2d4>
    2c50:	000f8480 	call	f848 <__malloc_lock>
    2c54:	00800184 	movi	r2,6
    2c58:	01000084 	movi	r4,2
    2c5c:	04c00074 	movhi	r19,1
    2c60:	1085883a 	add	r2,r2,r2
    2c64:	9cc93b04 	addi	r19,r19,9452
    2c68:	1085883a 	add	r2,r2,r2
    2c6c:	9885883a 	add	r2,r19,r2
    2c70:	14000117 	ldw	r16,4(r2)
    2c74:	10fffe04 	addi	r3,r2,-8
    2c78:	80c0d926 	beq	r16,r3,2fe0 <_malloc_r+0x5d0>
    2c7c:	80c00117 	ldw	r3,4(r16)
    2c80:	81000317 	ldw	r4,12(r16)
    2c84:	00bfff04 	movi	r2,-4
    2c88:	1884703a 	and	r2,r3,r2
    2c8c:	81400217 	ldw	r5,8(r16)
    2c90:	8085883a 	add	r2,r16,r2
    2c94:	10c00117 	ldw	r3,4(r2)
    2c98:	29000315 	stw	r4,12(r5)
    2c9c:	21400215 	stw	r5,8(r4)
    2ca0:	18c00054 	ori	r3,r3,1
    2ca4:	10c00115 	stw	r3,4(r2)
    2ca8:	9009883a 	mov	r4,r18
    2cac:	000f86c0 	call	f86c <__malloc_unlock>
    2cb0:	80800204 	addi	r2,r16,8
    2cb4:	dfc00a17 	ldw	ra,40(sp)
    2cb8:	df000917 	ldw	fp,36(sp)
    2cbc:	ddc00817 	ldw	r23,32(sp)
    2cc0:	dd800717 	ldw	r22,28(sp)
    2cc4:	dd400617 	ldw	r21,24(sp)
    2cc8:	dd000517 	ldw	r20,20(sp)
    2ccc:	dcc00417 	ldw	r19,16(sp)
    2cd0:	dc800317 	ldw	r18,12(sp)
    2cd4:	dc400217 	ldw	r17,8(sp)
    2cd8:	dc000117 	ldw	r16,4(sp)
    2cdc:	dec00b04 	addi	sp,sp,44
    2ce0:	f800283a 	ret
    2ce4:	00800304 	movi	r2,12
    2ce8:	90800015 	stw	r2,0(r18)
    2cec:	0005883a 	mov	r2,zero
    2cf0:	003ff006 	br	2cb4 <__alt_data_end+0xff002cb4>
    2cf4:	01002004 	movi	r4,128
    2cf8:	02001004 	movi	r8,64
    2cfc:	01c00fc4 	movi	r7,63
    2d00:	003f6106 	br	2a88 <__alt_data_end+0xff002a88>
    2d04:	4009883a 	mov	r4,r8
    2d08:	003f7506 	br	2ae0 <__alt_data_end+0xff002ae0>
    2d0c:	81000317 	ldw	r4,12(r16)
    2d10:	003fde06 	br	2c8c <__alt_data_end+0xff002c8c>
    2d14:	81c5883a 	add	r2,r16,r7
    2d18:	11400117 	ldw	r5,4(r2)
    2d1c:	9009883a 	mov	r4,r18
    2d20:	29400054 	ori	r5,r5,1
    2d24:	11400115 	stw	r5,4(r2)
    2d28:	000f86c0 	call	f86c <__malloc_unlock>
    2d2c:	80800204 	addi	r2,r16,8
    2d30:	003fe006 	br	2cb4 <__alt_data_end+0xff002cb4>
    2d34:	9c000217 	ldw	r16,8(r19)
    2d38:	00bfff04 	movi	r2,-4
    2d3c:	85800117 	ldw	r22,4(r16)
    2d40:	b0ac703a 	and	r22,r22,r2
    2d44:	b4400336 	bltu	r22,r17,2d54 <_malloc_r+0x344>
    2d48:	b445c83a 	sub	r2,r22,r17
    2d4c:	00c003c4 	movi	r3,15
    2d50:	18805d16 	blt	r3,r2,2ec8 <_malloc_r+0x4b8>
    2d54:	05c00074 	movhi	r23,1
    2d58:	00800074 	movhi	r2,1
    2d5c:	1096bd04 	addi	r2,r2,23284
    2d60:	bdcfe604 	addi	r23,r23,16280
    2d64:	15400017 	ldw	r21,0(r2)
    2d68:	b8c00017 	ldw	r3,0(r23)
    2d6c:	00bfffc4 	movi	r2,-1
    2d70:	858d883a 	add	r6,r16,r22
    2d74:	8d6b883a 	add	r21,r17,r21
    2d78:	1880ea26 	beq	r3,r2,3124 <_malloc_r+0x714>
    2d7c:	ad4403c4 	addi	r21,r21,4111
    2d80:	00bc0004 	movi	r2,-4096
    2d84:	a8aa703a 	and	r21,r21,r2
    2d88:	a80b883a 	mov	r5,r21
    2d8c:	9009883a 	mov	r4,r18
    2d90:	d9800015 	stw	r6,0(sp)
    2d94:	00034a40 	call	34a4 <_sbrk_r>
    2d98:	1029883a 	mov	r20,r2
    2d9c:	00bfffc4 	movi	r2,-1
    2da0:	d9800017 	ldw	r6,0(sp)
    2da4:	a080e826 	beq	r20,r2,3148 <_malloc_r+0x738>
    2da8:	a180a636 	bltu	r20,r6,3044 <_malloc_r+0x634>
    2dac:	07000074 	movhi	fp,1
    2db0:	e716cb04 	addi	fp,fp,23340
    2db4:	e0800017 	ldw	r2,0(fp)
    2db8:	a887883a 	add	r3,r21,r2
    2dbc:	e0c00015 	stw	r3,0(fp)
    2dc0:	3500e626 	beq	r6,r20,315c <_malloc_r+0x74c>
    2dc4:	b9000017 	ldw	r4,0(r23)
    2dc8:	00bfffc4 	movi	r2,-1
    2dcc:	2080ee26 	beq	r4,r2,3188 <_malloc_r+0x778>
    2dd0:	a185c83a 	sub	r2,r20,r6
    2dd4:	10c5883a 	add	r2,r2,r3
    2dd8:	e0800015 	stw	r2,0(fp)
    2ddc:	a0c001cc 	andi	r3,r20,7
    2de0:	1800bc26 	beq	r3,zero,30d4 <_malloc_r+0x6c4>
    2de4:	a0e9c83a 	sub	r20,r20,r3
    2de8:	00840204 	movi	r2,4104
    2dec:	a5000204 	addi	r20,r20,8
    2df0:	10c7c83a 	sub	r3,r2,r3
    2df4:	a545883a 	add	r2,r20,r21
    2df8:	1083ffcc 	andi	r2,r2,4095
    2dfc:	18abc83a 	sub	r21,r3,r2
    2e00:	a80b883a 	mov	r5,r21
    2e04:	9009883a 	mov	r4,r18
    2e08:	00034a40 	call	34a4 <_sbrk_r>
    2e0c:	00ffffc4 	movi	r3,-1
    2e10:	10c0e126 	beq	r2,r3,3198 <_malloc_r+0x788>
    2e14:	1505c83a 	sub	r2,r2,r20
    2e18:	1545883a 	add	r2,r2,r21
    2e1c:	10800054 	ori	r2,r2,1
    2e20:	e0c00017 	ldw	r3,0(fp)
    2e24:	9d000215 	stw	r20,8(r19)
    2e28:	a0800115 	stw	r2,4(r20)
    2e2c:	a8c7883a 	add	r3,r21,r3
    2e30:	e0c00015 	stw	r3,0(fp)
    2e34:	84c00e26 	beq	r16,r19,2e70 <_malloc_r+0x460>
    2e38:	018003c4 	movi	r6,15
    2e3c:	3580a72e 	bgeu	r6,r22,30dc <_malloc_r+0x6cc>
    2e40:	81400117 	ldw	r5,4(r16)
    2e44:	013ffe04 	movi	r4,-8
    2e48:	b0bffd04 	addi	r2,r22,-12
    2e4c:	1104703a 	and	r2,r2,r4
    2e50:	2900004c 	andi	r4,r5,1
    2e54:	2088b03a 	or	r4,r4,r2
    2e58:	81000115 	stw	r4,4(r16)
    2e5c:	01400144 	movi	r5,5
    2e60:	8089883a 	add	r4,r16,r2
    2e64:	21400115 	stw	r5,4(r4)
    2e68:	21400215 	stw	r5,8(r4)
    2e6c:	3080cd36 	bltu	r6,r2,31a4 <_malloc_r+0x794>
    2e70:	00800074 	movhi	r2,1
    2e74:	1096bc04 	addi	r2,r2,23280
    2e78:	11000017 	ldw	r4,0(r2)
    2e7c:	20c0012e 	bgeu	r4,r3,2e84 <_malloc_r+0x474>
    2e80:	10c00015 	stw	r3,0(r2)
    2e84:	00800074 	movhi	r2,1
    2e88:	1096bb04 	addi	r2,r2,23276
    2e8c:	11000017 	ldw	r4,0(r2)
    2e90:	9c000217 	ldw	r16,8(r19)
    2e94:	20c0012e 	bgeu	r4,r3,2e9c <_malloc_r+0x48c>
    2e98:	10c00015 	stw	r3,0(r2)
    2e9c:	80c00117 	ldw	r3,4(r16)
    2ea0:	00bfff04 	movi	r2,-4
    2ea4:	1886703a 	and	r3,r3,r2
    2ea8:	1c45c83a 	sub	r2,r3,r17
    2eac:	1c400236 	bltu	r3,r17,2eb8 <_malloc_r+0x4a8>
    2eb0:	00c003c4 	movi	r3,15
    2eb4:	18800416 	blt	r3,r2,2ec8 <_malloc_r+0x4b8>
    2eb8:	9009883a 	mov	r4,r18
    2ebc:	000f86c0 	call	f86c <__malloc_unlock>
    2ec0:	0005883a 	mov	r2,zero
    2ec4:	003f7b06 	br	2cb4 <__alt_data_end+0xff002cb4>
    2ec8:	88c00054 	ori	r3,r17,1
    2ecc:	80c00115 	stw	r3,4(r16)
    2ed0:	8463883a 	add	r17,r16,r17
    2ed4:	10800054 	ori	r2,r2,1
    2ed8:	9c400215 	stw	r17,8(r19)
    2edc:	88800115 	stw	r2,4(r17)
    2ee0:	9009883a 	mov	r4,r18
    2ee4:	000f86c0 	call	f86c <__malloc_unlock>
    2ee8:	80800204 	addi	r2,r16,8
    2eec:	003f7106 	br	2cb4 <__alt_data_end+0xff002cb4>
    2ef0:	00c00504 	movi	r3,20
    2ef4:	18804a2e 	bgeu	r3,r2,3020 <_malloc_r+0x610>
    2ef8:	00c01504 	movi	r3,84
    2efc:	18806e36 	bltu	r3,r2,30b8 <_malloc_r+0x6a8>
    2f00:	8804d33a 	srli	r2,r17,12
    2f04:	12001bc4 	addi	r8,r2,111
    2f08:	11c01b84 	addi	r7,r2,110
    2f0c:	4209883a 	add	r4,r8,r8
    2f10:	003edd06 	br	2a88 <__alt_data_end+0xff002a88>
    2f14:	3804d27a 	srli	r2,r7,9
    2f18:	00c00104 	movi	r3,4
    2f1c:	1880442e 	bgeu	r3,r2,3030 <_malloc_r+0x620>
    2f20:	00c00504 	movi	r3,20
    2f24:	18808136 	bltu	r3,r2,312c <_malloc_r+0x71c>
    2f28:	11401704 	addi	r5,r2,92
    2f2c:	10c016c4 	addi	r3,r2,91
    2f30:	294b883a 	add	r5,r5,r5
    2f34:	294b883a 	add	r5,r5,r5
    2f38:	294b883a 	add	r5,r5,r5
    2f3c:	994b883a 	add	r5,r19,r5
    2f40:	28800017 	ldw	r2,0(r5)
    2f44:	01800074 	movhi	r6,1
    2f48:	297ffe04 	addi	r5,r5,-8
    2f4c:	31893b04 	addi	r6,r6,9452
    2f50:	28806526 	beq	r5,r2,30e8 <_malloc_r+0x6d8>
    2f54:	01bfff04 	movi	r6,-4
    2f58:	10c00117 	ldw	r3,4(r2)
    2f5c:	1986703a 	and	r3,r3,r6
    2f60:	38c0022e 	bgeu	r7,r3,2f6c <_malloc_r+0x55c>
    2f64:	10800217 	ldw	r2,8(r2)
    2f68:	28bffb1e 	bne	r5,r2,2f58 <__alt_data_end+0xff002f58>
    2f6c:	11400317 	ldw	r5,12(r2)
    2f70:	98c00117 	ldw	r3,4(r19)
    2f74:	81400315 	stw	r5,12(r16)
    2f78:	80800215 	stw	r2,8(r16)
    2f7c:	2c000215 	stw	r16,8(r5)
    2f80:	14000315 	stw	r16,12(r2)
    2f84:	003ef806 	br	2b68 <__alt_data_end+0xff002b68>
    2f88:	88c00054 	ori	r3,r17,1
    2f8c:	80c00115 	stw	r3,4(r16)
    2f90:	8463883a 	add	r17,r16,r17
    2f94:	34400515 	stw	r17,20(r6)
    2f98:	34400415 	stw	r17,16(r6)
    2f9c:	10c00054 	ori	r3,r2,1
    2fa0:	8a000315 	stw	r8,12(r17)
    2fa4:	8a000215 	stw	r8,8(r17)
    2fa8:	88c00115 	stw	r3,4(r17)
    2fac:	88a3883a 	add	r17,r17,r2
    2fb0:	88800015 	stw	r2,0(r17)
    2fb4:	9009883a 	mov	r4,r18
    2fb8:	000f86c0 	call	f86c <__malloc_unlock>
    2fbc:	80800204 	addi	r2,r16,8
    2fc0:	003f3c06 	br	2cb4 <__alt_data_end+0xff002cb4>
    2fc4:	30c00117 	ldw	r3,4(r6)
    2fc8:	003ee706 	br	2b68 <__alt_data_end+0xff002b68>
    2fcc:	5ac00044 	addi	r11,r11,1
    2fd0:	588000cc 	andi	r2,r11,3
    2fd4:	31800204 	addi	r6,r6,8
    2fd8:	103efd1e 	bne	r2,zero,2bd0 <__alt_data_end+0xff002bd0>
    2fdc:	00002406 	br	3070 <_malloc_r+0x660>
    2fe0:	14000317 	ldw	r16,12(r2)
    2fe4:	143f251e 	bne	r2,r16,2c7c <__alt_data_end+0xff002c7c>
    2fe8:	21000084 	addi	r4,r4,2
    2fec:	003ebc06 	br	2ae0 <__alt_data_end+0xff002ae0>
    2ff0:	8085883a 	add	r2,r16,r2
    2ff4:	10c00117 	ldw	r3,4(r2)
    2ff8:	81000317 	ldw	r4,12(r16)
    2ffc:	81400217 	ldw	r5,8(r16)
    3000:	18c00054 	ori	r3,r3,1
    3004:	10c00115 	stw	r3,4(r2)
    3008:	29000315 	stw	r4,12(r5)
    300c:	21400215 	stw	r5,8(r4)
    3010:	9009883a 	mov	r4,r18
    3014:	000f86c0 	call	f86c <__malloc_unlock>
    3018:	80800204 	addi	r2,r16,8
    301c:	003f2506 	br	2cb4 <__alt_data_end+0xff002cb4>
    3020:	12001704 	addi	r8,r2,92
    3024:	11c016c4 	addi	r7,r2,91
    3028:	4209883a 	add	r4,r8,r8
    302c:	003e9606 	br	2a88 <__alt_data_end+0xff002a88>
    3030:	3804d1ba 	srli	r2,r7,6
    3034:	11400e44 	addi	r5,r2,57
    3038:	10c00e04 	addi	r3,r2,56
    303c:	294b883a 	add	r5,r5,r5
    3040:	003fbc06 	br	2f34 <__alt_data_end+0xff002f34>
    3044:	84ff5926 	beq	r16,r19,2dac <__alt_data_end+0xff002dac>
    3048:	00800074 	movhi	r2,1
    304c:	10893b04 	addi	r2,r2,9452
    3050:	14000217 	ldw	r16,8(r2)
    3054:	00bfff04 	movi	r2,-4
    3058:	80c00117 	ldw	r3,4(r16)
    305c:	1886703a 	and	r3,r3,r2
    3060:	003f9106 	br	2ea8 <__alt_data_end+0xff002ea8>
    3064:	60800217 	ldw	r2,8(r12)
    3068:	213fffc4 	addi	r4,r4,-1
    306c:	1300651e 	bne	r2,r12,3204 <_malloc_r+0x7f4>
    3070:	208000cc 	andi	r2,r4,3
    3074:	633ffe04 	addi	r12,r12,-8
    3078:	103ffa1e 	bne	r2,zero,3064 <__alt_data_end+0xff003064>
    307c:	98800117 	ldw	r2,4(r19)
    3080:	0146303a 	nor	r3,zero,r5
    3084:	1884703a 	and	r2,r3,r2
    3088:	98800115 	stw	r2,4(r19)
    308c:	294b883a 	add	r5,r5,r5
    3090:	117f2836 	bltu	r2,r5,2d34 <__alt_data_end+0xff002d34>
    3094:	283f2726 	beq	r5,zero,2d34 <__alt_data_end+0xff002d34>
    3098:	2886703a 	and	r3,r5,r2
    309c:	5809883a 	mov	r4,r11
    30a0:	183ec31e 	bne	r3,zero,2bb0 <__alt_data_end+0xff002bb0>
    30a4:	294b883a 	add	r5,r5,r5
    30a8:	2886703a 	and	r3,r5,r2
    30ac:	21000104 	addi	r4,r4,4
    30b0:	183ffc26 	beq	r3,zero,30a4 <__alt_data_end+0xff0030a4>
    30b4:	003ebe06 	br	2bb0 <__alt_data_end+0xff002bb0>
    30b8:	00c05504 	movi	r3,340
    30bc:	18801236 	bltu	r3,r2,3108 <_malloc_r+0x6f8>
    30c0:	8804d3fa 	srli	r2,r17,15
    30c4:	12001e04 	addi	r8,r2,120
    30c8:	11c01dc4 	addi	r7,r2,119
    30cc:	4209883a 	add	r4,r8,r8
    30d0:	003e6d06 	br	2a88 <__alt_data_end+0xff002a88>
    30d4:	00c40004 	movi	r3,4096
    30d8:	003f4606 	br	2df4 <__alt_data_end+0xff002df4>
    30dc:	00800044 	movi	r2,1
    30e0:	a0800115 	stw	r2,4(r20)
    30e4:	003f7406 	br	2eb8 <__alt_data_end+0xff002eb8>
    30e8:	1805d0ba 	srai	r2,r3,2
    30ec:	01c00044 	movi	r7,1
    30f0:	30c00117 	ldw	r3,4(r6)
    30f4:	388e983a 	sll	r7,r7,r2
    30f8:	2805883a 	mov	r2,r5
    30fc:	38c6b03a 	or	r3,r7,r3
    3100:	30c00115 	stw	r3,4(r6)
    3104:	003f9b06 	br	2f74 <__alt_data_end+0xff002f74>
    3108:	00c15504 	movi	r3,1364
    310c:	18801a36 	bltu	r3,r2,3178 <_malloc_r+0x768>
    3110:	8804d4ba 	srli	r2,r17,18
    3114:	12001f44 	addi	r8,r2,125
    3118:	11c01f04 	addi	r7,r2,124
    311c:	4209883a 	add	r4,r8,r8
    3120:	003e5906 	br	2a88 <__alt_data_end+0xff002a88>
    3124:	ad400404 	addi	r21,r21,16
    3128:	003f1706 	br	2d88 <__alt_data_end+0xff002d88>
    312c:	00c01504 	movi	r3,84
    3130:	18802336 	bltu	r3,r2,31c0 <_malloc_r+0x7b0>
    3134:	3804d33a 	srli	r2,r7,12
    3138:	11401bc4 	addi	r5,r2,111
    313c:	10c01b84 	addi	r3,r2,110
    3140:	294b883a 	add	r5,r5,r5
    3144:	003f7b06 	br	2f34 <__alt_data_end+0xff002f34>
    3148:	9c000217 	ldw	r16,8(r19)
    314c:	00bfff04 	movi	r2,-4
    3150:	80c00117 	ldw	r3,4(r16)
    3154:	1886703a 	and	r3,r3,r2
    3158:	003f5306 	br	2ea8 <__alt_data_end+0xff002ea8>
    315c:	3083ffcc 	andi	r2,r6,4095
    3160:	103f181e 	bne	r2,zero,2dc4 <__alt_data_end+0xff002dc4>
    3164:	99000217 	ldw	r4,8(r19)
    3168:	b545883a 	add	r2,r22,r21
    316c:	10800054 	ori	r2,r2,1
    3170:	20800115 	stw	r2,4(r4)
    3174:	003f3e06 	br	2e70 <__alt_data_end+0xff002e70>
    3178:	01003f84 	movi	r4,254
    317c:	02001fc4 	movi	r8,127
    3180:	01c01f84 	movi	r7,126
    3184:	003e4006 	br	2a88 <__alt_data_end+0xff002a88>
    3188:	00800074 	movhi	r2,1
    318c:	108fe604 	addi	r2,r2,16280
    3190:	15000015 	stw	r20,0(r2)
    3194:	003f1106 	br	2ddc <__alt_data_end+0xff002ddc>
    3198:	00800044 	movi	r2,1
    319c:	002b883a 	mov	r21,zero
    31a0:	003f1f06 	br	2e20 <__alt_data_end+0xff002e20>
    31a4:	81400204 	addi	r5,r16,8
    31a8:	9009883a 	mov	r4,r18
    31ac:	00079a80 	call	79a8 <_free_r>
    31b0:	00800074 	movhi	r2,1
    31b4:	1096cb04 	addi	r2,r2,23340
    31b8:	10c00017 	ldw	r3,0(r2)
    31bc:	003f2c06 	br	2e70 <__alt_data_end+0xff002e70>
    31c0:	00c05504 	movi	r3,340
    31c4:	18800536 	bltu	r3,r2,31dc <_malloc_r+0x7cc>
    31c8:	3804d3fa 	srli	r2,r7,15
    31cc:	11401e04 	addi	r5,r2,120
    31d0:	10c01dc4 	addi	r3,r2,119
    31d4:	294b883a 	add	r5,r5,r5
    31d8:	003f5606 	br	2f34 <__alt_data_end+0xff002f34>
    31dc:	00c15504 	movi	r3,1364
    31e0:	18800536 	bltu	r3,r2,31f8 <_malloc_r+0x7e8>
    31e4:	3804d4ba 	srli	r2,r7,18
    31e8:	11401f44 	addi	r5,r2,125
    31ec:	10c01f04 	addi	r3,r2,124
    31f0:	294b883a 	add	r5,r5,r5
    31f4:	003f4f06 	br	2f34 <__alt_data_end+0xff002f34>
    31f8:	01403f84 	movi	r5,254
    31fc:	00c01f84 	movi	r3,126
    3200:	003f4c06 	br	2f34 <__alt_data_end+0xff002f34>
    3204:	98800117 	ldw	r2,4(r19)
    3208:	003fa006 	br	308c <__alt_data_end+0xff00308c>
    320c:	8808d0fa 	srli	r4,r17,3
    3210:	20800044 	addi	r2,r4,1
    3214:	1085883a 	add	r2,r2,r2
    3218:	003e9006 	br	2c5c <__alt_data_end+0xff002c5c>

0000321c <memcpy>:
    321c:	defffd04 	addi	sp,sp,-12
    3220:	dfc00215 	stw	ra,8(sp)
    3224:	dc400115 	stw	r17,4(sp)
    3228:	dc000015 	stw	r16,0(sp)
    322c:	00c003c4 	movi	r3,15
    3230:	2005883a 	mov	r2,r4
    3234:	1980452e 	bgeu	r3,r6,334c <memcpy+0x130>
    3238:	2906b03a 	or	r3,r5,r4
    323c:	18c000cc 	andi	r3,r3,3
    3240:	1800441e 	bne	r3,zero,3354 <memcpy+0x138>
    3244:	347ffc04 	addi	r17,r6,-16
    3248:	8822d13a 	srli	r17,r17,4
    324c:	28c00104 	addi	r3,r5,4
    3250:	23400104 	addi	r13,r4,4
    3254:	8820913a 	slli	r16,r17,4
    3258:	2b000204 	addi	r12,r5,8
    325c:	22c00204 	addi	r11,r4,8
    3260:	84000504 	addi	r16,r16,20
    3264:	2a800304 	addi	r10,r5,12
    3268:	22400304 	addi	r9,r4,12
    326c:	2c21883a 	add	r16,r5,r16
    3270:	2811883a 	mov	r8,r5
    3274:	200f883a 	mov	r7,r4
    3278:	41000017 	ldw	r4,0(r8)
    327c:	1fc00017 	ldw	ra,0(r3)
    3280:	63c00017 	ldw	r15,0(r12)
    3284:	39000015 	stw	r4,0(r7)
    3288:	53800017 	ldw	r14,0(r10)
    328c:	6fc00015 	stw	ra,0(r13)
    3290:	5bc00015 	stw	r15,0(r11)
    3294:	4b800015 	stw	r14,0(r9)
    3298:	18c00404 	addi	r3,r3,16
    329c:	39c00404 	addi	r7,r7,16
    32a0:	42000404 	addi	r8,r8,16
    32a4:	6b400404 	addi	r13,r13,16
    32a8:	63000404 	addi	r12,r12,16
    32ac:	5ac00404 	addi	r11,r11,16
    32b0:	52800404 	addi	r10,r10,16
    32b4:	4a400404 	addi	r9,r9,16
    32b8:	1c3fef1e 	bne	r3,r16,3278 <__alt_data_end+0xff003278>
    32bc:	89c00044 	addi	r7,r17,1
    32c0:	380e913a 	slli	r7,r7,4
    32c4:	310003cc 	andi	r4,r6,15
    32c8:	02c000c4 	movi	r11,3
    32cc:	11c7883a 	add	r3,r2,r7
    32d0:	29cb883a 	add	r5,r5,r7
    32d4:	5900212e 	bgeu	r11,r4,335c <memcpy+0x140>
    32d8:	1813883a 	mov	r9,r3
    32dc:	2811883a 	mov	r8,r5
    32e0:	200f883a 	mov	r7,r4
    32e4:	42800017 	ldw	r10,0(r8)
    32e8:	4a400104 	addi	r9,r9,4
    32ec:	39ffff04 	addi	r7,r7,-4
    32f0:	4abfff15 	stw	r10,-4(r9)
    32f4:	42000104 	addi	r8,r8,4
    32f8:	59fffa36 	bltu	r11,r7,32e4 <__alt_data_end+0xff0032e4>
    32fc:	213fff04 	addi	r4,r4,-4
    3300:	2008d0ba 	srli	r4,r4,2
    3304:	318000cc 	andi	r6,r6,3
    3308:	21000044 	addi	r4,r4,1
    330c:	2109883a 	add	r4,r4,r4
    3310:	2109883a 	add	r4,r4,r4
    3314:	1907883a 	add	r3,r3,r4
    3318:	290b883a 	add	r5,r5,r4
    331c:	30000626 	beq	r6,zero,3338 <memcpy+0x11c>
    3320:	198d883a 	add	r6,r3,r6
    3324:	29c00003 	ldbu	r7,0(r5)
    3328:	18c00044 	addi	r3,r3,1
    332c:	29400044 	addi	r5,r5,1
    3330:	19ffffc5 	stb	r7,-1(r3)
    3334:	19bffb1e 	bne	r3,r6,3324 <__alt_data_end+0xff003324>
    3338:	dfc00217 	ldw	ra,8(sp)
    333c:	dc400117 	ldw	r17,4(sp)
    3340:	dc000017 	ldw	r16,0(sp)
    3344:	dec00304 	addi	sp,sp,12
    3348:	f800283a 	ret
    334c:	2007883a 	mov	r3,r4
    3350:	003ff206 	br	331c <__alt_data_end+0xff00331c>
    3354:	2007883a 	mov	r3,r4
    3358:	003ff106 	br	3320 <__alt_data_end+0xff003320>
    335c:	200d883a 	mov	r6,r4
    3360:	003fee06 	br	331c <__alt_data_end+0xff00331c>

00003364 <_printf_r>:
    3364:	defffd04 	addi	sp,sp,-12
    3368:	2805883a 	mov	r2,r5
    336c:	dfc00015 	stw	ra,0(sp)
    3370:	d9800115 	stw	r6,4(sp)
    3374:	d9c00215 	stw	r7,8(sp)
    3378:	21400217 	ldw	r5,8(r4)
    337c:	d9c00104 	addi	r7,sp,4
    3380:	100d883a 	mov	r6,r2
    3384:	00035900 	call	3590 <___vfprintf_internal_r>
    3388:	dfc00017 	ldw	ra,0(sp)
    338c:	dec00304 	addi	sp,sp,12
    3390:	f800283a 	ret

00003394 <printf>:
    3394:	defffc04 	addi	sp,sp,-16
    3398:	dfc00015 	stw	ra,0(sp)
    339c:	d9400115 	stw	r5,4(sp)
    33a0:	d9800215 	stw	r6,8(sp)
    33a4:	d9c00315 	stw	r7,12(sp)
    33a8:	00800074 	movhi	r2,1
    33ac:	108fe904 	addi	r2,r2,16292
    33b0:	10800017 	ldw	r2,0(r2)
    33b4:	200b883a 	mov	r5,r4
    33b8:	d9800104 	addi	r6,sp,4
    33bc:	11000217 	ldw	r4,8(r2)
    33c0:	00057880 	call	5788 <__vfprintf_internal>
    33c4:	dfc00017 	ldw	ra,0(sp)
    33c8:	dec00404 	addi	sp,sp,16
    33cc:	f800283a 	ret

000033d0 <_puts_r>:
    33d0:	defff604 	addi	sp,sp,-40
    33d4:	dc000715 	stw	r16,28(sp)
    33d8:	2021883a 	mov	r16,r4
    33dc:	2809883a 	mov	r4,r5
    33e0:	dc400815 	stw	r17,32(sp)
    33e4:	dfc00915 	stw	ra,36(sp)
    33e8:	2823883a 	mov	r17,r5
    33ec:	00034f80 	call	34f8 <strlen>
    33f0:	10c00044 	addi	r3,r2,1
    33f4:	d8800115 	stw	r2,4(sp)
    33f8:	00800074 	movhi	r2,1
    33fc:	10886004 	addi	r2,r2,8576
    3400:	d8800215 	stw	r2,8(sp)
    3404:	00800044 	movi	r2,1
    3408:	d8800315 	stw	r2,12(sp)
    340c:	00800084 	movi	r2,2
    3410:	dc400015 	stw	r17,0(sp)
    3414:	d8c00615 	stw	r3,24(sp)
    3418:	dec00415 	stw	sp,16(sp)
    341c:	d8800515 	stw	r2,20(sp)
    3420:	80000226 	beq	r16,zero,342c <_puts_r+0x5c>
    3424:	80800e17 	ldw	r2,56(r16)
    3428:	10001426 	beq	r2,zero,347c <_puts_r+0xac>
    342c:	81400217 	ldw	r5,8(r16)
    3430:	2880030b 	ldhu	r2,12(r5)
    3434:	10c8000c 	andi	r3,r2,8192
    3438:	1800061e 	bne	r3,zero,3454 <_puts_r+0x84>
    343c:	29001917 	ldw	r4,100(r5)
    3440:	00f7ffc4 	movi	r3,-8193
    3444:	10880014 	ori	r2,r2,8192
    3448:	20c6703a 	and	r3,r4,r3
    344c:	2880030d 	sth	r2,12(r5)
    3450:	28c01915 	stw	r3,100(r5)
    3454:	d9800404 	addi	r6,sp,16
    3458:	8009883a 	mov	r4,r16
    345c:	0007cb80 	call	7cb8 <__sfvwrite_r>
    3460:	1000091e 	bne	r2,zero,3488 <_puts_r+0xb8>
    3464:	00800284 	movi	r2,10
    3468:	dfc00917 	ldw	ra,36(sp)
    346c:	dc400817 	ldw	r17,32(sp)
    3470:	dc000717 	ldw	r16,28(sp)
    3474:	dec00a04 	addi	sp,sp,40
    3478:	f800283a 	ret
    347c:	8009883a 	mov	r4,r16
    3480:	00078340 	call	7834 <__sinit>
    3484:	003fe906 	br	342c <__alt_data_end+0xff00342c>
    3488:	00bfffc4 	movi	r2,-1
    348c:	003ff606 	br	3468 <__alt_data_end+0xff003468>

00003490 <puts>:
    3490:	00800074 	movhi	r2,1
    3494:	108fe904 	addi	r2,r2,16292
    3498:	200b883a 	mov	r5,r4
    349c:	11000017 	ldw	r4,0(r2)
    34a0:	00033d01 	jmpi	33d0 <_puts_r>

000034a4 <_sbrk_r>:
    34a4:	defffd04 	addi	sp,sp,-12
    34a8:	dc000015 	stw	r16,0(sp)
    34ac:	04000074 	movhi	r16,1
    34b0:	dc400115 	stw	r17,4(sp)
    34b4:	8416be04 	addi	r16,r16,23288
    34b8:	2023883a 	mov	r17,r4
    34bc:	2809883a 	mov	r4,r5
    34c0:	dfc00215 	stw	ra,8(sp)
    34c4:	80000015 	stw	zero,0(r16)
    34c8:	000fa2c0 	call	fa2c <sbrk>
    34cc:	00ffffc4 	movi	r3,-1
    34d0:	10c00526 	beq	r2,r3,34e8 <_sbrk_r+0x44>
    34d4:	dfc00217 	ldw	ra,8(sp)
    34d8:	dc400117 	ldw	r17,4(sp)
    34dc:	dc000017 	ldw	r16,0(sp)
    34e0:	dec00304 	addi	sp,sp,12
    34e4:	f800283a 	ret
    34e8:	80c00017 	ldw	r3,0(r16)
    34ec:	183ff926 	beq	r3,zero,34d4 <__alt_data_end+0xff0034d4>
    34f0:	88c00015 	stw	r3,0(r17)
    34f4:	003ff706 	br	34d4 <__alt_data_end+0xff0034d4>

000034f8 <strlen>:
    34f8:	208000cc 	andi	r2,r4,3
    34fc:	10002026 	beq	r2,zero,3580 <strlen+0x88>
    3500:	20800007 	ldb	r2,0(r4)
    3504:	10002026 	beq	r2,zero,3588 <strlen+0x90>
    3508:	2005883a 	mov	r2,r4
    350c:	00000206 	br	3518 <strlen+0x20>
    3510:	10c00007 	ldb	r3,0(r2)
    3514:	18001826 	beq	r3,zero,3578 <strlen+0x80>
    3518:	10800044 	addi	r2,r2,1
    351c:	10c000cc 	andi	r3,r2,3
    3520:	183ffb1e 	bne	r3,zero,3510 <__alt_data_end+0xff003510>
    3524:	10c00017 	ldw	r3,0(r2)
    3528:	01ffbff4 	movhi	r7,65279
    352c:	39ffbfc4 	addi	r7,r7,-257
    3530:	00ca303a 	nor	r5,zero,r3
    3534:	01a02074 	movhi	r6,32897
    3538:	19c7883a 	add	r3,r3,r7
    353c:	31a02004 	addi	r6,r6,-32640
    3540:	1946703a 	and	r3,r3,r5
    3544:	1986703a 	and	r3,r3,r6
    3548:	1800091e 	bne	r3,zero,3570 <strlen+0x78>
    354c:	10800104 	addi	r2,r2,4
    3550:	10c00017 	ldw	r3,0(r2)
    3554:	19cb883a 	add	r5,r3,r7
    3558:	00c6303a 	nor	r3,zero,r3
    355c:	28c6703a 	and	r3,r5,r3
    3560:	1986703a 	and	r3,r3,r6
    3564:	183ff926 	beq	r3,zero,354c <__alt_data_end+0xff00354c>
    3568:	00000106 	br	3570 <strlen+0x78>
    356c:	10800044 	addi	r2,r2,1
    3570:	10c00007 	ldb	r3,0(r2)
    3574:	183ffd1e 	bne	r3,zero,356c <__alt_data_end+0xff00356c>
    3578:	1105c83a 	sub	r2,r2,r4
    357c:	f800283a 	ret
    3580:	2005883a 	mov	r2,r4
    3584:	003fe706 	br	3524 <__alt_data_end+0xff003524>
    3588:	0005883a 	mov	r2,zero
    358c:	f800283a 	ret

00003590 <___vfprintf_internal_r>:
    3590:	deffb804 	addi	sp,sp,-288
    3594:	dfc04715 	stw	ra,284(sp)
    3598:	ddc04515 	stw	r23,276(sp)
    359c:	dd404315 	stw	r21,268(sp)
    35a0:	d9002c15 	stw	r4,176(sp)
    35a4:	282f883a 	mov	r23,r5
    35a8:	302b883a 	mov	r21,r6
    35ac:	d9c02d15 	stw	r7,180(sp)
    35b0:	df004615 	stw	fp,280(sp)
    35b4:	dd804415 	stw	r22,272(sp)
    35b8:	dd004215 	stw	r20,264(sp)
    35bc:	dcc04115 	stw	r19,260(sp)
    35c0:	dc804015 	stw	r18,256(sp)
    35c4:	dc403f15 	stw	r17,252(sp)
    35c8:	dc003e15 	stw	r16,248(sp)
    35cc:	00083a80 	call	83a8 <_localeconv_r>
    35d0:	10800017 	ldw	r2,0(r2)
    35d4:	1009883a 	mov	r4,r2
    35d8:	d8803415 	stw	r2,208(sp)
    35dc:	00034f80 	call	34f8 <strlen>
    35e0:	d8803715 	stw	r2,220(sp)
    35e4:	d8802c17 	ldw	r2,176(sp)
    35e8:	10000226 	beq	r2,zero,35f4 <___vfprintf_internal_r+0x64>
    35ec:	10800e17 	ldw	r2,56(r2)
    35f0:	1000f926 	beq	r2,zero,39d8 <___vfprintf_internal_r+0x448>
    35f4:	b880030b 	ldhu	r2,12(r23)
    35f8:	10c8000c 	andi	r3,r2,8192
    35fc:	1800061e 	bne	r3,zero,3618 <___vfprintf_internal_r+0x88>
    3600:	b9001917 	ldw	r4,100(r23)
    3604:	00f7ffc4 	movi	r3,-8193
    3608:	10880014 	ori	r2,r2,8192
    360c:	20c6703a 	and	r3,r4,r3
    3610:	b880030d 	sth	r2,12(r23)
    3614:	b8c01915 	stw	r3,100(r23)
    3618:	10c0020c 	andi	r3,r2,8
    361c:	1800c126 	beq	r3,zero,3924 <___vfprintf_internal_r+0x394>
    3620:	b8c00417 	ldw	r3,16(r23)
    3624:	1800bf26 	beq	r3,zero,3924 <___vfprintf_internal_r+0x394>
    3628:	1080068c 	andi	r2,r2,26
    362c:	00c00284 	movi	r3,10
    3630:	10c0c426 	beq	r2,r3,3944 <___vfprintf_internal_r+0x3b4>
    3634:	d8c00404 	addi	r3,sp,16
    3638:	05000074 	movhi	r20,1
    363c:	d9001e04 	addi	r4,sp,120
    3640:	a508ce84 	addi	r20,r20,9018
    3644:	d8c01e15 	stw	r3,120(sp)
    3648:	d8002015 	stw	zero,128(sp)
    364c:	d8001f15 	stw	zero,124(sp)
    3650:	d8003315 	stw	zero,204(sp)
    3654:	d8003615 	stw	zero,216(sp)
    3658:	d8003815 	stw	zero,224(sp)
    365c:	1811883a 	mov	r8,r3
    3660:	d8003915 	stw	zero,228(sp)
    3664:	d8003a15 	stw	zero,232(sp)
    3668:	d8002f15 	stw	zero,188(sp)
    366c:	d9002815 	stw	r4,160(sp)
    3670:	a8800007 	ldb	r2,0(r21)
    3674:	10027b26 	beq	r2,zero,4064 <___vfprintf_internal_r+0xad4>
    3678:	00c00944 	movi	r3,37
    367c:	a821883a 	mov	r16,r21
    3680:	10c0021e 	bne	r2,r3,368c <___vfprintf_internal_r+0xfc>
    3684:	00001406 	br	36d8 <___vfprintf_internal_r+0x148>
    3688:	10c00326 	beq	r2,r3,3698 <___vfprintf_internal_r+0x108>
    368c:	84000044 	addi	r16,r16,1
    3690:	80800007 	ldb	r2,0(r16)
    3694:	103ffc1e 	bne	r2,zero,3688 <__alt_data_end+0xff003688>
    3698:	8563c83a 	sub	r17,r16,r21
    369c:	88000e26 	beq	r17,zero,36d8 <___vfprintf_internal_r+0x148>
    36a0:	d8c02017 	ldw	r3,128(sp)
    36a4:	d8801f17 	ldw	r2,124(sp)
    36a8:	45400015 	stw	r21,0(r8)
    36ac:	1c47883a 	add	r3,r3,r17
    36b0:	10800044 	addi	r2,r2,1
    36b4:	d8c02015 	stw	r3,128(sp)
    36b8:	44400115 	stw	r17,4(r8)
    36bc:	d8801f15 	stw	r2,124(sp)
    36c0:	00c001c4 	movi	r3,7
    36c4:	1880a716 	blt	r3,r2,3964 <___vfprintf_internal_r+0x3d4>
    36c8:	42000204 	addi	r8,r8,8
    36cc:	d9402f17 	ldw	r5,188(sp)
    36d0:	2c4b883a 	add	r5,r5,r17
    36d4:	d9402f15 	stw	r5,188(sp)
    36d8:	80800007 	ldb	r2,0(r16)
    36dc:	1000a826 	beq	r2,zero,3980 <___vfprintf_internal_r+0x3f0>
    36e0:	84400047 	ldb	r17,1(r16)
    36e4:	00bfffc4 	movi	r2,-1
    36e8:	85400044 	addi	r21,r16,1
    36ec:	d8002785 	stb	zero,158(sp)
    36f0:	0007883a 	mov	r3,zero
    36f4:	000f883a 	mov	r7,zero
    36f8:	d8802915 	stw	r2,164(sp)
    36fc:	d8003115 	stw	zero,196(sp)
    3700:	0025883a 	mov	r18,zero
    3704:	01401604 	movi	r5,88
    3708:	01800244 	movi	r6,9
    370c:	02800a84 	movi	r10,42
    3710:	02401b04 	movi	r9,108
    3714:	ad400044 	addi	r21,r21,1
    3718:	88bff804 	addi	r2,r17,-32
    371c:	28830436 	bltu	r5,r2,4330 <___vfprintf_internal_r+0xda0>
    3720:	100490ba 	slli	r2,r2,2
    3724:	01000034 	movhi	r4,0
    3728:	210dce04 	addi	r4,r4,14136
    372c:	1105883a 	add	r2,r2,r4
    3730:	10800017 	ldw	r2,0(r2)
    3734:	1000683a 	jmp	r2
    3738:	00004250 	cmplti	zero,zero,265
    373c:	00004330 	cmpltui	zero,zero,268
    3740:	00004330 	cmpltui	zero,zero,268
    3744:	00004270 	cmpltui	zero,zero,265
    3748:	00004330 	cmpltui	zero,zero,268
    374c:	00004330 	cmpltui	zero,zero,268
    3750:	00004330 	cmpltui	zero,zero,268
    3754:	00004330 	cmpltui	zero,zero,268
    3758:	00004330 	cmpltui	zero,zero,268
    375c:	00004330 	cmpltui	zero,zero,268
    3760:	000039e4 	muli	zero,zero,231
    3764:	0000418c 	andi	zero,zero,262
    3768:	00004330 	cmpltui	zero,zero,268
    376c:	000038ac 	andhi	zero,zero,226
    3770:	00003a0c 	andi	zero,zero,232
    3774:	00004330 	cmpltui	zero,zero,268
    3778:	00003a4c 	andi	zero,zero,233
    377c:	00003a58 	cmpnei	zero,zero,233
    3780:	00003a58 	cmpnei	zero,zero,233
    3784:	00003a58 	cmpnei	zero,zero,233
    3788:	00003a58 	cmpnei	zero,zero,233
    378c:	00003a58 	cmpnei	zero,zero,233
    3790:	00003a58 	cmpnei	zero,zero,233
    3794:	00003a58 	cmpnei	zero,zero,233
    3798:	00003a58 	cmpnei	zero,zero,233
    379c:	00003a58 	cmpnei	zero,zero,233
    37a0:	00004330 	cmpltui	zero,zero,268
    37a4:	00004330 	cmpltui	zero,zero,268
    37a8:	00004330 	cmpltui	zero,zero,268
    37ac:	00004330 	cmpltui	zero,zero,268
    37b0:	00004330 	cmpltui	zero,zero,268
    37b4:	00004330 	cmpltui	zero,zero,268
    37b8:	00004330 	cmpltui	zero,zero,268
    37bc:	00004330 	cmpltui	zero,zero,268
    37c0:	00004330 	cmpltui	zero,zero,268
    37c4:	00004330 	cmpltui	zero,zero,268
    37c8:	00003a8c 	andi	zero,zero,234
    37cc:	00003b48 	cmpgei	zero,zero,237
    37d0:	00004330 	cmpltui	zero,zero,268
    37d4:	00003b48 	cmpgei	zero,zero,237
    37d8:	00004330 	cmpltui	zero,zero,268
    37dc:	00004330 	cmpltui	zero,zero,268
    37e0:	00004330 	cmpltui	zero,zero,268
    37e4:	00004330 	cmpltui	zero,zero,268
    37e8:	00003be8 	cmpgeui	zero,zero,239
    37ec:	00004330 	cmpltui	zero,zero,268
    37f0:	00004330 	cmpltui	zero,zero,268
    37f4:	00003bf4 	movhi	zero,239
    37f8:	00004330 	cmpltui	zero,zero,268
    37fc:	00004330 	cmpltui	zero,zero,268
    3800:	00004330 	cmpltui	zero,zero,268
    3804:	00004330 	cmpltui	zero,zero,268
    3808:	00004330 	cmpltui	zero,zero,268
    380c:	0000406c 	andhi	zero,zero,257
    3810:	00004330 	cmpltui	zero,zero,268
    3814:	00004330 	cmpltui	zero,zero,268
    3818:	000040cc 	andi	zero,zero,259
    381c:	00004330 	cmpltui	zero,zero,268
    3820:	00004330 	cmpltui	zero,zero,268
    3824:	00004330 	cmpltui	zero,zero,268
    3828:	00004330 	cmpltui	zero,zero,268
    382c:	00004330 	cmpltui	zero,zero,268
    3830:	00004330 	cmpltui	zero,zero,268
    3834:	00004330 	cmpltui	zero,zero,268
    3838:	00004330 	cmpltui	zero,zero,268
    383c:	00004330 	cmpltui	zero,zero,268
    3840:	00004330 	cmpltui	zero,zero,268
    3844:	000042dc 	xori	zero,zero,267
    3848:	0000427c 	xorhi	zero,zero,265
    384c:	00003b48 	cmpgei	zero,zero,237
    3850:	00003b48 	cmpgei	zero,zero,237
    3854:	00003b48 	cmpgei	zero,zero,237
    3858:	0000428c 	andi	zero,zero,266
    385c:	0000427c 	xorhi	zero,zero,265
    3860:	00004330 	cmpltui	zero,zero,268
    3864:	00004330 	cmpltui	zero,zero,268
    3868:	00004298 	cmpnei	zero,zero,266
    386c:	00004330 	cmpltui	zero,zero,268
    3870:	000042a8 	cmpgeui	zero,zero,266
    3874:	0000417c 	xorhi	zero,zero,261
    3878:	000038b8 	rdprs	zero,zero,226
    387c:	0000419c 	xori	zero,zero,262
    3880:	00004330 	cmpltui	zero,zero,268
    3884:	000041a8 	cmpgeui	zero,zero,262
    3888:	00004330 	cmpltui	zero,zero,268
    388c:	00004204 	movi	zero,264
    3890:	00004330 	cmpltui	zero,zero,268
    3894:	00004330 	cmpltui	zero,zero,268
    3898:	00004214 	movui	zero,264
    389c:	d9003117 	ldw	r4,196(sp)
    38a0:	d8802d15 	stw	r2,180(sp)
    38a4:	0109c83a 	sub	r4,zero,r4
    38a8:	d9003115 	stw	r4,196(sp)
    38ac:	94800114 	ori	r18,r18,4
    38b0:	ac400007 	ldb	r17,0(r21)
    38b4:	003f9706 	br	3714 <__alt_data_end+0xff003714>
    38b8:	00800c04 	movi	r2,48
    38bc:	d9002d17 	ldw	r4,180(sp)
    38c0:	d9402917 	ldw	r5,164(sp)
    38c4:	d8802705 	stb	r2,156(sp)
    38c8:	00801e04 	movi	r2,120
    38cc:	d8802745 	stb	r2,157(sp)
    38d0:	d8002785 	stb	zero,158(sp)
    38d4:	20c00104 	addi	r3,r4,4
    38d8:	24c00017 	ldw	r19,0(r4)
    38dc:	002d883a 	mov	r22,zero
    38e0:	90800094 	ori	r2,r18,2
    38e4:	28029a16 	blt	r5,zero,4350 <___vfprintf_internal_r+0xdc0>
    38e8:	00bfdfc4 	movi	r2,-129
    38ec:	90a4703a 	and	r18,r18,r2
    38f0:	d8c02d15 	stw	r3,180(sp)
    38f4:	94800094 	ori	r18,r18,2
    38f8:	9802871e 	bne	r19,zero,4318 <___vfprintf_internal_r+0xd88>
    38fc:	00800074 	movhi	r2,1
    3900:	1088c704 	addi	r2,r2,8988
    3904:	d8803915 	stw	r2,228(sp)
    3908:	04401e04 	movi	r17,120
    390c:	d8802917 	ldw	r2,164(sp)
    3910:	0039883a 	mov	fp,zero
    3914:	1001e926 	beq	r2,zero,40bc <___vfprintf_internal_r+0xb2c>
    3918:	0027883a 	mov	r19,zero
    391c:	002d883a 	mov	r22,zero
    3920:	00020506 	br	4138 <___vfprintf_internal_r+0xba8>
    3924:	d9002c17 	ldw	r4,176(sp)
    3928:	b80b883a 	mov	r5,r23
    392c:	00058600 	call	5860 <__swsetup_r>
    3930:	1005ac1e 	bne	r2,zero,4fe4 <___vfprintf_internal_r+0x1a54>
    3934:	b880030b 	ldhu	r2,12(r23)
    3938:	00c00284 	movi	r3,10
    393c:	1080068c 	andi	r2,r2,26
    3940:	10ff3c1e 	bne	r2,r3,3634 <__alt_data_end+0xff003634>
    3944:	b880038f 	ldh	r2,14(r23)
    3948:	103f3a16 	blt	r2,zero,3634 <__alt_data_end+0xff003634>
    394c:	d9c02d17 	ldw	r7,180(sp)
    3950:	d9002c17 	ldw	r4,176(sp)
    3954:	a80d883a 	mov	r6,r21
    3958:	b80b883a 	mov	r5,r23
    395c:	00057a40 	call	57a4 <__sbprintf>
    3960:	00001106 	br	39a8 <___vfprintf_internal_r+0x418>
    3964:	d9002c17 	ldw	r4,176(sp)
    3968:	d9801e04 	addi	r6,sp,120
    396c:	b80b883a 	mov	r5,r23
    3970:	000a1e40 	call	a1e4 <__sprint_r>
    3974:	1000081e 	bne	r2,zero,3998 <___vfprintf_internal_r+0x408>
    3978:	da000404 	addi	r8,sp,16
    397c:	003f5306 	br	36cc <__alt_data_end+0xff0036cc>
    3980:	d8802017 	ldw	r2,128(sp)
    3984:	10000426 	beq	r2,zero,3998 <___vfprintf_internal_r+0x408>
    3988:	d9002c17 	ldw	r4,176(sp)
    398c:	d9801e04 	addi	r6,sp,120
    3990:	b80b883a 	mov	r5,r23
    3994:	000a1e40 	call	a1e4 <__sprint_r>
    3998:	b880030b 	ldhu	r2,12(r23)
    399c:	1080100c 	andi	r2,r2,64
    39a0:	1005901e 	bne	r2,zero,4fe4 <___vfprintf_internal_r+0x1a54>
    39a4:	d8802f17 	ldw	r2,188(sp)
    39a8:	dfc04717 	ldw	ra,284(sp)
    39ac:	df004617 	ldw	fp,280(sp)
    39b0:	ddc04517 	ldw	r23,276(sp)
    39b4:	dd804417 	ldw	r22,272(sp)
    39b8:	dd404317 	ldw	r21,268(sp)
    39bc:	dd004217 	ldw	r20,264(sp)
    39c0:	dcc04117 	ldw	r19,260(sp)
    39c4:	dc804017 	ldw	r18,256(sp)
    39c8:	dc403f17 	ldw	r17,252(sp)
    39cc:	dc003e17 	ldw	r16,248(sp)
    39d0:	dec04804 	addi	sp,sp,288
    39d4:	f800283a 	ret
    39d8:	d9002c17 	ldw	r4,176(sp)
    39dc:	00078340 	call	7834 <__sinit>
    39e0:	003f0406 	br	35f4 <__alt_data_end+0xff0035f4>
    39e4:	d8802d17 	ldw	r2,180(sp)
    39e8:	d9002d17 	ldw	r4,180(sp)
    39ec:	10800017 	ldw	r2,0(r2)
    39f0:	d8803115 	stw	r2,196(sp)
    39f4:	20800104 	addi	r2,r4,4
    39f8:	d9003117 	ldw	r4,196(sp)
    39fc:	203fa716 	blt	r4,zero,389c <__alt_data_end+0xff00389c>
    3a00:	d8802d15 	stw	r2,180(sp)
    3a04:	ac400007 	ldb	r17,0(r21)
    3a08:	003f4206 	br	3714 <__alt_data_end+0xff003714>
    3a0c:	ac400007 	ldb	r17,0(r21)
    3a10:	aac00044 	addi	r11,r21,1
    3a14:	8a872826 	beq	r17,r10,56b8 <___vfprintf_internal_r+0x2128>
    3a18:	88bff404 	addi	r2,r17,-48
    3a1c:	0009883a 	mov	r4,zero
    3a20:	30867d36 	bltu	r6,r2,5418 <___vfprintf_internal_r+0x1e88>
    3a24:	5c400007 	ldb	r17,0(r11)
    3a28:	210002a4 	muli	r4,r4,10
    3a2c:	5d400044 	addi	r21,r11,1
    3a30:	a817883a 	mov	r11,r21
    3a34:	2089883a 	add	r4,r4,r2
    3a38:	88bff404 	addi	r2,r17,-48
    3a3c:	30bff92e 	bgeu	r6,r2,3a24 <__alt_data_end+0xff003a24>
    3a40:	2005c916 	blt	r4,zero,5168 <___vfprintf_internal_r+0x1bd8>
    3a44:	d9002915 	stw	r4,164(sp)
    3a48:	003f3306 	br	3718 <__alt_data_end+0xff003718>
    3a4c:	94802014 	ori	r18,r18,128
    3a50:	ac400007 	ldb	r17,0(r21)
    3a54:	003f2f06 	br	3714 <__alt_data_end+0xff003714>
    3a58:	a809883a 	mov	r4,r21
    3a5c:	d8003115 	stw	zero,196(sp)
    3a60:	88bff404 	addi	r2,r17,-48
    3a64:	0017883a 	mov	r11,zero
    3a68:	24400007 	ldb	r17,0(r4)
    3a6c:	5ac002a4 	muli	r11,r11,10
    3a70:	ad400044 	addi	r21,r21,1
    3a74:	a809883a 	mov	r4,r21
    3a78:	12d7883a 	add	r11,r2,r11
    3a7c:	88bff404 	addi	r2,r17,-48
    3a80:	30bff92e 	bgeu	r6,r2,3a68 <__alt_data_end+0xff003a68>
    3a84:	dac03115 	stw	r11,196(sp)
    3a88:	003f2306 	br	3718 <__alt_data_end+0xff003718>
    3a8c:	18c03fcc 	andi	r3,r3,255
    3a90:	18072b1e 	bne	r3,zero,5740 <___vfprintf_internal_r+0x21b0>
    3a94:	94800414 	ori	r18,r18,16
    3a98:	9080080c 	andi	r2,r18,32
    3a9c:	10037b26 	beq	r2,zero,488c <___vfprintf_internal_r+0x12fc>
    3aa0:	d9402d17 	ldw	r5,180(sp)
    3aa4:	28800117 	ldw	r2,4(r5)
    3aa8:	2cc00017 	ldw	r19,0(r5)
    3aac:	29400204 	addi	r5,r5,8
    3ab0:	d9402d15 	stw	r5,180(sp)
    3ab4:	102d883a 	mov	r22,r2
    3ab8:	10044b16 	blt	r2,zero,4be8 <___vfprintf_internal_r+0x1658>
    3abc:	d9402917 	ldw	r5,164(sp)
    3ac0:	df002783 	ldbu	fp,158(sp)
    3ac4:	2803bc16 	blt	r5,zero,49b8 <___vfprintf_internal_r+0x1428>
    3ac8:	00ffdfc4 	movi	r3,-129
    3acc:	9d84b03a 	or	r2,r19,r22
    3ad0:	90e4703a 	and	r18,r18,r3
    3ad4:	10017726 	beq	r2,zero,40b4 <___vfprintf_internal_r+0xb24>
    3ad8:	b0038326 	beq	r22,zero,48e8 <___vfprintf_internal_r+0x1358>
    3adc:	dc402a15 	stw	r17,168(sp)
    3ae0:	dc001e04 	addi	r16,sp,120
    3ae4:	b023883a 	mov	r17,r22
    3ae8:	402d883a 	mov	r22,r8
    3aec:	9809883a 	mov	r4,r19
    3af0:	880b883a 	mov	r5,r17
    3af4:	01800284 	movi	r6,10
    3af8:	000f883a 	mov	r7,zero
    3afc:	000c5dc0 	call	c5dc <__umoddi3>
    3b00:	10800c04 	addi	r2,r2,48
    3b04:	843fffc4 	addi	r16,r16,-1
    3b08:	9809883a 	mov	r4,r19
    3b0c:	880b883a 	mov	r5,r17
    3b10:	80800005 	stb	r2,0(r16)
    3b14:	01800284 	movi	r6,10
    3b18:	000f883a 	mov	r7,zero
    3b1c:	000c0640 	call	c064 <__udivdi3>
    3b20:	1027883a 	mov	r19,r2
    3b24:	10c4b03a 	or	r2,r2,r3
    3b28:	1823883a 	mov	r17,r3
    3b2c:	103fef1e 	bne	r2,zero,3aec <__alt_data_end+0xff003aec>
    3b30:	d8c02817 	ldw	r3,160(sp)
    3b34:	dc402a17 	ldw	r17,168(sp)
    3b38:	b011883a 	mov	r8,r22
    3b3c:	1c07c83a 	sub	r3,r3,r16
    3b40:	d8c02e15 	stw	r3,184(sp)
    3b44:	00005906 	br	3cac <___vfprintf_internal_r+0x71c>
    3b48:	18c03fcc 	andi	r3,r3,255
    3b4c:	1806fa1e 	bne	r3,zero,5738 <___vfprintf_internal_r+0x21a8>
    3b50:	9080020c 	andi	r2,r18,8
    3b54:	10048a26 	beq	r2,zero,4d80 <___vfprintf_internal_r+0x17f0>
    3b58:	d8c02d17 	ldw	r3,180(sp)
    3b5c:	d9002d17 	ldw	r4,180(sp)
    3b60:	d9402d17 	ldw	r5,180(sp)
    3b64:	18c00017 	ldw	r3,0(r3)
    3b68:	21000117 	ldw	r4,4(r4)
    3b6c:	29400204 	addi	r5,r5,8
    3b70:	d8c03615 	stw	r3,216(sp)
    3b74:	d9003815 	stw	r4,224(sp)
    3b78:	d9402d15 	stw	r5,180(sp)
    3b7c:	d9003617 	ldw	r4,216(sp)
    3b80:	d9403817 	ldw	r5,224(sp)
    3b84:	da003d15 	stw	r8,244(sp)
    3b88:	04000044 	movi	r16,1
    3b8c:	0009e5c0 	call	9e5c <__fpclassifyd>
    3b90:	da003d17 	ldw	r8,244(sp)
    3b94:	14041f1e 	bne	r2,r16,4c14 <___vfprintf_internal_r+0x1684>
    3b98:	d9003617 	ldw	r4,216(sp)
    3b9c:	d9403817 	ldw	r5,224(sp)
    3ba0:	000d883a 	mov	r6,zero
    3ba4:	000f883a 	mov	r7,zero
    3ba8:	000dfc00 	call	dfc0 <__ledf2>
    3bac:	da003d17 	ldw	r8,244(sp)
    3bb0:	1005be16 	blt	r2,zero,52ac <___vfprintf_internal_r+0x1d1c>
    3bb4:	df002783 	ldbu	fp,158(sp)
    3bb8:	008011c4 	movi	r2,71
    3bbc:	1445330e 	bge	r2,r17,508c <___vfprintf_internal_r+0x1afc>
    3bc0:	04000074 	movhi	r16,1
    3bc4:	8408bf04 	addi	r16,r16,8956
    3bc8:	00c000c4 	movi	r3,3
    3bcc:	00bfdfc4 	movi	r2,-129
    3bd0:	d8c02a15 	stw	r3,168(sp)
    3bd4:	90a4703a 	and	r18,r18,r2
    3bd8:	d8c02e15 	stw	r3,184(sp)
    3bdc:	d8002915 	stw	zero,164(sp)
    3be0:	d8003215 	stw	zero,200(sp)
    3be4:	00003706 	br	3cc4 <___vfprintf_internal_r+0x734>
    3be8:	94800214 	ori	r18,r18,8
    3bec:	ac400007 	ldb	r17,0(r21)
    3bf0:	003ec806 	br	3714 <__alt_data_end+0xff003714>
    3bf4:	18c03fcc 	andi	r3,r3,255
    3bf8:	1806db1e 	bne	r3,zero,5768 <___vfprintf_internal_r+0x21d8>
    3bfc:	94800414 	ori	r18,r18,16
    3c00:	9080080c 	andi	r2,r18,32
    3c04:	1002d826 	beq	r2,zero,4768 <___vfprintf_internal_r+0x11d8>
    3c08:	d9402d17 	ldw	r5,180(sp)
    3c0c:	d8c02917 	ldw	r3,164(sp)
    3c10:	d8002785 	stb	zero,158(sp)
    3c14:	28800204 	addi	r2,r5,8
    3c18:	2cc00017 	ldw	r19,0(r5)
    3c1c:	2d800117 	ldw	r22,4(r5)
    3c20:	18048f16 	blt	r3,zero,4e60 <___vfprintf_internal_r+0x18d0>
    3c24:	013fdfc4 	movi	r4,-129
    3c28:	9d86b03a 	or	r3,r19,r22
    3c2c:	d8802d15 	stw	r2,180(sp)
    3c30:	9124703a 	and	r18,r18,r4
    3c34:	1802d91e 	bne	r3,zero,479c <___vfprintf_internal_r+0x120c>
    3c38:	d8c02917 	ldw	r3,164(sp)
    3c3c:	0039883a 	mov	fp,zero
    3c40:	1805c326 	beq	r3,zero,5350 <___vfprintf_internal_r+0x1dc0>
    3c44:	0027883a 	mov	r19,zero
    3c48:	002d883a 	mov	r22,zero
    3c4c:	dc001e04 	addi	r16,sp,120
    3c50:	9806d0fa 	srli	r3,r19,3
    3c54:	b008977a 	slli	r4,r22,29
    3c58:	b02cd0fa 	srli	r22,r22,3
    3c5c:	9cc001cc 	andi	r19,r19,7
    3c60:	98800c04 	addi	r2,r19,48
    3c64:	843fffc4 	addi	r16,r16,-1
    3c68:	20e6b03a 	or	r19,r4,r3
    3c6c:	80800005 	stb	r2,0(r16)
    3c70:	9d86b03a 	or	r3,r19,r22
    3c74:	183ff61e 	bne	r3,zero,3c50 <__alt_data_end+0xff003c50>
    3c78:	90c0004c 	andi	r3,r18,1
    3c7c:	18013b26 	beq	r3,zero,416c <___vfprintf_internal_r+0xbdc>
    3c80:	10803fcc 	andi	r2,r2,255
    3c84:	1080201c 	xori	r2,r2,128
    3c88:	10bfe004 	addi	r2,r2,-128
    3c8c:	00c00c04 	movi	r3,48
    3c90:	10c13626 	beq	r2,r3,416c <___vfprintf_internal_r+0xbdc>
    3c94:	80ffffc5 	stb	r3,-1(r16)
    3c98:	d8c02817 	ldw	r3,160(sp)
    3c9c:	80bfffc4 	addi	r2,r16,-1
    3ca0:	1021883a 	mov	r16,r2
    3ca4:	1887c83a 	sub	r3,r3,r2
    3ca8:	d8c02e15 	stw	r3,184(sp)
    3cac:	d8802e17 	ldw	r2,184(sp)
    3cb0:	d9002917 	ldw	r4,164(sp)
    3cb4:	1100010e 	bge	r2,r4,3cbc <___vfprintf_internal_r+0x72c>
    3cb8:	2005883a 	mov	r2,r4
    3cbc:	d8802a15 	stw	r2,168(sp)
    3cc0:	d8003215 	stw	zero,200(sp)
    3cc4:	e7003fcc 	andi	fp,fp,255
    3cc8:	e700201c 	xori	fp,fp,128
    3ccc:	e73fe004 	addi	fp,fp,-128
    3cd0:	e0000326 	beq	fp,zero,3ce0 <___vfprintf_internal_r+0x750>
    3cd4:	d8c02a17 	ldw	r3,168(sp)
    3cd8:	18c00044 	addi	r3,r3,1
    3cdc:	d8c02a15 	stw	r3,168(sp)
    3ce0:	90c0008c 	andi	r3,r18,2
    3ce4:	d8c02b15 	stw	r3,172(sp)
    3ce8:	18000326 	beq	r3,zero,3cf8 <___vfprintf_internal_r+0x768>
    3cec:	d8c02a17 	ldw	r3,168(sp)
    3cf0:	18c00084 	addi	r3,r3,2
    3cf4:	d8c02a15 	stw	r3,168(sp)
    3cf8:	90c0210c 	andi	r3,r18,132
    3cfc:	d8c03015 	stw	r3,192(sp)
    3d00:	1801a31e 	bne	r3,zero,4390 <___vfprintf_internal_r+0xe00>
    3d04:	d9003117 	ldw	r4,196(sp)
    3d08:	d8c02a17 	ldw	r3,168(sp)
    3d0c:	20e7c83a 	sub	r19,r4,r3
    3d10:	04c19f0e 	bge	zero,r19,4390 <___vfprintf_internal_r+0xe00>
    3d14:	02400404 	movi	r9,16
    3d18:	d8c02017 	ldw	r3,128(sp)
    3d1c:	d8801f17 	ldw	r2,124(sp)
    3d20:	4cc50d0e 	bge	r9,r19,5158 <___vfprintf_internal_r+0x1bc8>
    3d24:	01400074 	movhi	r5,1
    3d28:	2948d284 	addi	r5,r5,9034
    3d2c:	dc403b15 	stw	r17,236(sp)
    3d30:	d9403515 	stw	r5,212(sp)
    3d34:	9823883a 	mov	r17,r19
    3d38:	482d883a 	mov	r22,r9
    3d3c:	9027883a 	mov	r19,r18
    3d40:	070001c4 	movi	fp,7
    3d44:	8025883a 	mov	r18,r16
    3d48:	dc002c17 	ldw	r16,176(sp)
    3d4c:	00000306 	br	3d5c <___vfprintf_internal_r+0x7cc>
    3d50:	8c7ffc04 	addi	r17,r17,-16
    3d54:	42000204 	addi	r8,r8,8
    3d58:	b440130e 	bge	r22,r17,3da8 <___vfprintf_internal_r+0x818>
    3d5c:	01000074 	movhi	r4,1
    3d60:	18c00404 	addi	r3,r3,16
    3d64:	10800044 	addi	r2,r2,1
    3d68:	2108d284 	addi	r4,r4,9034
    3d6c:	41000015 	stw	r4,0(r8)
    3d70:	45800115 	stw	r22,4(r8)
    3d74:	d8c02015 	stw	r3,128(sp)
    3d78:	d8801f15 	stw	r2,124(sp)
    3d7c:	e0bff40e 	bge	fp,r2,3d50 <__alt_data_end+0xff003d50>
    3d80:	d9801e04 	addi	r6,sp,120
    3d84:	b80b883a 	mov	r5,r23
    3d88:	8009883a 	mov	r4,r16
    3d8c:	000a1e40 	call	a1e4 <__sprint_r>
    3d90:	103f011e 	bne	r2,zero,3998 <__alt_data_end+0xff003998>
    3d94:	8c7ffc04 	addi	r17,r17,-16
    3d98:	d8c02017 	ldw	r3,128(sp)
    3d9c:	d8801f17 	ldw	r2,124(sp)
    3da0:	da000404 	addi	r8,sp,16
    3da4:	b47fed16 	blt	r22,r17,3d5c <__alt_data_end+0xff003d5c>
    3da8:	9021883a 	mov	r16,r18
    3dac:	9825883a 	mov	r18,r19
    3db0:	8827883a 	mov	r19,r17
    3db4:	dc403b17 	ldw	r17,236(sp)
    3db8:	d9403517 	ldw	r5,212(sp)
    3dbc:	98c7883a 	add	r3,r19,r3
    3dc0:	10800044 	addi	r2,r2,1
    3dc4:	41400015 	stw	r5,0(r8)
    3dc8:	44c00115 	stw	r19,4(r8)
    3dcc:	d8c02015 	stw	r3,128(sp)
    3dd0:	d8801f15 	stw	r2,124(sp)
    3dd4:	010001c4 	movi	r4,7
    3dd8:	2082a316 	blt	r4,r2,4868 <___vfprintf_internal_r+0x12d8>
    3ddc:	df002787 	ldb	fp,158(sp)
    3de0:	42000204 	addi	r8,r8,8
    3de4:	e0000c26 	beq	fp,zero,3e18 <___vfprintf_internal_r+0x888>
    3de8:	d8801f17 	ldw	r2,124(sp)
    3dec:	d9002784 	addi	r4,sp,158
    3df0:	18c00044 	addi	r3,r3,1
    3df4:	10800044 	addi	r2,r2,1
    3df8:	41000015 	stw	r4,0(r8)
    3dfc:	01000044 	movi	r4,1
    3e00:	41000115 	stw	r4,4(r8)
    3e04:	d8c02015 	stw	r3,128(sp)
    3e08:	d8801f15 	stw	r2,124(sp)
    3e0c:	010001c4 	movi	r4,7
    3e10:	20823c16 	blt	r4,r2,4704 <___vfprintf_internal_r+0x1174>
    3e14:	42000204 	addi	r8,r8,8
    3e18:	d8802b17 	ldw	r2,172(sp)
    3e1c:	10000c26 	beq	r2,zero,3e50 <___vfprintf_internal_r+0x8c0>
    3e20:	d8801f17 	ldw	r2,124(sp)
    3e24:	d9002704 	addi	r4,sp,156
    3e28:	18c00084 	addi	r3,r3,2
    3e2c:	10800044 	addi	r2,r2,1
    3e30:	41000015 	stw	r4,0(r8)
    3e34:	01000084 	movi	r4,2
    3e38:	41000115 	stw	r4,4(r8)
    3e3c:	d8c02015 	stw	r3,128(sp)
    3e40:	d8801f15 	stw	r2,124(sp)
    3e44:	010001c4 	movi	r4,7
    3e48:	20823616 	blt	r4,r2,4724 <___vfprintf_internal_r+0x1194>
    3e4c:	42000204 	addi	r8,r8,8
    3e50:	d9003017 	ldw	r4,192(sp)
    3e54:	00802004 	movi	r2,128
    3e58:	20819926 	beq	r4,r2,44c0 <___vfprintf_internal_r+0xf30>
    3e5c:	d9402917 	ldw	r5,164(sp)
    3e60:	d8802e17 	ldw	r2,184(sp)
    3e64:	28adc83a 	sub	r22,r5,r2
    3e68:	0580310e 	bge	zero,r22,3f30 <___vfprintf_internal_r+0x9a0>
    3e6c:	07000404 	movi	fp,16
    3e70:	d8801f17 	ldw	r2,124(sp)
    3e74:	e584140e 	bge	fp,r22,4ec8 <___vfprintf_internal_r+0x1938>
    3e78:	01400074 	movhi	r5,1
    3e7c:	2948ce84 	addi	r5,r5,9018
    3e80:	dc402915 	stw	r17,164(sp)
    3e84:	d9402b15 	stw	r5,172(sp)
    3e88:	b023883a 	mov	r17,r22
    3e8c:	04c001c4 	movi	r19,7
    3e90:	a82d883a 	mov	r22,r21
    3e94:	902b883a 	mov	r21,r18
    3e98:	8025883a 	mov	r18,r16
    3e9c:	dc002c17 	ldw	r16,176(sp)
    3ea0:	00000306 	br	3eb0 <___vfprintf_internal_r+0x920>
    3ea4:	8c7ffc04 	addi	r17,r17,-16
    3ea8:	42000204 	addi	r8,r8,8
    3eac:	e440110e 	bge	fp,r17,3ef4 <___vfprintf_internal_r+0x964>
    3eb0:	18c00404 	addi	r3,r3,16
    3eb4:	10800044 	addi	r2,r2,1
    3eb8:	45000015 	stw	r20,0(r8)
    3ebc:	47000115 	stw	fp,4(r8)
    3ec0:	d8c02015 	stw	r3,128(sp)
    3ec4:	d8801f15 	stw	r2,124(sp)
    3ec8:	98bff60e 	bge	r19,r2,3ea4 <__alt_data_end+0xff003ea4>
    3ecc:	d9801e04 	addi	r6,sp,120
    3ed0:	b80b883a 	mov	r5,r23
    3ed4:	8009883a 	mov	r4,r16
    3ed8:	000a1e40 	call	a1e4 <__sprint_r>
    3edc:	103eae1e 	bne	r2,zero,3998 <__alt_data_end+0xff003998>
    3ee0:	8c7ffc04 	addi	r17,r17,-16
    3ee4:	d8c02017 	ldw	r3,128(sp)
    3ee8:	d8801f17 	ldw	r2,124(sp)
    3eec:	da000404 	addi	r8,sp,16
    3ef0:	e47fef16 	blt	fp,r17,3eb0 <__alt_data_end+0xff003eb0>
    3ef4:	9021883a 	mov	r16,r18
    3ef8:	a825883a 	mov	r18,r21
    3efc:	b02b883a 	mov	r21,r22
    3f00:	882d883a 	mov	r22,r17
    3f04:	dc402917 	ldw	r17,164(sp)
    3f08:	d9002b17 	ldw	r4,172(sp)
    3f0c:	1d87883a 	add	r3,r3,r22
    3f10:	10800044 	addi	r2,r2,1
    3f14:	41000015 	stw	r4,0(r8)
    3f18:	45800115 	stw	r22,4(r8)
    3f1c:	d8c02015 	stw	r3,128(sp)
    3f20:	d8801f15 	stw	r2,124(sp)
    3f24:	010001c4 	movi	r4,7
    3f28:	2081ee16 	blt	r4,r2,46e4 <___vfprintf_internal_r+0x1154>
    3f2c:	42000204 	addi	r8,r8,8
    3f30:	9080400c 	andi	r2,r18,256
    3f34:	1001181e 	bne	r2,zero,4398 <___vfprintf_internal_r+0xe08>
    3f38:	d9402e17 	ldw	r5,184(sp)
    3f3c:	d8801f17 	ldw	r2,124(sp)
    3f40:	44000015 	stw	r16,0(r8)
    3f44:	1947883a 	add	r3,r3,r5
    3f48:	10800044 	addi	r2,r2,1
    3f4c:	41400115 	stw	r5,4(r8)
    3f50:	d8c02015 	stw	r3,128(sp)
    3f54:	d8801f15 	stw	r2,124(sp)
    3f58:	010001c4 	movi	r4,7
    3f5c:	2081d316 	blt	r4,r2,46ac <___vfprintf_internal_r+0x111c>
    3f60:	42000204 	addi	r8,r8,8
    3f64:	9480010c 	andi	r18,r18,4
    3f68:	90003226 	beq	r18,zero,4034 <___vfprintf_internal_r+0xaa4>
    3f6c:	d9403117 	ldw	r5,196(sp)
    3f70:	d8802a17 	ldw	r2,168(sp)
    3f74:	28a1c83a 	sub	r16,r5,r2
    3f78:	04002e0e 	bge	zero,r16,4034 <___vfprintf_internal_r+0xaa4>
    3f7c:	04400404 	movi	r17,16
    3f80:	d8801f17 	ldw	r2,124(sp)
    3f84:	8c04a20e 	bge	r17,r16,5210 <___vfprintf_internal_r+0x1c80>
    3f88:	01400074 	movhi	r5,1
    3f8c:	2948d284 	addi	r5,r5,9034
    3f90:	d9403515 	stw	r5,212(sp)
    3f94:	048001c4 	movi	r18,7
    3f98:	dcc02c17 	ldw	r19,176(sp)
    3f9c:	00000306 	br	3fac <___vfprintf_internal_r+0xa1c>
    3fa0:	843ffc04 	addi	r16,r16,-16
    3fa4:	42000204 	addi	r8,r8,8
    3fa8:	8c00130e 	bge	r17,r16,3ff8 <___vfprintf_internal_r+0xa68>
    3fac:	01000074 	movhi	r4,1
    3fb0:	18c00404 	addi	r3,r3,16
    3fb4:	10800044 	addi	r2,r2,1
    3fb8:	2108d284 	addi	r4,r4,9034
    3fbc:	41000015 	stw	r4,0(r8)
    3fc0:	44400115 	stw	r17,4(r8)
    3fc4:	d8c02015 	stw	r3,128(sp)
    3fc8:	d8801f15 	stw	r2,124(sp)
    3fcc:	90bff40e 	bge	r18,r2,3fa0 <__alt_data_end+0xff003fa0>
    3fd0:	d9801e04 	addi	r6,sp,120
    3fd4:	b80b883a 	mov	r5,r23
    3fd8:	9809883a 	mov	r4,r19
    3fdc:	000a1e40 	call	a1e4 <__sprint_r>
    3fe0:	103e6d1e 	bne	r2,zero,3998 <__alt_data_end+0xff003998>
    3fe4:	843ffc04 	addi	r16,r16,-16
    3fe8:	d8c02017 	ldw	r3,128(sp)
    3fec:	d8801f17 	ldw	r2,124(sp)
    3ff0:	da000404 	addi	r8,sp,16
    3ff4:	8c3fed16 	blt	r17,r16,3fac <__alt_data_end+0xff003fac>
    3ff8:	d9403517 	ldw	r5,212(sp)
    3ffc:	1c07883a 	add	r3,r3,r16
    4000:	10800044 	addi	r2,r2,1
    4004:	41400015 	stw	r5,0(r8)
    4008:	44000115 	stw	r16,4(r8)
    400c:	d8c02015 	stw	r3,128(sp)
    4010:	d8801f15 	stw	r2,124(sp)
    4014:	010001c4 	movi	r4,7
    4018:	2080060e 	bge	r4,r2,4034 <___vfprintf_internal_r+0xaa4>
    401c:	d9002c17 	ldw	r4,176(sp)
    4020:	d9801e04 	addi	r6,sp,120
    4024:	b80b883a 	mov	r5,r23
    4028:	000a1e40 	call	a1e4 <__sprint_r>
    402c:	103e5a1e 	bne	r2,zero,3998 <__alt_data_end+0xff003998>
    4030:	d8c02017 	ldw	r3,128(sp)
    4034:	d8803117 	ldw	r2,196(sp)
    4038:	d9002a17 	ldw	r4,168(sp)
    403c:	1100010e 	bge	r2,r4,4044 <___vfprintf_internal_r+0xab4>
    4040:	2005883a 	mov	r2,r4
    4044:	d9402f17 	ldw	r5,188(sp)
    4048:	288b883a 	add	r5,r5,r2
    404c:	d9402f15 	stw	r5,188(sp)
    4050:	18019e1e 	bne	r3,zero,46cc <___vfprintf_internal_r+0x113c>
    4054:	a8800007 	ldb	r2,0(r21)
    4058:	d8001f15 	stw	zero,124(sp)
    405c:	da000404 	addi	r8,sp,16
    4060:	103d851e 	bne	r2,zero,3678 <__alt_data_end+0xff003678>
    4064:	a821883a 	mov	r16,r21
    4068:	003d9b06 	br	36d8 <__alt_data_end+0xff0036d8>
    406c:	18c03fcc 	andi	r3,r3,255
    4070:	1805c11e 	bne	r3,zero,5778 <___vfprintf_internal_r+0x21e8>
    4074:	94800414 	ori	r18,r18,16
    4078:	9080080c 	andi	r2,r18,32
    407c:	10020c26 	beq	r2,zero,48b0 <___vfprintf_internal_r+0x1320>
    4080:	d8802d17 	ldw	r2,180(sp)
    4084:	d9002917 	ldw	r4,164(sp)
    4088:	d8002785 	stb	zero,158(sp)
    408c:	10c00204 	addi	r3,r2,8
    4090:	14c00017 	ldw	r19,0(r2)
    4094:	15800117 	ldw	r22,4(r2)
    4098:	20040f16 	blt	r4,zero,50d8 <___vfprintf_internal_r+0x1b48>
    409c:	013fdfc4 	movi	r4,-129
    40a0:	9d84b03a 	or	r2,r19,r22
    40a4:	d8c02d15 	stw	r3,180(sp)
    40a8:	9124703a 	and	r18,r18,r4
    40ac:	0039883a 	mov	fp,zero
    40b0:	103e891e 	bne	r2,zero,3ad8 <__alt_data_end+0xff003ad8>
    40b4:	d9002917 	ldw	r4,164(sp)
    40b8:	2002c11e 	bne	r4,zero,4bc0 <___vfprintf_internal_r+0x1630>
    40bc:	d8002915 	stw	zero,164(sp)
    40c0:	d8002e15 	stw	zero,184(sp)
    40c4:	dc001e04 	addi	r16,sp,120
    40c8:	003ef806 	br	3cac <__alt_data_end+0xff003cac>
    40cc:	18c03fcc 	andi	r3,r3,255
    40d0:	18059d1e 	bne	r3,zero,5748 <___vfprintf_internal_r+0x21b8>
    40d4:	01400074 	movhi	r5,1
    40d8:	2948c204 	addi	r5,r5,8968
    40dc:	d9403915 	stw	r5,228(sp)
    40e0:	9080080c 	andi	r2,r18,32
    40e4:	10005226 	beq	r2,zero,4230 <___vfprintf_internal_r+0xca0>
    40e8:	d8802d17 	ldw	r2,180(sp)
    40ec:	14c00017 	ldw	r19,0(r2)
    40f0:	15800117 	ldw	r22,4(r2)
    40f4:	10800204 	addi	r2,r2,8
    40f8:	d8802d15 	stw	r2,180(sp)
    40fc:	9080004c 	andi	r2,r18,1
    4100:	10019026 	beq	r2,zero,4744 <___vfprintf_internal_r+0x11b4>
    4104:	9d84b03a 	or	r2,r19,r22
    4108:	10036926 	beq	r2,zero,4eb0 <___vfprintf_internal_r+0x1920>
    410c:	d8c02917 	ldw	r3,164(sp)
    4110:	00800c04 	movi	r2,48
    4114:	d8802705 	stb	r2,156(sp)
    4118:	dc402745 	stb	r17,157(sp)
    411c:	d8002785 	stb	zero,158(sp)
    4120:	90800094 	ori	r2,r18,2
    4124:	18045d16 	blt	r3,zero,529c <___vfprintf_internal_r+0x1d0c>
    4128:	00bfdfc4 	movi	r2,-129
    412c:	90a4703a 	and	r18,r18,r2
    4130:	94800094 	ori	r18,r18,2
    4134:	0039883a 	mov	fp,zero
    4138:	d9003917 	ldw	r4,228(sp)
    413c:	dc001e04 	addi	r16,sp,120
    4140:	988003cc 	andi	r2,r19,15
    4144:	b006973a 	slli	r3,r22,28
    4148:	2085883a 	add	r2,r4,r2
    414c:	9826d13a 	srli	r19,r19,4
    4150:	10800003 	ldbu	r2,0(r2)
    4154:	b02cd13a 	srli	r22,r22,4
    4158:	843fffc4 	addi	r16,r16,-1
    415c:	1ce6b03a 	or	r19,r3,r19
    4160:	80800005 	stb	r2,0(r16)
    4164:	9d84b03a 	or	r2,r19,r22
    4168:	103ff51e 	bne	r2,zero,4140 <__alt_data_end+0xff004140>
    416c:	d8c02817 	ldw	r3,160(sp)
    4170:	1c07c83a 	sub	r3,r3,r16
    4174:	d8c02e15 	stw	r3,184(sp)
    4178:	003ecc06 	br	3cac <__alt_data_end+0xff003cac>
    417c:	18c03fcc 	andi	r3,r3,255
    4180:	183e9f26 	beq	r3,zero,3c00 <__alt_data_end+0xff003c00>
    4184:	d9c02785 	stb	r7,158(sp)
    4188:	003e9d06 	br	3c00 <__alt_data_end+0xff003c00>
    418c:	00c00044 	movi	r3,1
    4190:	01c00ac4 	movi	r7,43
    4194:	ac400007 	ldb	r17,0(r21)
    4198:	003d5e06 	br	3714 <__alt_data_end+0xff003714>
    419c:	94800814 	ori	r18,r18,32
    41a0:	ac400007 	ldb	r17,0(r21)
    41a4:	003d5b06 	br	3714 <__alt_data_end+0xff003714>
    41a8:	d8c02d17 	ldw	r3,180(sp)
    41ac:	d8002785 	stb	zero,158(sp)
    41b0:	1c000017 	ldw	r16,0(r3)
    41b4:	1cc00104 	addi	r19,r3,4
    41b8:	80041926 	beq	r16,zero,5220 <___vfprintf_internal_r+0x1c90>
    41bc:	d9002917 	ldw	r4,164(sp)
    41c0:	2003d016 	blt	r4,zero,5104 <___vfprintf_internal_r+0x1b74>
    41c4:	200d883a 	mov	r6,r4
    41c8:	000b883a 	mov	r5,zero
    41cc:	8009883a 	mov	r4,r16
    41d0:	da003d15 	stw	r8,244(sp)
    41d4:	00085940 	call	8594 <memchr>
    41d8:	da003d17 	ldw	r8,244(sp)
    41dc:	10045426 	beq	r2,zero,5330 <___vfprintf_internal_r+0x1da0>
    41e0:	1405c83a 	sub	r2,r2,r16
    41e4:	d8802e15 	stw	r2,184(sp)
    41e8:	1003cc16 	blt	r2,zero,511c <___vfprintf_internal_r+0x1b8c>
    41ec:	df002783 	ldbu	fp,158(sp)
    41f0:	d8802a15 	stw	r2,168(sp)
    41f4:	dcc02d15 	stw	r19,180(sp)
    41f8:	d8002915 	stw	zero,164(sp)
    41fc:	d8003215 	stw	zero,200(sp)
    4200:	003eb006 	br	3cc4 <__alt_data_end+0xff003cc4>
    4204:	18c03fcc 	andi	r3,r3,255
    4208:	183f9b26 	beq	r3,zero,4078 <__alt_data_end+0xff004078>
    420c:	d9c02785 	stb	r7,158(sp)
    4210:	003f9906 	br	4078 <__alt_data_end+0xff004078>
    4214:	18c03fcc 	andi	r3,r3,255
    4218:	1805551e 	bne	r3,zero,5770 <___vfprintf_internal_r+0x21e0>
    421c:	01400074 	movhi	r5,1
    4220:	2948c704 	addi	r5,r5,8988
    4224:	d9403915 	stw	r5,228(sp)
    4228:	9080080c 	andi	r2,r18,32
    422c:	103fae1e 	bne	r2,zero,40e8 <__alt_data_end+0xff0040e8>
    4230:	9080040c 	andi	r2,r18,16
    4234:	1002de26 	beq	r2,zero,4db0 <___vfprintf_internal_r+0x1820>
    4238:	d8c02d17 	ldw	r3,180(sp)
    423c:	002d883a 	mov	r22,zero
    4240:	1cc00017 	ldw	r19,0(r3)
    4244:	18c00104 	addi	r3,r3,4
    4248:	d8c02d15 	stw	r3,180(sp)
    424c:	003fab06 	br	40fc <__alt_data_end+0xff0040fc>
    4250:	38803fcc 	andi	r2,r7,255
    4254:	1080201c 	xori	r2,r2,128
    4258:	10bfe004 	addi	r2,r2,-128
    425c:	1002d21e 	bne	r2,zero,4da8 <___vfprintf_internal_r+0x1818>
    4260:	00c00044 	movi	r3,1
    4264:	01c00804 	movi	r7,32
    4268:	ac400007 	ldb	r17,0(r21)
    426c:	003d2906 	br	3714 <__alt_data_end+0xff003714>
    4270:	94800054 	ori	r18,r18,1
    4274:	ac400007 	ldb	r17,0(r21)
    4278:	003d2606 	br	3714 <__alt_data_end+0xff003714>
    427c:	18c03fcc 	andi	r3,r3,255
    4280:	183e0526 	beq	r3,zero,3a98 <__alt_data_end+0xff003a98>
    4284:	d9c02785 	stb	r7,158(sp)
    4288:	003e0306 	br	3a98 <__alt_data_end+0xff003a98>
    428c:	94801014 	ori	r18,r18,64
    4290:	ac400007 	ldb	r17,0(r21)
    4294:	003d1f06 	br	3714 <__alt_data_end+0xff003714>
    4298:	ac400007 	ldb	r17,0(r21)
    429c:	8a438726 	beq	r17,r9,50bc <___vfprintf_internal_r+0x1b2c>
    42a0:	94800414 	ori	r18,r18,16
    42a4:	003d1b06 	br	3714 <__alt_data_end+0xff003714>
    42a8:	18c03fcc 	andi	r3,r3,255
    42ac:	1805341e 	bne	r3,zero,5780 <___vfprintf_internal_r+0x21f0>
    42b0:	9080080c 	andi	r2,r18,32
    42b4:	1002cd26 	beq	r2,zero,4dec <___vfprintf_internal_r+0x185c>
    42b8:	d9402d17 	ldw	r5,180(sp)
    42bc:	d9002f17 	ldw	r4,188(sp)
    42c0:	28800017 	ldw	r2,0(r5)
    42c4:	2007d7fa 	srai	r3,r4,31
    42c8:	29400104 	addi	r5,r5,4
    42cc:	d9402d15 	stw	r5,180(sp)
    42d0:	11000015 	stw	r4,0(r2)
    42d4:	10c00115 	stw	r3,4(r2)
    42d8:	003ce506 	br	3670 <__alt_data_end+0xff003670>
    42dc:	d8c02d17 	ldw	r3,180(sp)
    42e0:	d9002d17 	ldw	r4,180(sp)
    42e4:	d8002785 	stb	zero,158(sp)
    42e8:	18800017 	ldw	r2,0(r3)
    42ec:	21000104 	addi	r4,r4,4
    42f0:	00c00044 	movi	r3,1
    42f4:	d8c02a15 	stw	r3,168(sp)
    42f8:	d8801405 	stb	r2,80(sp)
    42fc:	d9002d15 	stw	r4,180(sp)
    4300:	d8c02e15 	stw	r3,184(sp)
    4304:	d8002915 	stw	zero,164(sp)
    4308:	d8003215 	stw	zero,200(sp)
    430c:	dc001404 	addi	r16,sp,80
    4310:	0039883a 	mov	fp,zero
    4314:	003e7206 	br	3ce0 <__alt_data_end+0xff003ce0>
    4318:	01000074 	movhi	r4,1
    431c:	2108c704 	addi	r4,r4,8988
    4320:	0039883a 	mov	fp,zero
    4324:	d9003915 	stw	r4,228(sp)
    4328:	04401e04 	movi	r17,120
    432c:	003f8206 	br	4138 <__alt_data_end+0xff004138>
    4330:	18c03fcc 	andi	r3,r3,255
    4334:	1805061e 	bne	r3,zero,5750 <___vfprintf_internal_r+0x21c0>
    4338:	883d9126 	beq	r17,zero,3980 <__alt_data_end+0xff003980>
    433c:	00c00044 	movi	r3,1
    4340:	d8c02a15 	stw	r3,168(sp)
    4344:	dc401405 	stb	r17,80(sp)
    4348:	d8002785 	stb	zero,158(sp)
    434c:	003fec06 	br	4300 <__alt_data_end+0xff004300>
    4350:	01400074 	movhi	r5,1
    4354:	2948c704 	addi	r5,r5,8988
    4358:	d9403915 	stw	r5,228(sp)
    435c:	d8c02d15 	stw	r3,180(sp)
    4360:	1025883a 	mov	r18,r2
    4364:	04401e04 	movi	r17,120
    4368:	9d84b03a 	or	r2,r19,r22
    436c:	1000fc1e 	bne	r2,zero,4760 <___vfprintf_internal_r+0x11d0>
    4370:	0039883a 	mov	fp,zero
    4374:	00800084 	movi	r2,2
    4378:	10803fcc 	andi	r2,r2,255
    437c:	00c00044 	movi	r3,1
    4380:	10c20f26 	beq	r2,r3,4bc0 <___vfprintf_internal_r+0x1630>
    4384:	00c00084 	movi	r3,2
    4388:	10fd6326 	beq	r2,r3,3918 <__alt_data_end+0xff003918>
    438c:	003e2d06 	br	3c44 <__alt_data_end+0xff003c44>
    4390:	d8c02017 	ldw	r3,128(sp)
    4394:	003e9306 	br	3de4 <__alt_data_end+0xff003de4>
    4398:	00801944 	movi	r2,101
    439c:	14407e0e 	bge	r2,r17,4598 <___vfprintf_internal_r+0x1008>
    43a0:	d9003617 	ldw	r4,216(sp)
    43a4:	d9403817 	ldw	r5,224(sp)
    43a8:	000d883a 	mov	r6,zero
    43ac:	000f883a 	mov	r7,zero
    43b0:	d8c03c15 	stw	r3,240(sp)
    43b4:	da003d15 	stw	r8,244(sp)
    43b8:	000de5c0 	call	de5c <__eqdf2>
    43bc:	d8c03c17 	ldw	r3,240(sp)
    43c0:	da003d17 	ldw	r8,244(sp)
    43c4:	1000f71e 	bne	r2,zero,47a4 <___vfprintf_internal_r+0x1214>
    43c8:	d8801f17 	ldw	r2,124(sp)
    43cc:	01000074 	movhi	r4,1
    43d0:	2108ce04 	addi	r4,r4,9016
    43d4:	18c00044 	addi	r3,r3,1
    43d8:	10800044 	addi	r2,r2,1
    43dc:	41000015 	stw	r4,0(r8)
    43e0:	01000044 	movi	r4,1
    43e4:	41000115 	stw	r4,4(r8)
    43e8:	d8c02015 	stw	r3,128(sp)
    43ec:	d8801f15 	stw	r2,124(sp)
    43f0:	010001c4 	movi	r4,7
    43f4:	2082b816 	blt	r4,r2,4ed8 <___vfprintf_internal_r+0x1948>
    43f8:	42000204 	addi	r8,r8,8
    43fc:	d8802617 	ldw	r2,152(sp)
    4400:	d9403317 	ldw	r5,204(sp)
    4404:	11400216 	blt	r2,r5,4410 <___vfprintf_internal_r+0xe80>
    4408:	9080004c 	andi	r2,r18,1
    440c:	103ed526 	beq	r2,zero,3f64 <__alt_data_end+0xff003f64>
    4410:	d8803717 	ldw	r2,220(sp)
    4414:	d9003417 	ldw	r4,208(sp)
    4418:	d9403717 	ldw	r5,220(sp)
    441c:	1887883a 	add	r3,r3,r2
    4420:	d8801f17 	ldw	r2,124(sp)
    4424:	41000015 	stw	r4,0(r8)
    4428:	41400115 	stw	r5,4(r8)
    442c:	10800044 	addi	r2,r2,1
    4430:	d8c02015 	stw	r3,128(sp)
    4434:	d8801f15 	stw	r2,124(sp)
    4438:	010001c4 	movi	r4,7
    443c:	20832916 	blt	r4,r2,50e4 <___vfprintf_internal_r+0x1b54>
    4440:	42000204 	addi	r8,r8,8
    4444:	d8803317 	ldw	r2,204(sp)
    4448:	143fffc4 	addi	r16,r2,-1
    444c:	043ec50e 	bge	zero,r16,3f64 <__alt_data_end+0xff003f64>
    4450:	04400404 	movi	r17,16
    4454:	d8801f17 	ldw	r2,124(sp)
    4458:	8c00880e 	bge	r17,r16,467c <___vfprintf_internal_r+0x10ec>
    445c:	01400074 	movhi	r5,1
    4460:	2948ce84 	addi	r5,r5,9018
    4464:	d9402b15 	stw	r5,172(sp)
    4468:	058001c4 	movi	r22,7
    446c:	dcc02c17 	ldw	r19,176(sp)
    4470:	00000306 	br	4480 <___vfprintf_internal_r+0xef0>
    4474:	42000204 	addi	r8,r8,8
    4478:	843ffc04 	addi	r16,r16,-16
    447c:	8c00820e 	bge	r17,r16,4688 <___vfprintf_internal_r+0x10f8>
    4480:	18c00404 	addi	r3,r3,16
    4484:	10800044 	addi	r2,r2,1
    4488:	45000015 	stw	r20,0(r8)
    448c:	44400115 	stw	r17,4(r8)
    4490:	d8c02015 	stw	r3,128(sp)
    4494:	d8801f15 	stw	r2,124(sp)
    4498:	b0bff60e 	bge	r22,r2,4474 <__alt_data_end+0xff004474>
    449c:	d9801e04 	addi	r6,sp,120
    44a0:	b80b883a 	mov	r5,r23
    44a4:	9809883a 	mov	r4,r19
    44a8:	000a1e40 	call	a1e4 <__sprint_r>
    44ac:	103d3a1e 	bne	r2,zero,3998 <__alt_data_end+0xff003998>
    44b0:	d8c02017 	ldw	r3,128(sp)
    44b4:	d8801f17 	ldw	r2,124(sp)
    44b8:	da000404 	addi	r8,sp,16
    44bc:	003fee06 	br	4478 <__alt_data_end+0xff004478>
    44c0:	d9403117 	ldw	r5,196(sp)
    44c4:	d8802a17 	ldw	r2,168(sp)
    44c8:	28adc83a 	sub	r22,r5,r2
    44cc:	05be630e 	bge	zero,r22,3e5c <__alt_data_end+0xff003e5c>
    44d0:	07000404 	movi	fp,16
    44d4:	d8801f17 	ldw	r2,124(sp)
    44d8:	e5838f0e 	bge	fp,r22,5318 <___vfprintf_internal_r+0x1d88>
    44dc:	01400074 	movhi	r5,1
    44e0:	2948ce84 	addi	r5,r5,9018
    44e4:	dc403015 	stw	r17,192(sp)
    44e8:	d9402b15 	stw	r5,172(sp)
    44ec:	b023883a 	mov	r17,r22
    44f0:	04c001c4 	movi	r19,7
    44f4:	a82d883a 	mov	r22,r21
    44f8:	902b883a 	mov	r21,r18
    44fc:	8025883a 	mov	r18,r16
    4500:	dc002c17 	ldw	r16,176(sp)
    4504:	00000306 	br	4514 <___vfprintf_internal_r+0xf84>
    4508:	8c7ffc04 	addi	r17,r17,-16
    450c:	42000204 	addi	r8,r8,8
    4510:	e440110e 	bge	fp,r17,4558 <___vfprintf_internal_r+0xfc8>
    4514:	18c00404 	addi	r3,r3,16
    4518:	10800044 	addi	r2,r2,1
    451c:	45000015 	stw	r20,0(r8)
    4520:	47000115 	stw	fp,4(r8)
    4524:	d8c02015 	stw	r3,128(sp)
    4528:	d8801f15 	stw	r2,124(sp)
    452c:	98bff60e 	bge	r19,r2,4508 <__alt_data_end+0xff004508>
    4530:	d9801e04 	addi	r6,sp,120
    4534:	b80b883a 	mov	r5,r23
    4538:	8009883a 	mov	r4,r16
    453c:	000a1e40 	call	a1e4 <__sprint_r>
    4540:	103d151e 	bne	r2,zero,3998 <__alt_data_end+0xff003998>
    4544:	8c7ffc04 	addi	r17,r17,-16
    4548:	d8c02017 	ldw	r3,128(sp)
    454c:	d8801f17 	ldw	r2,124(sp)
    4550:	da000404 	addi	r8,sp,16
    4554:	e47fef16 	blt	fp,r17,4514 <__alt_data_end+0xff004514>
    4558:	9021883a 	mov	r16,r18
    455c:	a825883a 	mov	r18,r21
    4560:	b02b883a 	mov	r21,r22
    4564:	882d883a 	mov	r22,r17
    4568:	dc403017 	ldw	r17,192(sp)
    456c:	d9002b17 	ldw	r4,172(sp)
    4570:	1d87883a 	add	r3,r3,r22
    4574:	10800044 	addi	r2,r2,1
    4578:	41000015 	stw	r4,0(r8)
    457c:	45800115 	stw	r22,4(r8)
    4580:	d8c02015 	stw	r3,128(sp)
    4584:	d8801f15 	stw	r2,124(sp)
    4588:	010001c4 	movi	r4,7
    458c:	20818e16 	blt	r4,r2,4bc8 <___vfprintf_internal_r+0x1638>
    4590:	42000204 	addi	r8,r8,8
    4594:	003e3106 	br	3e5c <__alt_data_end+0xff003e5c>
    4598:	d9403317 	ldw	r5,204(sp)
    459c:	00800044 	movi	r2,1
    45a0:	18c00044 	addi	r3,r3,1
    45a4:	1141530e 	bge	r2,r5,4af4 <___vfprintf_internal_r+0x1564>
    45a8:	dc401f17 	ldw	r17,124(sp)
    45ac:	00800044 	movi	r2,1
    45b0:	40800115 	stw	r2,4(r8)
    45b4:	8c400044 	addi	r17,r17,1
    45b8:	44000015 	stw	r16,0(r8)
    45bc:	d8c02015 	stw	r3,128(sp)
    45c0:	dc401f15 	stw	r17,124(sp)
    45c4:	008001c4 	movi	r2,7
    45c8:	14416b16 	blt	r2,r17,4b78 <___vfprintf_internal_r+0x15e8>
    45cc:	42000204 	addi	r8,r8,8
    45d0:	d8803717 	ldw	r2,220(sp)
    45d4:	d9003417 	ldw	r4,208(sp)
    45d8:	8c400044 	addi	r17,r17,1
    45dc:	10c7883a 	add	r3,r2,r3
    45e0:	40800115 	stw	r2,4(r8)
    45e4:	41000015 	stw	r4,0(r8)
    45e8:	d8c02015 	stw	r3,128(sp)
    45ec:	dc401f15 	stw	r17,124(sp)
    45f0:	008001c4 	movi	r2,7
    45f4:	14416916 	blt	r2,r17,4b9c <___vfprintf_internal_r+0x160c>
    45f8:	45800204 	addi	r22,r8,8
    45fc:	d9003617 	ldw	r4,216(sp)
    4600:	d9403817 	ldw	r5,224(sp)
    4604:	000d883a 	mov	r6,zero
    4608:	000f883a 	mov	r7,zero
    460c:	d8c03c15 	stw	r3,240(sp)
    4610:	000de5c0 	call	de5c <__eqdf2>
    4614:	d8c03c17 	ldw	r3,240(sp)
    4618:	1000bc26 	beq	r2,zero,490c <___vfprintf_internal_r+0x137c>
    461c:	d9403317 	ldw	r5,204(sp)
    4620:	84000044 	addi	r16,r16,1
    4624:	8c400044 	addi	r17,r17,1
    4628:	28bfffc4 	addi	r2,r5,-1
    462c:	1887883a 	add	r3,r3,r2
    4630:	b0800115 	stw	r2,4(r22)
    4634:	b4000015 	stw	r16,0(r22)
    4638:	d8c02015 	stw	r3,128(sp)
    463c:	dc401f15 	stw	r17,124(sp)
    4640:	008001c4 	movi	r2,7
    4644:	14414316 	blt	r2,r17,4b54 <___vfprintf_internal_r+0x15c4>
    4648:	b5800204 	addi	r22,r22,8
    464c:	d9003a17 	ldw	r4,232(sp)
    4650:	df0022c4 	addi	fp,sp,139
    4654:	8c400044 	addi	r17,r17,1
    4658:	20c7883a 	add	r3,r4,r3
    465c:	b7000015 	stw	fp,0(r22)
    4660:	b1000115 	stw	r4,4(r22)
    4664:	d8c02015 	stw	r3,128(sp)
    4668:	dc401f15 	stw	r17,124(sp)
    466c:	008001c4 	movi	r2,7
    4670:	14400e16 	blt	r2,r17,46ac <___vfprintf_internal_r+0x111c>
    4674:	b2000204 	addi	r8,r22,8
    4678:	003e3a06 	br	3f64 <__alt_data_end+0xff003f64>
    467c:	01000074 	movhi	r4,1
    4680:	2108ce84 	addi	r4,r4,9018
    4684:	d9002b15 	stw	r4,172(sp)
    4688:	d9002b17 	ldw	r4,172(sp)
    468c:	1c07883a 	add	r3,r3,r16
    4690:	44000115 	stw	r16,4(r8)
    4694:	41000015 	stw	r4,0(r8)
    4698:	10800044 	addi	r2,r2,1
    469c:	d8c02015 	stw	r3,128(sp)
    46a0:	d8801f15 	stw	r2,124(sp)
    46a4:	010001c4 	movi	r4,7
    46a8:	20be2d0e 	bge	r4,r2,3f60 <__alt_data_end+0xff003f60>
    46ac:	d9002c17 	ldw	r4,176(sp)
    46b0:	d9801e04 	addi	r6,sp,120
    46b4:	b80b883a 	mov	r5,r23
    46b8:	000a1e40 	call	a1e4 <__sprint_r>
    46bc:	103cb61e 	bne	r2,zero,3998 <__alt_data_end+0xff003998>
    46c0:	d8c02017 	ldw	r3,128(sp)
    46c4:	da000404 	addi	r8,sp,16
    46c8:	003e2606 	br	3f64 <__alt_data_end+0xff003f64>
    46cc:	d9002c17 	ldw	r4,176(sp)
    46d0:	d9801e04 	addi	r6,sp,120
    46d4:	b80b883a 	mov	r5,r23
    46d8:	000a1e40 	call	a1e4 <__sprint_r>
    46dc:	103e5d26 	beq	r2,zero,4054 <__alt_data_end+0xff004054>
    46e0:	003cad06 	br	3998 <__alt_data_end+0xff003998>
    46e4:	d9002c17 	ldw	r4,176(sp)
    46e8:	d9801e04 	addi	r6,sp,120
    46ec:	b80b883a 	mov	r5,r23
    46f0:	000a1e40 	call	a1e4 <__sprint_r>
    46f4:	103ca81e 	bne	r2,zero,3998 <__alt_data_end+0xff003998>
    46f8:	d8c02017 	ldw	r3,128(sp)
    46fc:	da000404 	addi	r8,sp,16
    4700:	003e0b06 	br	3f30 <__alt_data_end+0xff003f30>
    4704:	d9002c17 	ldw	r4,176(sp)
    4708:	d9801e04 	addi	r6,sp,120
    470c:	b80b883a 	mov	r5,r23
    4710:	000a1e40 	call	a1e4 <__sprint_r>
    4714:	103ca01e 	bne	r2,zero,3998 <__alt_data_end+0xff003998>
    4718:	d8c02017 	ldw	r3,128(sp)
    471c:	da000404 	addi	r8,sp,16
    4720:	003dbd06 	br	3e18 <__alt_data_end+0xff003e18>
    4724:	d9002c17 	ldw	r4,176(sp)
    4728:	d9801e04 	addi	r6,sp,120
    472c:	b80b883a 	mov	r5,r23
    4730:	000a1e40 	call	a1e4 <__sprint_r>
    4734:	103c981e 	bne	r2,zero,3998 <__alt_data_end+0xff003998>
    4738:	d8c02017 	ldw	r3,128(sp)
    473c:	da000404 	addi	r8,sp,16
    4740:	003dc306 	br	3e50 <__alt_data_end+0xff003e50>
    4744:	d8802917 	ldw	r2,164(sp)
    4748:	d8002785 	stb	zero,158(sp)
    474c:	103f0616 	blt	r2,zero,4368 <__alt_data_end+0xff004368>
    4750:	00ffdfc4 	movi	r3,-129
    4754:	9d84b03a 	or	r2,r19,r22
    4758:	90e4703a 	and	r18,r18,r3
    475c:	103c6b26 	beq	r2,zero,390c <__alt_data_end+0xff00390c>
    4760:	0039883a 	mov	fp,zero
    4764:	003e7406 	br	4138 <__alt_data_end+0xff004138>
    4768:	9080040c 	andi	r2,r18,16
    476c:	1001b326 	beq	r2,zero,4e3c <___vfprintf_internal_r+0x18ac>
    4770:	d9002d17 	ldw	r4,180(sp)
    4774:	d9402917 	ldw	r5,164(sp)
    4778:	d8002785 	stb	zero,158(sp)
    477c:	20800104 	addi	r2,r4,4
    4780:	24c00017 	ldw	r19,0(r4)
    4784:	002d883a 	mov	r22,zero
    4788:	2801b516 	blt	r5,zero,4e60 <___vfprintf_internal_r+0x18d0>
    478c:	00ffdfc4 	movi	r3,-129
    4790:	d8802d15 	stw	r2,180(sp)
    4794:	90e4703a 	and	r18,r18,r3
    4798:	983d2726 	beq	r19,zero,3c38 <__alt_data_end+0xff003c38>
    479c:	0039883a 	mov	fp,zero
    47a0:	003d2a06 	br	3c4c <__alt_data_end+0xff003c4c>
    47a4:	dc402617 	ldw	r17,152(sp)
    47a8:	0441d30e 	bge	zero,r17,4ef8 <___vfprintf_internal_r+0x1968>
    47ac:	dc403217 	ldw	r17,200(sp)
    47b0:	d8803317 	ldw	r2,204(sp)
    47b4:	1440010e 	bge	r2,r17,47bc <___vfprintf_internal_r+0x122c>
    47b8:	1023883a 	mov	r17,r2
    47bc:	04400a0e 	bge	zero,r17,47e8 <___vfprintf_internal_r+0x1258>
    47c0:	d8801f17 	ldw	r2,124(sp)
    47c4:	1c47883a 	add	r3,r3,r17
    47c8:	44000015 	stw	r16,0(r8)
    47cc:	10800044 	addi	r2,r2,1
    47d0:	44400115 	stw	r17,4(r8)
    47d4:	d8c02015 	stw	r3,128(sp)
    47d8:	d8801f15 	stw	r2,124(sp)
    47dc:	010001c4 	movi	r4,7
    47e0:	20826516 	blt	r4,r2,5178 <___vfprintf_internal_r+0x1be8>
    47e4:	42000204 	addi	r8,r8,8
    47e8:	88026116 	blt	r17,zero,5170 <___vfprintf_internal_r+0x1be0>
    47ec:	d9003217 	ldw	r4,200(sp)
    47f0:	2463c83a 	sub	r17,r4,r17
    47f4:	04407b0e 	bge	zero,r17,49e4 <___vfprintf_internal_r+0x1454>
    47f8:	05800404 	movi	r22,16
    47fc:	d8801f17 	ldw	r2,124(sp)
    4800:	b4419d0e 	bge	r22,r17,4e78 <___vfprintf_internal_r+0x18e8>
    4804:	01000074 	movhi	r4,1
    4808:	2108ce84 	addi	r4,r4,9018
    480c:	d9002b15 	stw	r4,172(sp)
    4810:	070001c4 	movi	fp,7
    4814:	dcc02c17 	ldw	r19,176(sp)
    4818:	00000306 	br	4828 <___vfprintf_internal_r+0x1298>
    481c:	42000204 	addi	r8,r8,8
    4820:	8c7ffc04 	addi	r17,r17,-16
    4824:	b441970e 	bge	r22,r17,4e84 <___vfprintf_internal_r+0x18f4>
    4828:	18c00404 	addi	r3,r3,16
    482c:	10800044 	addi	r2,r2,1
    4830:	45000015 	stw	r20,0(r8)
    4834:	45800115 	stw	r22,4(r8)
    4838:	d8c02015 	stw	r3,128(sp)
    483c:	d8801f15 	stw	r2,124(sp)
    4840:	e0bff60e 	bge	fp,r2,481c <__alt_data_end+0xff00481c>
    4844:	d9801e04 	addi	r6,sp,120
    4848:	b80b883a 	mov	r5,r23
    484c:	9809883a 	mov	r4,r19
    4850:	000a1e40 	call	a1e4 <__sprint_r>
    4854:	103c501e 	bne	r2,zero,3998 <__alt_data_end+0xff003998>
    4858:	d8c02017 	ldw	r3,128(sp)
    485c:	d8801f17 	ldw	r2,124(sp)
    4860:	da000404 	addi	r8,sp,16
    4864:	003fee06 	br	4820 <__alt_data_end+0xff004820>
    4868:	d9002c17 	ldw	r4,176(sp)
    486c:	d9801e04 	addi	r6,sp,120
    4870:	b80b883a 	mov	r5,r23
    4874:	000a1e40 	call	a1e4 <__sprint_r>
    4878:	103c471e 	bne	r2,zero,3998 <__alt_data_end+0xff003998>
    487c:	d8c02017 	ldw	r3,128(sp)
    4880:	df002787 	ldb	fp,158(sp)
    4884:	da000404 	addi	r8,sp,16
    4888:	003d5606 	br	3de4 <__alt_data_end+0xff003de4>
    488c:	9080040c 	andi	r2,r18,16
    4890:	10016126 	beq	r2,zero,4e18 <___vfprintf_internal_r+0x1888>
    4894:	d8802d17 	ldw	r2,180(sp)
    4898:	14c00017 	ldw	r19,0(r2)
    489c:	10800104 	addi	r2,r2,4
    48a0:	d8802d15 	stw	r2,180(sp)
    48a4:	982dd7fa 	srai	r22,r19,31
    48a8:	b005883a 	mov	r2,r22
    48ac:	003c8206 	br	3ab8 <__alt_data_end+0xff003ab8>
    48b0:	9080040c 	andi	r2,r18,16
    48b4:	10003526 	beq	r2,zero,498c <___vfprintf_internal_r+0x13fc>
    48b8:	d9402d17 	ldw	r5,180(sp)
    48bc:	d8c02917 	ldw	r3,164(sp)
    48c0:	d8002785 	stb	zero,158(sp)
    48c4:	28800104 	addi	r2,r5,4
    48c8:	2cc00017 	ldw	r19,0(r5)
    48cc:	002d883a 	mov	r22,zero
    48d0:	18003716 	blt	r3,zero,49b0 <___vfprintf_internal_r+0x1420>
    48d4:	00ffdfc4 	movi	r3,-129
    48d8:	d8802d15 	stw	r2,180(sp)
    48dc:	90e4703a 	and	r18,r18,r3
    48e0:	0039883a 	mov	fp,zero
    48e4:	983df326 	beq	r19,zero,40b4 <__alt_data_end+0xff0040b4>
    48e8:	00800244 	movi	r2,9
    48ec:	14fc7b36 	bltu	r2,r19,3adc <__alt_data_end+0xff003adc>
    48f0:	d8c02817 	ldw	r3,160(sp)
    48f4:	dc001dc4 	addi	r16,sp,119
    48f8:	9cc00c04 	addi	r19,r19,48
    48fc:	1c07c83a 	sub	r3,r3,r16
    4900:	dcc01dc5 	stb	r19,119(sp)
    4904:	d8c02e15 	stw	r3,184(sp)
    4908:	003ce806 	br	3cac <__alt_data_end+0xff003cac>
    490c:	d8803317 	ldw	r2,204(sp)
    4910:	143fffc4 	addi	r16,r2,-1
    4914:	043f4d0e 	bge	zero,r16,464c <__alt_data_end+0xff00464c>
    4918:	07000404 	movi	fp,16
    491c:	e400810e 	bge	fp,r16,4b24 <___vfprintf_internal_r+0x1594>
    4920:	01400074 	movhi	r5,1
    4924:	2948ce84 	addi	r5,r5,9018
    4928:	d9402b15 	stw	r5,172(sp)
    492c:	01c001c4 	movi	r7,7
    4930:	dcc02c17 	ldw	r19,176(sp)
    4934:	00000306 	br	4944 <___vfprintf_internal_r+0x13b4>
    4938:	b5800204 	addi	r22,r22,8
    493c:	843ffc04 	addi	r16,r16,-16
    4940:	e4007b0e 	bge	fp,r16,4b30 <___vfprintf_internal_r+0x15a0>
    4944:	18c00404 	addi	r3,r3,16
    4948:	8c400044 	addi	r17,r17,1
    494c:	b5000015 	stw	r20,0(r22)
    4950:	b7000115 	stw	fp,4(r22)
    4954:	d8c02015 	stw	r3,128(sp)
    4958:	dc401f15 	stw	r17,124(sp)
    495c:	3c7ff60e 	bge	r7,r17,4938 <__alt_data_end+0xff004938>
    4960:	d9801e04 	addi	r6,sp,120
    4964:	b80b883a 	mov	r5,r23
    4968:	9809883a 	mov	r4,r19
    496c:	d9c03c15 	stw	r7,240(sp)
    4970:	000a1e40 	call	a1e4 <__sprint_r>
    4974:	d9c03c17 	ldw	r7,240(sp)
    4978:	103c071e 	bne	r2,zero,3998 <__alt_data_end+0xff003998>
    497c:	d8c02017 	ldw	r3,128(sp)
    4980:	dc401f17 	ldw	r17,124(sp)
    4984:	dd800404 	addi	r22,sp,16
    4988:	003fec06 	br	493c <__alt_data_end+0xff00493c>
    498c:	9080100c 	andi	r2,r18,64
    4990:	d8002785 	stb	zero,158(sp)
    4994:	10010e26 	beq	r2,zero,4dd0 <___vfprintf_internal_r+0x1840>
    4998:	d9002d17 	ldw	r4,180(sp)
    499c:	d9402917 	ldw	r5,164(sp)
    49a0:	002d883a 	mov	r22,zero
    49a4:	20800104 	addi	r2,r4,4
    49a8:	24c0000b 	ldhu	r19,0(r4)
    49ac:	283fc90e 	bge	r5,zero,48d4 <__alt_data_end+0xff0048d4>
    49b0:	d8802d15 	stw	r2,180(sp)
    49b4:	0039883a 	mov	fp,zero
    49b8:	9d84b03a 	or	r2,r19,r22
    49bc:	103c461e 	bne	r2,zero,3ad8 <__alt_data_end+0xff003ad8>
    49c0:	00800044 	movi	r2,1
    49c4:	003e6c06 	br	4378 <__alt_data_end+0xff004378>
    49c8:	d9002c17 	ldw	r4,176(sp)
    49cc:	d9801e04 	addi	r6,sp,120
    49d0:	b80b883a 	mov	r5,r23
    49d4:	000a1e40 	call	a1e4 <__sprint_r>
    49d8:	103bef1e 	bne	r2,zero,3998 <__alt_data_end+0xff003998>
    49dc:	d8c02017 	ldw	r3,128(sp)
    49e0:	da000404 	addi	r8,sp,16
    49e4:	d9003217 	ldw	r4,200(sp)
    49e8:	d8802617 	ldw	r2,152(sp)
    49ec:	d9403317 	ldw	r5,204(sp)
    49f0:	8123883a 	add	r17,r16,r4
    49f4:	11400216 	blt	r2,r5,4a00 <___vfprintf_internal_r+0x1470>
    49f8:	9100004c 	andi	r4,r18,1
    49fc:	20000d26 	beq	r4,zero,4a34 <___vfprintf_internal_r+0x14a4>
    4a00:	d9003717 	ldw	r4,220(sp)
    4a04:	d9403417 	ldw	r5,208(sp)
    4a08:	1907883a 	add	r3,r3,r4
    4a0c:	d9001f17 	ldw	r4,124(sp)
    4a10:	41400015 	stw	r5,0(r8)
    4a14:	d9403717 	ldw	r5,220(sp)
    4a18:	21000044 	addi	r4,r4,1
    4a1c:	d8c02015 	stw	r3,128(sp)
    4a20:	41400115 	stw	r5,4(r8)
    4a24:	d9001f15 	stw	r4,124(sp)
    4a28:	014001c4 	movi	r5,7
    4a2c:	2901e816 	blt	r5,r4,51d0 <___vfprintf_internal_r+0x1c40>
    4a30:	42000204 	addi	r8,r8,8
    4a34:	d9003317 	ldw	r4,204(sp)
    4a38:	8121883a 	add	r16,r16,r4
    4a3c:	2085c83a 	sub	r2,r4,r2
    4a40:	8461c83a 	sub	r16,r16,r17
    4a44:	1400010e 	bge	r2,r16,4a4c <___vfprintf_internal_r+0x14bc>
    4a48:	1021883a 	mov	r16,r2
    4a4c:	04000a0e 	bge	zero,r16,4a78 <___vfprintf_internal_r+0x14e8>
    4a50:	d9001f17 	ldw	r4,124(sp)
    4a54:	1c07883a 	add	r3,r3,r16
    4a58:	44400015 	stw	r17,0(r8)
    4a5c:	21000044 	addi	r4,r4,1
    4a60:	44000115 	stw	r16,4(r8)
    4a64:	d8c02015 	stw	r3,128(sp)
    4a68:	d9001f15 	stw	r4,124(sp)
    4a6c:	014001c4 	movi	r5,7
    4a70:	2901fb16 	blt	r5,r4,5260 <___vfprintf_internal_r+0x1cd0>
    4a74:	42000204 	addi	r8,r8,8
    4a78:	8001f716 	blt	r16,zero,5258 <___vfprintf_internal_r+0x1cc8>
    4a7c:	1421c83a 	sub	r16,r2,r16
    4a80:	043d380e 	bge	zero,r16,3f64 <__alt_data_end+0xff003f64>
    4a84:	04400404 	movi	r17,16
    4a88:	d8801f17 	ldw	r2,124(sp)
    4a8c:	8c3efb0e 	bge	r17,r16,467c <__alt_data_end+0xff00467c>
    4a90:	01400074 	movhi	r5,1
    4a94:	2948ce84 	addi	r5,r5,9018
    4a98:	d9402b15 	stw	r5,172(sp)
    4a9c:	058001c4 	movi	r22,7
    4aa0:	dcc02c17 	ldw	r19,176(sp)
    4aa4:	00000306 	br	4ab4 <___vfprintf_internal_r+0x1524>
    4aa8:	42000204 	addi	r8,r8,8
    4aac:	843ffc04 	addi	r16,r16,-16
    4ab0:	8c3ef50e 	bge	r17,r16,4688 <__alt_data_end+0xff004688>
    4ab4:	18c00404 	addi	r3,r3,16
    4ab8:	10800044 	addi	r2,r2,1
    4abc:	45000015 	stw	r20,0(r8)
    4ac0:	44400115 	stw	r17,4(r8)
    4ac4:	d8c02015 	stw	r3,128(sp)
    4ac8:	d8801f15 	stw	r2,124(sp)
    4acc:	b0bff60e 	bge	r22,r2,4aa8 <__alt_data_end+0xff004aa8>
    4ad0:	d9801e04 	addi	r6,sp,120
    4ad4:	b80b883a 	mov	r5,r23
    4ad8:	9809883a 	mov	r4,r19
    4adc:	000a1e40 	call	a1e4 <__sprint_r>
    4ae0:	103bad1e 	bne	r2,zero,3998 <__alt_data_end+0xff003998>
    4ae4:	d8c02017 	ldw	r3,128(sp)
    4ae8:	d8801f17 	ldw	r2,124(sp)
    4aec:	da000404 	addi	r8,sp,16
    4af0:	003fee06 	br	4aac <__alt_data_end+0xff004aac>
    4af4:	9088703a 	and	r4,r18,r2
    4af8:	203eab1e 	bne	r4,zero,45a8 <__alt_data_end+0xff0045a8>
    4afc:	dc401f17 	ldw	r17,124(sp)
    4b00:	40800115 	stw	r2,4(r8)
    4b04:	44000015 	stw	r16,0(r8)
    4b08:	8c400044 	addi	r17,r17,1
    4b0c:	d8c02015 	stw	r3,128(sp)
    4b10:	dc401f15 	stw	r17,124(sp)
    4b14:	008001c4 	movi	r2,7
    4b18:	14400e16 	blt	r2,r17,4b54 <___vfprintf_internal_r+0x15c4>
    4b1c:	45800204 	addi	r22,r8,8
    4b20:	003eca06 	br	464c <__alt_data_end+0xff00464c>
    4b24:	01000074 	movhi	r4,1
    4b28:	2108ce84 	addi	r4,r4,9018
    4b2c:	d9002b15 	stw	r4,172(sp)
    4b30:	d8802b17 	ldw	r2,172(sp)
    4b34:	1c07883a 	add	r3,r3,r16
    4b38:	8c400044 	addi	r17,r17,1
    4b3c:	b0800015 	stw	r2,0(r22)
    4b40:	b4000115 	stw	r16,4(r22)
    4b44:	d8c02015 	stw	r3,128(sp)
    4b48:	dc401f15 	stw	r17,124(sp)
    4b4c:	008001c4 	movi	r2,7
    4b50:	147ebd0e 	bge	r2,r17,4648 <__alt_data_end+0xff004648>
    4b54:	d9002c17 	ldw	r4,176(sp)
    4b58:	d9801e04 	addi	r6,sp,120
    4b5c:	b80b883a 	mov	r5,r23
    4b60:	000a1e40 	call	a1e4 <__sprint_r>
    4b64:	103b8c1e 	bne	r2,zero,3998 <__alt_data_end+0xff003998>
    4b68:	d8c02017 	ldw	r3,128(sp)
    4b6c:	dc401f17 	ldw	r17,124(sp)
    4b70:	dd800404 	addi	r22,sp,16
    4b74:	003eb506 	br	464c <__alt_data_end+0xff00464c>
    4b78:	d9002c17 	ldw	r4,176(sp)
    4b7c:	d9801e04 	addi	r6,sp,120
    4b80:	b80b883a 	mov	r5,r23
    4b84:	000a1e40 	call	a1e4 <__sprint_r>
    4b88:	103b831e 	bne	r2,zero,3998 <__alt_data_end+0xff003998>
    4b8c:	d8c02017 	ldw	r3,128(sp)
    4b90:	dc401f17 	ldw	r17,124(sp)
    4b94:	da000404 	addi	r8,sp,16
    4b98:	003e8d06 	br	45d0 <__alt_data_end+0xff0045d0>
    4b9c:	d9002c17 	ldw	r4,176(sp)
    4ba0:	d9801e04 	addi	r6,sp,120
    4ba4:	b80b883a 	mov	r5,r23
    4ba8:	000a1e40 	call	a1e4 <__sprint_r>
    4bac:	103b7a1e 	bne	r2,zero,3998 <__alt_data_end+0xff003998>
    4bb0:	d8c02017 	ldw	r3,128(sp)
    4bb4:	dc401f17 	ldw	r17,124(sp)
    4bb8:	dd800404 	addi	r22,sp,16
    4bbc:	003e8f06 	br	45fc <__alt_data_end+0xff0045fc>
    4bc0:	0027883a 	mov	r19,zero
    4bc4:	003f4a06 	br	48f0 <__alt_data_end+0xff0048f0>
    4bc8:	d9002c17 	ldw	r4,176(sp)
    4bcc:	d9801e04 	addi	r6,sp,120
    4bd0:	b80b883a 	mov	r5,r23
    4bd4:	000a1e40 	call	a1e4 <__sprint_r>
    4bd8:	103b6f1e 	bne	r2,zero,3998 <__alt_data_end+0xff003998>
    4bdc:	d8c02017 	ldw	r3,128(sp)
    4be0:	da000404 	addi	r8,sp,16
    4be4:	003c9d06 	br	3e5c <__alt_data_end+0xff003e5c>
    4be8:	04e7c83a 	sub	r19,zero,r19
    4bec:	9804c03a 	cmpne	r2,r19,zero
    4bf0:	05adc83a 	sub	r22,zero,r22
    4bf4:	b0adc83a 	sub	r22,r22,r2
    4bf8:	d8802917 	ldw	r2,164(sp)
    4bfc:	07000b44 	movi	fp,45
    4c00:	df002785 	stb	fp,158(sp)
    4c04:	10017b16 	blt	r2,zero,51f4 <___vfprintf_internal_r+0x1c64>
    4c08:	00bfdfc4 	movi	r2,-129
    4c0c:	90a4703a 	and	r18,r18,r2
    4c10:	003bb106 	br	3ad8 <__alt_data_end+0xff003ad8>
    4c14:	d9003617 	ldw	r4,216(sp)
    4c18:	d9403817 	ldw	r5,224(sp)
    4c1c:	da003d15 	stw	r8,244(sp)
    4c20:	0009e5c0 	call	9e5c <__fpclassifyd>
    4c24:	da003d17 	ldw	r8,244(sp)
    4c28:	1000f026 	beq	r2,zero,4fec <___vfprintf_internal_r+0x1a5c>
    4c2c:	d9002917 	ldw	r4,164(sp)
    4c30:	05bff7c4 	movi	r22,-33
    4c34:	00bfffc4 	movi	r2,-1
    4c38:	8dac703a 	and	r22,r17,r22
    4c3c:	20820026 	beq	r4,r2,5440 <___vfprintf_internal_r+0x1eb0>
    4c40:	008011c4 	movi	r2,71
    4c44:	b081f726 	beq	r22,r2,5424 <___vfprintf_internal_r+0x1e94>
    4c48:	d9003817 	ldw	r4,224(sp)
    4c4c:	90c04014 	ori	r3,r18,256
    4c50:	d8c02b15 	stw	r3,172(sp)
    4c54:	20021516 	blt	r4,zero,54ac <___vfprintf_internal_r+0x1f1c>
    4c58:	dcc03817 	ldw	r19,224(sp)
    4c5c:	d8002a05 	stb	zero,168(sp)
    4c60:	00801984 	movi	r2,102
    4c64:	8881f926 	beq	r17,r2,544c <___vfprintf_internal_r+0x1ebc>
    4c68:	00801184 	movi	r2,70
    4c6c:	88821c26 	beq	r17,r2,54e0 <___vfprintf_internal_r+0x1f50>
    4c70:	00801144 	movi	r2,69
    4c74:	b081ef26 	beq	r22,r2,5434 <___vfprintf_internal_r+0x1ea4>
    4c78:	d8c02917 	ldw	r3,164(sp)
    4c7c:	d8802104 	addi	r2,sp,132
    4c80:	d8800315 	stw	r2,12(sp)
    4c84:	d9403617 	ldw	r5,216(sp)
    4c88:	d8802504 	addi	r2,sp,148
    4c8c:	d9002c17 	ldw	r4,176(sp)
    4c90:	d8800215 	stw	r2,8(sp)
    4c94:	d8802604 	addi	r2,sp,152
    4c98:	d8c00015 	stw	r3,0(sp)
    4c9c:	d8800115 	stw	r2,4(sp)
    4ca0:	01c00084 	movi	r7,2
    4ca4:	980d883a 	mov	r6,r19
    4ca8:	d8c03c15 	stw	r3,240(sp)
    4cac:	da003d15 	stw	r8,244(sp)
    4cb0:	0005bb40 	call	5bb4 <_dtoa_r>
    4cb4:	1021883a 	mov	r16,r2
    4cb8:	008019c4 	movi	r2,103
    4cbc:	d8c03c17 	ldw	r3,240(sp)
    4cc0:	da003d17 	ldw	r8,244(sp)
    4cc4:	88817126 	beq	r17,r2,528c <___vfprintf_internal_r+0x1cfc>
    4cc8:	008011c4 	movi	r2,71
    4ccc:	88829226 	beq	r17,r2,5718 <___vfprintf_internal_r+0x2188>
    4cd0:	80f9883a 	add	fp,r16,r3
    4cd4:	d9003617 	ldw	r4,216(sp)
    4cd8:	000d883a 	mov	r6,zero
    4cdc:	000f883a 	mov	r7,zero
    4ce0:	980b883a 	mov	r5,r19
    4ce4:	da003d15 	stw	r8,244(sp)
    4ce8:	000de5c0 	call	de5c <__eqdf2>
    4cec:	da003d17 	ldw	r8,244(sp)
    4cf0:	10018d26 	beq	r2,zero,5328 <___vfprintf_internal_r+0x1d98>
    4cf4:	d8802117 	ldw	r2,132(sp)
    4cf8:	1700062e 	bgeu	r2,fp,4d14 <___vfprintf_internal_r+0x1784>
    4cfc:	01000c04 	movi	r4,48
    4d00:	10c00044 	addi	r3,r2,1
    4d04:	d8c02115 	stw	r3,132(sp)
    4d08:	11000005 	stb	r4,0(r2)
    4d0c:	d8802117 	ldw	r2,132(sp)
    4d10:	173ffb36 	bltu	r2,fp,4d00 <__alt_data_end+0xff004d00>
    4d14:	1405c83a 	sub	r2,r2,r16
    4d18:	d8803315 	stw	r2,204(sp)
    4d1c:	008011c4 	movi	r2,71
    4d20:	b0817626 	beq	r22,r2,52fc <___vfprintf_internal_r+0x1d6c>
    4d24:	00801944 	movi	r2,101
    4d28:	1442810e 	bge	r2,r17,5730 <___vfprintf_internal_r+0x21a0>
    4d2c:	d8c02617 	ldw	r3,152(sp)
    4d30:	00801984 	movi	r2,102
    4d34:	d8c03215 	stw	r3,200(sp)
    4d38:	8881fe26 	beq	r17,r2,5534 <___vfprintf_internal_r+0x1fa4>
    4d3c:	d8c03217 	ldw	r3,200(sp)
    4d40:	d9003317 	ldw	r4,204(sp)
    4d44:	1901dd16 	blt	r3,r4,54bc <___vfprintf_internal_r+0x1f2c>
    4d48:	9480004c 	andi	r18,r18,1
    4d4c:	90022b1e 	bne	r18,zero,55fc <___vfprintf_internal_r+0x206c>
    4d50:	1805883a 	mov	r2,r3
    4d54:	18028016 	blt	r3,zero,5758 <___vfprintf_internal_r+0x21c8>
    4d58:	d8c03217 	ldw	r3,200(sp)
    4d5c:	044019c4 	movi	r17,103
    4d60:	d8c02e15 	stw	r3,184(sp)
    4d64:	df002a07 	ldb	fp,168(sp)
    4d68:	e001531e 	bne	fp,zero,52b8 <___vfprintf_internal_r+0x1d28>
    4d6c:	df002783 	ldbu	fp,158(sp)
    4d70:	d8802a15 	stw	r2,168(sp)
    4d74:	dc802b17 	ldw	r18,172(sp)
    4d78:	d8002915 	stw	zero,164(sp)
    4d7c:	003bd106 	br	3cc4 <__alt_data_end+0xff003cc4>
    4d80:	d8802d17 	ldw	r2,180(sp)
    4d84:	d8c02d17 	ldw	r3,180(sp)
    4d88:	d9002d17 	ldw	r4,180(sp)
    4d8c:	10800017 	ldw	r2,0(r2)
    4d90:	18c00117 	ldw	r3,4(r3)
    4d94:	21000204 	addi	r4,r4,8
    4d98:	d8803615 	stw	r2,216(sp)
    4d9c:	d8c03815 	stw	r3,224(sp)
    4da0:	d9002d15 	stw	r4,180(sp)
    4da4:	003b7506 	br	3b7c <__alt_data_end+0xff003b7c>
    4da8:	ac400007 	ldb	r17,0(r21)
    4dac:	003a5906 	br	3714 <__alt_data_end+0xff003714>
    4db0:	9080100c 	andi	r2,r18,64
    4db4:	1000a826 	beq	r2,zero,5058 <___vfprintf_internal_r+0x1ac8>
    4db8:	d9002d17 	ldw	r4,180(sp)
    4dbc:	002d883a 	mov	r22,zero
    4dc0:	24c0000b 	ldhu	r19,0(r4)
    4dc4:	21000104 	addi	r4,r4,4
    4dc8:	d9002d15 	stw	r4,180(sp)
    4dcc:	003ccb06 	br	40fc <__alt_data_end+0xff0040fc>
    4dd0:	d8c02d17 	ldw	r3,180(sp)
    4dd4:	d9002917 	ldw	r4,164(sp)
    4dd8:	002d883a 	mov	r22,zero
    4ddc:	18800104 	addi	r2,r3,4
    4de0:	1cc00017 	ldw	r19,0(r3)
    4de4:	203ebb0e 	bge	r4,zero,48d4 <__alt_data_end+0xff0048d4>
    4de8:	003ef106 	br	49b0 <__alt_data_end+0xff0049b0>
    4dec:	9080040c 	andi	r2,r18,16
    4df0:	1000921e 	bne	r2,zero,503c <___vfprintf_internal_r+0x1aac>
    4df4:	9480100c 	andi	r18,r18,64
    4df8:	90013926 	beq	r18,zero,52e0 <___vfprintf_internal_r+0x1d50>
    4dfc:	d9002d17 	ldw	r4,180(sp)
    4e00:	d9402f17 	ldw	r5,188(sp)
    4e04:	20800017 	ldw	r2,0(r4)
    4e08:	21000104 	addi	r4,r4,4
    4e0c:	d9002d15 	stw	r4,180(sp)
    4e10:	1140000d 	sth	r5,0(r2)
    4e14:	003a1606 	br	3670 <__alt_data_end+0xff003670>
    4e18:	9080100c 	andi	r2,r18,64
    4e1c:	10008026 	beq	r2,zero,5020 <___vfprintf_internal_r+0x1a90>
    4e20:	d8c02d17 	ldw	r3,180(sp)
    4e24:	1cc0000f 	ldh	r19,0(r3)
    4e28:	18c00104 	addi	r3,r3,4
    4e2c:	d8c02d15 	stw	r3,180(sp)
    4e30:	982dd7fa 	srai	r22,r19,31
    4e34:	b005883a 	mov	r2,r22
    4e38:	003b1f06 	br	3ab8 <__alt_data_end+0xff003ab8>
    4e3c:	9080100c 	andi	r2,r18,64
    4e40:	d8002785 	stb	zero,158(sp)
    4e44:	10008a1e 	bne	r2,zero,5070 <___vfprintf_internal_r+0x1ae0>
    4e48:	d9402d17 	ldw	r5,180(sp)
    4e4c:	d8c02917 	ldw	r3,164(sp)
    4e50:	002d883a 	mov	r22,zero
    4e54:	28800104 	addi	r2,r5,4
    4e58:	2cc00017 	ldw	r19,0(r5)
    4e5c:	183e4b0e 	bge	r3,zero,478c <__alt_data_end+0xff00478c>
    4e60:	9d86b03a 	or	r3,r19,r22
    4e64:	d8802d15 	stw	r2,180(sp)
    4e68:	183e4c1e 	bne	r3,zero,479c <__alt_data_end+0xff00479c>
    4e6c:	0039883a 	mov	fp,zero
    4e70:	0005883a 	mov	r2,zero
    4e74:	003d4006 	br	4378 <__alt_data_end+0xff004378>
    4e78:	01400074 	movhi	r5,1
    4e7c:	2948ce84 	addi	r5,r5,9018
    4e80:	d9402b15 	stw	r5,172(sp)
    4e84:	d9402b17 	ldw	r5,172(sp)
    4e88:	1c47883a 	add	r3,r3,r17
    4e8c:	10800044 	addi	r2,r2,1
    4e90:	41400015 	stw	r5,0(r8)
    4e94:	44400115 	stw	r17,4(r8)
    4e98:	d8c02015 	stw	r3,128(sp)
    4e9c:	d8801f15 	stw	r2,124(sp)
    4ea0:	010001c4 	movi	r4,7
    4ea4:	20bec816 	blt	r4,r2,49c8 <__alt_data_end+0xff0049c8>
    4ea8:	42000204 	addi	r8,r8,8
    4eac:	003ecd06 	br	49e4 <__alt_data_end+0xff0049e4>
    4eb0:	d9002917 	ldw	r4,164(sp)
    4eb4:	d8002785 	stb	zero,158(sp)
    4eb8:	203d2d16 	blt	r4,zero,4370 <__alt_data_end+0xff004370>
    4ebc:	00bfdfc4 	movi	r2,-129
    4ec0:	90a4703a 	and	r18,r18,r2
    4ec4:	003a9106 	br	390c <__alt_data_end+0xff00390c>
    4ec8:	01000074 	movhi	r4,1
    4ecc:	2108ce84 	addi	r4,r4,9018
    4ed0:	d9002b15 	stw	r4,172(sp)
    4ed4:	003c0c06 	br	3f08 <__alt_data_end+0xff003f08>
    4ed8:	d9002c17 	ldw	r4,176(sp)
    4edc:	d9801e04 	addi	r6,sp,120
    4ee0:	b80b883a 	mov	r5,r23
    4ee4:	000a1e40 	call	a1e4 <__sprint_r>
    4ee8:	103aab1e 	bne	r2,zero,3998 <__alt_data_end+0xff003998>
    4eec:	d8c02017 	ldw	r3,128(sp)
    4ef0:	da000404 	addi	r8,sp,16
    4ef4:	003d4106 	br	43fc <__alt_data_end+0xff0043fc>
    4ef8:	d8801f17 	ldw	r2,124(sp)
    4efc:	01400074 	movhi	r5,1
    4f00:	01000044 	movi	r4,1
    4f04:	18c00044 	addi	r3,r3,1
    4f08:	10800044 	addi	r2,r2,1
    4f0c:	2948ce04 	addi	r5,r5,9016
    4f10:	41000115 	stw	r4,4(r8)
    4f14:	41400015 	stw	r5,0(r8)
    4f18:	d8c02015 	stw	r3,128(sp)
    4f1c:	d8801f15 	stw	r2,124(sp)
    4f20:	010001c4 	movi	r4,7
    4f24:	20805c16 	blt	r4,r2,5098 <___vfprintf_internal_r+0x1b08>
    4f28:	42000204 	addi	r8,r8,8
    4f2c:	8800041e 	bne	r17,zero,4f40 <___vfprintf_internal_r+0x19b0>
    4f30:	d8803317 	ldw	r2,204(sp)
    4f34:	1000021e 	bne	r2,zero,4f40 <___vfprintf_internal_r+0x19b0>
    4f38:	9080004c 	andi	r2,r18,1
    4f3c:	103c0926 	beq	r2,zero,3f64 <__alt_data_end+0xff003f64>
    4f40:	d9003717 	ldw	r4,220(sp)
    4f44:	d8801f17 	ldw	r2,124(sp)
    4f48:	d9403417 	ldw	r5,208(sp)
    4f4c:	20c7883a 	add	r3,r4,r3
    4f50:	10800044 	addi	r2,r2,1
    4f54:	41000115 	stw	r4,4(r8)
    4f58:	41400015 	stw	r5,0(r8)
    4f5c:	d8c02015 	stw	r3,128(sp)
    4f60:	d8801f15 	stw	r2,124(sp)
    4f64:	010001c4 	movi	r4,7
    4f68:	20812116 	blt	r4,r2,53f0 <___vfprintf_internal_r+0x1e60>
    4f6c:	42000204 	addi	r8,r8,8
    4f70:	0463c83a 	sub	r17,zero,r17
    4f74:	0440730e 	bge	zero,r17,5144 <___vfprintf_internal_r+0x1bb4>
    4f78:	05800404 	movi	r22,16
    4f7c:	b440860e 	bge	r22,r17,5198 <___vfprintf_internal_r+0x1c08>
    4f80:	01400074 	movhi	r5,1
    4f84:	2948ce84 	addi	r5,r5,9018
    4f88:	d9402b15 	stw	r5,172(sp)
    4f8c:	070001c4 	movi	fp,7
    4f90:	dcc02c17 	ldw	r19,176(sp)
    4f94:	00000306 	br	4fa4 <___vfprintf_internal_r+0x1a14>
    4f98:	42000204 	addi	r8,r8,8
    4f9c:	8c7ffc04 	addi	r17,r17,-16
    4fa0:	b440800e 	bge	r22,r17,51a4 <___vfprintf_internal_r+0x1c14>
    4fa4:	18c00404 	addi	r3,r3,16
    4fa8:	10800044 	addi	r2,r2,1
    4fac:	45000015 	stw	r20,0(r8)
    4fb0:	45800115 	stw	r22,4(r8)
    4fb4:	d8c02015 	stw	r3,128(sp)
    4fb8:	d8801f15 	stw	r2,124(sp)
    4fbc:	e0bff60e 	bge	fp,r2,4f98 <__alt_data_end+0xff004f98>
    4fc0:	d9801e04 	addi	r6,sp,120
    4fc4:	b80b883a 	mov	r5,r23
    4fc8:	9809883a 	mov	r4,r19
    4fcc:	000a1e40 	call	a1e4 <__sprint_r>
    4fd0:	103a711e 	bne	r2,zero,3998 <__alt_data_end+0xff003998>
    4fd4:	d8c02017 	ldw	r3,128(sp)
    4fd8:	d8801f17 	ldw	r2,124(sp)
    4fdc:	da000404 	addi	r8,sp,16
    4fe0:	003fee06 	br	4f9c <__alt_data_end+0xff004f9c>
    4fe4:	00bfffc4 	movi	r2,-1
    4fe8:	003a6f06 	br	39a8 <__alt_data_end+0xff0039a8>
    4fec:	008011c4 	movi	r2,71
    4ff0:	1440b816 	blt	r2,r17,52d4 <___vfprintf_internal_r+0x1d44>
    4ff4:	04000074 	movhi	r16,1
    4ff8:	8408c004 	addi	r16,r16,8960
    4ffc:	00c000c4 	movi	r3,3
    5000:	00bfdfc4 	movi	r2,-129
    5004:	d8c02a15 	stw	r3,168(sp)
    5008:	90a4703a 	and	r18,r18,r2
    500c:	df002783 	ldbu	fp,158(sp)
    5010:	d8c02e15 	stw	r3,184(sp)
    5014:	d8002915 	stw	zero,164(sp)
    5018:	d8003215 	stw	zero,200(sp)
    501c:	003b2906 	br	3cc4 <__alt_data_end+0xff003cc4>
    5020:	d9002d17 	ldw	r4,180(sp)
    5024:	24c00017 	ldw	r19,0(r4)
    5028:	21000104 	addi	r4,r4,4
    502c:	d9002d15 	stw	r4,180(sp)
    5030:	982dd7fa 	srai	r22,r19,31
    5034:	b005883a 	mov	r2,r22
    5038:	003a9f06 	br	3ab8 <__alt_data_end+0xff003ab8>
    503c:	d9402d17 	ldw	r5,180(sp)
    5040:	d8c02f17 	ldw	r3,188(sp)
    5044:	28800017 	ldw	r2,0(r5)
    5048:	29400104 	addi	r5,r5,4
    504c:	d9402d15 	stw	r5,180(sp)
    5050:	10c00015 	stw	r3,0(r2)
    5054:	00398606 	br	3670 <__alt_data_end+0xff003670>
    5058:	d9402d17 	ldw	r5,180(sp)
    505c:	002d883a 	mov	r22,zero
    5060:	2cc00017 	ldw	r19,0(r5)
    5064:	29400104 	addi	r5,r5,4
    5068:	d9402d15 	stw	r5,180(sp)
    506c:	003c2306 	br	40fc <__alt_data_end+0xff0040fc>
    5070:	d8c02d17 	ldw	r3,180(sp)
    5074:	d9002917 	ldw	r4,164(sp)
    5078:	002d883a 	mov	r22,zero
    507c:	18800104 	addi	r2,r3,4
    5080:	1cc0000b 	ldhu	r19,0(r3)
    5084:	203dc10e 	bge	r4,zero,478c <__alt_data_end+0xff00478c>
    5088:	003f7506 	br	4e60 <__alt_data_end+0xff004e60>
    508c:	04000074 	movhi	r16,1
    5090:	8408be04 	addi	r16,r16,8952
    5094:	003acc06 	br	3bc8 <__alt_data_end+0xff003bc8>
    5098:	d9002c17 	ldw	r4,176(sp)
    509c:	d9801e04 	addi	r6,sp,120
    50a0:	b80b883a 	mov	r5,r23
    50a4:	000a1e40 	call	a1e4 <__sprint_r>
    50a8:	103a3b1e 	bne	r2,zero,3998 <__alt_data_end+0xff003998>
    50ac:	dc402617 	ldw	r17,152(sp)
    50b0:	d8c02017 	ldw	r3,128(sp)
    50b4:	da000404 	addi	r8,sp,16
    50b8:	003f9c06 	br	4f2c <__alt_data_end+0xff004f2c>
    50bc:	ac400043 	ldbu	r17,1(r21)
    50c0:	94800814 	ori	r18,r18,32
    50c4:	ad400044 	addi	r21,r21,1
    50c8:	8c403fcc 	andi	r17,r17,255
    50cc:	8c40201c 	xori	r17,r17,128
    50d0:	8c7fe004 	addi	r17,r17,-128
    50d4:	00398f06 	br	3714 <__alt_data_end+0xff003714>
    50d8:	d8c02d15 	stw	r3,180(sp)
    50dc:	0039883a 	mov	fp,zero
    50e0:	003e3506 	br	49b8 <__alt_data_end+0xff0049b8>
    50e4:	d9002c17 	ldw	r4,176(sp)
    50e8:	d9801e04 	addi	r6,sp,120
    50ec:	b80b883a 	mov	r5,r23
    50f0:	000a1e40 	call	a1e4 <__sprint_r>
    50f4:	103a281e 	bne	r2,zero,3998 <__alt_data_end+0xff003998>
    50f8:	d8c02017 	ldw	r3,128(sp)
    50fc:	da000404 	addi	r8,sp,16
    5100:	003cd006 	br	4444 <__alt_data_end+0xff004444>
    5104:	8009883a 	mov	r4,r16
    5108:	da003d15 	stw	r8,244(sp)
    510c:	00034f80 	call	34f8 <strlen>
    5110:	d8802e15 	stw	r2,184(sp)
    5114:	da003d17 	ldw	r8,244(sp)
    5118:	103c340e 	bge	r2,zero,41ec <__alt_data_end+0xff0041ec>
    511c:	0005883a 	mov	r2,zero
    5120:	003c3206 	br	41ec <__alt_data_end+0xff0041ec>
    5124:	d9002c17 	ldw	r4,176(sp)
    5128:	d9801e04 	addi	r6,sp,120
    512c:	b80b883a 	mov	r5,r23
    5130:	000a1e40 	call	a1e4 <__sprint_r>
    5134:	103a181e 	bne	r2,zero,3998 <__alt_data_end+0xff003998>
    5138:	d8c02017 	ldw	r3,128(sp)
    513c:	d8801f17 	ldw	r2,124(sp)
    5140:	da000404 	addi	r8,sp,16
    5144:	d9403317 	ldw	r5,204(sp)
    5148:	10800044 	addi	r2,r2,1
    514c:	44000015 	stw	r16,0(r8)
    5150:	28c7883a 	add	r3,r5,r3
    5154:	003b7d06 	br	3f4c <__alt_data_end+0xff003f4c>
    5158:	01000074 	movhi	r4,1
    515c:	2108d284 	addi	r4,r4,9034
    5160:	d9003515 	stw	r4,212(sp)
    5164:	003b1406 	br	3db8 <__alt_data_end+0xff003db8>
    5168:	013fffc4 	movi	r4,-1
    516c:	003a3506 	br	3a44 <__alt_data_end+0xff003a44>
    5170:	0023883a 	mov	r17,zero
    5174:	003d9d06 	br	47ec <__alt_data_end+0xff0047ec>
    5178:	d9002c17 	ldw	r4,176(sp)
    517c:	d9801e04 	addi	r6,sp,120
    5180:	b80b883a 	mov	r5,r23
    5184:	000a1e40 	call	a1e4 <__sprint_r>
    5188:	103a031e 	bne	r2,zero,3998 <__alt_data_end+0xff003998>
    518c:	d8c02017 	ldw	r3,128(sp)
    5190:	da000404 	addi	r8,sp,16
    5194:	003d9406 	br	47e8 <__alt_data_end+0xff0047e8>
    5198:	01000074 	movhi	r4,1
    519c:	2108ce84 	addi	r4,r4,9018
    51a0:	d9002b15 	stw	r4,172(sp)
    51a4:	d9002b17 	ldw	r4,172(sp)
    51a8:	1c47883a 	add	r3,r3,r17
    51ac:	10800044 	addi	r2,r2,1
    51b0:	41000015 	stw	r4,0(r8)
    51b4:	44400115 	stw	r17,4(r8)
    51b8:	d8c02015 	stw	r3,128(sp)
    51bc:	d8801f15 	stw	r2,124(sp)
    51c0:	010001c4 	movi	r4,7
    51c4:	20bfd716 	blt	r4,r2,5124 <__alt_data_end+0xff005124>
    51c8:	42000204 	addi	r8,r8,8
    51cc:	003fdd06 	br	5144 <__alt_data_end+0xff005144>
    51d0:	d9002c17 	ldw	r4,176(sp)
    51d4:	d9801e04 	addi	r6,sp,120
    51d8:	b80b883a 	mov	r5,r23
    51dc:	000a1e40 	call	a1e4 <__sprint_r>
    51e0:	1039ed1e 	bne	r2,zero,3998 <__alt_data_end+0xff003998>
    51e4:	d8802617 	ldw	r2,152(sp)
    51e8:	d8c02017 	ldw	r3,128(sp)
    51ec:	da000404 	addi	r8,sp,16
    51f0:	003e1006 	br	4a34 <__alt_data_end+0xff004a34>
    51f4:	00800044 	movi	r2,1
    51f8:	10803fcc 	andi	r2,r2,255
    51fc:	00c00044 	movi	r3,1
    5200:	10fa3526 	beq	r2,r3,3ad8 <__alt_data_end+0xff003ad8>
    5204:	00c00084 	movi	r3,2
    5208:	10fbcb26 	beq	r2,r3,4138 <__alt_data_end+0xff004138>
    520c:	003a8f06 	br	3c4c <__alt_data_end+0xff003c4c>
    5210:	01000074 	movhi	r4,1
    5214:	2108d284 	addi	r4,r4,9034
    5218:	d9003515 	stw	r4,212(sp)
    521c:	003b7606 	br	3ff8 <__alt_data_end+0xff003ff8>
    5220:	d8802917 	ldw	r2,164(sp)
    5224:	00c00184 	movi	r3,6
    5228:	1880012e 	bgeu	r3,r2,5230 <___vfprintf_internal_r+0x1ca0>
    522c:	1805883a 	mov	r2,r3
    5230:	d8802e15 	stw	r2,184(sp)
    5234:	1000ef16 	blt	r2,zero,55f4 <___vfprintf_internal_r+0x2064>
    5238:	04000074 	movhi	r16,1
    523c:	d8802a15 	stw	r2,168(sp)
    5240:	dcc02d15 	stw	r19,180(sp)
    5244:	d8002915 	stw	zero,164(sp)
    5248:	d8003215 	stw	zero,200(sp)
    524c:	8408cc04 	addi	r16,r16,9008
    5250:	0039883a 	mov	fp,zero
    5254:	003aa206 	br	3ce0 <__alt_data_end+0xff003ce0>
    5258:	0021883a 	mov	r16,zero
    525c:	003e0706 	br	4a7c <__alt_data_end+0xff004a7c>
    5260:	d9002c17 	ldw	r4,176(sp)
    5264:	d9801e04 	addi	r6,sp,120
    5268:	b80b883a 	mov	r5,r23
    526c:	000a1e40 	call	a1e4 <__sprint_r>
    5270:	1039c91e 	bne	r2,zero,3998 <__alt_data_end+0xff003998>
    5274:	d8802617 	ldw	r2,152(sp)
    5278:	d9403317 	ldw	r5,204(sp)
    527c:	d8c02017 	ldw	r3,128(sp)
    5280:	da000404 	addi	r8,sp,16
    5284:	2885c83a 	sub	r2,r5,r2
    5288:	003dfb06 	br	4a78 <__alt_data_end+0xff004a78>
    528c:	9080004c 	andi	r2,r18,1
    5290:	103e8f1e 	bne	r2,zero,4cd0 <__alt_data_end+0xff004cd0>
    5294:	d8802117 	ldw	r2,132(sp)
    5298:	003e9e06 	br	4d14 <__alt_data_end+0xff004d14>
    529c:	1025883a 	mov	r18,r2
    52a0:	0039883a 	mov	fp,zero
    52a4:	00800084 	movi	r2,2
    52a8:	003fd306 	br	51f8 <__alt_data_end+0xff0051f8>
    52ac:	07000b44 	movi	fp,45
    52b0:	df002785 	stb	fp,158(sp)
    52b4:	003a4006 	br	3bb8 <__alt_data_end+0xff003bb8>
    52b8:	00c00b44 	movi	r3,45
    52bc:	d8c02785 	stb	r3,158(sp)
    52c0:	d8802a15 	stw	r2,168(sp)
    52c4:	dc802b17 	ldw	r18,172(sp)
    52c8:	d8002915 	stw	zero,164(sp)
    52cc:	07000b44 	movi	fp,45
    52d0:	003a8006 	br	3cd4 <__alt_data_end+0xff003cd4>
    52d4:	04000074 	movhi	r16,1
    52d8:	8408c104 	addi	r16,r16,8964
    52dc:	003f4706 	br	4ffc <__alt_data_end+0xff004ffc>
    52e0:	d8c02d17 	ldw	r3,180(sp)
    52e4:	d9002f17 	ldw	r4,188(sp)
    52e8:	18800017 	ldw	r2,0(r3)
    52ec:	18c00104 	addi	r3,r3,4
    52f0:	d8c02d15 	stw	r3,180(sp)
    52f4:	11000015 	stw	r4,0(r2)
    52f8:	0038dd06 	br	3670 <__alt_data_end+0xff003670>
    52fc:	dd802617 	ldw	r22,152(sp)
    5300:	00bfff44 	movi	r2,-3
    5304:	b0801c16 	blt	r22,r2,5378 <___vfprintf_internal_r+0x1de8>
    5308:	d9402917 	ldw	r5,164(sp)
    530c:	2d801a16 	blt	r5,r22,5378 <___vfprintf_internal_r+0x1de8>
    5310:	dd803215 	stw	r22,200(sp)
    5314:	003e8906 	br	4d3c <__alt_data_end+0xff004d3c>
    5318:	01000074 	movhi	r4,1
    531c:	2108ce84 	addi	r4,r4,9018
    5320:	d9002b15 	stw	r4,172(sp)
    5324:	003c9106 	br	456c <__alt_data_end+0xff00456c>
    5328:	e005883a 	mov	r2,fp
    532c:	003e7906 	br	4d14 <__alt_data_end+0xff004d14>
    5330:	d9402917 	ldw	r5,164(sp)
    5334:	df002783 	ldbu	fp,158(sp)
    5338:	dcc02d15 	stw	r19,180(sp)
    533c:	d9402a15 	stw	r5,168(sp)
    5340:	d9402e15 	stw	r5,184(sp)
    5344:	d8002915 	stw	zero,164(sp)
    5348:	d8003215 	stw	zero,200(sp)
    534c:	003a5d06 	br	3cc4 <__alt_data_end+0xff003cc4>
    5350:	9080004c 	andi	r2,r18,1
    5354:	0039883a 	mov	fp,zero
    5358:	10000426 	beq	r2,zero,536c <___vfprintf_internal_r+0x1ddc>
    535c:	00800c04 	movi	r2,48
    5360:	dc001dc4 	addi	r16,sp,119
    5364:	d8801dc5 	stb	r2,119(sp)
    5368:	003b8006 	br	416c <__alt_data_end+0xff00416c>
    536c:	d8002e15 	stw	zero,184(sp)
    5370:	dc001e04 	addi	r16,sp,120
    5374:	003a4d06 	br	3cac <__alt_data_end+0xff003cac>
    5378:	8c7fff84 	addi	r17,r17,-2
    537c:	b5bfffc4 	addi	r22,r22,-1
    5380:	dd802615 	stw	r22,152(sp)
    5384:	dc4022c5 	stb	r17,139(sp)
    5388:	b000bf16 	blt	r22,zero,5688 <___vfprintf_internal_r+0x20f8>
    538c:	00800ac4 	movi	r2,43
    5390:	d8802305 	stb	r2,140(sp)
    5394:	00800244 	movi	r2,9
    5398:	15807016 	blt	r2,r22,555c <___vfprintf_internal_r+0x1fcc>
    539c:	00800c04 	movi	r2,48
    53a0:	b5800c04 	addi	r22,r22,48
    53a4:	d8802345 	stb	r2,141(sp)
    53a8:	dd802385 	stb	r22,142(sp)
    53ac:	d88023c4 	addi	r2,sp,143
    53b0:	df0022c4 	addi	fp,sp,139
    53b4:	d8c03317 	ldw	r3,204(sp)
    53b8:	1739c83a 	sub	fp,r2,fp
    53bc:	d9003317 	ldw	r4,204(sp)
    53c0:	e0c7883a 	add	r3,fp,r3
    53c4:	df003a15 	stw	fp,232(sp)
    53c8:	d8c02e15 	stw	r3,184(sp)
    53cc:	00800044 	movi	r2,1
    53d0:	1100b30e 	bge	r2,r4,56a0 <___vfprintf_internal_r+0x2110>
    53d4:	d8c02e17 	ldw	r3,184(sp)
    53d8:	18c00044 	addi	r3,r3,1
    53dc:	d8c02e15 	stw	r3,184(sp)
    53e0:	1805883a 	mov	r2,r3
    53e4:	1800ac16 	blt	r3,zero,5698 <___vfprintf_internal_r+0x2108>
    53e8:	d8003215 	stw	zero,200(sp)
    53ec:	003e5d06 	br	4d64 <__alt_data_end+0xff004d64>
    53f0:	d9002c17 	ldw	r4,176(sp)
    53f4:	d9801e04 	addi	r6,sp,120
    53f8:	b80b883a 	mov	r5,r23
    53fc:	000a1e40 	call	a1e4 <__sprint_r>
    5400:	1039651e 	bne	r2,zero,3998 <__alt_data_end+0xff003998>
    5404:	dc402617 	ldw	r17,152(sp)
    5408:	d8c02017 	ldw	r3,128(sp)
    540c:	d8801f17 	ldw	r2,124(sp)
    5410:	da000404 	addi	r8,sp,16
    5414:	003ed606 	br	4f70 <__alt_data_end+0xff004f70>
    5418:	582b883a 	mov	r21,r11
    541c:	d8002915 	stw	zero,164(sp)
    5420:	0038bd06 	br	3718 <__alt_data_end+0xff003718>
    5424:	d8802917 	ldw	r2,164(sp)
    5428:	103e071e 	bne	r2,zero,4c48 <__alt_data_end+0xff004c48>
    542c:	dc002915 	stw	r16,164(sp)
    5430:	003e0506 	br	4c48 <__alt_data_end+0xff004c48>
    5434:	d9002917 	ldw	r4,164(sp)
    5438:	20c00044 	addi	r3,r4,1
    543c:	003e0f06 	br	4c7c <__alt_data_end+0xff004c7c>
    5440:	01400184 	movi	r5,6
    5444:	d9402915 	stw	r5,164(sp)
    5448:	003dff06 	br	4c48 <__alt_data_end+0xff004c48>
    544c:	d8802104 	addi	r2,sp,132
    5450:	d8800315 	stw	r2,12(sp)
    5454:	d8802504 	addi	r2,sp,148
    5458:	d8800215 	stw	r2,8(sp)
    545c:	d8802604 	addi	r2,sp,152
    5460:	d8800115 	stw	r2,4(sp)
    5464:	d8802917 	ldw	r2,164(sp)
    5468:	d9403617 	ldw	r5,216(sp)
    546c:	d9002c17 	ldw	r4,176(sp)
    5470:	d8800015 	stw	r2,0(sp)
    5474:	01c000c4 	movi	r7,3
    5478:	980d883a 	mov	r6,r19
    547c:	da003d15 	stw	r8,244(sp)
    5480:	0005bb40 	call	5bb4 <_dtoa_r>
    5484:	d8c02917 	ldw	r3,164(sp)
    5488:	da003d17 	ldw	r8,244(sp)
    548c:	1021883a 	mov	r16,r2
    5490:	10f9883a 	add	fp,r2,r3
    5494:	81000007 	ldb	r4,0(r16)
    5498:	00800c04 	movi	r2,48
    549c:	20805e26 	beq	r4,r2,5618 <___vfprintf_internal_r+0x2088>
    54a0:	d8c02617 	ldw	r3,152(sp)
    54a4:	e0f9883a 	add	fp,fp,r3
    54a8:	003e0a06 	br	4cd4 <__alt_data_end+0xff004cd4>
    54ac:	00c00b44 	movi	r3,45
    54b0:	24e0003c 	xorhi	r19,r4,32768
    54b4:	d8c02a05 	stb	r3,168(sp)
    54b8:	003de906 	br	4c60 <__alt_data_end+0xff004c60>
    54bc:	d8c03217 	ldw	r3,200(sp)
    54c0:	00c07a0e 	bge	zero,r3,56ac <___vfprintf_internal_r+0x211c>
    54c4:	00800044 	movi	r2,1
    54c8:	d9003317 	ldw	r4,204(sp)
    54cc:	1105883a 	add	r2,r2,r4
    54d0:	d8802e15 	stw	r2,184(sp)
    54d4:	10004e16 	blt	r2,zero,5610 <___vfprintf_internal_r+0x2080>
    54d8:	044019c4 	movi	r17,103
    54dc:	003e2106 	br	4d64 <__alt_data_end+0xff004d64>
    54e0:	d9002917 	ldw	r4,164(sp)
    54e4:	d8802104 	addi	r2,sp,132
    54e8:	d8800315 	stw	r2,12(sp)
    54ec:	d9000015 	stw	r4,0(sp)
    54f0:	d8802504 	addi	r2,sp,148
    54f4:	d9403617 	ldw	r5,216(sp)
    54f8:	d9002c17 	ldw	r4,176(sp)
    54fc:	d8800215 	stw	r2,8(sp)
    5500:	d8802604 	addi	r2,sp,152
    5504:	d8800115 	stw	r2,4(sp)
    5508:	01c000c4 	movi	r7,3
    550c:	980d883a 	mov	r6,r19
    5510:	da003d15 	stw	r8,244(sp)
    5514:	0005bb40 	call	5bb4 <_dtoa_r>
    5518:	d8c02917 	ldw	r3,164(sp)
    551c:	da003d17 	ldw	r8,244(sp)
    5520:	1021883a 	mov	r16,r2
    5524:	00801184 	movi	r2,70
    5528:	80f9883a 	add	fp,r16,r3
    552c:	88bfd926 	beq	r17,r2,5494 <__alt_data_end+0xff005494>
    5530:	003de806 	br	4cd4 <__alt_data_end+0xff004cd4>
    5534:	d9002917 	ldw	r4,164(sp)
    5538:	00c04d0e 	bge	zero,r3,5670 <___vfprintf_internal_r+0x20e0>
    553c:	2000441e 	bne	r4,zero,5650 <___vfprintf_internal_r+0x20c0>
    5540:	9480004c 	andi	r18,r18,1
    5544:	9000421e 	bne	r18,zero,5650 <___vfprintf_internal_r+0x20c0>
    5548:	1805883a 	mov	r2,r3
    554c:	18007016 	blt	r3,zero,5710 <___vfprintf_internal_r+0x2180>
    5550:	d8c03217 	ldw	r3,200(sp)
    5554:	d8c02e15 	stw	r3,184(sp)
    5558:	003e0206 	br	4d64 <__alt_data_end+0xff004d64>
    555c:	df0022c4 	addi	fp,sp,139
    5560:	dc002915 	stw	r16,164(sp)
    5564:	4027883a 	mov	r19,r8
    5568:	e021883a 	mov	r16,fp
    556c:	b009883a 	mov	r4,r22
    5570:	01400284 	movi	r5,10
    5574:	000cb980 	call	cb98 <__modsi3>
    5578:	10800c04 	addi	r2,r2,48
    557c:	843fffc4 	addi	r16,r16,-1
    5580:	b009883a 	mov	r4,r22
    5584:	01400284 	movi	r5,10
    5588:	80800005 	stb	r2,0(r16)
    558c:	000cb140 	call	cb14 <__divsi3>
    5590:	102d883a 	mov	r22,r2
    5594:	00800244 	movi	r2,9
    5598:	15bff416 	blt	r2,r22,556c <__alt_data_end+0xff00556c>
    559c:	9811883a 	mov	r8,r19
    55a0:	b0800c04 	addi	r2,r22,48
    55a4:	8027883a 	mov	r19,r16
    55a8:	997fffc4 	addi	r5,r19,-1
    55ac:	98bfffc5 	stb	r2,-1(r19)
    55b0:	dc002917 	ldw	r16,164(sp)
    55b4:	2f006a2e 	bgeu	r5,fp,5760 <___vfprintf_internal_r+0x21d0>
    55b8:	d9c02384 	addi	r7,sp,142
    55bc:	3ccfc83a 	sub	r7,r7,r19
    55c0:	d9002344 	addi	r4,sp,141
    55c4:	e1cf883a 	add	r7,fp,r7
    55c8:	00000106 	br	55d0 <___vfprintf_internal_r+0x2040>
    55cc:	28800003 	ldbu	r2,0(r5)
    55d0:	20800005 	stb	r2,0(r4)
    55d4:	21000044 	addi	r4,r4,1
    55d8:	29400044 	addi	r5,r5,1
    55dc:	393ffb1e 	bne	r7,r4,55cc <__alt_data_end+0xff0055cc>
    55e0:	d8802304 	addi	r2,sp,140
    55e4:	14c5c83a 	sub	r2,r2,r19
    55e8:	d8c02344 	addi	r3,sp,141
    55ec:	1885883a 	add	r2,r3,r2
    55f0:	003f7006 	br	53b4 <__alt_data_end+0xff0053b4>
    55f4:	0005883a 	mov	r2,zero
    55f8:	003f0f06 	br	5238 <__alt_data_end+0xff005238>
    55fc:	d8c03217 	ldw	r3,200(sp)
    5600:	18c00044 	addi	r3,r3,1
    5604:	d8c02e15 	stw	r3,184(sp)
    5608:	1805883a 	mov	r2,r3
    560c:	183fb20e 	bge	r3,zero,54d8 <__alt_data_end+0xff0054d8>
    5610:	0005883a 	mov	r2,zero
    5614:	003fb006 	br	54d8 <__alt_data_end+0xff0054d8>
    5618:	d9003617 	ldw	r4,216(sp)
    561c:	000d883a 	mov	r6,zero
    5620:	000f883a 	mov	r7,zero
    5624:	980b883a 	mov	r5,r19
    5628:	d8c03c15 	stw	r3,240(sp)
    562c:	da003d15 	stw	r8,244(sp)
    5630:	000de5c0 	call	de5c <__eqdf2>
    5634:	d8c03c17 	ldw	r3,240(sp)
    5638:	da003d17 	ldw	r8,244(sp)
    563c:	103f9826 	beq	r2,zero,54a0 <__alt_data_end+0xff0054a0>
    5640:	00800044 	movi	r2,1
    5644:	10c7c83a 	sub	r3,r2,r3
    5648:	d8c02615 	stw	r3,152(sp)
    564c:	003f9506 	br	54a4 <__alt_data_end+0xff0054a4>
    5650:	d9002917 	ldw	r4,164(sp)
    5654:	d8c03217 	ldw	r3,200(sp)
    5658:	20800044 	addi	r2,r4,1
    565c:	1885883a 	add	r2,r3,r2
    5660:	d8802e15 	stw	r2,184(sp)
    5664:	103dbf0e 	bge	r2,zero,4d64 <__alt_data_end+0xff004d64>
    5668:	0005883a 	mov	r2,zero
    566c:	003dbd06 	br	4d64 <__alt_data_end+0xff004d64>
    5670:	2000211e 	bne	r4,zero,56f8 <___vfprintf_internal_r+0x2168>
    5674:	9480004c 	andi	r18,r18,1
    5678:	90001f1e 	bne	r18,zero,56f8 <___vfprintf_internal_r+0x2168>
    567c:	00800044 	movi	r2,1
    5680:	d8802e15 	stw	r2,184(sp)
    5684:	003db706 	br	4d64 <__alt_data_end+0xff004d64>
    5688:	00800b44 	movi	r2,45
    568c:	05adc83a 	sub	r22,zero,r22
    5690:	d8802305 	stb	r2,140(sp)
    5694:	003f3f06 	br	5394 <__alt_data_end+0xff005394>
    5698:	0005883a 	mov	r2,zero
    569c:	003f5206 	br	53e8 <__alt_data_end+0xff0053e8>
    56a0:	90a4703a 	and	r18,r18,r2
    56a4:	903f4e26 	beq	r18,zero,53e0 <__alt_data_end+0xff0053e0>
    56a8:	003f4a06 	br	53d4 <__alt_data_end+0xff0053d4>
    56ac:	00800084 	movi	r2,2
    56b0:	10c5c83a 	sub	r2,r2,r3
    56b4:	003f8406 	br	54c8 <__alt_data_end+0xff0054c8>
    56b8:	d8802d17 	ldw	r2,180(sp)
    56bc:	d9002d17 	ldw	r4,180(sp)
    56c0:	ac400043 	ldbu	r17,1(r21)
    56c4:	10800017 	ldw	r2,0(r2)
    56c8:	582b883a 	mov	r21,r11
    56cc:	d8802915 	stw	r2,164(sp)
    56d0:	20800104 	addi	r2,r4,4
    56d4:	d9002917 	ldw	r4,164(sp)
    56d8:	d8802d15 	stw	r2,180(sp)
    56dc:	203e7a0e 	bge	r4,zero,50c8 <__alt_data_end+0xff0050c8>
    56e0:	8c403fcc 	andi	r17,r17,255
    56e4:	00bfffc4 	movi	r2,-1
    56e8:	8c40201c 	xori	r17,r17,128
    56ec:	d8802915 	stw	r2,164(sp)
    56f0:	8c7fe004 	addi	r17,r17,-128
    56f4:	00380706 	br	3714 <__alt_data_end+0xff003714>
    56f8:	d8c02917 	ldw	r3,164(sp)
    56fc:	18c00084 	addi	r3,r3,2
    5700:	d8c02e15 	stw	r3,184(sp)
    5704:	1805883a 	mov	r2,r3
    5708:	183d960e 	bge	r3,zero,4d64 <__alt_data_end+0xff004d64>
    570c:	003fd606 	br	5668 <__alt_data_end+0xff005668>
    5710:	0005883a 	mov	r2,zero
    5714:	003f8e06 	br	5550 <__alt_data_end+0xff005550>
    5718:	9080004c 	andi	r2,r18,1
    571c:	103f811e 	bne	r2,zero,5524 <__alt_data_end+0xff005524>
    5720:	d8802117 	ldw	r2,132(sp)
    5724:	1405c83a 	sub	r2,r2,r16
    5728:	d8803315 	stw	r2,204(sp)
    572c:	b47ef326 	beq	r22,r17,52fc <__alt_data_end+0xff0052fc>
    5730:	dd802617 	ldw	r22,152(sp)
    5734:	003f1106 	br	537c <__alt_data_end+0xff00537c>
    5738:	d9c02785 	stb	r7,158(sp)
    573c:	00390406 	br	3b50 <__alt_data_end+0xff003b50>
    5740:	d9c02785 	stb	r7,158(sp)
    5744:	0038d306 	br	3a94 <__alt_data_end+0xff003a94>
    5748:	d9c02785 	stb	r7,158(sp)
    574c:	003a6106 	br	40d4 <__alt_data_end+0xff0040d4>
    5750:	d9c02785 	stb	r7,158(sp)
    5754:	003af806 	br	4338 <__alt_data_end+0xff004338>
    5758:	0005883a 	mov	r2,zero
    575c:	003d7e06 	br	4d58 <__alt_data_end+0xff004d58>
    5760:	d8802344 	addi	r2,sp,141
    5764:	003f1306 	br	53b4 <__alt_data_end+0xff0053b4>
    5768:	d9c02785 	stb	r7,158(sp)
    576c:	00392306 	br	3bfc <__alt_data_end+0xff003bfc>
    5770:	d9c02785 	stb	r7,158(sp)
    5774:	003aa906 	br	421c <__alt_data_end+0xff00421c>
    5778:	d9c02785 	stb	r7,158(sp)
    577c:	003a3d06 	br	4074 <__alt_data_end+0xff004074>
    5780:	d9c02785 	stb	r7,158(sp)
    5784:	003aca06 	br	42b0 <__alt_data_end+0xff0042b0>

00005788 <__vfprintf_internal>:
    5788:	00800074 	movhi	r2,1
    578c:	108fe904 	addi	r2,r2,16292
    5790:	300f883a 	mov	r7,r6
    5794:	280d883a 	mov	r6,r5
    5798:	200b883a 	mov	r5,r4
    579c:	11000017 	ldw	r4,0(r2)
    57a0:	00035901 	jmpi	3590 <___vfprintf_internal_r>

000057a4 <__sbprintf>:
    57a4:	2880030b 	ldhu	r2,12(r5)
    57a8:	2ac01917 	ldw	r11,100(r5)
    57ac:	2a80038b 	ldhu	r10,14(r5)
    57b0:	2a400717 	ldw	r9,28(r5)
    57b4:	2a000917 	ldw	r8,36(r5)
    57b8:	defee204 	addi	sp,sp,-1144
    57bc:	00c10004 	movi	r3,1024
    57c0:	dc011a15 	stw	r16,1128(sp)
    57c4:	10bfff4c 	andi	r2,r2,65533
    57c8:	2821883a 	mov	r16,r5
    57cc:	d8cb883a 	add	r5,sp,r3
    57d0:	dc811c15 	stw	r18,1136(sp)
    57d4:	dc411b15 	stw	r17,1132(sp)
    57d8:	dfc11d15 	stw	ra,1140(sp)
    57dc:	2025883a 	mov	r18,r4
    57e0:	d881030d 	sth	r2,1036(sp)
    57e4:	dac11915 	stw	r11,1124(sp)
    57e8:	da81038d 	sth	r10,1038(sp)
    57ec:	da410715 	stw	r9,1052(sp)
    57f0:	da010915 	stw	r8,1060(sp)
    57f4:	dec10015 	stw	sp,1024(sp)
    57f8:	dec10415 	stw	sp,1040(sp)
    57fc:	d8c10215 	stw	r3,1032(sp)
    5800:	d8c10515 	stw	r3,1044(sp)
    5804:	d8010615 	stw	zero,1048(sp)
    5808:	00035900 	call	3590 <___vfprintf_internal_r>
    580c:	1023883a 	mov	r17,r2
    5810:	10000416 	blt	r2,zero,5824 <__sbprintf+0x80>
    5814:	d9410004 	addi	r5,sp,1024
    5818:	9009883a 	mov	r4,r18
    581c:	00074580 	call	7458 <_fflush_r>
    5820:	10000d1e 	bne	r2,zero,5858 <__sbprintf+0xb4>
    5824:	d881030b 	ldhu	r2,1036(sp)
    5828:	1080100c 	andi	r2,r2,64
    582c:	10000326 	beq	r2,zero,583c <__sbprintf+0x98>
    5830:	8080030b 	ldhu	r2,12(r16)
    5834:	10801014 	ori	r2,r2,64
    5838:	8080030d 	sth	r2,12(r16)
    583c:	8805883a 	mov	r2,r17
    5840:	dfc11d17 	ldw	ra,1140(sp)
    5844:	dc811c17 	ldw	r18,1136(sp)
    5848:	dc411b17 	ldw	r17,1132(sp)
    584c:	dc011a17 	ldw	r16,1128(sp)
    5850:	dec11e04 	addi	sp,sp,1144
    5854:	f800283a 	ret
    5858:	047fffc4 	movi	r17,-1
    585c:	003ff106 	br	5824 <__alt_data_end+0xff005824>

00005860 <__swsetup_r>:
    5860:	00800074 	movhi	r2,1
    5864:	defffd04 	addi	sp,sp,-12
    5868:	108fe904 	addi	r2,r2,16292
    586c:	dc400115 	stw	r17,4(sp)
    5870:	2023883a 	mov	r17,r4
    5874:	11000017 	ldw	r4,0(r2)
    5878:	dc000015 	stw	r16,0(sp)
    587c:	dfc00215 	stw	ra,8(sp)
    5880:	2821883a 	mov	r16,r5
    5884:	20000226 	beq	r4,zero,5890 <__swsetup_r+0x30>
    5888:	20800e17 	ldw	r2,56(r4)
    588c:	10003126 	beq	r2,zero,5954 <__swsetup_r+0xf4>
    5890:	8080030b 	ldhu	r2,12(r16)
    5894:	10c0020c 	andi	r3,r2,8
    5898:	1009883a 	mov	r4,r2
    589c:	18000f26 	beq	r3,zero,58dc <__swsetup_r+0x7c>
    58a0:	80c00417 	ldw	r3,16(r16)
    58a4:	18001526 	beq	r3,zero,58fc <__swsetup_r+0x9c>
    58a8:	1100004c 	andi	r4,r2,1
    58ac:	20001c1e 	bne	r4,zero,5920 <__swsetup_r+0xc0>
    58b0:	1080008c 	andi	r2,r2,2
    58b4:	1000291e 	bne	r2,zero,595c <__swsetup_r+0xfc>
    58b8:	80800517 	ldw	r2,20(r16)
    58bc:	80800215 	stw	r2,8(r16)
    58c0:	18001c26 	beq	r3,zero,5934 <__swsetup_r+0xd4>
    58c4:	0005883a 	mov	r2,zero
    58c8:	dfc00217 	ldw	ra,8(sp)
    58cc:	dc400117 	ldw	r17,4(sp)
    58d0:	dc000017 	ldw	r16,0(sp)
    58d4:	dec00304 	addi	sp,sp,12
    58d8:	f800283a 	ret
    58dc:	2080040c 	andi	r2,r4,16
    58e0:	10002e26 	beq	r2,zero,599c <__swsetup_r+0x13c>
    58e4:	2080010c 	andi	r2,r4,4
    58e8:	10001e1e 	bne	r2,zero,5964 <__swsetup_r+0x104>
    58ec:	80c00417 	ldw	r3,16(r16)
    58f0:	20800214 	ori	r2,r4,8
    58f4:	8080030d 	sth	r2,12(r16)
    58f8:	183feb1e 	bne	r3,zero,58a8 <__alt_data_end+0xff0058a8>
    58fc:	1100a00c 	andi	r4,r2,640
    5900:	01408004 	movi	r5,512
    5904:	217fe826 	beq	r4,r5,58a8 <__alt_data_end+0xff0058a8>
    5908:	800b883a 	mov	r5,r16
    590c:	8809883a 	mov	r4,r17
    5910:	00083d80 	call	83d8 <__smakebuf_r>
    5914:	8080030b 	ldhu	r2,12(r16)
    5918:	80c00417 	ldw	r3,16(r16)
    591c:	003fe206 	br	58a8 <__alt_data_end+0xff0058a8>
    5920:	80800517 	ldw	r2,20(r16)
    5924:	80000215 	stw	zero,8(r16)
    5928:	0085c83a 	sub	r2,zero,r2
    592c:	80800615 	stw	r2,24(r16)
    5930:	183fe41e 	bne	r3,zero,58c4 <__alt_data_end+0xff0058c4>
    5934:	80c0030b 	ldhu	r3,12(r16)
    5938:	0005883a 	mov	r2,zero
    593c:	1900200c 	andi	r4,r3,128
    5940:	203fe126 	beq	r4,zero,58c8 <__alt_data_end+0xff0058c8>
    5944:	18c01014 	ori	r3,r3,64
    5948:	80c0030d 	sth	r3,12(r16)
    594c:	00bfffc4 	movi	r2,-1
    5950:	003fdd06 	br	58c8 <__alt_data_end+0xff0058c8>
    5954:	00078340 	call	7834 <__sinit>
    5958:	003fcd06 	br	5890 <__alt_data_end+0xff005890>
    595c:	0005883a 	mov	r2,zero
    5960:	003fd606 	br	58bc <__alt_data_end+0xff0058bc>
    5964:	81400c17 	ldw	r5,48(r16)
    5968:	28000626 	beq	r5,zero,5984 <__swsetup_r+0x124>
    596c:	80801004 	addi	r2,r16,64
    5970:	28800326 	beq	r5,r2,5980 <__swsetup_r+0x120>
    5974:	8809883a 	mov	r4,r17
    5978:	00079a80 	call	79a8 <_free_r>
    597c:	8100030b 	ldhu	r4,12(r16)
    5980:	80000c15 	stw	zero,48(r16)
    5984:	80c00417 	ldw	r3,16(r16)
    5988:	00bff6c4 	movi	r2,-37
    598c:	1108703a 	and	r4,r2,r4
    5990:	80000115 	stw	zero,4(r16)
    5994:	80c00015 	stw	r3,0(r16)
    5998:	003fd506 	br	58f0 <__alt_data_end+0xff0058f0>
    599c:	00800244 	movi	r2,9
    59a0:	88800015 	stw	r2,0(r17)
    59a4:	20801014 	ori	r2,r4,64
    59a8:	8080030d 	sth	r2,12(r16)
    59ac:	00bfffc4 	movi	r2,-1
    59b0:	003fc506 	br	58c8 <__alt_data_end+0xff0058c8>

000059b4 <quorem>:
    59b4:	defff704 	addi	sp,sp,-36
    59b8:	dc800215 	stw	r18,8(sp)
    59bc:	20800417 	ldw	r2,16(r4)
    59c0:	2c800417 	ldw	r18,16(r5)
    59c4:	dfc00815 	stw	ra,32(sp)
    59c8:	ddc00715 	stw	r23,28(sp)
    59cc:	dd800615 	stw	r22,24(sp)
    59d0:	dd400515 	stw	r21,20(sp)
    59d4:	dd000415 	stw	r20,16(sp)
    59d8:	dcc00315 	stw	r19,12(sp)
    59dc:	dc400115 	stw	r17,4(sp)
    59e0:	dc000015 	stw	r16,0(sp)
    59e4:	14807116 	blt	r2,r18,5bac <quorem+0x1f8>
    59e8:	94bfffc4 	addi	r18,r18,-1
    59ec:	94ad883a 	add	r22,r18,r18
    59f0:	b5ad883a 	add	r22,r22,r22
    59f4:	2c400504 	addi	r17,r5,20
    59f8:	8da9883a 	add	r20,r17,r22
    59fc:	25400504 	addi	r21,r4,20
    5a00:	282f883a 	mov	r23,r5
    5a04:	adad883a 	add	r22,r21,r22
    5a08:	a1400017 	ldw	r5,0(r20)
    5a0c:	2021883a 	mov	r16,r4
    5a10:	b1000017 	ldw	r4,0(r22)
    5a14:	29400044 	addi	r5,r5,1
    5a18:	000cc0c0 	call	cc0c <__udivsi3>
    5a1c:	1027883a 	mov	r19,r2
    5a20:	10002c26 	beq	r2,zero,5ad4 <quorem+0x120>
    5a24:	a813883a 	mov	r9,r21
    5a28:	880b883a 	mov	r5,r17
    5a2c:	0009883a 	mov	r4,zero
    5a30:	000d883a 	mov	r6,zero
    5a34:	2a000017 	ldw	r8,0(r5)
    5a38:	49c00017 	ldw	r7,0(r9)
    5a3c:	29400104 	addi	r5,r5,4
    5a40:	40bfffcc 	andi	r2,r8,65535
    5a44:	14c5383a 	mul	r2,r2,r19
    5a48:	4010d43a 	srli	r8,r8,16
    5a4c:	38ffffcc 	andi	r3,r7,65535
    5a50:	1105883a 	add	r2,r2,r4
    5a54:	1008d43a 	srli	r4,r2,16
    5a58:	44d1383a 	mul	r8,r8,r19
    5a5c:	198d883a 	add	r6,r3,r6
    5a60:	10ffffcc 	andi	r3,r2,65535
    5a64:	30c7c83a 	sub	r3,r6,r3
    5a68:	380ed43a 	srli	r7,r7,16
    5a6c:	4105883a 	add	r2,r8,r4
    5a70:	180dd43a 	srai	r6,r3,16
    5a74:	113fffcc 	andi	r4,r2,65535
    5a78:	390fc83a 	sub	r7,r7,r4
    5a7c:	398d883a 	add	r6,r7,r6
    5a80:	300e943a 	slli	r7,r6,16
    5a84:	18ffffcc 	andi	r3,r3,65535
    5a88:	1008d43a 	srli	r4,r2,16
    5a8c:	38ceb03a 	or	r7,r7,r3
    5a90:	49c00015 	stw	r7,0(r9)
    5a94:	300dd43a 	srai	r6,r6,16
    5a98:	4a400104 	addi	r9,r9,4
    5a9c:	a17fe52e 	bgeu	r20,r5,5a34 <__alt_data_end+0xff005a34>
    5aa0:	b0800017 	ldw	r2,0(r22)
    5aa4:	10000b1e 	bne	r2,zero,5ad4 <quorem+0x120>
    5aa8:	b0bfff04 	addi	r2,r22,-4
    5aac:	a880082e 	bgeu	r21,r2,5ad0 <quorem+0x11c>
    5ab0:	b0ffff17 	ldw	r3,-4(r22)
    5ab4:	18000326 	beq	r3,zero,5ac4 <quorem+0x110>
    5ab8:	00000506 	br	5ad0 <quorem+0x11c>
    5abc:	10c00017 	ldw	r3,0(r2)
    5ac0:	1800031e 	bne	r3,zero,5ad0 <quorem+0x11c>
    5ac4:	10bfff04 	addi	r2,r2,-4
    5ac8:	94bfffc4 	addi	r18,r18,-1
    5acc:	a8bffb36 	bltu	r21,r2,5abc <__alt_data_end+0xff005abc>
    5ad0:	84800415 	stw	r18,16(r16)
    5ad4:	b80b883a 	mov	r5,r23
    5ad8:	8009883a 	mov	r4,r16
    5adc:	00091c40 	call	91c4 <__mcmp>
    5ae0:	10002616 	blt	r2,zero,5b7c <quorem+0x1c8>
    5ae4:	9cc00044 	addi	r19,r19,1
    5ae8:	a805883a 	mov	r2,r21
    5aec:	000b883a 	mov	r5,zero
    5af0:	11000017 	ldw	r4,0(r2)
    5af4:	89800017 	ldw	r6,0(r17)
    5af8:	10800104 	addi	r2,r2,4
    5afc:	20ffffcc 	andi	r3,r4,65535
    5b00:	194b883a 	add	r5,r3,r5
    5b04:	30ffffcc 	andi	r3,r6,65535
    5b08:	28c7c83a 	sub	r3,r5,r3
    5b0c:	300cd43a 	srli	r6,r6,16
    5b10:	2008d43a 	srli	r4,r4,16
    5b14:	180bd43a 	srai	r5,r3,16
    5b18:	18ffffcc 	andi	r3,r3,65535
    5b1c:	2189c83a 	sub	r4,r4,r6
    5b20:	2149883a 	add	r4,r4,r5
    5b24:	200c943a 	slli	r6,r4,16
    5b28:	8c400104 	addi	r17,r17,4
    5b2c:	200bd43a 	srai	r5,r4,16
    5b30:	30c6b03a 	or	r3,r6,r3
    5b34:	10ffff15 	stw	r3,-4(r2)
    5b38:	a47fed2e 	bgeu	r20,r17,5af0 <__alt_data_end+0xff005af0>
    5b3c:	9485883a 	add	r2,r18,r18
    5b40:	1085883a 	add	r2,r2,r2
    5b44:	a887883a 	add	r3,r21,r2
    5b48:	18800017 	ldw	r2,0(r3)
    5b4c:	10000b1e 	bne	r2,zero,5b7c <quorem+0x1c8>
    5b50:	18bfff04 	addi	r2,r3,-4
    5b54:	a880082e 	bgeu	r21,r2,5b78 <quorem+0x1c4>
    5b58:	18ffff17 	ldw	r3,-4(r3)
    5b5c:	18000326 	beq	r3,zero,5b6c <quorem+0x1b8>
    5b60:	00000506 	br	5b78 <quorem+0x1c4>
    5b64:	10c00017 	ldw	r3,0(r2)
    5b68:	1800031e 	bne	r3,zero,5b78 <quorem+0x1c4>
    5b6c:	10bfff04 	addi	r2,r2,-4
    5b70:	94bfffc4 	addi	r18,r18,-1
    5b74:	a8bffb36 	bltu	r21,r2,5b64 <__alt_data_end+0xff005b64>
    5b78:	84800415 	stw	r18,16(r16)
    5b7c:	9805883a 	mov	r2,r19
    5b80:	dfc00817 	ldw	ra,32(sp)
    5b84:	ddc00717 	ldw	r23,28(sp)
    5b88:	dd800617 	ldw	r22,24(sp)
    5b8c:	dd400517 	ldw	r21,20(sp)
    5b90:	dd000417 	ldw	r20,16(sp)
    5b94:	dcc00317 	ldw	r19,12(sp)
    5b98:	dc800217 	ldw	r18,8(sp)
    5b9c:	dc400117 	ldw	r17,4(sp)
    5ba0:	dc000017 	ldw	r16,0(sp)
    5ba4:	dec00904 	addi	sp,sp,36
    5ba8:	f800283a 	ret
    5bac:	0005883a 	mov	r2,zero
    5bb0:	003ff306 	br	5b80 <__alt_data_end+0xff005b80>

00005bb4 <_dtoa_r>:
    5bb4:	20801017 	ldw	r2,64(r4)
    5bb8:	deffde04 	addi	sp,sp,-136
    5bbc:	df002015 	stw	fp,128(sp)
    5bc0:	dcc01b15 	stw	r19,108(sp)
    5bc4:	dc801a15 	stw	r18,104(sp)
    5bc8:	dc401915 	stw	r17,100(sp)
    5bcc:	dc001815 	stw	r16,96(sp)
    5bd0:	dfc02115 	stw	ra,132(sp)
    5bd4:	ddc01f15 	stw	r23,124(sp)
    5bd8:	dd801e15 	stw	r22,120(sp)
    5bdc:	dd401d15 	stw	r21,116(sp)
    5be0:	dd001c15 	stw	r20,112(sp)
    5be4:	d9c00315 	stw	r7,12(sp)
    5be8:	2039883a 	mov	fp,r4
    5bec:	3023883a 	mov	r17,r6
    5bf0:	2825883a 	mov	r18,r5
    5bf4:	dc002417 	ldw	r16,144(sp)
    5bf8:	3027883a 	mov	r19,r6
    5bfc:	10000826 	beq	r2,zero,5c20 <_dtoa_r+0x6c>
    5c00:	21801117 	ldw	r6,68(r4)
    5c04:	00c00044 	movi	r3,1
    5c08:	100b883a 	mov	r5,r2
    5c0c:	1986983a 	sll	r3,r3,r6
    5c10:	11800115 	stw	r6,4(r2)
    5c14:	10c00215 	stw	r3,8(r2)
    5c18:	00089a40 	call	89a4 <_Bfree>
    5c1c:	e0001015 	stw	zero,64(fp)
    5c20:	88002e16 	blt	r17,zero,5cdc <_dtoa_r+0x128>
    5c24:	80000015 	stw	zero,0(r16)
    5c28:	889ffc2c 	andhi	r2,r17,32752
    5c2c:	00dffc34 	movhi	r3,32752
    5c30:	10c01c26 	beq	r2,r3,5ca4 <_dtoa_r+0xf0>
    5c34:	000d883a 	mov	r6,zero
    5c38:	000f883a 	mov	r7,zero
    5c3c:	9009883a 	mov	r4,r18
    5c40:	980b883a 	mov	r5,r19
    5c44:	000de5c0 	call	de5c <__eqdf2>
    5c48:	10002b1e 	bne	r2,zero,5cf8 <_dtoa_r+0x144>
    5c4c:	d9c02317 	ldw	r7,140(sp)
    5c50:	00800044 	movi	r2,1
    5c54:	38800015 	stw	r2,0(r7)
    5c58:	d8802517 	ldw	r2,148(sp)
    5c5c:	10019e26 	beq	r2,zero,62d8 <_dtoa_r+0x724>
    5c60:	d8c02517 	ldw	r3,148(sp)
    5c64:	00800074 	movhi	r2,1
    5c68:	1088ce44 	addi	r2,r2,9017
    5c6c:	18800015 	stw	r2,0(r3)
    5c70:	10bfffc4 	addi	r2,r2,-1
    5c74:	dfc02117 	ldw	ra,132(sp)
    5c78:	df002017 	ldw	fp,128(sp)
    5c7c:	ddc01f17 	ldw	r23,124(sp)
    5c80:	dd801e17 	ldw	r22,120(sp)
    5c84:	dd401d17 	ldw	r21,116(sp)
    5c88:	dd001c17 	ldw	r20,112(sp)
    5c8c:	dcc01b17 	ldw	r19,108(sp)
    5c90:	dc801a17 	ldw	r18,104(sp)
    5c94:	dc401917 	ldw	r17,100(sp)
    5c98:	dc001817 	ldw	r16,96(sp)
    5c9c:	dec02204 	addi	sp,sp,136
    5ca0:	f800283a 	ret
    5ca4:	d8c02317 	ldw	r3,140(sp)
    5ca8:	0089c3c4 	movi	r2,9999
    5cac:	18800015 	stw	r2,0(r3)
    5cb0:	90017726 	beq	r18,zero,6290 <_dtoa_r+0x6dc>
    5cb4:	00800074 	movhi	r2,1
    5cb8:	1088da04 	addi	r2,r2,9064
    5cbc:	d9002517 	ldw	r4,148(sp)
    5cc0:	203fec26 	beq	r4,zero,5c74 <__alt_data_end+0xff005c74>
    5cc4:	10c000c7 	ldb	r3,3(r2)
    5cc8:	1801781e 	bne	r3,zero,62ac <_dtoa_r+0x6f8>
    5ccc:	10c000c4 	addi	r3,r2,3
    5cd0:	d9802517 	ldw	r6,148(sp)
    5cd4:	30c00015 	stw	r3,0(r6)
    5cd8:	003fe606 	br	5c74 <__alt_data_end+0xff005c74>
    5cdc:	04e00034 	movhi	r19,32768
    5ce0:	9cffffc4 	addi	r19,r19,-1
    5ce4:	00800044 	movi	r2,1
    5ce8:	8ce6703a 	and	r19,r17,r19
    5cec:	80800015 	stw	r2,0(r16)
    5cf0:	9823883a 	mov	r17,r19
    5cf4:	003fcc06 	br	5c28 <__alt_data_end+0xff005c28>
    5cf8:	d8800204 	addi	r2,sp,8
    5cfc:	d8800015 	stw	r2,0(sp)
    5d00:	d9c00104 	addi	r7,sp,4
    5d04:	900b883a 	mov	r5,r18
    5d08:	980d883a 	mov	r6,r19
    5d0c:	e009883a 	mov	r4,fp
    5d10:	8820d53a 	srli	r16,r17,20
    5d14:	00095900 	call	9590 <__d2b>
    5d18:	d8800915 	stw	r2,36(sp)
    5d1c:	8001651e 	bne	r16,zero,62b4 <_dtoa_r+0x700>
    5d20:	dd800217 	ldw	r22,8(sp)
    5d24:	dc000117 	ldw	r16,4(sp)
    5d28:	00800804 	movi	r2,32
    5d2c:	b421883a 	add	r16,r22,r16
    5d30:	80c10c84 	addi	r3,r16,1074
    5d34:	10c2d10e 	bge	r2,r3,687c <_dtoa_r+0xcc8>
    5d38:	00801004 	movi	r2,64
    5d3c:	81010484 	addi	r4,r16,1042
    5d40:	10c7c83a 	sub	r3,r2,r3
    5d44:	9108d83a 	srl	r4,r18,r4
    5d48:	88e2983a 	sll	r17,r17,r3
    5d4c:	2448b03a 	or	r4,r4,r17
    5d50:	000f2240 	call	f224 <__floatunsidf>
    5d54:	017f8434 	movhi	r5,65040
    5d58:	01800044 	movi	r6,1
    5d5c:	1009883a 	mov	r4,r2
    5d60:	194b883a 	add	r5,r3,r5
    5d64:	843fffc4 	addi	r16,r16,-1
    5d68:	d9801115 	stw	r6,68(sp)
    5d6c:	000d883a 	mov	r6,zero
    5d70:	01cffe34 	movhi	r7,16376
    5d74:	000e7cc0 	call	e7cc <__subdf3>
    5d78:	0198dbf4 	movhi	r6,25455
    5d7c:	01cff4f4 	movhi	r7,16339
    5d80:	3190d844 	addi	r6,r6,17249
    5d84:	39e1e9c4 	addi	r7,r7,-30809
    5d88:	1009883a 	mov	r4,r2
    5d8c:	180b883a 	mov	r5,r3
    5d90:	000e0b40 	call	e0b4 <__muldf3>
    5d94:	01a2d874 	movhi	r6,35681
    5d98:	01cff1f4 	movhi	r7,16327
    5d9c:	31b22cc4 	addi	r6,r6,-14157
    5da0:	39e28a04 	addi	r7,r7,-30168
    5da4:	180b883a 	mov	r5,r3
    5da8:	1009883a 	mov	r4,r2
    5dac:	000ccc80 	call	ccc8 <__adddf3>
    5db0:	8009883a 	mov	r4,r16
    5db4:	1029883a 	mov	r20,r2
    5db8:	1823883a 	mov	r17,r3
    5dbc:	000f1480 	call	f148 <__floatsidf>
    5dc0:	019427f4 	movhi	r6,20639
    5dc4:	01cff4f4 	movhi	r7,16339
    5dc8:	319e7ec4 	addi	r6,r6,31227
    5dcc:	39d104c4 	addi	r7,r7,17427
    5dd0:	1009883a 	mov	r4,r2
    5dd4:	180b883a 	mov	r5,r3
    5dd8:	000e0b40 	call	e0b4 <__muldf3>
    5ddc:	100d883a 	mov	r6,r2
    5de0:	180f883a 	mov	r7,r3
    5de4:	a009883a 	mov	r4,r20
    5de8:	880b883a 	mov	r5,r17
    5dec:	000ccc80 	call	ccc8 <__adddf3>
    5df0:	1009883a 	mov	r4,r2
    5df4:	180b883a 	mov	r5,r3
    5df8:	1029883a 	mov	r20,r2
    5dfc:	1823883a 	mov	r17,r3
    5e00:	000f0c80 	call	f0c8 <__fixdfsi>
    5e04:	000d883a 	mov	r6,zero
    5e08:	000f883a 	mov	r7,zero
    5e0c:	a009883a 	mov	r4,r20
    5e10:	880b883a 	mov	r5,r17
    5e14:	d8800515 	stw	r2,20(sp)
    5e18:	000dfc00 	call	dfc0 <__ledf2>
    5e1c:	10028716 	blt	r2,zero,683c <_dtoa_r+0xc88>
    5e20:	d8c00517 	ldw	r3,20(sp)
    5e24:	00800584 	movi	r2,22
    5e28:	10c27536 	bltu	r2,r3,6800 <_dtoa_r+0xc4c>
    5e2c:	180490fa 	slli	r2,r3,3
    5e30:	00c00074 	movhi	r3,1
    5e34:	18c8f604 	addi	r3,r3,9176
    5e38:	1885883a 	add	r2,r3,r2
    5e3c:	11000017 	ldw	r4,0(r2)
    5e40:	11400117 	ldw	r5,4(r2)
    5e44:	900d883a 	mov	r6,r18
    5e48:	980f883a 	mov	r7,r19
    5e4c:	000dee40 	call	dee4 <__gedf2>
    5e50:	00828d0e 	bge	zero,r2,6888 <_dtoa_r+0xcd4>
    5e54:	d9000517 	ldw	r4,20(sp)
    5e58:	d8000e15 	stw	zero,56(sp)
    5e5c:	213fffc4 	addi	r4,r4,-1
    5e60:	d9000515 	stw	r4,20(sp)
    5e64:	b42dc83a 	sub	r22,r22,r16
    5e68:	b5bfffc4 	addi	r22,r22,-1
    5e6c:	b0026f16 	blt	r22,zero,682c <_dtoa_r+0xc78>
    5e70:	d8000815 	stw	zero,32(sp)
    5e74:	d9c00517 	ldw	r7,20(sp)
    5e78:	38026416 	blt	r7,zero,680c <_dtoa_r+0xc58>
    5e7c:	b1ed883a 	add	r22,r22,r7
    5e80:	d9c00d15 	stw	r7,52(sp)
    5e84:	d8000a15 	stw	zero,40(sp)
    5e88:	d9800317 	ldw	r6,12(sp)
    5e8c:	00800244 	movi	r2,9
    5e90:	11811436 	bltu	r2,r6,62e4 <_dtoa_r+0x730>
    5e94:	00800144 	movi	r2,5
    5e98:	1184e10e 	bge	r2,r6,7220 <_dtoa_r+0x166c>
    5e9c:	31bfff04 	addi	r6,r6,-4
    5ea0:	d9800315 	stw	r6,12(sp)
    5ea4:	0023883a 	mov	r17,zero
    5ea8:	d9800317 	ldw	r6,12(sp)
    5eac:	008000c4 	movi	r2,3
    5eb0:	30836726 	beq	r6,r2,6c50 <_dtoa_r+0x109c>
    5eb4:	1183410e 	bge	r2,r6,6bbc <_dtoa_r+0x1008>
    5eb8:	d9c00317 	ldw	r7,12(sp)
    5ebc:	00800104 	movi	r2,4
    5ec0:	38827c26 	beq	r7,r2,68b4 <_dtoa_r+0xd00>
    5ec4:	00800144 	movi	r2,5
    5ec8:	3884c41e 	bne	r7,r2,71dc <_dtoa_r+0x1628>
    5ecc:	00800044 	movi	r2,1
    5ed0:	d8800b15 	stw	r2,44(sp)
    5ed4:	d8c00517 	ldw	r3,20(sp)
    5ed8:	d9002217 	ldw	r4,136(sp)
    5edc:	1907883a 	add	r3,r3,r4
    5ee0:	19800044 	addi	r6,r3,1
    5ee4:	d8c00c15 	stw	r3,48(sp)
    5ee8:	d9800615 	stw	r6,24(sp)
    5eec:	0183a40e 	bge	zero,r6,6d80 <_dtoa_r+0x11cc>
    5ef0:	d9800617 	ldw	r6,24(sp)
    5ef4:	3021883a 	mov	r16,r6
    5ef8:	e0001115 	stw	zero,68(fp)
    5efc:	008005c4 	movi	r2,23
    5f00:	1184c92e 	bgeu	r2,r6,7228 <_dtoa_r+0x1674>
    5f04:	00c00044 	movi	r3,1
    5f08:	00800104 	movi	r2,4
    5f0c:	1085883a 	add	r2,r2,r2
    5f10:	11000504 	addi	r4,r2,20
    5f14:	180b883a 	mov	r5,r3
    5f18:	18c00044 	addi	r3,r3,1
    5f1c:	313ffb2e 	bgeu	r6,r4,5f0c <__alt_data_end+0xff005f0c>
    5f20:	e1401115 	stw	r5,68(fp)
    5f24:	e009883a 	mov	r4,fp
    5f28:	00088fc0 	call	88fc <_Balloc>
    5f2c:	d8800715 	stw	r2,28(sp)
    5f30:	e0801015 	stw	r2,64(fp)
    5f34:	00800384 	movi	r2,14
    5f38:	1400f736 	bltu	r2,r16,6318 <_dtoa_r+0x764>
    5f3c:	8800f626 	beq	r17,zero,6318 <_dtoa_r+0x764>
    5f40:	d9c00517 	ldw	r7,20(sp)
    5f44:	01c39a0e 	bge	zero,r7,6db0 <_dtoa_r+0x11fc>
    5f48:	388003cc 	andi	r2,r7,15
    5f4c:	100490fa 	slli	r2,r2,3
    5f50:	382bd13a 	srai	r21,r7,4
    5f54:	00c00074 	movhi	r3,1
    5f58:	18c8f604 	addi	r3,r3,9176
    5f5c:	1885883a 	add	r2,r3,r2
    5f60:	a8c0040c 	andi	r3,r21,16
    5f64:	12400017 	ldw	r9,0(r2)
    5f68:	12000117 	ldw	r8,4(r2)
    5f6c:	18037926 	beq	r3,zero,6d54 <_dtoa_r+0x11a0>
    5f70:	00800074 	movhi	r2,1
    5f74:	1088ec04 	addi	r2,r2,9136
    5f78:	11800817 	ldw	r6,32(r2)
    5f7c:	11c00917 	ldw	r7,36(r2)
    5f80:	9009883a 	mov	r4,r18
    5f84:	980b883a 	mov	r5,r19
    5f88:	da001715 	stw	r8,92(sp)
    5f8c:	da401615 	stw	r9,88(sp)
    5f90:	000d5740 	call	d574 <__divdf3>
    5f94:	da001717 	ldw	r8,92(sp)
    5f98:	da401617 	ldw	r9,88(sp)
    5f9c:	ad4003cc 	andi	r21,r21,15
    5fa0:	040000c4 	movi	r16,3
    5fa4:	1023883a 	mov	r17,r2
    5fa8:	1829883a 	mov	r20,r3
    5fac:	a8001126 	beq	r21,zero,5ff4 <_dtoa_r+0x440>
    5fb0:	05c00074 	movhi	r23,1
    5fb4:	bdc8ec04 	addi	r23,r23,9136
    5fb8:	4805883a 	mov	r2,r9
    5fbc:	4007883a 	mov	r3,r8
    5fc0:	a980004c 	andi	r6,r21,1
    5fc4:	1009883a 	mov	r4,r2
    5fc8:	a82bd07a 	srai	r21,r21,1
    5fcc:	180b883a 	mov	r5,r3
    5fd0:	30000426 	beq	r6,zero,5fe4 <_dtoa_r+0x430>
    5fd4:	b9800017 	ldw	r6,0(r23)
    5fd8:	b9c00117 	ldw	r7,4(r23)
    5fdc:	84000044 	addi	r16,r16,1
    5fe0:	000e0b40 	call	e0b4 <__muldf3>
    5fe4:	bdc00204 	addi	r23,r23,8
    5fe8:	a83ff51e 	bne	r21,zero,5fc0 <__alt_data_end+0xff005fc0>
    5fec:	1013883a 	mov	r9,r2
    5ff0:	1811883a 	mov	r8,r3
    5ff4:	480d883a 	mov	r6,r9
    5ff8:	400f883a 	mov	r7,r8
    5ffc:	8809883a 	mov	r4,r17
    6000:	a00b883a 	mov	r5,r20
    6004:	000d5740 	call	d574 <__divdf3>
    6008:	d8800f15 	stw	r2,60(sp)
    600c:	d8c01015 	stw	r3,64(sp)
    6010:	d8c00e17 	ldw	r3,56(sp)
    6014:	18000626 	beq	r3,zero,6030 <_dtoa_r+0x47c>
    6018:	d9000f17 	ldw	r4,60(sp)
    601c:	d9401017 	ldw	r5,64(sp)
    6020:	000d883a 	mov	r6,zero
    6024:	01cffc34 	movhi	r7,16368
    6028:	000dfc00 	call	dfc0 <__ledf2>
    602c:	10040b16 	blt	r2,zero,705c <_dtoa_r+0x14a8>
    6030:	8009883a 	mov	r4,r16
    6034:	000f1480 	call	f148 <__floatsidf>
    6038:	d9800f17 	ldw	r6,60(sp)
    603c:	d9c01017 	ldw	r7,64(sp)
    6040:	1009883a 	mov	r4,r2
    6044:	180b883a 	mov	r5,r3
    6048:	000e0b40 	call	e0b4 <__muldf3>
    604c:	000d883a 	mov	r6,zero
    6050:	01d00734 	movhi	r7,16412
    6054:	1009883a 	mov	r4,r2
    6058:	180b883a 	mov	r5,r3
    605c:	000ccc80 	call	ccc8 <__adddf3>
    6060:	1021883a 	mov	r16,r2
    6064:	d8800617 	ldw	r2,24(sp)
    6068:	047f3034 	movhi	r17,64704
    606c:	1c63883a 	add	r17,r3,r17
    6070:	10031826 	beq	r2,zero,6cd4 <_dtoa_r+0x1120>
    6074:	d8c00517 	ldw	r3,20(sp)
    6078:	db000617 	ldw	r12,24(sp)
    607c:	d8c01315 	stw	r3,76(sp)
    6080:	d9000b17 	ldw	r4,44(sp)
    6084:	20038f26 	beq	r4,zero,6ec4 <_dtoa_r+0x1310>
    6088:	60bfffc4 	addi	r2,r12,-1
    608c:	100490fa 	slli	r2,r2,3
    6090:	00c00074 	movhi	r3,1
    6094:	18c8f604 	addi	r3,r3,9176
    6098:	1885883a 	add	r2,r3,r2
    609c:	11800017 	ldw	r6,0(r2)
    60a0:	11c00117 	ldw	r7,4(r2)
    60a4:	d8800717 	ldw	r2,28(sp)
    60a8:	0009883a 	mov	r4,zero
    60ac:	014ff834 	movhi	r5,16352
    60b0:	db001615 	stw	r12,88(sp)
    60b4:	15c00044 	addi	r23,r2,1
    60b8:	000d5740 	call	d574 <__divdf3>
    60bc:	800d883a 	mov	r6,r16
    60c0:	880f883a 	mov	r7,r17
    60c4:	1009883a 	mov	r4,r2
    60c8:	180b883a 	mov	r5,r3
    60cc:	000e7cc0 	call	e7cc <__subdf3>
    60d0:	d9401017 	ldw	r5,64(sp)
    60d4:	d9000f17 	ldw	r4,60(sp)
    60d8:	102b883a 	mov	r21,r2
    60dc:	d8c01215 	stw	r3,72(sp)
    60e0:	000f0c80 	call	f0c8 <__fixdfsi>
    60e4:	1009883a 	mov	r4,r2
    60e8:	1029883a 	mov	r20,r2
    60ec:	000f1480 	call	f148 <__floatsidf>
    60f0:	d9000f17 	ldw	r4,60(sp)
    60f4:	d9401017 	ldw	r5,64(sp)
    60f8:	100d883a 	mov	r6,r2
    60fc:	180f883a 	mov	r7,r3
    6100:	000e7cc0 	call	e7cc <__subdf3>
    6104:	1823883a 	mov	r17,r3
    6108:	d8c00717 	ldw	r3,28(sp)
    610c:	d9401217 	ldw	r5,72(sp)
    6110:	a2000c04 	addi	r8,r20,48
    6114:	1021883a 	mov	r16,r2
    6118:	1a000005 	stb	r8,0(r3)
    611c:	800d883a 	mov	r6,r16
    6120:	880f883a 	mov	r7,r17
    6124:	a809883a 	mov	r4,r21
    6128:	4029883a 	mov	r20,r8
    612c:	000dee40 	call	dee4 <__gedf2>
    6130:	00841d16 	blt	zero,r2,71a8 <_dtoa_r+0x15f4>
    6134:	800d883a 	mov	r6,r16
    6138:	880f883a 	mov	r7,r17
    613c:	0009883a 	mov	r4,zero
    6140:	014ffc34 	movhi	r5,16368
    6144:	000e7cc0 	call	e7cc <__subdf3>
    6148:	d9401217 	ldw	r5,72(sp)
    614c:	100d883a 	mov	r6,r2
    6150:	180f883a 	mov	r7,r3
    6154:	a809883a 	mov	r4,r21
    6158:	000dee40 	call	dee4 <__gedf2>
    615c:	db001617 	ldw	r12,88(sp)
    6160:	00840e16 	blt	zero,r2,719c <_dtoa_r+0x15e8>
    6164:	00800044 	movi	r2,1
    6168:	13006b0e 	bge	r2,r12,6318 <_dtoa_r+0x764>
    616c:	d9000717 	ldw	r4,28(sp)
    6170:	dd800f15 	stw	r22,60(sp)
    6174:	dcc01015 	stw	r19,64(sp)
    6178:	2319883a 	add	r12,r4,r12
    617c:	dcc01217 	ldw	r19,72(sp)
    6180:	602d883a 	mov	r22,r12
    6184:	dc801215 	stw	r18,72(sp)
    6188:	b825883a 	mov	r18,r23
    618c:	00000906 	br	61b4 <_dtoa_r+0x600>
    6190:	000e7cc0 	call	e7cc <__subdf3>
    6194:	a80d883a 	mov	r6,r21
    6198:	980f883a 	mov	r7,r19
    619c:	1009883a 	mov	r4,r2
    61a0:	180b883a 	mov	r5,r3
    61a4:	000dfc00 	call	dfc0 <__ledf2>
    61a8:	1003e816 	blt	r2,zero,714c <_dtoa_r+0x1598>
    61ac:	b825883a 	mov	r18,r23
    61b0:	bd83e926 	beq	r23,r22,7158 <_dtoa_r+0x15a4>
    61b4:	a809883a 	mov	r4,r21
    61b8:	980b883a 	mov	r5,r19
    61bc:	000d883a 	mov	r6,zero
    61c0:	01d00934 	movhi	r7,16420
    61c4:	000e0b40 	call	e0b4 <__muldf3>
    61c8:	000d883a 	mov	r6,zero
    61cc:	01d00934 	movhi	r7,16420
    61d0:	8009883a 	mov	r4,r16
    61d4:	880b883a 	mov	r5,r17
    61d8:	102b883a 	mov	r21,r2
    61dc:	1827883a 	mov	r19,r3
    61e0:	000e0b40 	call	e0b4 <__muldf3>
    61e4:	180b883a 	mov	r5,r3
    61e8:	1009883a 	mov	r4,r2
    61ec:	1821883a 	mov	r16,r3
    61f0:	1023883a 	mov	r17,r2
    61f4:	000f0c80 	call	f0c8 <__fixdfsi>
    61f8:	1009883a 	mov	r4,r2
    61fc:	1029883a 	mov	r20,r2
    6200:	000f1480 	call	f148 <__floatsidf>
    6204:	8809883a 	mov	r4,r17
    6208:	800b883a 	mov	r5,r16
    620c:	100d883a 	mov	r6,r2
    6210:	180f883a 	mov	r7,r3
    6214:	000e7cc0 	call	e7cc <__subdf3>
    6218:	a5000c04 	addi	r20,r20,48
    621c:	a80d883a 	mov	r6,r21
    6220:	980f883a 	mov	r7,r19
    6224:	1009883a 	mov	r4,r2
    6228:	180b883a 	mov	r5,r3
    622c:	95000005 	stb	r20,0(r18)
    6230:	1021883a 	mov	r16,r2
    6234:	1823883a 	mov	r17,r3
    6238:	000dfc00 	call	dfc0 <__ledf2>
    623c:	bdc00044 	addi	r23,r23,1
    6240:	800d883a 	mov	r6,r16
    6244:	880f883a 	mov	r7,r17
    6248:	0009883a 	mov	r4,zero
    624c:	014ffc34 	movhi	r5,16368
    6250:	103fcf0e 	bge	r2,zero,6190 <__alt_data_end+0xff006190>
    6254:	d8c01317 	ldw	r3,76(sp)
    6258:	d8c00515 	stw	r3,20(sp)
    625c:	d9400917 	ldw	r5,36(sp)
    6260:	e009883a 	mov	r4,fp
    6264:	00089a40 	call	89a4 <_Bfree>
    6268:	d9000517 	ldw	r4,20(sp)
    626c:	d9802317 	ldw	r6,140(sp)
    6270:	d9c02517 	ldw	r7,148(sp)
    6274:	b8000005 	stb	zero,0(r23)
    6278:	20800044 	addi	r2,r4,1
    627c:	30800015 	stw	r2,0(r6)
    6280:	3802aa26 	beq	r7,zero,6d2c <_dtoa_r+0x1178>
    6284:	3dc00015 	stw	r23,0(r7)
    6288:	d8800717 	ldw	r2,28(sp)
    628c:	003e7906 	br	5c74 <__alt_data_end+0xff005c74>
    6290:	00800434 	movhi	r2,16
    6294:	10bfffc4 	addi	r2,r2,-1
    6298:	88a2703a 	and	r17,r17,r2
    629c:	883e851e 	bne	r17,zero,5cb4 <__alt_data_end+0xff005cb4>
    62a0:	00800074 	movhi	r2,1
    62a4:	1088d704 	addi	r2,r2,9052
    62a8:	003e8406 	br	5cbc <__alt_data_end+0xff005cbc>
    62ac:	10c00204 	addi	r3,r2,8
    62b0:	003e8706 	br	5cd0 <__alt_data_end+0xff005cd0>
    62b4:	01400434 	movhi	r5,16
    62b8:	297fffc4 	addi	r5,r5,-1
    62bc:	994a703a 	and	r5,r19,r5
    62c0:	9009883a 	mov	r4,r18
    62c4:	843f0044 	addi	r16,r16,-1023
    62c8:	294ffc34 	orhi	r5,r5,16368
    62cc:	dd800217 	ldw	r22,8(sp)
    62d0:	d8001115 	stw	zero,68(sp)
    62d4:	003ea506 	br	5d6c <__alt_data_end+0xff005d6c>
    62d8:	00800074 	movhi	r2,1
    62dc:	1088ce04 	addi	r2,r2,9016
    62e0:	003e6406 	br	5c74 <__alt_data_end+0xff005c74>
    62e4:	e0001115 	stw	zero,68(fp)
    62e8:	000b883a 	mov	r5,zero
    62ec:	e009883a 	mov	r4,fp
    62f0:	00088fc0 	call	88fc <_Balloc>
    62f4:	01bfffc4 	movi	r6,-1
    62f8:	01c00044 	movi	r7,1
    62fc:	d8800715 	stw	r2,28(sp)
    6300:	d9800c15 	stw	r6,48(sp)
    6304:	e0801015 	stw	r2,64(fp)
    6308:	d8000315 	stw	zero,12(sp)
    630c:	d9c00b15 	stw	r7,44(sp)
    6310:	d9800615 	stw	r6,24(sp)
    6314:	d8002215 	stw	zero,136(sp)
    6318:	d8800117 	ldw	r2,4(sp)
    631c:	10008916 	blt	r2,zero,6544 <_dtoa_r+0x990>
    6320:	d9000517 	ldw	r4,20(sp)
    6324:	00c00384 	movi	r3,14
    6328:	19008616 	blt	r3,r4,6544 <_dtoa_r+0x990>
    632c:	200490fa 	slli	r2,r4,3
    6330:	00c00074 	movhi	r3,1
    6334:	d9802217 	ldw	r6,136(sp)
    6338:	18c8f604 	addi	r3,r3,9176
    633c:	1885883a 	add	r2,r3,r2
    6340:	14000017 	ldw	r16,0(r2)
    6344:	14400117 	ldw	r17,4(r2)
    6348:	30016316 	blt	r6,zero,68d8 <_dtoa_r+0xd24>
    634c:	800d883a 	mov	r6,r16
    6350:	880f883a 	mov	r7,r17
    6354:	9009883a 	mov	r4,r18
    6358:	980b883a 	mov	r5,r19
    635c:	000d5740 	call	d574 <__divdf3>
    6360:	180b883a 	mov	r5,r3
    6364:	1009883a 	mov	r4,r2
    6368:	000f0c80 	call	f0c8 <__fixdfsi>
    636c:	1009883a 	mov	r4,r2
    6370:	102b883a 	mov	r21,r2
    6374:	000f1480 	call	f148 <__floatsidf>
    6378:	800d883a 	mov	r6,r16
    637c:	880f883a 	mov	r7,r17
    6380:	1009883a 	mov	r4,r2
    6384:	180b883a 	mov	r5,r3
    6388:	000e0b40 	call	e0b4 <__muldf3>
    638c:	100d883a 	mov	r6,r2
    6390:	180f883a 	mov	r7,r3
    6394:	9009883a 	mov	r4,r18
    6398:	980b883a 	mov	r5,r19
    639c:	000e7cc0 	call	e7cc <__subdf3>
    63a0:	d9c00717 	ldw	r7,28(sp)
    63a4:	1009883a 	mov	r4,r2
    63a8:	a8800c04 	addi	r2,r21,48
    63ac:	38800005 	stb	r2,0(r7)
    63b0:	3dc00044 	addi	r23,r7,1
    63b4:	d9c00617 	ldw	r7,24(sp)
    63b8:	01800044 	movi	r6,1
    63bc:	180b883a 	mov	r5,r3
    63c0:	2005883a 	mov	r2,r4
    63c4:	39803826 	beq	r7,r6,64a8 <_dtoa_r+0x8f4>
    63c8:	000d883a 	mov	r6,zero
    63cc:	01d00934 	movhi	r7,16420
    63d0:	000e0b40 	call	e0b4 <__muldf3>
    63d4:	000d883a 	mov	r6,zero
    63d8:	000f883a 	mov	r7,zero
    63dc:	1009883a 	mov	r4,r2
    63e0:	180b883a 	mov	r5,r3
    63e4:	1025883a 	mov	r18,r2
    63e8:	1827883a 	mov	r19,r3
    63ec:	000de5c0 	call	de5c <__eqdf2>
    63f0:	103f9a26 	beq	r2,zero,625c <__alt_data_end+0xff00625c>
    63f4:	d9c00617 	ldw	r7,24(sp)
    63f8:	d8c00717 	ldw	r3,28(sp)
    63fc:	b829883a 	mov	r20,r23
    6400:	38bfffc4 	addi	r2,r7,-1
    6404:	18ad883a 	add	r22,r3,r2
    6408:	00000a06 	br	6434 <_dtoa_r+0x880>
    640c:	000e0b40 	call	e0b4 <__muldf3>
    6410:	000d883a 	mov	r6,zero
    6414:	000f883a 	mov	r7,zero
    6418:	1009883a 	mov	r4,r2
    641c:	180b883a 	mov	r5,r3
    6420:	1025883a 	mov	r18,r2
    6424:	1827883a 	mov	r19,r3
    6428:	b829883a 	mov	r20,r23
    642c:	000de5c0 	call	de5c <__eqdf2>
    6430:	103f8a26 	beq	r2,zero,625c <__alt_data_end+0xff00625c>
    6434:	800d883a 	mov	r6,r16
    6438:	880f883a 	mov	r7,r17
    643c:	9009883a 	mov	r4,r18
    6440:	980b883a 	mov	r5,r19
    6444:	000d5740 	call	d574 <__divdf3>
    6448:	180b883a 	mov	r5,r3
    644c:	1009883a 	mov	r4,r2
    6450:	000f0c80 	call	f0c8 <__fixdfsi>
    6454:	1009883a 	mov	r4,r2
    6458:	102b883a 	mov	r21,r2
    645c:	000f1480 	call	f148 <__floatsidf>
    6460:	800d883a 	mov	r6,r16
    6464:	880f883a 	mov	r7,r17
    6468:	1009883a 	mov	r4,r2
    646c:	180b883a 	mov	r5,r3
    6470:	000e0b40 	call	e0b4 <__muldf3>
    6474:	100d883a 	mov	r6,r2
    6478:	180f883a 	mov	r7,r3
    647c:	9009883a 	mov	r4,r18
    6480:	980b883a 	mov	r5,r19
    6484:	000e7cc0 	call	e7cc <__subdf3>
    6488:	aa000c04 	addi	r8,r21,48
    648c:	a2000005 	stb	r8,0(r20)
    6490:	000d883a 	mov	r6,zero
    6494:	01d00934 	movhi	r7,16420
    6498:	1009883a 	mov	r4,r2
    649c:	180b883a 	mov	r5,r3
    64a0:	a5c00044 	addi	r23,r20,1
    64a4:	b53fd91e 	bne	r22,r20,640c <__alt_data_end+0xff00640c>
    64a8:	100d883a 	mov	r6,r2
    64ac:	180f883a 	mov	r7,r3
    64b0:	1009883a 	mov	r4,r2
    64b4:	180b883a 	mov	r5,r3
    64b8:	000ccc80 	call	ccc8 <__adddf3>
    64bc:	100d883a 	mov	r6,r2
    64c0:	180f883a 	mov	r7,r3
    64c4:	8009883a 	mov	r4,r16
    64c8:	880b883a 	mov	r5,r17
    64cc:	1027883a 	mov	r19,r2
    64d0:	1825883a 	mov	r18,r3
    64d4:	000dfc00 	call	dfc0 <__ledf2>
    64d8:	10000816 	blt	r2,zero,64fc <_dtoa_r+0x948>
    64dc:	980d883a 	mov	r6,r19
    64e0:	900f883a 	mov	r7,r18
    64e4:	8009883a 	mov	r4,r16
    64e8:	880b883a 	mov	r5,r17
    64ec:	000de5c0 	call	de5c <__eqdf2>
    64f0:	103f5a1e 	bne	r2,zero,625c <__alt_data_end+0xff00625c>
    64f4:	ad40004c 	andi	r21,r21,1
    64f8:	a83f5826 	beq	r21,zero,625c <__alt_data_end+0xff00625c>
    64fc:	bd3fffc3 	ldbu	r20,-1(r23)
    6500:	b8bfffc4 	addi	r2,r23,-1
    6504:	1007883a 	mov	r3,r2
    6508:	01400e44 	movi	r5,57
    650c:	d9800717 	ldw	r6,28(sp)
    6510:	00000506 	br	6528 <_dtoa_r+0x974>
    6514:	18ffffc4 	addi	r3,r3,-1
    6518:	11824726 	beq	r2,r6,6e38 <_dtoa_r+0x1284>
    651c:	1d000003 	ldbu	r20,0(r3)
    6520:	102f883a 	mov	r23,r2
    6524:	10bfffc4 	addi	r2,r2,-1
    6528:	a1003fcc 	andi	r4,r20,255
    652c:	2100201c 	xori	r4,r4,128
    6530:	213fe004 	addi	r4,r4,-128
    6534:	217ff726 	beq	r4,r5,6514 <__alt_data_end+0xff006514>
    6538:	a2000044 	addi	r8,r20,1
    653c:	12000005 	stb	r8,0(r2)
    6540:	003f4606 	br	625c <__alt_data_end+0xff00625c>
    6544:	d9000b17 	ldw	r4,44(sp)
    6548:	2000c826 	beq	r4,zero,686c <_dtoa_r+0xcb8>
    654c:	d9800317 	ldw	r6,12(sp)
    6550:	00c00044 	movi	r3,1
    6554:	1980f90e 	bge	r3,r6,693c <_dtoa_r+0xd88>
    6558:	d8800617 	ldw	r2,24(sp)
    655c:	d8c00a17 	ldw	r3,40(sp)
    6560:	157fffc4 	addi	r21,r2,-1
    6564:	1d41f316 	blt	r3,r21,6d34 <_dtoa_r+0x1180>
    6568:	1d6bc83a 	sub	r21,r3,r21
    656c:	d9c00617 	ldw	r7,24(sp)
    6570:	3802aa16 	blt	r7,zero,701c <_dtoa_r+0x1468>
    6574:	dd000817 	ldw	r20,32(sp)
    6578:	d8800617 	ldw	r2,24(sp)
    657c:	d8c00817 	ldw	r3,32(sp)
    6580:	01400044 	movi	r5,1
    6584:	e009883a 	mov	r4,fp
    6588:	1887883a 	add	r3,r3,r2
    658c:	d8c00815 	stw	r3,32(sp)
    6590:	b0ad883a 	add	r22,r22,r2
    6594:	0008d080 	call	8d08 <__i2b>
    6598:	1023883a 	mov	r17,r2
    659c:	a0000826 	beq	r20,zero,65c0 <_dtoa_r+0xa0c>
    65a0:	0580070e 	bge	zero,r22,65c0 <_dtoa_r+0xa0c>
    65a4:	a005883a 	mov	r2,r20
    65a8:	b500b916 	blt	r22,r20,6890 <_dtoa_r+0xcdc>
    65ac:	d9000817 	ldw	r4,32(sp)
    65b0:	a0a9c83a 	sub	r20,r20,r2
    65b4:	b0adc83a 	sub	r22,r22,r2
    65b8:	2089c83a 	sub	r4,r4,r2
    65bc:	d9000815 	stw	r4,32(sp)
    65c0:	d9800a17 	ldw	r6,40(sp)
    65c4:	0181810e 	bge	zero,r6,6bcc <_dtoa_r+0x1018>
    65c8:	d9c00b17 	ldw	r7,44(sp)
    65cc:	3800b326 	beq	r7,zero,689c <_dtoa_r+0xce8>
    65d0:	a800b226 	beq	r21,zero,689c <_dtoa_r+0xce8>
    65d4:	880b883a 	mov	r5,r17
    65d8:	a80d883a 	mov	r6,r21
    65dc:	e009883a 	mov	r4,fp
    65e0:	0008f3c0 	call	8f3c <__pow5mult>
    65e4:	d9800917 	ldw	r6,36(sp)
    65e8:	100b883a 	mov	r5,r2
    65ec:	e009883a 	mov	r4,fp
    65f0:	1023883a 	mov	r17,r2
    65f4:	0008d440 	call	8d44 <__multiply>
    65f8:	1021883a 	mov	r16,r2
    65fc:	d8800a17 	ldw	r2,40(sp)
    6600:	d9400917 	ldw	r5,36(sp)
    6604:	e009883a 	mov	r4,fp
    6608:	1545c83a 	sub	r2,r2,r21
    660c:	d8800a15 	stw	r2,40(sp)
    6610:	00089a40 	call	89a4 <_Bfree>
    6614:	d8c00a17 	ldw	r3,40(sp)
    6618:	18009f1e 	bne	r3,zero,6898 <_dtoa_r+0xce4>
    661c:	05c00044 	movi	r23,1
    6620:	e009883a 	mov	r4,fp
    6624:	b80b883a 	mov	r5,r23
    6628:	0008d080 	call	8d08 <__i2b>
    662c:	d9000d17 	ldw	r4,52(sp)
    6630:	102b883a 	mov	r21,r2
    6634:	2000ce26 	beq	r4,zero,6970 <_dtoa_r+0xdbc>
    6638:	200d883a 	mov	r6,r4
    663c:	100b883a 	mov	r5,r2
    6640:	e009883a 	mov	r4,fp
    6644:	0008f3c0 	call	8f3c <__pow5mult>
    6648:	d9800317 	ldw	r6,12(sp)
    664c:	102b883a 	mov	r21,r2
    6650:	b981810e 	bge	r23,r6,6c58 <_dtoa_r+0x10a4>
    6654:	0027883a 	mov	r19,zero
    6658:	a8800417 	ldw	r2,16(r21)
    665c:	05c00804 	movi	r23,32
    6660:	10800104 	addi	r2,r2,4
    6664:	1085883a 	add	r2,r2,r2
    6668:	1085883a 	add	r2,r2,r2
    666c:	a885883a 	add	r2,r21,r2
    6670:	11000017 	ldw	r4,0(r2)
    6674:	0008bf00 	call	8bf0 <__hi0bits>
    6678:	b885c83a 	sub	r2,r23,r2
    667c:	1585883a 	add	r2,r2,r22
    6680:	108007cc 	andi	r2,r2,31
    6684:	1000b326 	beq	r2,zero,6954 <_dtoa_r+0xda0>
    6688:	00c00804 	movi	r3,32
    668c:	1887c83a 	sub	r3,r3,r2
    6690:	01000104 	movi	r4,4
    6694:	20c2cd0e 	bge	r4,r3,71cc <_dtoa_r+0x1618>
    6698:	00c00704 	movi	r3,28
    669c:	1885c83a 	sub	r2,r3,r2
    66a0:	d8c00817 	ldw	r3,32(sp)
    66a4:	a0a9883a 	add	r20,r20,r2
    66a8:	b0ad883a 	add	r22,r22,r2
    66ac:	1887883a 	add	r3,r3,r2
    66b0:	d8c00815 	stw	r3,32(sp)
    66b4:	d9800817 	ldw	r6,32(sp)
    66b8:	0180040e 	bge	zero,r6,66cc <_dtoa_r+0xb18>
    66bc:	800b883a 	mov	r5,r16
    66c0:	e009883a 	mov	r4,fp
    66c4:	000907c0 	call	907c <__lshift>
    66c8:	1021883a 	mov	r16,r2
    66cc:	0580050e 	bge	zero,r22,66e4 <_dtoa_r+0xb30>
    66d0:	a80b883a 	mov	r5,r21
    66d4:	b00d883a 	mov	r6,r22
    66d8:	e009883a 	mov	r4,fp
    66dc:	000907c0 	call	907c <__lshift>
    66e0:	102b883a 	mov	r21,r2
    66e4:	d9c00e17 	ldw	r7,56(sp)
    66e8:	3801211e 	bne	r7,zero,6b70 <_dtoa_r+0xfbc>
    66ec:	d9800617 	ldw	r6,24(sp)
    66f0:	0181380e 	bge	zero,r6,6bd4 <_dtoa_r+0x1020>
    66f4:	d8c00b17 	ldw	r3,44(sp)
    66f8:	1800ab1e 	bne	r3,zero,69a8 <_dtoa_r+0xdf4>
    66fc:	dc800717 	ldw	r18,28(sp)
    6700:	dcc00617 	ldw	r19,24(sp)
    6704:	9029883a 	mov	r20,r18
    6708:	00000206 	br	6714 <_dtoa_r+0xb60>
    670c:	00089cc0 	call	89cc <__multadd>
    6710:	1021883a 	mov	r16,r2
    6714:	a80b883a 	mov	r5,r21
    6718:	8009883a 	mov	r4,r16
    671c:	00059b40 	call	59b4 <quorem>
    6720:	10800c04 	addi	r2,r2,48
    6724:	90800005 	stb	r2,0(r18)
    6728:	94800044 	addi	r18,r18,1
    672c:	9507c83a 	sub	r3,r18,r20
    6730:	000f883a 	mov	r7,zero
    6734:	01800284 	movi	r6,10
    6738:	800b883a 	mov	r5,r16
    673c:	e009883a 	mov	r4,fp
    6740:	1cfff216 	blt	r3,r19,670c <__alt_data_end+0xff00670c>
    6744:	1011883a 	mov	r8,r2
    6748:	d8800617 	ldw	r2,24(sp)
    674c:	0082370e 	bge	zero,r2,702c <_dtoa_r+0x1478>
    6750:	d9000717 	ldw	r4,28(sp)
    6754:	0025883a 	mov	r18,zero
    6758:	20af883a 	add	r23,r4,r2
    675c:	01800044 	movi	r6,1
    6760:	800b883a 	mov	r5,r16
    6764:	e009883a 	mov	r4,fp
    6768:	da001715 	stw	r8,92(sp)
    676c:	000907c0 	call	907c <__lshift>
    6770:	a80b883a 	mov	r5,r21
    6774:	1009883a 	mov	r4,r2
    6778:	d8800915 	stw	r2,36(sp)
    677c:	00091c40 	call	91c4 <__mcmp>
    6780:	da001717 	ldw	r8,92(sp)
    6784:	0081800e 	bge	zero,r2,6d88 <_dtoa_r+0x11d4>
    6788:	b93fffc3 	ldbu	r4,-1(r23)
    678c:	b8bfffc4 	addi	r2,r23,-1
    6790:	1007883a 	mov	r3,r2
    6794:	01800e44 	movi	r6,57
    6798:	d9c00717 	ldw	r7,28(sp)
    679c:	00000506 	br	67b4 <_dtoa_r+0xc00>
    67a0:	18ffffc4 	addi	r3,r3,-1
    67a4:	11c12326 	beq	r2,r7,6c34 <_dtoa_r+0x1080>
    67a8:	19000003 	ldbu	r4,0(r3)
    67ac:	102f883a 	mov	r23,r2
    67b0:	10bfffc4 	addi	r2,r2,-1
    67b4:	21403fcc 	andi	r5,r4,255
    67b8:	2940201c 	xori	r5,r5,128
    67bc:	297fe004 	addi	r5,r5,-128
    67c0:	29bff726 	beq	r5,r6,67a0 <__alt_data_end+0xff0067a0>
    67c4:	21000044 	addi	r4,r4,1
    67c8:	11000005 	stb	r4,0(r2)
    67cc:	a80b883a 	mov	r5,r21
    67d0:	e009883a 	mov	r4,fp
    67d4:	00089a40 	call	89a4 <_Bfree>
    67d8:	883ea026 	beq	r17,zero,625c <__alt_data_end+0xff00625c>
    67dc:	90000426 	beq	r18,zero,67f0 <_dtoa_r+0xc3c>
    67e0:	94400326 	beq	r18,r17,67f0 <_dtoa_r+0xc3c>
    67e4:	900b883a 	mov	r5,r18
    67e8:	e009883a 	mov	r4,fp
    67ec:	00089a40 	call	89a4 <_Bfree>
    67f0:	880b883a 	mov	r5,r17
    67f4:	e009883a 	mov	r4,fp
    67f8:	00089a40 	call	89a4 <_Bfree>
    67fc:	003e9706 	br	625c <__alt_data_end+0xff00625c>
    6800:	01800044 	movi	r6,1
    6804:	d9800e15 	stw	r6,56(sp)
    6808:	003d9606 	br	5e64 <__alt_data_end+0xff005e64>
    680c:	d8800817 	ldw	r2,32(sp)
    6810:	d8c00517 	ldw	r3,20(sp)
    6814:	d8000d15 	stw	zero,52(sp)
    6818:	10c5c83a 	sub	r2,r2,r3
    681c:	00c9c83a 	sub	r4,zero,r3
    6820:	d8800815 	stw	r2,32(sp)
    6824:	d9000a15 	stw	r4,40(sp)
    6828:	003d9706 	br	5e88 <__alt_data_end+0xff005e88>
    682c:	05adc83a 	sub	r22,zero,r22
    6830:	dd800815 	stw	r22,32(sp)
    6834:	002d883a 	mov	r22,zero
    6838:	003d8e06 	br	5e74 <__alt_data_end+0xff005e74>
    683c:	d9000517 	ldw	r4,20(sp)
    6840:	000f1480 	call	f148 <__floatsidf>
    6844:	100d883a 	mov	r6,r2
    6848:	180f883a 	mov	r7,r3
    684c:	a009883a 	mov	r4,r20
    6850:	880b883a 	mov	r5,r17
    6854:	000de5c0 	call	de5c <__eqdf2>
    6858:	103d7126 	beq	r2,zero,5e20 <__alt_data_end+0xff005e20>
    685c:	d9c00517 	ldw	r7,20(sp)
    6860:	39ffffc4 	addi	r7,r7,-1
    6864:	d9c00515 	stw	r7,20(sp)
    6868:	003d6d06 	br	5e20 <__alt_data_end+0xff005e20>
    686c:	dd400a17 	ldw	r21,40(sp)
    6870:	dd000817 	ldw	r20,32(sp)
    6874:	0023883a 	mov	r17,zero
    6878:	003f4806 	br	659c <__alt_data_end+0xff00659c>
    687c:	10e3c83a 	sub	r17,r2,r3
    6880:	9448983a 	sll	r4,r18,r17
    6884:	003d3206 	br	5d50 <__alt_data_end+0xff005d50>
    6888:	d8000e15 	stw	zero,56(sp)
    688c:	003d7506 	br	5e64 <__alt_data_end+0xff005e64>
    6890:	b005883a 	mov	r2,r22
    6894:	003f4506 	br	65ac <__alt_data_end+0xff0065ac>
    6898:	dc000915 	stw	r16,36(sp)
    689c:	d9800a17 	ldw	r6,40(sp)
    68a0:	d9400917 	ldw	r5,36(sp)
    68a4:	e009883a 	mov	r4,fp
    68a8:	0008f3c0 	call	8f3c <__pow5mult>
    68ac:	1021883a 	mov	r16,r2
    68b0:	003f5a06 	br	661c <__alt_data_end+0xff00661c>
    68b4:	01c00044 	movi	r7,1
    68b8:	d9c00b15 	stw	r7,44(sp)
    68bc:	d8802217 	ldw	r2,136(sp)
    68c0:	0081280e 	bge	zero,r2,6d64 <_dtoa_r+0x11b0>
    68c4:	100d883a 	mov	r6,r2
    68c8:	1021883a 	mov	r16,r2
    68cc:	d8800c15 	stw	r2,48(sp)
    68d0:	d8800615 	stw	r2,24(sp)
    68d4:	003d8806 	br	5ef8 <__alt_data_end+0xff005ef8>
    68d8:	d8800617 	ldw	r2,24(sp)
    68dc:	00be9b16 	blt	zero,r2,634c <__alt_data_end+0xff00634c>
    68e0:	10010f1e 	bne	r2,zero,6d20 <_dtoa_r+0x116c>
    68e4:	880b883a 	mov	r5,r17
    68e8:	000d883a 	mov	r6,zero
    68ec:	01d00534 	movhi	r7,16404
    68f0:	8009883a 	mov	r4,r16
    68f4:	000e0b40 	call	e0b4 <__muldf3>
    68f8:	900d883a 	mov	r6,r18
    68fc:	980f883a 	mov	r7,r19
    6900:	1009883a 	mov	r4,r2
    6904:	180b883a 	mov	r5,r3
    6908:	000dee40 	call	dee4 <__gedf2>
    690c:	002b883a 	mov	r21,zero
    6910:	0023883a 	mov	r17,zero
    6914:	1000bf16 	blt	r2,zero,6c14 <_dtoa_r+0x1060>
    6918:	d9802217 	ldw	r6,136(sp)
    691c:	ddc00717 	ldw	r23,28(sp)
    6920:	018c303a 	nor	r6,zero,r6
    6924:	d9800515 	stw	r6,20(sp)
    6928:	a80b883a 	mov	r5,r21
    692c:	e009883a 	mov	r4,fp
    6930:	00089a40 	call	89a4 <_Bfree>
    6934:	883e4926 	beq	r17,zero,625c <__alt_data_end+0xff00625c>
    6938:	003fad06 	br	67f0 <__alt_data_end+0xff0067f0>
    693c:	d9c01117 	ldw	r7,68(sp)
    6940:	3801bc26 	beq	r7,zero,7034 <_dtoa_r+0x1480>
    6944:	10810cc4 	addi	r2,r2,1075
    6948:	dd400a17 	ldw	r21,40(sp)
    694c:	dd000817 	ldw	r20,32(sp)
    6950:	003f0a06 	br	657c <__alt_data_end+0xff00657c>
    6954:	00800704 	movi	r2,28
    6958:	d9000817 	ldw	r4,32(sp)
    695c:	a0a9883a 	add	r20,r20,r2
    6960:	b0ad883a 	add	r22,r22,r2
    6964:	2089883a 	add	r4,r4,r2
    6968:	d9000815 	stw	r4,32(sp)
    696c:	003f5106 	br	66b4 <__alt_data_end+0xff0066b4>
    6970:	d8c00317 	ldw	r3,12(sp)
    6974:	b8c1fc0e 	bge	r23,r3,7168 <_dtoa_r+0x15b4>
    6978:	0027883a 	mov	r19,zero
    697c:	b805883a 	mov	r2,r23
    6980:	003f3e06 	br	667c <__alt_data_end+0xff00667c>
    6984:	880b883a 	mov	r5,r17
    6988:	e009883a 	mov	r4,fp
    698c:	000f883a 	mov	r7,zero
    6990:	01800284 	movi	r6,10
    6994:	00089cc0 	call	89cc <__multadd>
    6998:	d9000c17 	ldw	r4,48(sp)
    699c:	1023883a 	mov	r17,r2
    69a0:	0102040e 	bge	zero,r4,71b4 <_dtoa_r+0x1600>
    69a4:	d9000615 	stw	r4,24(sp)
    69a8:	0500050e 	bge	zero,r20,69c0 <_dtoa_r+0xe0c>
    69ac:	880b883a 	mov	r5,r17
    69b0:	a00d883a 	mov	r6,r20
    69b4:	e009883a 	mov	r4,fp
    69b8:	000907c0 	call	907c <__lshift>
    69bc:	1023883a 	mov	r17,r2
    69c0:	9801241e 	bne	r19,zero,6e54 <_dtoa_r+0x12a0>
    69c4:	8829883a 	mov	r20,r17
    69c8:	d9000617 	ldw	r4,24(sp)
    69cc:	dcc00717 	ldw	r19,28(sp)
    69d0:	9480004c 	andi	r18,r18,1
    69d4:	20bfffc4 	addi	r2,r4,-1
    69d8:	9885883a 	add	r2,r19,r2
    69dc:	d8800415 	stw	r2,16(sp)
    69e0:	dc800615 	stw	r18,24(sp)
    69e4:	a80b883a 	mov	r5,r21
    69e8:	8009883a 	mov	r4,r16
    69ec:	00059b40 	call	59b4 <quorem>
    69f0:	880b883a 	mov	r5,r17
    69f4:	8009883a 	mov	r4,r16
    69f8:	102f883a 	mov	r23,r2
    69fc:	00091c40 	call	91c4 <__mcmp>
    6a00:	a80b883a 	mov	r5,r21
    6a04:	a00d883a 	mov	r6,r20
    6a08:	e009883a 	mov	r4,fp
    6a0c:	102d883a 	mov	r22,r2
    6a10:	00092240 	call	9224 <__mdiff>
    6a14:	1007883a 	mov	r3,r2
    6a18:	10800317 	ldw	r2,12(r2)
    6a1c:	bc800c04 	addi	r18,r23,48
    6a20:	180b883a 	mov	r5,r3
    6a24:	10004e1e 	bne	r2,zero,6b60 <_dtoa_r+0xfac>
    6a28:	8009883a 	mov	r4,r16
    6a2c:	d8c01615 	stw	r3,88(sp)
    6a30:	00091c40 	call	91c4 <__mcmp>
    6a34:	d8c01617 	ldw	r3,88(sp)
    6a38:	e009883a 	mov	r4,fp
    6a3c:	d8801615 	stw	r2,88(sp)
    6a40:	180b883a 	mov	r5,r3
    6a44:	00089a40 	call	89a4 <_Bfree>
    6a48:	d8801617 	ldw	r2,88(sp)
    6a4c:	1000041e 	bne	r2,zero,6a60 <_dtoa_r+0xeac>
    6a50:	d9800317 	ldw	r6,12(sp)
    6a54:	3000021e 	bne	r6,zero,6a60 <_dtoa_r+0xeac>
    6a58:	d8c00617 	ldw	r3,24(sp)
    6a5c:	18003726 	beq	r3,zero,6b3c <_dtoa_r+0xf88>
    6a60:	b0002016 	blt	r22,zero,6ae4 <_dtoa_r+0xf30>
    6a64:	b000041e 	bne	r22,zero,6a78 <_dtoa_r+0xec4>
    6a68:	d9000317 	ldw	r4,12(sp)
    6a6c:	2000021e 	bne	r4,zero,6a78 <_dtoa_r+0xec4>
    6a70:	d8c00617 	ldw	r3,24(sp)
    6a74:	18001b26 	beq	r3,zero,6ae4 <_dtoa_r+0xf30>
    6a78:	00810716 	blt	zero,r2,6e98 <_dtoa_r+0x12e4>
    6a7c:	d8c00417 	ldw	r3,16(sp)
    6a80:	9d800044 	addi	r22,r19,1
    6a84:	9c800005 	stb	r18,0(r19)
    6a88:	b02f883a 	mov	r23,r22
    6a8c:	98c10626 	beq	r19,r3,6ea8 <_dtoa_r+0x12f4>
    6a90:	800b883a 	mov	r5,r16
    6a94:	000f883a 	mov	r7,zero
    6a98:	01800284 	movi	r6,10
    6a9c:	e009883a 	mov	r4,fp
    6aa0:	00089cc0 	call	89cc <__multadd>
    6aa4:	1021883a 	mov	r16,r2
    6aa8:	000f883a 	mov	r7,zero
    6aac:	01800284 	movi	r6,10
    6ab0:	880b883a 	mov	r5,r17
    6ab4:	e009883a 	mov	r4,fp
    6ab8:	8d002526 	beq	r17,r20,6b50 <_dtoa_r+0xf9c>
    6abc:	00089cc0 	call	89cc <__multadd>
    6ac0:	a00b883a 	mov	r5,r20
    6ac4:	000f883a 	mov	r7,zero
    6ac8:	01800284 	movi	r6,10
    6acc:	e009883a 	mov	r4,fp
    6ad0:	1023883a 	mov	r17,r2
    6ad4:	00089cc0 	call	89cc <__multadd>
    6ad8:	1029883a 	mov	r20,r2
    6adc:	b027883a 	mov	r19,r22
    6ae0:	003fc006 	br	69e4 <__alt_data_end+0xff0069e4>
    6ae4:	9011883a 	mov	r8,r18
    6ae8:	00800e0e 	bge	zero,r2,6b24 <_dtoa_r+0xf70>
    6aec:	800b883a 	mov	r5,r16
    6af0:	01800044 	movi	r6,1
    6af4:	e009883a 	mov	r4,fp
    6af8:	da001715 	stw	r8,92(sp)
    6afc:	000907c0 	call	907c <__lshift>
    6b00:	a80b883a 	mov	r5,r21
    6b04:	1009883a 	mov	r4,r2
    6b08:	1021883a 	mov	r16,r2
    6b0c:	00091c40 	call	91c4 <__mcmp>
    6b10:	da001717 	ldw	r8,92(sp)
    6b14:	0081960e 	bge	zero,r2,7170 <_dtoa_r+0x15bc>
    6b18:	00800e44 	movi	r2,57
    6b1c:	40817026 	beq	r8,r2,70e0 <_dtoa_r+0x152c>
    6b20:	ba000c44 	addi	r8,r23,49
    6b24:	8825883a 	mov	r18,r17
    6b28:	9dc00044 	addi	r23,r19,1
    6b2c:	9a000005 	stb	r8,0(r19)
    6b30:	a023883a 	mov	r17,r20
    6b34:	dc000915 	stw	r16,36(sp)
    6b38:	003f2406 	br	67cc <__alt_data_end+0xff0067cc>
    6b3c:	00800e44 	movi	r2,57
    6b40:	9011883a 	mov	r8,r18
    6b44:	90816626 	beq	r18,r2,70e0 <_dtoa_r+0x152c>
    6b48:	05bff516 	blt	zero,r22,6b20 <__alt_data_end+0xff006b20>
    6b4c:	003ff506 	br	6b24 <__alt_data_end+0xff006b24>
    6b50:	00089cc0 	call	89cc <__multadd>
    6b54:	1023883a 	mov	r17,r2
    6b58:	1029883a 	mov	r20,r2
    6b5c:	003fdf06 	br	6adc <__alt_data_end+0xff006adc>
    6b60:	e009883a 	mov	r4,fp
    6b64:	00089a40 	call	89a4 <_Bfree>
    6b68:	00800044 	movi	r2,1
    6b6c:	003fbc06 	br	6a60 <__alt_data_end+0xff006a60>
    6b70:	a80b883a 	mov	r5,r21
    6b74:	8009883a 	mov	r4,r16
    6b78:	00091c40 	call	91c4 <__mcmp>
    6b7c:	103edb0e 	bge	r2,zero,66ec <__alt_data_end+0xff0066ec>
    6b80:	800b883a 	mov	r5,r16
    6b84:	000f883a 	mov	r7,zero
    6b88:	01800284 	movi	r6,10
    6b8c:	e009883a 	mov	r4,fp
    6b90:	00089cc0 	call	89cc <__multadd>
    6b94:	1021883a 	mov	r16,r2
    6b98:	d8800517 	ldw	r2,20(sp)
    6b9c:	d8c00b17 	ldw	r3,44(sp)
    6ba0:	10bfffc4 	addi	r2,r2,-1
    6ba4:	d8800515 	stw	r2,20(sp)
    6ba8:	183f761e 	bne	r3,zero,6984 <__alt_data_end+0xff006984>
    6bac:	d9000c17 	ldw	r4,48(sp)
    6bb0:	0101730e 	bge	zero,r4,7180 <_dtoa_r+0x15cc>
    6bb4:	d9000615 	stw	r4,24(sp)
    6bb8:	003ed006 	br	66fc <__alt_data_end+0xff0066fc>
    6bbc:	00800084 	movi	r2,2
    6bc0:	3081861e 	bne	r6,r2,71dc <_dtoa_r+0x1628>
    6bc4:	d8000b15 	stw	zero,44(sp)
    6bc8:	003f3c06 	br	68bc <__alt_data_end+0xff0068bc>
    6bcc:	dc000917 	ldw	r16,36(sp)
    6bd0:	003e9206 	br	661c <__alt_data_end+0xff00661c>
    6bd4:	d9c00317 	ldw	r7,12(sp)
    6bd8:	00800084 	movi	r2,2
    6bdc:	11fec50e 	bge	r2,r7,66f4 <__alt_data_end+0xff0066f4>
    6be0:	d9000617 	ldw	r4,24(sp)
    6be4:	20013c1e 	bne	r4,zero,70d8 <_dtoa_r+0x1524>
    6be8:	a80b883a 	mov	r5,r21
    6bec:	000f883a 	mov	r7,zero
    6bf0:	01800144 	movi	r6,5
    6bf4:	e009883a 	mov	r4,fp
    6bf8:	00089cc0 	call	89cc <__multadd>
    6bfc:	100b883a 	mov	r5,r2
    6c00:	8009883a 	mov	r4,r16
    6c04:	102b883a 	mov	r21,r2
    6c08:	00091c40 	call	91c4 <__mcmp>
    6c0c:	dc000915 	stw	r16,36(sp)
    6c10:	00bf410e 	bge	zero,r2,6918 <__alt_data_end+0xff006918>
    6c14:	d9c00717 	ldw	r7,28(sp)
    6c18:	00800c44 	movi	r2,49
    6c1c:	38800005 	stb	r2,0(r7)
    6c20:	d8800517 	ldw	r2,20(sp)
    6c24:	3dc00044 	addi	r23,r7,1
    6c28:	10800044 	addi	r2,r2,1
    6c2c:	d8800515 	stw	r2,20(sp)
    6c30:	003f3d06 	br	6928 <__alt_data_end+0xff006928>
    6c34:	d9800517 	ldw	r6,20(sp)
    6c38:	d9c00717 	ldw	r7,28(sp)
    6c3c:	00800c44 	movi	r2,49
    6c40:	31800044 	addi	r6,r6,1
    6c44:	d9800515 	stw	r6,20(sp)
    6c48:	38800005 	stb	r2,0(r7)
    6c4c:	003edf06 	br	67cc <__alt_data_end+0xff0067cc>
    6c50:	d8000b15 	stw	zero,44(sp)
    6c54:	003c9f06 	br	5ed4 <__alt_data_end+0xff005ed4>
    6c58:	903e7e1e 	bne	r18,zero,6654 <__alt_data_end+0xff006654>
    6c5c:	00800434 	movhi	r2,16
    6c60:	10bfffc4 	addi	r2,r2,-1
    6c64:	9884703a 	and	r2,r19,r2
    6c68:	1000ea1e 	bne	r2,zero,7014 <_dtoa_r+0x1460>
    6c6c:	9cdffc2c 	andhi	r19,r19,32752
    6c70:	9800e826 	beq	r19,zero,7014 <_dtoa_r+0x1460>
    6c74:	d9c00817 	ldw	r7,32(sp)
    6c78:	b5800044 	addi	r22,r22,1
    6c7c:	04c00044 	movi	r19,1
    6c80:	39c00044 	addi	r7,r7,1
    6c84:	d9c00815 	stw	r7,32(sp)
    6c88:	d8800d17 	ldw	r2,52(sp)
    6c8c:	103e721e 	bne	r2,zero,6658 <__alt_data_end+0xff006658>
    6c90:	00800044 	movi	r2,1
    6c94:	003e7906 	br	667c <__alt_data_end+0xff00667c>
    6c98:	8009883a 	mov	r4,r16
    6c9c:	000f1480 	call	f148 <__floatsidf>
    6ca0:	d9800f17 	ldw	r6,60(sp)
    6ca4:	d9c01017 	ldw	r7,64(sp)
    6ca8:	1009883a 	mov	r4,r2
    6cac:	180b883a 	mov	r5,r3
    6cb0:	000e0b40 	call	e0b4 <__muldf3>
    6cb4:	000d883a 	mov	r6,zero
    6cb8:	01d00734 	movhi	r7,16412
    6cbc:	1009883a 	mov	r4,r2
    6cc0:	180b883a 	mov	r5,r3
    6cc4:	000ccc80 	call	ccc8 <__adddf3>
    6cc8:	047f3034 	movhi	r17,64704
    6ccc:	1021883a 	mov	r16,r2
    6cd0:	1c63883a 	add	r17,r3,r17
    6cd4:	d9000f17 	ldw	r4,60(sp)
    6cd8:	d9401017 	ldw	r5,64(sp)
    6cdc:	000d883a 	mov	r6,zero
    6ce0:	01d00534 	movhi	r7,16404
    6ce4:	000e7cc0 	call	e7cc <__subdf3>
    6ce8:	800d883a 	mov	r6,r16
    6cec:	880f883a 	mov	r7,r17
    6cf0:	1009883a 	mov	r4,r2
    6cf4:	180b883a 	mov	r5,r3
    6cf8:	102b883a 	mov	r21,r2
    6cfc:	1829883a 	mov	r20,r3
    6d00:	000dee40 	call	dee4 <__gedf2>
    6d04:	00806c16 	blt	zero,r2,6eb8 <_dtoa_r+0x1304>
    6d08:	89e0003c 	xorhi	r7,r17,32768
    6d0c:	800d883a 	mov	r6,r16
    6d10:	a809883a 	mov	r4,r21
    6d14:	a00b883a 	mov	r5,r20
    6d18:	000dfc00 	call	dfc0 <__ledf2>
    6d1c:	103d7e0e 	bge	r2,zero,6318 <__alt_data_end+0xff006318>
    6d20:	002b883a 	mov	r21,zero
    6d24:	0023883a 	mov	r17,zero
    6d28:	003efb06 	br	6918 <__alt_data_end+0xff006918>
    6d2c:	d8800717 	ldw	r2,28(sp)
    6d30:	003bd006 	br	5c74 <__alt_data_end+0xff005c74>
    6d34:	d9000a17 	ldw	r4,40(sp)
    6d38:	d9800d17 	ldw	r6,52(sp)
    6d3c:	dd400a15 	stw	r21,40(sp)
    6d40:	a905c83a 	sub	r2,r21,r4
    6d44:	308d883a 	add	r6,r6,r2
    6d48:	d9800d15 	stw	r6,52(sp)
    6d4c:	002b883a 	mov	r21,zero
    6d50:	003e0606 	br	656c <__alt_data_end+0xff00656c>
    6d54:	9023883a 	mov	r17,r18
    6d58:	9829883a 	mov	r20,r19
    6d5c:	04000084 	movi	r16,2
    6d60:	003c9206 	br	5fac <__alt_data_end+0xff005fac>
    6d64:	04000044 	movi	r16,1
    6d68:	dc000c15 	stw	r16,48(sp)
    6d6c:	dc000615 	stw	r16,24(sp)
    6d70:	dc002215 	stw	r16,136(sp)
    6d74:	e0001115 	stw	zero,68(fp)
    6d78:	000b883a 	mov	r5,zero
    6d7c:	003c6906 	br	5f24 <__alt_data_end+0xff005f24>
    6d80:	3021883a 	mov	r16,r6
    6d84:	003ffb06 	br	6d74 <__alt_data_end+0xff006d74>
    6d88:	1000021e 	bne	r2,zero,6d94 <_dtoa_r+0x11e0>
    6d8c:	4200004c 	andi	r8,r8,1
    6d90:	403e7d1e 	bne	r8,zero,6788 <__alt_data_end+0xff006788>
    6d94:	01000c04 	movi	r4,48
    6d98:	00000106 	br	6da0 <_dtoa_r+0x11ec>
    6d9c:	102f883a 	mov	r23,r2
    6da0:	b8bfffc4 	addi	r2,r23,-1
    6da4:	10c00007 	ldb	r3,0(r2)
    6da8:	193ffc26 	beq	r3,r4,6d9c <__alt_data_end+0xff006d9c>
    6dac:	003e8706 	br	67cc <__alt_data_end+0xff0067cc>
    6db0:	d8800517 	ldw	r2,20(sp)
    6db4:	00a3c83a 	sub	r17,zero,r2
    6db8:	8800a426 	beq	r17,zero,704c <_dtoa_r+0x1498>
    6dbc:	888003cc 	andi	r2,r17,15
    6dc0:	100490fa 	slli	r2,r2,3
    6dc4:	00c00074 	movhi	r3,1
    6dc8:	18c8f604 	addi	r3,r3,9176
    6dcc:	1885883a 	add	r2,r3,r2
    6dd0:	11800017 	ldw	r6,0(r2)
    6dd4:	11c00117 	ldw	r7,4(r2)
    6dd8:	9009883a 	mov	r4,r18
    6ddc:	980b883a 	mov	r5,r19
    6de0:	8823d13a 	srai	r17,r17,4
    6de4:	000e0b40 	call	e0b4 <__muldf3>
    6de8:	d8800f15 	stw	r2,60(sp)
    6dec:	d8c01015 	stw	r3,64(sp)
    6df0:	8800e826 	beq	r17,zero,7194 <_dtoa_r+0x15e0>
    6df4:	05000074 	movhi	r20,1
    6df8:	a508ec04 	addi	r20,r20,9136
    6dfc:	04000084 	movi	r16,2
    6e00:	8980004c 	andi	r6,r17,1
    6e04:	1009883a 	mov	r4,r2
    6e08:	8823d07a 	srai	r17,r17,1
    6e0c:	180b883a 	mov	r5,r3
    6e10:	30000426 	beq	r6,zero,6e24 <_dtoa_r+0x1270>
    6e14:	a1800017 	ldw	r6,0(r20)
    6e18:	a1c00117 	ldw	r7,4(r20)
    6e1c:	84000044 	addi	r16,r16,1
    6e20:	000e0b40 	call	e0b4 <__muldf3>
    6e24:	a5000204 	addi	r20,r20,8
    6e28:	883ff51e 	bne	r17,zero,6e00 <__alt_data_end+0xff006e00>
    6e2c:	d8800f15 	stw	r2,60(sp)
    6e30:	d8c01015 	stw	r3,64(sp)
    6e34:	003c7606 	br	6010 <__alt_data_end+0xff006010>
    6e38:	00c00c04 	movi	r3,48
    6e3c:	10c00005 	stb	r3,0(r2)
    6e40:	d8c00517 	ldw	r3,20(sp)
    6e44:	bd3fffc3 	ldbu	r20,-1(r23)
    6e48:	18c00044 	addi	r3,r3,1
    6e4c:	d8c00515 	stw	r3,20(sp)
    6e50:	003db906 	br	6538 <__alt_data_end+0xff006538>
    6e54:	89400117 	ldw	r5,4(r17)
    6e58:	e009883a 	mov	r4,fp
    6e5c:	00088fc0 	call	88fc <_Balloc>
    6e60:	89800417 	ldw	r6,16(r17)
    6e64:	89400304 	addi	r5,r17,12
    6e68:	11000304 	addi	r4,r2,12
    6e6c:	31800084 	addi	r6,r6,2
    6e70:	318d883a 	add	r6,r6,r6
    6e74:	318d883a 	add	r6,r6,r6
    6e78:	1027883a 	mov	r19,r2
    6e7c:	000321c0 	call	321c <memcpy>
    6e80:	01800044 	movi	r6,1
    6e84:	980b883a 	mov	r5,r19
    6e88:	e009883a 	mov	r4,fp
    6e8c:	000907c0 	call	907c <__lshift>
    6e90:	1029883a 	mov	r20,r2
    6e94:	003ecc06 	br	69c8 <__alt_data_end+0xff0069c8>
    6e98:	00800e44 	movi	r2,57
    6e9c:	90809026 	beq	r18,r2,70e0 <_dtoa_r+0x152c>
    6ea0:	92000044 	addi	r8,r18,1
    6ea4:	003f1f06 	br	6b24 <__alt_data_end+0xff006b24>
    6ea8:	9011883a 	mov	r8,r18
    6eac:	8825883a 	mov	r18,r17
    6eb0:	a023883a 	mov	r17,r20
    6eb4:	003e2906 	br	675c <__alt_data_end+0xff00675c>
    6eb8:	002b883a 	mov	r21,zero
    6ebc:	0023883a 	mov	r17,zero
    6ec0:	003f5406 	br	6c14 <__alt_data_end+0xff006c14>
    6ec4:	61bfffc4 	addi	r6,r12,-1
    6ec8:	300490fa 	slli	r2,r6,3
    6ecc:	00c00074 	movhi	r3,1
    6ed0:	18c8f604 	addi	r3,r3,9176
    6ed4:	1885883a 	add	r2,r3,r2
    6ed8:	11000017 	ldw	r4,0(r2)
    6edc:	11400117 	ldw	r5,4(r2)
    6ee0:	d8800717 	ldw	r2,28(sp)
    6ee4:	880f883a 	mov	r7,r17
    6ee8:	d9801215 	stw	r6,72(sp)
    6eec:	800d883a 	mov	r6,r16
    6ef0:	db001615 	stw	r12,88(sp)
    6ef4:	15c00044 	addi	r23,r2,1
    6ef8:	000e0b40 	call	e0b4 <__muldf3>
    6efc:	d9401017 	ldw	r5,64(sp)
    6f00:	d9000f17 	ldw	r4,60(sp)
    6f04:	d8c01515 	stw	r3,84(sp)
    6f08:	d8801415 	stw	r2,80(sp)
    6f0c:	000f0c80 	call	f0c8 <__fixdfsi>
    6f10:	1009883a 	mov	r4,r2
    6f14:	1021883a 	mov	r16,r2
    6f18:	000f1480 	call	f148 <__floatsidf>
    6f1c:	d9000f17 	ldw	r4,60(sp)
    6f20:	d9401017 	ldw	r5,64(sp)
    6f24:	100d883a 	mov	r6,r2
    6f28:	180f883a 	mov	r7,r3
    6f2c:	000e7cc0 	call	e7cc <__subdf3>
    6f30:	1829883a 	mov	r20,r3
    6f34:	d8c00717 	ldw	r3,28(sp)
    6f38:	84000c04 	addi	r16,r16,48
    6f3c:	1023883a 	mov	r17,r2
    6f40:	1c000005 	stb	r16,0(r3)
    6f44:	db001617 	ldw	r12,88(sp)
    6f48:	00800044 	movi	r2,1
    6f4c:	60802226 	beq	r12,r2,6fd8 <_dtoa_r+0x1424>
    6f50:	d9c00717 	ldw	r7,28(sp)
    6f54:	8805883a 	mov	r2,r17
    6f58:	b82b883a 	mov	r21,r23
    6f5c:	3b19883a 	add	r12,r7,r12
    6f60:	6023883a 	mov	r17,r12
    6f64:	a007883a 	mov	r3,r20
    6f68:	dc800f15 	stw	r18,60(sp)
    6f6c:	000d883a 	mov	r6,zero
    6f70:	01d00934 	movhi	r7,16420
    6f74:	1009883a 	mov	r4,r2
    6f78:	180b883a 	mov	r5,r3
    6f7c:	000e0b40 	call	e0b4 <__muldf3>
    6f80:	180b883a 	mov	r5,r3
    6f84:	1009883a 	mov	r4,r2
    6f88:	1829883a 	mov	r20,r3
    6f8c:	1025883a 	mov	r18,r2
    6f90:	000f0c80 	call	f0c8 <__fixdfsi>
    6f94:	1009883a 	mov	r4,r2
    6f98:	1021883a 	mov	r16,r2
    6f9c:	000f1480 	call	f148 <__floatsidf>
    6fa0:	100d883a 	mov	r6,r2
    6fa4:	180f883a 	mov	r7,r3
    6fa8:	9009883a 	mov	r4,r18
    6fac:	a00b883a 	mov	r5,r20
    6fb0:	84000c04 	addi	r16,r16,48
    6fb4:	000e7cc0 	call	e7cc <__subdf3>
    6fb8:	ad400044 	addi	r21,r21,1
    6fbc:	ac3fffc5 	stb	r16,-1(r21)
    6fc0:	ac7fea1e 	bne	r21,r17,6f6c <__alt_data_end+0xff006f6c>
    6fc4:	1023883a 	mov	r17,r2
    6fc8:	d8801217 	ldw	r2,72(sp)
    6fcc:	dc800f17 	ldw	r18,60(sp)
    6fd0:	1829883a 	mov	r20,r3
    6fd4:	b8af883a 	add	r23,r23,r2
    6fd8:	d9001417 	ldw	r4,80(sp)
    6fdc:	d9401517 	ldw	r5,84(sp)
    6fe0:	000d883a 	mov	r6,zero
    6fe4:	01cff834 	movhi	r7,16352
    6fe8:	000ccc80 	call	ccc8 <__adddf3>
    6fec:	880d883a 	mov	r6,r17
    6ff0:	a00f883a 	mov	r7,r20
    6ff4:	1009883a 	mov	r4,r2
    6ff8:	180b883a 	mov	r5,r3
    6ffc:	000dfc00 	call	dfc0 <__ledf2>
    7000:	10003e0e 	bge	r2,zero,70fc <_dtoa_r+0x1548>
    7004:	d9001317 	ldw	r4,76(sp)
    7008:	bd3fffc3 	ldbu	r20,-1(r23)
    700c:	d9000515 	stw	r4,20(sp)
    7010:	003d3b06 	br	6500 <__alt_data_end+0xff006500>
    7014:	0027883a 	mov	r19,zero
    7018:	003f1b06 	br	6c88 <__alt_data_end+0xff006c88>
    701c:	d8800817 	ldw	r2,32(sp)
    7020:	11e9c83a 	sub	r20,r2,r7
    7024:	0005883a 	mov	r2,zero
    7028:	003d5406 	br	657c <__alt_data_end+0xff00657c>
    702c:	00800044 	movi	r2,1
    7030:	003dc706 	br	6750 <__alt_data_end+0xff006750>
    7034:	d8c00217 	ldw	r3,8(sp)
    7038:	00800d84 	movi	r2,54
    703c:	dd400a17 	ldw	r21,40(sp)
    7040:	10c5c83a 	sub	r2,r2,r3
    7044:	dd000817 	ldw	r20,32(sp)
    7048:	003d4c06 	br	657c <__alt_data_end+0xff00657c>
    704c:	dc800f15 	stw	r18,60(sp)
    7050:	dcc01015 	stw	r19,64(sp)
    7054:	04000084 	movi	r16,2
    7058:	003bed06 	br	6010 <__alt_data_end+0xff006010>
    705c:	d9000617 	ldw	r4,24(sp)
    7060:	203f0d26 	beq	r4,zero,6c98 <__alt_data_end+0xff006c98>
    7064:	d9800c17 	ldw	r6,48(sp)
    7068:	01bcab0e 	bge	zero,r6,6318 <__alt_data_end+0xff006318>
    706c:	d9401017 	ldw	r5,64(sp)
    7070:	d9000f17 	ldw	r4,60(sp)
    7074:	000d883a 	mov	r6,zero
    7078:	01d00934 	movhi	r7,16420
    707c:	000e0b40 	call	e0b4 <__muldf3>
    7080:	81000044 	addi	r4,r16,1
    7084:	d8800f15 	stw	r2,60(sp)
    7088:	d8c01015 	stw	r3,64(sp)
    708c:	000f1480 	call	f148 <__floatsidf>
    7090:	d9800f17 	ldw	r6,60(sp)
    7094:	d9c01017 	ldw	r7,64(sp)
    7098:	1009883a 	mov	r4,r2
    709c:	180b883a 	mov	r5,r3
    70a0:	000e0b40 	call	e0b4 <__muldf3>
    70a4:	01d00734 	movhi	r7,16412
    70a8:	000d883a 	mov	r6,zero
    70ac:	1009883a 	mov	r4,r2
    70b0:	180b883a 	mov	r5,r3
    70b4:	000ccc80 	call	ccc8 <__adddf3>
    70b8:	d9c00517 	ldw	r7,20(sp)
    70bc:	047f3034 	movhi	r17,64704
    70c0:	1021883a 	mov	r16,r2
    70c4:	39ffffc4 	addi	r7,r7,-1
    70c8:	d9c01315 	stw	r7,76(sp)
    70cc:	1c63883a 	add	r17,r3,r17
    70d0:	db000c17 	ldw	r12,48(sp)
    70d4:	003bea06 	br	6080 <__alt_data_end+0xff006080>
    70d8:	dc000915 	stw	r16,36(sp)
    70dc:	003e0e06 	br	6918 <__alt_data_end+0xff006918>
    70e0:	01000e44 	movi	r4,57
    70e4:	8825883a 	mov	r18,r17
    70e8:	9dc00044 	addi	r23,r19,1
    70ec:	99000005 	stb	r4,0(r19)
    70f0:	a023883a 	mov	r17,r20
    70f4:	dc000915 	stw	r16,36(sp)
    70f8:	003da406 	br	678c <__alt_data_end+0xff00678c>
    70fc:	d9801417 	ldw	r6,80(sp)
    7100:	d9c01517 	ldw	r7,84(sp)
    7104:	0009883a 	mov	r4,zero
    7108:	014ff834 	movhi	r5,16352
    710c:	000e7cc0 	call	e7cc <__subdf3>
    7110:	880d883a 	mov	r6,r17
    7114:	a00f883a 	mov	r7,r20
    7118:	1009883a 	mov	r4,r2
    711c:	180b883a 	mov	r5,r3
    7120:	000dee40 	call	dee4 <__gedf2>
    7124:	00bc7c0e 	bge	zero,r2,6318 <__alt_data_end+0xff006318>
    7128:	01000c04 	movi	r4,48
    712c:	00000106 	br	7134 <_dtoa_r+0x1580>
    7130:	102f883a 	mov	r23,r2
    7134:	b8bfffc4 	addi	r2,r23,-1
    7138:	10c00007 	ldb	r3,0(r2)
    713c:	193ffc26 	beq	r3,r4,7130 <__alt_data_end+0xff007130>
    7140:	d9801317 	ldw	r6,76(sp)
    7144:	d9800515 	stw	r6,20(sp)
    7148:	003c4406 	br	625c <__alt_data_end+0xff00625c>
    714c:	d9801317 	ldw	r6,76(sp)
    7150:	d9800515 	stw	r6,20(sp)
    7154:	003cea06 	br	6500 <__alt_data_end+0xff006500>
    7158:	dd800f17 	ldw	r22,60(sp)
    715c:	dcc01017 	ldw	r19,64(sp)
    7160:	dc801217 	ldw	r18,72(sp)
    7164:	003c6c06 	br	6318 <__alt_data_end+0xff006318>
    7168:	903e031e 	bne	r18,zero,6978 <__alt_data_end+0xff006978>
    716c:	003ebb06 	br	6c5c <__alt_data_end+0xff006c5c>
    7170:	103e6c1e 	bne	r2,zero,6b24 <__alt_data_end+0xff006b24>
    7174:	4080004c 	andi	r2,r8,1
    7178:	103e6a26 	beq	r2,zero,6b24 <__alt_data_end+0xff006b24>
    717c:	003e6606 	br	6b18 <__alt_data_end+0xff006b18>
    7180:	d8c00317 	ldw	r3,12(sp)
    7184:	00800084 	movi	r2,2
    7188:	10c02916 	blt	r2,r3,7230 <_dtoa_r+0x167c>
    718c:	d9000c17 	ldw	r4,48(sp)
    7190:	003e8806 	br	6bb4 <__alt_data_end+0xff006bb4>
    7194:	04000084 	movi	r16,2
    7198:	003b9d06 	br	6010 <__alt_data_end+0xff006010>
    719c:	d9001317 	ldw	r4,76(sp)
    71a0:	d9000515 	stw	r4,20(sp)
    71a4:	003cd606 	br	6500 <__alt_data_end+0xff006500>
    71a8:	d8801317 	ldw	r2,76(sp)
    71ac:	d8800515 	stw	r2,20(sp)
    71b0:	003c2a06 	br	625c <__alt_data_end+0xff00625c>
    71b4:	d9800317 	ldw	r6,12(sp)
    71b8:	00800084 	movi	r2,2
    71bc:	11801516 	blt	r2,r6,7214 <_dtoa_r+0x1660>
    71c0:	d9c00c17 	ldw	r7,48(sp)
    71c4:	d9c00615 	stw	r7,24(sp)
    71c8:	003df706 	br	69a8 <__alt_data_end+0xff0069a8>
    71cc:	193d3926 	beq	r3,r4,66b4 <__alt_data_end+0xff0066b4>
    71d0:	00c00f04 	movi	r3,60
    71d4:	1885c83a 	sub	r2,r3,r2
    71d8:	003ddf06 	br	6958 <__alt_data_end+0xff006958>
    71dc:	e009883a 	mov	r4,fp
    71e0:	e0001115 	stw	zero,68(fp)
    71e4:	000b883a 	mov	r5,zero
    71e8:	00088fc0 	call	88fc <_Balloc>
    71ec:	d8800715 	stw	r2,28(sp)
    71f0:	d8c00717 	ldw	r3,28(sp)
    71f4:	00bfffc4 	movi	r2,-1
    71f8:	01000044 	movi	r4,1
    71fc:	d8800c15 	stw	r2,48(sp)
    7200:	e0c01015 	stw	r3,64(fp)
    7204:	d9000b15 	stw	r4,44(sp)
    7208:	d8800615 	stw	r2,24(sp)
    720c:	d8002215 	stw	zero,136(sp)
    7210:	003c4106 	br	6318 <__alt_data_end+0xff006318>
    7214:	d8c00c17 	ldw	r3,48(sp)
    7218:	d8c00615 	stw	r3,24(sp)
    721c:	003e7006 	br	6be0 <__alt_data_end+0xff006be0>
    7220:	04400044 	movi	r17,1
    7224:	003b2006 	br	5ea8 <__alt_data_end+0xff005ea8>
    7228:	000b883a 	mov	r5,zero
    722c:	003b3d06 	br	5f24 <__alt_data_end+0xff005f24>
    7230:	d8800c17 	ldw	r2,48(sp)
    7234:	d8800615 	stw	r2,24(sp)
    7238:	003e6906 	br	6be0 <__alt_data_end+0xff006be0>

0000723c <__sflush_r>:
    723c:	2880030b 	ldhu	r2,12(r5)
    7240:	defffb04 	addi	sp,sp,-20
    7244:	dcc00315 	stw	r19,12(sp)
    7248:	dc400115 	stw	r17,4(sp)
    724c:	dfc00415 	stw	ra,16(sp)
    7250:	dc800215 	stw	r18,8(sp)
    7254:	dc000015 	stw	r16,0(sp)
    7258:	10c0020c 	andi	r3,r2,8
    725c:	2823883a 	mov	r17,r5
    7260:	2027883a 	mov	r19,r4
    7264:	1800311e 	bne	r3,zero,732c <__sflush_r+0xf0>
    7268:	28c00117 	ldw	r3,4(r5)
    726c:	10820014 	ori	r2,r2,2048
    7270:	2880030d 	sth	r2,12(r5)
    7274:	00c04b0e 	bge	zero,r3,73a4 <__sflush_r+0x168>
    7278:	8a000a17 	ldw	r8,40(r17)
    727c:	40002326 	beq	r8,zero,730c <__sflush_r+0xd0>
    7280:	9c000017 	ldw	r16,0(r19)
    7284:	10c4000c 	andi	r3,r2,4096
    7288:	98000015 	stw	zero,0(r19)
    728c:	18004826 	beq	r3,zero,73b0 <__sflush_r+0x174>
    7290:	89801417 	ldw	r6,80(r17)
    7294:	10c0010c 	andi	r3,r2,4
    7298:	18000626 	beq	r3,zero,72b4 <__sflush_r+0x78>
    729c:	88c00117 	ldw	r3,4(r17)
    72a0:	88800c17 	ldw	r2,48(r17)
    72a4:	30cdc83a 	sub	r6,r6,r3
    72a8:	10000226 	beq	r2,zero,72b4 <__sflush_r+0x78>
    72ac:	88800f17 	ldw	r2,60(r17)
    72b0:	308dc83a 	sub	r6,r6,r2
    72b4:	89400717 	ldw	r5,28(r17)
    72b8:	000f883a 	mov	r7,zero
    72bc:	9809883a 	mov	r4,r19
    72c0:	403ee83a 	callr	r8
    72c4:	00ffffc4 	movi	r3,-1
    72c8:	10c04426 	beq	r2,r3,73dc <__sflush_r+0x1a0>
    72cc:	88c0030b 	ldhu	r3,12(r17)
    72d0:	89000417 	ldw	r4,16(r17)
    72d4:	88000115 	stw	zero,4(r17)
    72d8:	197dffcc 	andi	r5,r3,63487
    72dc:	8940030d 	sth	r5,12(r17)
    72e0:	89000015 	stw	r4,0(r17)
    72e4:	18c4000c 	andi	r3,r3,4096
    72e8:	18002c1e 	bne	r3,zero,739c <__sflush_r+0x160>
    72ec:	89400c17 	ldw	r5,48(r17)
    72f0:	9c000015 	stw	r16,0(r19)
    72f4:	28000526 	beq	r5,zero,730c <__sflush_r+0xd0>
    72f8:	88801004 	addi	r2,r17,64
    72fc:	28800226 	beq	r5,r2,7308 <__sflush_r+0xcc>
    7300:	9809883a 	mov	r4,r19
    7304:	00079a80 	call	79a8 <_free_r>
    7308:	88000c15 	stw	zero,48(r17)
    730c:	0005883a 	mov	r2,zero
    7310:	dfc00417 	ldw	ra,16(sp)
    7314:	dcc00317 	ldw	r19,12(sp)
    7318:	dc800217 	ldw	r18,8(sp)
    731c:	dc400117 	ldw	r17,4(sp)
    7320:	dc000017 	ldw	r16,0(sp)
    7324:	dec00504 	addi	sp,sp,20
    7328:	f800283a 	ret
    732c:	2c800417 	ldw	r18,16(r5)
    7330:	903ff626 	beq	r18,zero,730c <__alt_data_end+0xff00730c>
    7334:	2c000017 	ldw	r16,0(r5)
    7338:	108000cc 	andi	r2,r2,3
    733c:	2c800015 	stw	r18,0(r5)
    7340:	84a1c83a 	sub	r16,r16,r18
    7344:	1000131e 	bne	r2,zero,7394 <__sflush_r+0x158>
    7348:	28800517 	ldw	r2,20(r5)
    734c:	88800215 	stw	r2,8(r17)
    7350:	04000316 	blt	zero,r16,7360 <__sflush_r+0x124>
    7354:	003fed06 	br	730c <__alt_data_end+0xff00730c>
    7358:	90a5883a 	add	r18,r18,r2
    735c:	043feb0e 	bge	zero,r16,730c <__alt_data_end+0xff00730c>
    7360:	88800917 	ldw	r2,36(r17)
    7364:	89400717 	ldw	r5,28(r17)
    7368:	800f883a 	mov	r7,r16
    736c:	900d883a 	mov	r6,r18
    7370:	9809883a 	mov	r4,r19
    7374:	103ee83a 	callr	r2
    7378:	80a1c83a 	sub	r16,r16,r2
    737c:	00bff616 	blt	zero,r2,7358 <__alt_data_end+0xff007358>
    7380:	88c0030b 	ldhu	r3,12(r17)
    7384:	00bfffc4 	movi	r2,-1
    7388:	18c01014 	ori	r3,r3,64
    738c:	88c0030d 	sth	r3,12(r17)
    7390:	003fdf06 	br	7310 <__alt_data_end+0xff007310>
    7394:	0005883a 	mov	r2,zero
    7398:	003fec06 	br	734c <__alt_data_end+0xff00734c>
    739c:	88801415 	stw	r2,80(r17)
    73a0:	003fd206 	br	72ec <__alt_data_end+0xff0072ec>
    73a4:	28c00f17 	ldw	r3,60(r5)
    73a8:	00ffb316 	blt	zero,r3,7278 <__alt_data_end+0xff007278>
    73ac:	003fd706 	br	730c <__alt_data_end+0xff00730c>
    73b0:	89400717 	ldw	r5,28(r17)
    73b4:	000d883a 	mov	r6,zero
    73b8:	01c00044 	movi	r7,1
    73bc:	9809883a 	mov	r4,r19
    73c0:	403ee83a 	callr	r8
    73c4:	100d883a 	mov	r6,r2
    73c8:	00bfffc4 	movi	r2,-1
    73cc:	30801426 	beq	r6,r2,7420 <__sflush_r+0x1e4>
    73d0:	8880030b 	ldhu	r2,12(r17)
    73d4:	8a000a17 	ldw	r8,40(r17)
    73d8:	003fae06 	br	7294 <__alt_data_end+0xff007294>
    73dc:	98c00017 	ldw	r3,0(r19)
    73e0:	183fba26 	beq	r3,zero,72cc <__alt_data_end+0xff0072cc>
    73e4:	01000744 	movi	r4,29
    73e8:	19000626 	beq	r3,r4,7404 <__sflush_r+0x1c8>
    73ec:	01000584 	movi	r4,22
    73f0:	19000426 	beq	r3,r4,7404 <__sflush_r+0x1c8>
    73f4:	88c0030b 	ldhu	r3,12(r17)
    73f8:	18c01014 	ori	r3,r3,64
    73fc:	88c0030d 	sth	r3,12(r17)
    7400:	003fc306 	br	7310 <__alt_data_end+0xff007310>
    7404:	8880030b 	ldhu	r2,12(r17)
    7408:	88c00417 	ldw	r3,16(r17)
    740c:	88000115 	stw	zero,4(r17)
    7410:	10bdffcc 	andi	r2,r2,63487
    7414:	8880030d 	sth	r2,12(r17)
    7418:	88c00015 	stw	r3,0(r17)
    741c:	003fb306 	br	72ec <__alt_data_end+0xff0072ec>
    7420:	98800017 	ldw	r2,0(r19)
    7424:	103fea26 	beq	r2,zero,73d0 <__alt_data_end+0xff0073d0>
    7428:	00c00744 	movi	r3,29
    742c:	10c00226 	beq	r2,r3,7438 <__sflush_r+0x1fc>
    7430:	00c00584 	movi	r3,22
    7434:	10c0031e 	bne	r2,r3,7444 <__sflush_r+0x208>
    7438:	9c000015 	stw	r16,0(r19)
    743c:	0005883a 	mov	r2,zero
    7440:	003fb306 	br	7310 <__alt_data_end+0xff007310>
    7444:	88c0030b 	ldhu	r3,12(r17)
    7448:	3005883a 	mov	r2,r6
    744c:	18c01014 	ori	r3,r3,64
    7450:	88c0030d 	sth	r3,12(r17)
    7454:	003fae06 	br	7310 <__alt_data_end+0xff007310>

00007458 <_fflush_r>:
    7458:	defffd04 	addi	sp,sp,-12
    745c:	dc000115 	stw	r16,4(sp)
    7460:	dfc00215 	stw	ra,8(sp)
    7464:	2021883a 	mov	r16,r4
    7468:	20000226 	beq	r4,zero,7474 <_fflush_r+0x1c>
    746c:	20800e17 	ldw	r2,56(r4)
    7470:	10000c26 	beq	r2,zero,74a4 <_fflush_r+0x4c>
    7474:	2880030f 	ldh	r2,12(r5)
    7478:	1000051e 	bne	r2,zero,7490 <_fflush_r+0x38>
    747c:	0005883a 	mov	r2,zero
    7480:	dfc00217 	ldw	ra,8(sp)
    7484:	dc000117 	ldw	r16,4(sp)
    7488:	dec00304 	addi	sp,sp,12
    748c:	f800283a 	ret
    7490:	8009883a 	mov	r4,r16
    7494:	dfc00217 	ldw	ra,8(sp)
    7498:	dc000117 	ldw	r16,4(sp)
    749c:	dec00304 	addi	sp,sp,12
    74a0:	000723c1 	jmpi	723c <__sflush_r>
    74a4:	d9400015 	stw	r5,0(sp)
    74a8:	00078340 	call	7834 <__sinit>
    74ac:	d9400017 	ldw	r5,0(sp)
    74b0:	003ff006 	br	7474 <__alt_data_end+0xff007474>

000074b4 <fflush>:
    74b4:	20000526 	beq	r4,zero,74cc <fflush+0x18>
    74b8:	00800074 	movhi	r2,1
    74bc:	108fe904 	addi	r2,r2,16292
    74c0:	200b883a 	mov	r5,r4
    74c4:	11000017 	ldw	r4,0(r2)
    74c8:	00074581 	jmpi	7458 <_fflush_r>
    74cc:	00800074 	movhi	r2,1
    74d0:	108fe804 	addi	r2,r2,16288
    74d4:	11000017 	ldw	r4,0(r2)
    74d8:	01400034 	movhi	r5,0
    74dc:	295d1604 	addi	r5,r5,29784
    74e0:	00082381 	jmpi	8238 <_fwalk_reent>

000074e4 <__fp_unlock>:
    74e4:	0005883a 	mov	r2,zero
    74e8:	f800283a 	ret

000074ec <_cleanup_r>:
    74ec:	01400074 	movhi	r5,1
    74f0:	296e2a04 	addi	r5,r5,-18264
    74f4:	00082381 	jmpi	8238 <_fwalk_reent>

000074f8 <__sinit.part.1>:
    74f8:	defff704 	addi	sp,sp,-36
    74fc:	00c00034 	movhi	r3,0
    7500:	dfc00815 	stw	ra,32(sp)
    7504:	ddc00715 	stw	r23,28(sp)
    7508:	dd800615 	stw	r22,24(sp)
    750c:	dd400515 	stw	r21,20(sp)
    7510:	dd000415 	stw	r20,16(sp)
    7514:	dcc00315 	stw	r19,12(sp)
    7518:	dc800215 	stw	r18,8(sp)
    751c:	dc400115 	stw	r17,4(sp)
    7520:	dc000015 	stw	r16,0(sp)
    7524:	18dd3b04 	addi	r3,r3,29932
    7528:	24000117 	ldw	r16,4(r4)
    752c:	20c00f15 	stw	r3,60(r4)
    7530:	2080bb04 	addi	r2,r4,748
    7534:	00c000c4 	movi	r3,3
    7538:	20c0b915 	stw	r3,740(r4)
    753c:	2080ba15 	stw	r2,744(r4)
    7540:	2000b815 	stw	zero,736(r4)
    7544:	05c00204 	movi	r23,8
    7548:	00800104 	movi	r2,4
    754c:	2025883a 	mov	r18,r4
    7550:	b80d883a 	mov	r6,r23
    7554:	81001704 	addi	r4,r16,92
    7558:	000b883a 	mov	r5,zero
    755c:	80000015 	stw	zero,0(r16)
    7560:	80000115 	stw	zero,4(r16)
    7564:	80000215 	stw	zero,8(r16)
    7568:	8080030d 	sth	r2,12(r16)
    756c:	80001915 	stw	zero,100(r16)
    7570:	8000038d 	sth	zero,14(r16)
    7574:	80000415 	stw	zero,16(r16)
    7578:	80000515 	stw	zero,20(r16)
    757c:	80000615 	stw	zero,24(r16)
    7580:	00087d40 	call	87d4 <memset>
    7584:	05800074 	movhi	r22,1
    7588:	94400217 	ldw	r17,8(r18)
    758c:	05400074 	movhi	r21,1
    7590:	05000074 	movhi	r20,1
    7594:	04c00074 	movhi	r19,1
    7598:	b5a7b404 	addi	r22,r22,-24880
    759c:	ad67cb04 	addi	r21,r21,-24788
    75a0:	a527ea04 	addi	r20,r20,-24664
    75a4:	9ce80104 	addi	r19,r19,-24572
    75a8:	85800815 	stw	r22,32(r16)
    75ac:	85400915 	stw	r21,36(r16)
    75b0:	85000a15 	stw	r20,40(r16)
    75b4:	84c00b15 	stw	r19,44(r16)
    75b8:	84000715 	stw	r16,28(r16)
    75bc:	00800284 	movi	r2,10
    75c0:	8880030d 	sth	r2,12(r17)
    75c4:	00800044 	movi	r2,1
    75c8:	b80d883a 	mov	r6,r23
    75cc:	89001704 	addi	r4,r17,92
    75d0:	000b883a 	mov	r5,zero
    75d4:	88000015 	stw	zero,0(r17)
    75d8:	88000115 	stw	zero,4(r17)
    75dc:	88000215 	stw	zero,8(r17)
    75e0:	88001915 	stw	zero,100(r17)
    75e4:	8880038d 	sth	r2,14(r17)
    75e8:	88000415 	stw	zero,16(r17)
    75ec:	88000515 	stw	zero,20(r17)
    75f0:	88000615 	stw	zero,24(r17)
    75f4:	00087d40 	call	87d4 <memset>
    75f8:	94000317 	ldw	r16,12(r18)
    75fc:	00800484 	movi	r2,18
    7600:	8c400715 	stw	r17,28(r17)
    7604:	8d800815 	stw	r22,32(r17)
    7608:	8d400915 	stw	r21,36(r17)
    760c:	8d000a15 	stw	r20,40(r17)
    7610:	8cc00b15 	stw	r19,44(r17)
    7614:	8080030d 	sth	r2,12(r16)
    7618:	00800084 	movi	r2,2
    761c:	80000015 	stw	zero,0(r16)
    7620:	80000115 	stw	zero,4(r16)
    7624:	80000215 	stw	zero,8(r16)
    7628:	80001915 	stw	zero,100(r16)
    762c:	8080038d 	sth	r2,14(r16)
    7630:	80000415 	stw	zero,16(r16)
    7634:	80000515 	stw	zero,20(r16)
    7638:	80000615 	stw	zero,24(r16)
    763c:	b80d883a 	mov	r6,r23
    7640:	000b883a 	mov	r5,zero
    7644:	81001704 	addi	r4,r16,92
    7648:	00087d40 	call	87d4 <memset>
    764c:	00800044 	movi	r2,1
    7650:	84000715 	stw	r16,28(r16)
    7654:	85800815 	stw	r22,32(r16)
    7658:	85400915 	stw	r21,36(r16)
    765c:	85000a15 	stw	r20,40(r16)
    7660:	84c00b15 	stw	r19,44(r16)
    7664:	90800e15 	stw	r2,56(r18)
    7668:	dfc00817 	ldw	ra,32(sp)
    766c:	ddc00717 	ldw	r23,28(sp)
    7670:	dd800617 	ldw	r22,24(sp)
    7674:	dd400517 	ldw	r21,20(sp)
    7678:	dd000417 	ldw	r20,16(sp)
    767c:	dcc00317 	ldw	r19,12(sp)
    7680:	dc800217 	ldw	r18,8(sp)
    7684:	dc400117 	ldw	r17,4(sp)
    7688:	dc000017 	ldw	r16,0(sp)
    768c:	dec00904 	addi	sp,sp,36
    7690:	f800283a 	ret

00007694 <__fp_lock>:
    7694:	0005883a 	mov	r2,zero
    7698:	f800283a 	ret

0000769c <__sfmoreglue>:
    769c:	defffc04 	addi	sp,sp,-16
    76a0:	dc400115 	stw	r17,4(sp)
    76a4:	2c7fffc4 	addi	r17,r5,-1
    76a8:	8c401a24 	muli	r17,r17,104
    76ac:	dc800215 	stw	r18,8(sp)
    76b0:	2825883a 	mov	r18,r5
    76b4:	89401d04 	addi	r5,r17,116
    76b8:	dc000015 	stw	r16,0(sp)
    76bc:	dfc00315 	stw	ra,12(sp)
    76c0:	0002a100 	call	2a10 <_malloc_r>
    76c4:	1021883a 	mov	r16,r2
    76c8:	10000726 	beq	r2,zero,76e8 <__sfmoreglue+0x4c>
    76cc:	11000304 	addi	r4,r2,12
    76d0:	10000015 	stw	zero,0(r2)
    76d4:	14800115 	stw	r18,4(r2)
    76d8:	11000215 	stw	r4,8(r2)
    76dc:	89801a04 	addi	r6,r17,104
    76e0:	000b883a 	mov	r5,zero
    76e4:	00087d40 	call	87d4 <memset>
    76e8:	8005883a 	mov	r2,r16
    76ec:	dfc00317 	ldw	ra,12(sp)
    76f0:	dc800217 	ldw	r18,8(sp)
    76f4:	dc400117 	ldw	r17,4(sp)
    76f8:	dc000017 	ldw	r16,0(sp)
    76fc:	dec00404 	addi	sp,sp,16
    7700:	f800283a 	ret

00007704 <__sfp>:
    7704:	defffb04 	addi	sp,sp,-20
    7708:	dc000015 	stw	r16,0(sp)
    770c:	04000074 	movhi	r16,1
    7710:	840fe804 	addi	r16,r16,16288
    7714:	dcc00315 	stw	r19,12(sp)
    7718:	2027883a 	mov	r19,r4
    771c:	81000017 	ldw	r4,0(r16)
    7720:	dfc00415 	stw	ra,16(sp)
    7724:	dc800215 	stw	r18,8(sp)
    7728:	20800e17 	ldw	r2,56(r4)
    772c:	dc400115 	stw	r17,4(sp)
    7730:	1000021e 	bne	r2,zero,773c <__sfp+0x38>
    7734:	00074f80 	call	74f8 <__sinit.part.1>
    7738:	81000017 	ldw	r4,0(r16)
    773c:	2480b804 	addi	r18,r4,736
    7740:	047fffc4 	movi	r17,-1
    7744:	91000117 	ldw	r4,4(r18)
    7748:	94000217 	ldw	r16,8(r18)
    774c:	213fffc4 	addi	r4,r4,-1
    7750:	20000a16 	blt	r4,zero,777c <__sfp+0x78>
    7754:	8080030f 	ldh	r2,12(r16)
    7758:	10000c26 	beq	r2,zero,778c <__sfp+0x88>
    775c:	80c01d04 	addi	r3,r16,116
    7760:	00000206 	br	776c <__sfp+0x68>
    7764:	18bfe60f 	ldh	r2,-104(r3)
    7768:	10000826 	beq	r2,zero,778c <__sfp+0x88>
    776c:	213fffc4 	addi	r4,r4,-1
    7770:	1c3ffd04 	addi	r16,r3,-12
    7774:	18c01a04 	addi	r3,r3,104
    7778:	247ffa1e 	bne	r4,r17,7764 <__alt_data_end+0xff007764>
    777c:	90800017 	ldw	r2,0(r18)
    7780:	10001d26 	beq	r2,zero,77f8 <__sfp+0xf4>
    7784:	1025883a 	mov	r18,r2
    7788:	003fee06 	br	7744 <__alt_data_end+0xff007744>
    778c:	00bfffc4 	movi	r2,-1
    7790:	8080038d 	sth	r2,14(r16)
    7794:	00800044 	movi	r2,1
    7798:	8080030d 	sth	r2,12(r16)
    779c:	80001915 	stw	zero,100(r16)
    77a0:	80000015 	stw	zero,0(r16)
    77a4:	80000215 	stw	zero,8(r16)
    77a8:	80000115 	stw	zero,4(r16)
    77ac:	80000415 	stw	zero,16(r16)
    77b0:	80000515 	stw	zero,20(r16)
    77b4:	80000615 	stw	zero,24(r16)
    77b8:	01800204 	movi	r6,8
    77bc:	000b883a 	mov	r5,zero
    77c0:	81001704 	addi	r4,r16,92
    77c4:	00087d40 	call	87d4 <memset>
    77c8:	8005883a 	mov	r2,r16
    77cc:	80000c15 	stw	zero,48(r16)
    77d0:	80000d15 	stw	zero,52(r16)
    77d4:	80001115 	stw	zero,68(r16)
    77d8:	80001215 	stw	zero,72(r16)
    77dc:	dfc00417 	ldw	ra,16(sp)
    77e0:	dcc00317 	ldw	r19,12(sp)
    77e4:	dc800217 	ldw	r18,8(sp)
    77e8:	dc400117 	ldw	r17,4(sp)
    77ec:	dc000017 	ldw	r16,0(sp)
    77f0:	dec00504 	addi	sp,sp,20
    77f4:	f800283a 	ret
    77f8:	01400104 	movi	r5,4
    77fc:	9809883a 	mov	r4,r19
    7800:	000769c0 	call	769c <__sfmoreglue>
    7804:	90800015 	stw	r2,0(r18)
    7808:	103fde1e 	bne	r2,zero,7784 <__alt_data_end+0xff007784>
    780c:	00800304 	movi	r2,12
    7810:	98800015 	stw	r2,0(r19)
    7814:	0005883a 	mov	r2,zero
    7818:	003ff006 	br	77dc <__alt_data_end+0xff0077dc>

0000781c <_cleanup>:
    781c:	00800074 	movhi	r2,1
    7820:	108fe804 	addi	r2,r2,16288
    7824:	11000017 	ldw	r4,0(r2)
    7828:	01400074 	movhi	r5,1
    782c:	296e2a04 	addi	r5,r5,-18264
    7830:	00082381 	jmpi	8238 <_fwalk_reent>

00007834 <__sinit>:
    7834:	20800e17 	ldw	r2,56(r4)
    7838:	10000126 	beq	r2,zero,7840 <__sinit+0xc>
    783c:	f800283a 	ret
    7840:	00074f81 	jmpi	74f8 <__sinit.part.1>

00007844 <__sfp_lock_acquire>:
    7844:	f800283a 	ret

00007848 <__sfp_lock_release>:
    7848:	f800283a 	ret

0000784c <__sinit_lock_acquire>:
    784c:	f800283a 	ret

00007850 <__sinit_lock_release>:
    7850:	f800283a 	ret

00007854 <__fp_lock_all>:
    7854:	00800074 	movhi	r2,1
    7858:	108fe904 	addi	r2,r2,16292
    785c:	11000017 	ldw	r4,0(r2)
    7860:	01400034 	movhi	r5,0
    7864:	295da504 	addi	r5,r5,30356
    7868:	00081741 	jmpi	8174 <_fwalk>

0000786c <__fp_unlock_all>:
    786c:	00800074 	movhi	r2,1
    7870:	108fe904 	addi	r2,r2,16292
    7874:	11000017 	ldw	r4,0(r2)
    7878:	01400034 	movhi	r5,0
    787c:	295d3904 	addi	r5,r5,29924
    7880:	00081741 	jmpi	8174 <_fwalk>

00007884 <_malloc_trim_r>:
    7884:	defffb04 	addi	sp,sp,-20
    7888:	dcc00315 	stw	r19,12(sp)
    788c:	04c00074 	movhi	r19,1
    7890:	dc800215 	stw	r18,8(sp)
    7894:	dc400115 	stw	r17,4(sp)
    7898:	dc000015 	stw	r16,0(sp)
    789c:	dfc00415 	stw	ra,16(sp)
    78a0:	2821883a 	mov	r16,r5
    78a4:	9cc93b04 	addi	r19,r19,9452
    78a8:	2025883a 	mov	r18,r4
    78ac:	000f8480 	call	f848 <__malloc_lock>
    78b0:	98800217 	ldw	r2,8(r19)
    78b4:	14400117 	ldw	r17,4(r2)
    78b8:	00bfff04 	movi	r2,-4
    78bc:	88a2703a 	and	r17,r17,r2
    78c0:	8c21c83a 	sub	r16,r17,r16
    78c4:	8403fbc4 	addi	r16,r16,4079
    78c8:	8020d33a 	srli	r16,r16,12
    78cc:	0083ffc4 	movi	r2,4095
    78d0:	843fffc4 	addi	r16,r16,-1
    78d4:	8020933a 	slli	r16,r16,12
    78d8:	1400060e 	bge	r2,r16,78f4 <_malloc_trim_r+0x70>
    78dc:	000b883a 	mov	r5,zero
    78e0:	9009883a 	mov	r4,r18
    78e4:	00034a40 	call	34a4 <_sbrk_r>
    78e8:	98c00217 	ldw	r3,8(r19)
    78ec:	1c47883a 	add	r3,r3,r17
    78f0:	10c00a26 	beq	r2,r3,791c <_malloc_trim_r+0x98>
    78f4:	9009883a 	mov	r4,r18
    78f8:	000f86c0 	call	f86c <__malloc_unlock>
    78fc:	0005883a 	mov	r2,zero
    7900:	dfc00417 	ldw	ra,16(sp)
    7904:	dcc00317 	ldw	r19,12(sp)
    7908:	dc800217 	ldw	r18,8(sp)
    790c:	dc400117 	ldw	r17,4(sp)
    7910:	dc000017 	ldw	r16,0(sp)
    7914:	dec00504 	addi	sp,sp,20
    7918:	f800283a 	ret
    791c:	040bc83a 	sub	r5,zero,r16
    7920:	9009883a 	mov	r4,r18
    7924:	00034a40 	call	34a4 <_sbrk_r>
    7928:	00ffffc4 	movi	r3,-1
    792c:	10c00d26 	beq	r2,r3,7964 <_malloc_trim_r+0xe0>
    7930:	00c00074 	movhi	r3,1
    7934:	18d6cb04 	addi	r3,r3,23340
    7938:	18800017 	ldw	r2,0(r3)
    793c:	99000217 	ldw	r4,8(r19)
    7940:	8c23c83a 	sub	r17,r17,r16
    7944:	8c400054 	ori	r17,r17,1
    7948:	1421c83a 	sub	r16,r2,r16
    794c:	24400115 	stw	r17,4(r4)
    7950:	9009883a 	mov	r4,r18
    7954:	1c000015 	stw	r16,0(r3)
    7958:	000f86c0 	call	f86c <__malloc_unlock>
    795c:	00800044 	movi	r2,1
    7960:	003fe706 	br	7900 <__alt_data_end+0xff007900>
    7964:	000b883a 	mov	r5,zero
    7968:	9009883a 	mov	r4,r18
    796c:	00034a40 	call	34a4 <_sbrk_r>
    7970:	99000217 	ldw	r4,8(r19)
    7974:	014003c4 	movi	r5,15
    7978:	1107c83a 	sub	r3,r2,r4
    797c:	28ffdd0e 	bge	r5,r3,78f4 <__alt_data_end+0xff0078f4>
    7980:	01400074 	movhi	r5,1
    7984:	294fe604 	addi	r5,r5,16280
    7988:	29400017 	ldw	r5,0(r5)
    798c:	18c00054 	ori	r3,r3,1
    7990:	20c00115 	stw	r3,4(r4)
    7994:	00c00074 	movhi	r3,1
    7998:	1145c83a 	sub	r2,r2,r5
    799c:	18d6cb04 	addi	r3,r3,23340
    79a0:	18800015 	stw	r2,0(r3)
    79a4:	003fd306 	br	78f4 <__alt_data_end+0xff0078f4>

000079a8 <_free_r>:
    79a8:	28004126 	beq	r5,zero,7ab0 <_free_r+0x108>
    79ac:	defffd04 	addi	sp,sp,-12
    79b0:	dc400115 	stw	r17,4(sp)
    79b4:	dc000015 	stw	r16,0(sp)
    79b8:	2023883a 	mov	r17,r4
    79bc:	2821883a 	mov	r16,r5
    79c0:	dfc00215 	stw	ra,8(sp)
    79c4:	000f8480 	call	f848 <__malloc_lock>
    79c8:	81ffff17 	ldw	r7,-4(r16)
    79cc:	00bfff84 	movi	r2,-2
    79d0:	01000074 	movhi	r4,1
    79d4:	81bffe04 	addi	r6,r16,-8
    79d8:	3884703a 	and	r2,r7,r2
    79dc:	21093b04 	addi	r4,r4,9452
    79e0:	308b883a 	add	r5,r6,r2
    79e4:	2a400117 	ldw	r9,4(r5)
    79e8:	22000217 	ldw	r8,8(r4)
    79ec:	00ffff04 	movi	r3,-4
    79f0:	48c6703a 	and	r3,r9,r3
    79f4:	2a005726 	beq	r5,r8,7b54 <_free_r+0x1ac>
    79f8:	28c00115 	stw	r3,4(r5)
    79fc:	39c0004c 	andi	r7,r7,1
    7a00:	3800091e 	bne	r7,zero,7a28 <_free_r+0x80>
    7a04:	823ffe17 	ldw	r8,-8(r16)
    7a08:	22400204 	addi	r9,r4,8
    7a0c:	320dc83a 	sub	r6,r6,r8
    7a10:	31c00217 	ldw	r7,8(r6)
    7a14:	1205883a 	add	r2,r2,r8
    7a18:	3a406526 	beq	r7,r9,7bb0 <_free_r+0x208>
    7a1c:	32000317 	ldw	r8,12(r6)
    7a20:	3a000315 	stw	r8,12(r7)
    7a24:	41c00215 	stw	r7,8(r8)
    7a28:	28cf883a 	add	r7,r5,r3
    7a2c:	39c00117 	ldw	r7,4(r7)
    7a30:	39c0004c 	andi	r7,r7,1
    7a34:	38003a26 	beq	r7,zero,7b20 <_free_r+0x178>
    7a38:	10c00054 	ori	r3,r2,1
    7a3c:	30c00115 	stw	r3,4(r6)
    7a40:	3087883a 	add	r3,r6,r2
    7a44:	18800015 	stw	r2,0(r3)
    7a48:	00c07fc4 	movi	r3,511
    7a4c:	18801936 	bltu	r3,r2,7ab4 <_free_r+0x10c>
    7a50:	1004d0fa 	srli	r2,r2,3
    7a54:	01c00044 	movi	r7,1
    7a58:	21400117 	ldw	r5,4(r4)
    7a5c:	10c00044 	addi	r3,r2,1
    7a60:	18c7883a 	add	r3,r3,r3
    7a64:	1005d0ba 	srai	r2,r2,2
    7a68:	18c7883a 	add	r3,r3,r3
    7a6c:	18c7883a 	add	r3,r3,r3
    7a70:	1907883a 	add	r3,r3,r4
    7a74:	3884983a 	sll	r2,r7,r2
    7a78:	19c00017 	ldw	r7,0(r3)
    7a7c:	1a3ffe04 	addi	r8,r3,-8
    7a80:	1144b03a 	or	r2,r2,r5
    7a84:	32000315 	stw	r8,12(r6)
    7a88:	31c00215 	stw	r7,8(r6)
    7a8c:	20800115 	stw	r2,4(r4)
    7a90:	19800015 	stw	r6,0(r3)
    7a94:	39800315 	stw	r6,12(r7)
    7a98:	8809883a 	mov	r4,r17
    7a9c:	dfc00217 	ldw	ra,8(sp)
    7aa0:	dc400117 	ldw	r17,4(sp)
    7aa4:	dc000017 	ldw	r16,0(sp)
    7aa8:	dec00304 	addi	sp,sp,12
    7aac:	000f86c1 	jmpi	f86c <__malloc_unlock>
    7ab0:	f800283a 	ret
    7ab4:	100ad27a 	srli	r5,r2,9
    7ab8:	00c00104 	movi	r3,4
    7abc:	19404a36 	bltu	r3,r5,7be8 <_free_r+0x240>
    7ac0:	100ad1ba 	srli	r5,r2,6
    7ac4:	28c00e44 	addi	r3,r5,57
    7ac8:	18c7883a 	add	r3,r3,r3
    7acc:	29400e04 	addi	r5,r5,56
    7ad0:	18c7883a 	add	r3,r3,r3
    7ad4:	18c7883a 	add	r3,r3,r3
    7ad8:	1909883a 	add	r4,r3,r4
    7adc:	20c00017 	ldw	r3,0(r4)
    7ae0:	01c00074 	movhi	r7,1
    7ae4:	213ffe04 	addi	r4,r4,-8
    7ae8:	39c93b04 	addi	r7,r7,9452
    7aec:	20c04426 	beq	r4,r3,7c00 <_free_r+0x258>
    7af0:	01ffff04 	movi	r7,-4
    7af4:	19400117 	ldw	r5,4(r3)
    7af8:	29ca703a 	and	r5,r5,r7
    7afc:	1140022e 	bgeu	r2,r5,7b08 <_free_r+0x160>
    7b00:	18c00217 	ldw	r3,8(r3)
    7b04:	20fffb1e 	bne	r4,r3,7af4 <__alt_data_end+0xff007af4>
    7b08:	19000317 	ldw	r4,12(r3)
    7b0c:	31000315 	stw	r4,12(r6)
    7b10:	30c00215 	stw	r3,8(r6)
    7b14:	21800215 	stw	r6,8(r4)
    7b18:	19800315 	stw	r6,12(r3)
    7b1c:	003fde06 	br	7a98 <__alt_data_end+0xff007a98>
    7b20:	29c00217 	ldw	r7,8(r5)
    7b24:	10c5883a 	add	r2,r2,r3
    7b28:	00c00074 	movhi	r3,1
    7b2c:	18c93d04 	addi	r3,r3,9460
    7b30:	38c03b26 	beq	r7,r3,7c20 <_free_r+0x278>
    7b34:	2a000317 	ldw	r8,12(r5)
    7b38:	11400054 	ori	r5,r2,1
    7b3c:	3087883a 	add	r3,r6,r2
    7b40:	3a000315 	stw	r8,12(r7)
    7b44:	41c00215 	stw	r7,8(r8)
    7b48:	31400115 	stw	r5,4(r6)
    7b4c:	18800015 	stw	r2,0(r3)
    7b50:	003fbd06 	br	7a48 <__alt_data_end+0xff007a48>
    7b54:	39c0004c 	andi	r7,r7,1
    7b58:	10c5883a 	add	r2,r2,r3
    7b5c:	3800071e 	bne	r7,zero,7b7c <_free_r+0x1d4>
    7b60:	81fffe17 	ldw	r7,-8(r16)
    7b64:	31cdc83a 	sub	r6,r6,r7
    7b68:	30c00317 	ldw	r3,12(r6)
    7b6c:	31400217 	ldw	r5,8(r6)
    7b70:	11c5883a 	add	r2,r2,r7
    7b74:	28c00315 	stw	r3,12(r5)
    7b78:	19400215 	stw	r5,8(r3)
    7b7c:	10c00054 	ori	r3,r2,1
    7b80:	30c00115 	stw	r3,4(r6)
    7b84:	00c00074 	movhi	r3,1
    7b88:	18cfe704 	addi	r3,r3,16284
    7b8c:	18c00017 	ldw	r3,0(r3)
    7b90:	21800215 	stw	r6,8(r4)
    7b94:	10ffc036 	bltu	r2,r3,7a98 <__alt_data_end+0xff007a98>
    7b98:	00800074 	movhi	r2,1
    7b9c:	1096bd04 	addi	r2,r2,23284
    7ba0:	11400017 	ldw	r5,0(r2)
    7ba4:	8809883a 	mov	r4,r17
    7ba8:	00078840 	call	7884 <_malloc_trim_r>
    7bac:	003fba06 	br	7a98 <__alt_data_end+0xff007a98>
    7bb0:	28c9883a 	add	r4,r5,r3
    7bb4:	21000117 	ldw	r4,4(r4)
    7bb8:	2100004c 	andi	r4,r4,1
    7bbc:	2000391e 	bne	r4,zero,7ca4 <_free_r+0x2fc>
    7bc0:	29c00217 	ldw	r7,8(r5)
    7bc4:	29000317 	ldw	r4,12(r5)
    7bc8:	1885883a 	add	r2,r3,r2
    7bcc:	10c00054 	ori	r3,r2,1
    7bd0:	39000315 	stw	r4,12(r7)
    7bd4:	21c00215 	stw	r7,8(r4)
    7bd8:	30c00115 	stw	r3,4(r6)
    7bdc:	308d883a 	add	r6,r6,r2
    7be0:	30800015 	stw	r2,0(r6)
    7be4:	003fac06 	br	7a98 <__alt_data_end+0xff007a98>
    7be8:	00c00504 	movi	r3,20
    7bec:	19401536 	bltu	r3,r5,7c44 <_free_r+0x29c>
    7bf0:	28c01704 	addi	r3,r5,92
    7bf4:	18c7883a 	add	r3,r3,r3
    7bf8:	294016c4 	addi	r5,r5,91
    7bfc:	003fb406 	br	7ad0 <__alt_data_end+0xff007ad0>
    7c00:	280bd0ba 	srai	r5,r5,2
    7c04:	00c00044 	movi	r3,1
    7c08:	38800117 	ldw	r2,4(r7)
    7c0c:	194a983a 	sll	r5,r3,r5
    7c10:	2007883a 	mov	r3,r4
    7c14:	2884b03a 	or	r2,r5,r2
    7c18:	38800115 	stw	r2,4(r7)
    7c1c:	003fbb06 	br	7b0c <__alt_data_end+0xff007b0c>
    7c20:	21800515 	stw	r6,20(r4)
    7c24:	21800415 	stw	r6,16(r4)
    7c28:	10c00054 	ori	r3,r2,1
    7c2c:	31c00315 	stw	r7,12(r6)
    7c30:	31c00215 	stw	r7,8(r6)
    7c34:	30c00115 	stw	r3,4(r6)
    7c38:	308d883a 	add	r6,r6,r2
    7c3c:	30800015 	stw	r2,0(r6)
    7c40:	003f9506 	br	7a98 <__alt_data_end+0xff007a98>
    7c44:	00c01504 	movi	r3,84
    7c48:	19400536 	bltu	r3,r5,7c60 <_free_r+0x2b8>
    7c4c:	100ad33a 	srli	r5,r2,12
    7c50:	28c01bc4 	addi	r3,r5,111
    7c54:	18c7883a 	add	r3,r3,r3
    7c58:	29401b84 	addi	r5,r5,110
    7c5c:	003f9c06 	br	7ad0 <__alt_data_end+0xff007ad0>
    7c60:	00c05504 	movi	r3,340
    7c64:	19400536 	bltu	r3,r5,7c7c <_free_r+0x2d4>
    7c68:	100ad3fa 	srli	r5,r2,15
    7c6c:	28c01e04 	addi	r3,r5,120
    7c70:	18c7883a 	add	r3,r3,r3
    7c74:	29401dc4 	addi	r5,r5,119
    7c78:	003f9506 	br	7ad0 <__alt_data_end+0xff007ad0>
    7c7c:	00c15504 	movi	r3,1364
    7c80:	19400536 	bltu	r3,r5,7c98 <_free_r+0x2f0>
    7c84:	100ad4ba 	srli	r5,r2,18
    7c88:	28c01f44 	addi	r3,r5,125
    7c8c:	18c7883a 	add	r3,r3,r3
    7c90:	29401f04 	addi	r5,r5,124
    7c94:	003f8e06 	br	7ad0 <__alt_data_end+0xff007ad0>
    7c98:	00c03f84 	movi	r3,254
    7c9c:	01401f84 	movi	r5,126
    7ca0:	003f8b06 	br	7ad0 <__alt_data_end+0xff007ad0>
    7ca4:	10c00054 	ori	r3,r2,1
    7ca8:	30c00115 	stw	r3,4(r6)
    7cac:	308d883a 	add	r6,r6,r2
    7cb0:	30800015 	stw	r2,0(r6)
    7cb4:	003f7806 	br	7a98 <__alt_data_end+0xff007a98>

00007cb8 <__sfvwrite_r>:
    7cb8:	30800217 	ldw	r2,8(r6)
    7cbc:	10006726 	beq	r2,zero,7e5c <__sfvwrite_r+0x1a4>
    7cc0:	28c0030b 	ldhu	r3,12(r5)
    7cc4:	defff404 	addi	sp,sp,-48
    7cc8:	dd400715 	stw	r21,28(sp)
    7ccc:	dd000615 	stw	r20,24(sp)
    7cd0:	dc000215 	stw	r16,8(sp)
    7cd4:	dfc00b15 	stw	ra,44(sp)
    7cd8:	df000a15 	stw	fp,40(sp)
    7cdc:	ddc00915 	stw	r23,36(sp)
    7ce0:	dd800815 	stw	r22,32(sp)
    7ce4:	dcc00515 	stw	r19,20(sp)
    7ce8:	dc800415 	stw	r18,16(sp)
    7cec:	dc400315 	stw	r17,12(sp)
    7cf0:	1880020c 	andi	r2,r3,8
    7cf4:	2821883a 	mov	r16,r5
    7cf8:	202b883a 	mov	r21,r4
    7cfc:	3029883a 	mov	r20,r6
    7d00:	10002726 	beq	r2,zero,7da0 <__sfvwrite_r+0xe8>
    7d04:	28800417 	ldw	r2,16(r5)
    7d08:	10002526 	beq	r2,zero,7da0 <__sfvwrite_r+0xe8>
    7d0c:	1880008c 	andi	r2,r3,2
    7d10:	a4400017 	ldw	r17,0(r20)
    7d14:	10002a26 	beq	r2,zero,7dc0 <__sfvwrite_r+0x108>
    7d18:	05a00034 	movhi	r22,32768
    7d1c:	0027883a 	mov	r19,zero
    7d20:	0025883a 	mov	r18,zero
    7d24:	b5bf0004 	addi	r22,r22,-1024
    7d28:	980d883a 	mov	r6,r19
    7d2c:	a809883a 	mov	r4,r21
    7d30:	90004626 	beq	r18,zero,7e4c <__sfvwrite_r+0x194>
    7d34:	900f883a 	mov	r7,r18
    7d38:	b480022e 	bgeu	r22,r18,7d44 <__sfvwrite_r+0x8c>
    7d3c:	01e00034 	movhi	r7,32768
    7d40:	39ff0004 	addi	r7,r7,-1024
    7d44:	80800917 	ldw	r2,36(r16)
    7d48:	81400717 	ldw	r5,28(r16)
    7d4c:	103ee83a 	callr	r2
    7d50:	0080570e 	bge	zero,r2,7eb0 <__sfvwrite_r+0x1f8>
    7d54:	a0c00217 	ldw	r3,8(r20)
    7d58:	98a7883a 	add	r19,r19,r2
    7d5c:	90a5c83a 	sub	r18,r18,r2
    7d60:	1885c83a 	sub	r2,r3,r2
    7d64:	a0800215 	stw	r2,8(r20)
    7d68:	103fef1e 	bne	r2,zero,7d28 <__alt_data_end+0xff007d28>
    7d6c:	0005883a 	mov	r2,zero
    7d70:	dfc00b17 	ldw	ra,44(sp)
    7d74:	df000a17 	ldw	fp,40(sp)
    7d78:	ddc00917 	ldw	r23,36(sp)
    7d7c:	dd800817 	ldw	r22,32(sp)
    7d80:	dd400717 	ldw	r21,28(sp)
    7d84:	dd000617 	ldw	r20,24(sp)
    7d88:	dcc00517 	ldw	r19,20(sp)
    7d8c:	dc800417 	ldw	r18,16(sp)
    7d90:	dc400317 	ldw	r17,12(sp)
    7d94:	dc000217 	ldw	r16,8(sp)
    7d98:	dec00c04 	addi	sp,sp,48
    7d9c:	f800283a 	ret
    7da0:	800b883a 	mov	r5,r16
    7da4:	a809883a 	mov	r4,r21
    7da8:	00058600 	call	5860 <__swsetup_r>
    7dac:	1000eb1e 	bne	r2,zero,815c <__sfvwrite_r+0x4a4>
    7db0:	80c0030b 	ldhu	r3,12(r16)
    7db4:	a4400017 	ldw	r17,0(r20)
    7db8:	1880008c 	andi	r2,r3,2
    7dbc:	103fd61e 	bne	r2,zero,7d18 <__alt_data_end+0xff007d18>
    7dc0:	1880004c 	andi	r2,r3,1
    7dc4:	10003f1e 	bne	r2,zero,7ec4 <__sfvwrite_r+0x20c>
    7dc8:	0039883a 	mov	fp,zero
    7dcc:	0025883a 	mov	r18,zero
    7dd0:	90001a26 	beq	r18,zero,7e3c <__sfvwrite_r+0x184>
    7dd4:	1880800c 	andi	r2,r3,512
    7dd8:	84c00217 	ldw	r19,8(r16)
    7ddc:	10002126 	beq	r2,zero,7e64 <__sfvwrite_r+0x1ac>
    7de0:	982f883a 	mov	r23,r19
    7de4:	94c09336 	bltu	r18,r19,8034 <__sfvwrite_r+0x37c>
    7de8:	1881200c 	andi	r2,r3,1152
    7dec:	10009e1e 	bne	r2,zero,8068 <__sfvwrite_r+0x3b0>
    7df0:	81000017 	ldw	r4,0(r16)
    7df4:	b80d883a 	mov	r6,r23
    7df8:	e00b883a 	mov	r5,fp
    7dfc:	00086780 	call	8678 <memmove>
    7e00:	80c00217 	ldw	r3,8(r16)
    7e04:	81000017 	ldw	r4,0(r16)
    7e08:	9005883a 	mov	r2,r18
    7e0c:	1ce7c83a 	sub	r19,r3,r19
    7e10:	25cf883a 	add	r7,r4,r23
    7e14:	84c00215 	stw	r19,8(r16)
    7e18:	81c00015 	stw	r7,0(r16)
    7e1c:	a0c00217 	ldw	r3,8(r20)
    7e20:	e0b9883a 	add	fp,fp,r2
    7e24:	90a5c83a 	sub	r18,r18,r2
    7e28:	18a7c83a 	sub	r19,r3,r2
    7e2c:	a4c00215 	stw	r19,8(r20)
    7e30:	983fce26 	beq	r19,zero,7d6c <__alt_data_end+0xff007d6c>
    7e34:	80c0030b 	ldhu	r3,12(r16)
    7e38:	903fe61e 	bne	r18,zero,7dd4 <__alt_data_end+0xff007dd4>
    7e3c:	8f000017 	ldw	fp,0(r17)
    7e40:	8c800117 	ldw	r18,4(r17)
    7e44:	8c400204 	addi	r17,r17,8
    7e48:	003fe106 	br	7dd0 <__alt_data_end+0xff007dd0>
    7e4c:	8cc00017 	ldw	r19,0(r17)
    7e50:	8c800117 	ldw	r18,4(r17)
    7e54:	8c400204 	addi	r17,r17,8
    7e58:	003fb306 	br	7d28 <__alt_data_end+0xff007d28>
    7e5c:	0005883a 	mov	r2,zero
    7e60:	f800283a 	ret
    7e64:	81000017 	ldw	r4,0(r16)
    7e68:	80800417 	ldw	r2,16(r16)
    7e6c:	11005736 	bltu	r2,r4,7fcc <__sfvwrite_r+0x314>
    7e70:	85c00517 	ldw	r23,20(r16)
    7e74:	95c05536 	bltu	r18,r23,7fcc <__sfvwrite_r+0x314>
    7e78:	00a00034 	movhi	r2,32768
    7e7c:	10bfffc4 	addi	r2,r2,-1
    7e80:	9009883a 	mov	r4,r18
    7e84:	1480012e 	bgeu	r2,r18,7e8c <__sfvwrite_r+0x1d4>
    7e88:	1009883a 	mov	r4,r2
    7e8c:	b80b883a 	mov	r5,r23
    7e90:	000cb140 	call	cb14 <__divsi3>
    7e94:	15cf383a 	mul	r7,r2,r23
    7e98:	81400717 	ldw	r5,28(r16)
    7e9c:	80800917 	ldw	r2,36(r16)
    7ea0:	e00d883a 	mov	r6,fp
    7ea4:	a809883a 	mov	r4,r21
    7ea8:	103ee83a 	callr	r2
    7eac:	00bfdb16 	blt	zero,r2,7e1c <__alt_data_end+0xff007e1c>
    7eb0:	8080030b 	ldhu	r2,12(r16)
    7eb4:	10801014 	ori	r2,r2,64
    7eb8:	8080030d 	sth	r2,12(r16)
    7ebc:	00bfffc4 	movi	r2,-1
    7ec0:	003fab06 	br	7d70 <__alt_data_end+0xff007d70>
    7ec4:	0027883a 	mov	r19,zero
    7ec8:	0011883a 	mov	r8,zero
    7ecc:	0039883a 	mov	fp,zero
    7ed0:	0025883a 	mov	r18,zero
    7ed4:	90001f26 	beq	r18,zero,7f54 <__sfvwrite_r+0x29c>
    7ed8:	40005a26 	beq	r8,zero,8044 <__sfvwrite_r+0x38c>
    7edc:	982d883a 	mov	r22,r19
    7ee0:	94c0012e 	bgeu	r18,r19,7ee8 <__sfvwrite_r+0x230>
    7ee4:	902d883a 	mov	r22,r18
    7ee8:	81000017 	ldw	r4,0(r16)
    7eec:	80800417 	ldw	r2,16(r16)
    7ef0:	b02f883a 	mov	r23,r22
    7ef4:	81c00517 	ldw	r7,20(r16)
    7ef8:	1100032e 	bgeu	r2,r4,7f08 <__sfvwrite_r+0x250>
    7efc:	80c00217 	ldw	r3,8(r16)
    7f00:	38c7883a 	add	r3,r7,r3
    7f04:	1d801816 	blt	r3,r22,7f68 <__sfvwrite_r+0x2b0>
    7f08:	b1c03e16 	blt	r22,r7,8004 <__sfvwrite_r+0x34c>
    7f0c:	80800917 	ldw	r2,36(r16)
    7f10:	81400717 	ldw	r5,28(r16)
    7f14:	e00d883a 	mov	r6,fp
    7f18:	da000115 	stw	r8,4(sp)
    7f1c:	a809883a 	mov	r4,r21
    7f20:	103ee83a 	callr	r2
    7f24:	102f883a 	mov	r23,r2
    7f28:	da000117 	ldw	r8,4(sp)
    7f2c:	00bfe00e 	bge	zero,r2,7eb0 <__alt_data_end+0xff007eb0>
    7f30:	9de7c83a 	sub	r19,r19,r23
    7f34:	98001f26 	beq	r19,zero,7fb4 <__sfvwrite_r+0x2fc>
    7f38:	a0800217 	ldw	r2,8(r20)
    7f3c:	e5f9883a 	add	fp,fp,r23
    7f40:	95e5c83a 	sub	r18,r18,r23
    7f44:	15efc83a 	sub	r23,r2,r23
    7f48:	a5c00215 	stw	r23,8(r20)
    7f4c:	b83f8726 	beq	r23,zero,7d6c <__alt_data_end+0xff007d6c>
    7f50:	903fe11e 	bne	r18,zero,7ed8 <__alt_data_end+0xff007ed8>
    7f54:	8f000017 	ldw	fp,0(r17)
    7f58:	8c800117 	ldw	r18,4(r17)
    7f5c:	0011883a 	mov	r8,zero
    7f60:	8c400204 	addi	r17,r17,8
    7f64:	003fdb06 	br	7ed4 <__alt_data_end+0xff007ed4>
    7f68:	180d883a 	mov	r6,r3
    7f6c:	e00b883a 	mov	r5,fp
    7f70:	da000115 	stw	r8,4(sp)
    7f74:	d8c00015 	stw	r3,0(sp)
    7f78:	00086780 	call	8678 <memmove>
    7f7c:	d8c00017 	ldw	r3,0(sp)
    7f80:	80800017 	ldw	r2,0(r16)
    7f84:	800b883a 	mov	r5,r16
    7f88:	a809883a 	mov	r4,r21
    7f8c:	10c5883a 	add	r2,r2,r3
    7f90:	80800015 	stw	r2,0(r16)
    7f94:	d8c00015 	stw	r3,0(sp)
    7f98:	00074580 	call	7458 <_fflush_r>
    7f9c:	d8c00017 	ldw	r3,0(sp)
    7fa0:	da000117 	ldw	r8,4(sp)
    7fa4:	103fc21e 	bne	r2,zero,7eb0 <__alt_data_end+0xff007eb0>
    7fa8:	182f883a 	mov	r23,r3
    7fac:	9de7c83a 	sub	r19,r19,r23
    7fb0:	983fe11e 	bne	r19,zero,7f38 <__alt_data_end+0xff007f38>
    7fb4:	800b883a 	mov	r5,r16
    7fb8:	a809883a 	mov	r4,r21
    7fbc:	00074580 	call	7458 <_fflush_r>
    7fc0:	103fbb1e 	bne	r2,zero,7eb0 <__alt_data_end+0xff007eb0>
    7fc4:	0011883a 	mov	r8,zero
    7fc8:	003fdb06 	br	7f38 <__alt_data_end+0xff007f38>
    7fcc:	94c0012e 	bgeu	r18,r19,7fd4 <__sfvwrite_r+0x31c>
    7fd0:	9027883a 	mov	r19,r18
    7fd4:	980d883a 	mov	r6,r19
    7fd8:	e00b883a 	mov	r5,fp
    7fdc:	00086780 	call	8678 <memmove>
    7fe0:	80800217 	ldw	r2,8(r16)
    7fe4:	80c00017 	ldw	r3,0(r16)
    7fe8:	14c5c83a 	sub	r2,r2,r19
    7fec:	1cc7883a 	add	r3,r3,r19
    7ff0:	80800215 	stw	r2,8(r16)
    7ff4:	80c00015 	stw	r3,0(r16)
    7ff8:	10004326 	beq	r2,zero,8108 <__sfvwrite_r+0x450>
    7ffc:	9805883a 	mov	r2,r19
    8000:	003f8606 	br	7e1c <__alt_data_end+0xff007e1c>
    8004:	b00d883a 	mov	r6,r22
    8008:	e00b883a 	mov	r5,fp
    800c:	da000115 	stw	r8,4(sp)
    8010:	00086780 	call	8678 <memmove>
    8014:	80800217 	ldw	r2,8(r16)
    8018:	80c00017 	ldw	r3,0(r16)
    801c:	da000117 	ldw	r8,4(sp)
    8020:	1585c83a 	sub	r2,r2,r22
    8024:	1dad883a 	add	r22,r3,r22
    8028:	80800215 	stw	r2,8(r16)
    802c:	85800015 	stw	r22,0(r16)
    8030:	003fbf06 	br	7f30 <__alt_data_end+0xff007f30>
    8034:	81000017 	ldw	r4,0(r16)
    8038:	9027883a 	mov	r19,r18
    803c:	902f883a 	mov	r23,r18
    8040:	003f6c06 	br	7df4 <__alt_data_end+0xff007df4>
    8044:	900d883a 	mov	r6,r18
    8048:	01400284 	movi	r5,10
    804c:	e009883a 	mov	r4,fp
    8050:	00085940 	call	8594 <memchr>
    8054:	10003e26 	beq	r2,zero,8150 <__sfvwrite_r+0x498>
    8058:	10800044 	addi	r2,r2,1
    805c:	1727c83a 	sub	r19,r2,fp
    8060:	02000044 	movi	r8,1
    8064:	003f9d06 	br	7edc <__alt_data_end+0xff007edc>
    8068:	80800517 	ldw	r2,20(r16)
    806c:	81400417 	ldw	r5,16(r16)
    8070:	81c00017 	ldw	r7,0(r16)
    8074:	10a7883a 	add	r19,r2,r2
    8078:	9885883a 	add	r2,r19,r2
    807c:	1026d7fa 	srli	r19,r2,31
    8080:	396dc83a 	sub	r22,r7,r5
    8084:	b1000044 	addi	r4,r22,1
    8088:	9885883a 	add	r2,r19,r2
    808c:	1027d07a 	srai	r19,r2,1
    8090:	2485883a 	add	r2,r4,r18
    8094:	980d883a 	mov	r6,r19
    8098:	9880022e 	bgeu	r19,r2,80a4 <__sfvwrite_r+0x3ec>
    809c:	1027883a 	mov	r19,r2
    80a0:	100d883a 	mov	r6,r2
    80a4:	18c1000c 	andi	r3,r3,1024
    80a8:	18001c26 	beq	r3,zero,811c <__sfvwrite_r+0x464>
    80ac:	300b883a 	mov	r5,r6
    80b0:	a809883a 	mov	r4,r21
    80b4:	0002a100 	call	2a10 <_malloc_r>
    80b8:	102f883a 	mov	r23,r2
    80bc:	10002926 	beq	r2,zero,8164 <__sfvwrite_r+0x4ac>
    80c0:	81400417 	ldw	r5,16(r16)
    80c4:	b00d883a 	mov	r6,r22
    80c8:	1009883a 	mov	r4,r2
    80cc:	000321c0 	call	321c <memcpy>
    80d0:	8080030b 	ldhu	r2,12(r16)
    80d4:	00fedfc4 	movi	r3,-1153
    80d8:	10c4703a 	and	r2,r2,r3
    80dc:	10802014 	ori	r2,r2,128
    80e0:	8080030d 	sth	r2,12(r16)
    80e4:	bd89883a 	add	r4,r23,r22
    80e8:	9d8fc83a 	sub	r7,r19,r22
    80ec:	85c00415 	stw	r23,16(r16)
    80f0:	84c00515 	stw	r19,20(r16)
    80f4:	81000015 	stw	r4,0(r16)
    80f8:	9027883a 	mov	r19,r18
    80fc:	81c00215 	stw	r7,8(r16)
    8100:	902f883a 	mov	r23,r18
    8104:	003f3b06 	br	7df4 <__alt_data_end+0xff007df4>
    8108:	800b883a 	mov	r5,r16
    810c:	a809883a 	mov	r4,r21
    8110:	00074580 	call	7458 <_fflush_r>
    8114:	103fb926 	beq	r2,zero,7ffc <__alt_data_end+0xff007ffc>
    8118:	003f6506 	br	7eb0 <__alt_data_end+0xff007eb0>
    811c:	a809883a 	mov	r4,r21
    8120:	00098f80 	call	98f8 <_realloc_r>
    8124:	102f883a 	mov	r23,r2
    8128:	103fee1e 	bne	r2,zero,80e4 <__alt_data_end+0xff0080e4>
    812c:	81400417 	ldw	r5,16(r16)
    8130:	a809883a 	mov	r4,r21
    8134:	00079a80 	call	79a8 <_free_r>
    8138:	8080030b 	ldhu	r2,12(r16)
    813c:	00ffdfc4 	movi	r3,-129
    8140:	1884703a 	and	r2,r3,r2
    8144:	00c00304 	movi	r3,12
    8148:	a8c00015 	stw	r3,0(r21)
    814c:	003f5906 	br	7eb4 <__alt_data_end+0xff007eb4>
    8150:	94c00044 	addi	r19,r18,1
    8154:	02000044 	movi	r8,1
    8158:	003f6006 	br	7edc <__alt_data_end+0xff007edc>
    815c:	00bfffc4 	movi	r2,-1
    8160:	003f0306 	br	7d70 <__alt_data_end+0xff007d70>
    8164:	00800304 	movi	r2,12
    8168:	a8800015 	stw	r2,0(r21)
    816c:	8080030b 	ldhu	r2,12(r16)
    8170:	003f5006 	br	7eb4 <__alt_data_end+0xff007eb4>

00008174 <_fwalk>:
    8174:	defff704 	addi	sp,sp,-36
    8178:	dd000415 	stw	r20,16(sp)
    817c:	dfc00815 	stw	ra,32(sp)
    8180:	ddc00715 	stw	r23,28(sp)
    8184:	dd800615 	stw	r22,24(sp)
    8188:	dd400515 	stw	r21,20(sp)
    818c:	dcc00315 	stw	r19,12(sp)
    8190:	dc800215 	stw	r18,8(sp)
    8194:	dc400115 	stw	r17,4(sp)
    8198:	dc000015 	stw	r16,0(sp)
    819c:	2500b804 	addi	r20,r4,736
    81a0:	a0002326 	beq	r20,zero,8230 <_fwalk+0xbc>
    81a4:	282b883a 	mov	r21,r5
    81a8:	002f883a 	mov	r23,zero
    81ac:	05800044 	movi	r22,1
    81b0:	04ffffc4 	movi	r19,-1
    81b4:	a4400117 	ldw	r17,4(r20)
    81b8:	a4800217 	ldw	r18,8(r20)
    81bc:	8c7fffc4 	addi	r17,r17,-1
    81c0:	88000d16 	blt	r17,zero,81f8 <_fwalk+0x84>
    81c4:	94000304 	addi	r16,r18,12
    81c8:	94800384 	addi	r18,r18,14
    81cc:	8080000b 	ldhu	r2,0(r16)
    81d0:	8c7fffc4 	addi	r17,r17,-1
    81d4:	813ffd04 	addi	r4,r16,-12
    81d8:	b080042e 	bgeu	r22,r2,81ec <_fwalk+0x78>
    81dc:	9080000f 	ldh	r2,0(r18)
    81e0:	14c00226 	beq	r2,r19,81ec <_fwalk+0x78>
    81e4:	a83ee83a 	callr	r21
    81e8:	b8aeb03a 	or	r23,r23,r2
    81ec:	84001a04 	addi	r16,r16,104
    81f0:	94801a04 	addi	r18,r18,104
    81f4:	8cfff51e 	bne	r17,r19,81cc <__alt_data_end+0xff0081cc>
    81f8:	a5000017 	ldw	r20,0(r20)
    81fc:	a03fed1e 	bne	r20,zero,81b4 <__alt_data_end+0xff0081b4>
    8200:	b805883a 	mov	r2,r23
    8204:	dfc00817 	ldw	ra,32(sp)
    8208:	ddc00717 	ldw	r23,28(sp)
    820c:	dd800617 	ldw	r22,24(sp)
    8210:	dd400517 	ldw	r21,20(sp)
    8214:	dd000417 	ldw	r20,16(sp)
    8218:	dcc00317 	ldw	r19,12(sp)
    821c:	dc800217 	ldw	r18,8(sp)
    8220:	dc400117 	ldw	r17,4(sp)
    8224:	dc000017 	ldw	r16,0(sp)
    8228:	dec00904 	addi	sp,sp,36
    822c:	f800283a 	ret
    8230:	002f883a 	mov	r23,zero
    8234:	003ff206 	br	8200 <__alt_data_end+0xff008200>

00008238 <_fwalk_reent>:
    8238:	defff704 	addi	sp,sp,-36
    823c:	dd000415 	stw	r20,16(sp)
    8240:	dfc00815 	stw	ra,32(sp)
    8244:	ddc00715 	stw	r23,28(sp)
    8248:	dd800615 	stw	r22,24(sp)
    824c:	dd400515 	stw	r21,20(sp)
    8250:	dcc00315 	stw	r19,12(sp)
    8254:	dc800215 	stw	r18,8(sp)
    8258:	dc400115 	stw	r17,4(sp)
    825c:	dc000015 	stw	r16,0(sp)
    8260:	2500b804 	addi	r20,r4,736
    8264:	a0002326 	beq	r20,zero,82f4 <_fwalk_reent+0xbc>
    8268:	282b883a 	mov	r21,r5
    826c:	2027883a 	mov	r19,r4
    8270:	002f883a 	mov	r23,zero
    8274:	05800044 	movi	r22,1
    8278:	04bfffc4 	movi	r18,-1
    827c:	a4400117 	ldw	r17,4(r20)
    8280:	a4000217 	ldw	r16,8(r20)
    8284:	8c7fffc4 	addi	r17,r17,-1
    8288:	88000c16 	blt	r17,zero,82bc <_fwalk_reent+0x84>
    828c:	84000304 	addi	r16,r16,12
    8290:	8080000b 	ldhu	r2,0(r16)
    8294:	8c7fffc4 	addi	r17,r17,-1
    8298:	817ffd04 	addi	r5,r16,-12
    829c:	b080052e 	bgeu	r22,r2,82b4 <_fwalk_reent+0x7c>
    82a0:	8080008f 	ldh	r2,2(r16)
    82a4:	9809883a 	mov	r4,r19
    82a8:	14800226 	beq	r2,r18,82b4 <_fwalk_reent+0x7c>
    82ac:	a83ee83a 	callr	r21
    82b0:	b8aeb03a 	or	r23,r23,r2
    82b4:	84001a04 	addi	r16,r16,104
    82b8:	8cbff51e 	bne	r17,r18,8290 <__alt_data_end+0xff008290>
    82bc:	a5000017 	ldw	r20,0(r20)
    82c0:	a03fee1e 	bne	r20,zero,827c <__alt_data_end+0xff00827c>
    82c4:	b805883a 	mov	r2,r23
    82c8:	dfc00817 	ldw	ra,32(sp)
    82cc:	ddc00717 	ldw	r23,28(sp)
    82d0:	dd800617 	ldw	r22,24(sp)
    82d4:	dd400517 	ldw	r21,20(sp)
    82d8:	dd000417 	ldw	r20,16(sp)
    82dc:	dcc00317 	ldw	r19,12(sp)
    82e0:	dc800217 	ldw	r18,8(sp)
    82e4:	dc400117 	ldw	r17,4(sp)
    82e8:	dc000017 	ldw	r16,0(sp)
    82ec:	dec00904 	addi	sp,sp,36
    82f0:	f800283a 	ret
    82f4:	002f883a 	mov	r23,zero
    82f8:	003ff206 	br	82c4 <__alt_data_end+0xff0082c4>

000082fc <_setlocale_r>:
    82fc:	30001b26 	beq	r6,zero,836c <_setlocale_r+0x70>
    8300:	01400074 	movhi	r5,1
    8304:	defffe04 	addi	sp,sp,-8
    8308:	2948dc04 	addi	r5,r5,9072
    830c:	3009883a 	mov	r4,r6
    8310:	dc000015 	stw	r16,0(sp)
    8314:	dfc00115 	stw	ra,4(sp)
    8318:	3021883a 	mov	r16,r6
    831c:	000a00c0 	call	a00c <strcmp>
    8320:	1000061e 	bne	r2,zero,833c <_setlocale_r+0x40>
    8324:	00800074 	movhi	r2,1
    8328:	1088db04 	addi	r2,r2,9068
    832c:	dfc00117 	ldw	ra,4(sp)
    8330:	dc000017 	ldw	r16,0(sp)
    8334:	dec00204 	addi	sp,sp,8
    8338:	f800283a 	ret
    833c:	01400074 	movhi	r5,1
    8340:	2948db04 	addi	r5,r5,9068
    8344:	8009883a 	mov	r4,r16
    8348:	000a00c0 	call	a00c <strcmp>
    834c:	103ff526 	beq	r2,zero,8324 <__alt_data_end+0xff008324>
    8350:	01400074 	movhi	r5,1
    8354:	29487904 	addi	r5,r5,8676
    8358:	8009883a 	mov	r4,r16
    835c:	000a00c0 	call	a00c <strcmp>
    8360:	103ff026 	beq	r2,zero,8324 <__alt_data_end+0xff008324>
    8364:	0005883a 	mov	r2,zero
    8368:	003ff006 	br	832c <__alt_data_end+0xff00832c>
    836c:	00800074 	movhi	r2,1
    8370:	1088db04 	addi	r2,r2,9068
    8374:	f800283a 	ret

00008378 <__locale_charset>:
    8378:	00800074 	movhi	r2,1
    837c:	108b4e04 	addi	r2,r2,11576
    8380:	f800283a 	ret

00008384 <__locale_mb_cur_max>:
    8384:	00800074 	movhi	r2,1
    8388:	108fea04 	addi	r2,r2,16296
    838c:	10800017 	ldw	r2,0(r2)
    8390:	f800283a 	ret

00008394 <__locale_msgcharset>:
    8394:	00800074 	movhi	r2,1
    8398:	108b4604 	addi	r2,r2,11544
    839c:	f800283a 	ret

000083a0 <__locale_cjk_lang>:
    83a0:	0005883a 	mov	r2,zero
    83a4:	f800283a 	ret

000083a8 <_localeconv_r>:
    83a8:	00800074 	movhi	r2,1
    83ac:	108b5604 	addi	r2,r2,11608
    83b0:	f800283a 	ret

000083b4 <setlocale>:
    83b4:	00800074 	movhi	r2,1
    83b8:	108fe904 	addi	r2,r2,16292
    83bc:	280d883a 	mov	r6,r5
    83c0:	200b883a 	mov	r5,r4
    83c4:	11000017 	ldw	r4,0(r2)
    83c8:	00082fc1 	jmpi	82fc <_setlocale_r>

000083cc <localeconv>:
    83cc:	00800074 	movhi	r2,1
    83d0:	108b5604 	addi	r2,r2,11608
    83d4:	f800283a 	ret

000083d8 <__smakebuf_r>:
    83d8:	2880030b 	ldhu	r2,12(r5)
    83dc:	10c0008c 	andi	r3,r2,2
    83e0:	1800411e 	bne	r3,zero,84e8 <__smakebuf_r+0x110>
    83e4:	deffec04 	addi	sp,sp,-80
    83e8:	dc000f15 	stw	r16,60(sp)
    83ec:	2821883a 	mov	r16,r5
    83f0:	2940038f 	ldh	r5,14(r5)
    83f4:	dc401015 	stw	r17,64(sp)
    83f8:	dfc01315 	stw	ra,76(sp)
    83fc:	dcc01215 	stw	r19,72(sp)
    8400:	dc801115 	stw	r18,68(sp)
    8404:	2023883a 	mov	r17,r4
    8408:	28001c16 	blt	r5,zero,847c <__smakebuf_r+0xa4>
    840c:	d80d883a 	mov	r6,sp
    8410:	000bbb40 	call	bbb4 <_fstat_r>
    8414:	10001816 	blt	r2,zero,8478 <__smakebuf_r+0xa0>
    8418:	d8800117 	ldw	r2,4(sp)
    841c:	00e00014 	movui	r3,32768
    8420:	10bc000c 	andi	r2,r2,61440
    8424:	14c80020 	cmpeqi	r19,r2,8192
    8428:	10c03726 	beq	r2,r3,8508 <__smakebuf_r+0x130>
    842c:	80c0030b 	ldhu	r3,12(r16)
    8430:	18c20014 	ori	r3,r3,2048
    8434:	80c0030d 	sth	r3,12(r16)
    8438:	00c80004 	movi	r3,8192
    843c:	10c0521e 	bne	r2,r3,8588 <__smakebuf_r+0x1b0>
    8440:	8140038f 	ldh	r5,14(r16)
    8444:	8809883a 	mov	r4,r17
    8448:	000bc100 	call	bc10 <_isatty_r>
    844c:	10004c26 	beq	r2,zero,8580 <__smakebuf_r+0x1a8>
    8450:	8080030b 	ldhu	r2,12(r16)
    8454:	80c010c4 	addi	r3,r16,67
    8458:	80c00015 	stw	r3,0(r16)
    845c:	10800054 	ori	r2,r2,1
    8460:	8080030d 	sth	r2,12(r16)
    8464:	00800044 	movi	r2,1
    8468:	80c00415 	stw	r3,16(r16)
    846c:	80800515 	stw	r2,20(r16)
    8470:	04810004 	movi	r18,1024
    8474:	00000706 	br	8494 <__smakebuf_r+0xbc>
    8478:	8080030b 	ldhu	r2,12(r16)
    847c:	10c0200c 	andi	r3,r2,128
    8480:	18001f1e 	bne	r3,zero,8500 <__smakebuf_r+0x128>
    8484:	04810004 	movi	r18,1024
    8488:	10820014 	ori	r2,r2,2048
    848c:	8080030d 	sth	r2,12(r16)
    8490:	0027883a 	mov	r19,zero
    8494:	900b883a 	mov	r5,r18
    8498:	8809883a 	mov	r4,r17
    849c:	0002a100 	call	2a10 <_malloc_r>
    84a0:	10002c26 	beq	r2,zero,8554 <__smakebuf_r+0x17c>
    84a4:	80c0030b 	ldhu	r3,12(r16)
    84a8:	01000034 	movhi	r4,0
    84ac:	211d3b04 	addi	r4,r4,29932
    84b0:	89000f15 	stw	r4,60(r17)
    84b4:	18c02014 	ori	r3,r3,128
    84b8:	80c0030d 	sth	r3,12(r16)
    84bc:	80800015 	stw	r2,0(r16)
    84c0:	80800415 	stw	r2,16(r16)
    84c4:	84800515 	stw	r18,20(r16)
    84c8:	98001a1e 	bne	r19,zero,8534 <__smakebuf_r+0x15c>
    84cc:	dfc01317 	ldw	ra,76(sp)
    84d0:	dcc01217 	ldw	r19,72(sp)
    84d4:	dc801117 	ldw	r18,68(sp)
    84d8:	dc401017 	ldw	r17,64(sp)
    84dc:	dc000f17 	ldw	r16,60(sp)
    84e0:	dec01404 	addi	sp,sp,80
    84e4:	f800283a 	ret
    84e8:	288010c4 	addi	r2,r5,67
    84ec:	28800015 	stw	r2,0(r5)
    84f0:	28800415 	stw	r2,16(r5)
    84f4:	00800044 	movi	r2,1
    84f8:	28800515 	stw	r2,20(r5)
    84fc:	f800283a 	ret
    8500:	04801004 	movi	r18,64
    8504:	003fe006 	br	8488 <__alt_data_end+0xff008488>
    8508:	81000a17 	ldw	r4,40(r16)
    850c:	00c00074 	movhi	r3,1
    8510:	18e7ea04 	addi	r3,r3,-24664
    8514:	20ffc51e 	bne	r4,r3,842c <__alt_data_end+0xff00842c>
    8518:	8080030b 	ldhu	r2,12(r16)
    851c:	04810004 	movi	r18,1024
    8520:	84801315 	stw	r18,76(r16)
    8524:	1484b03a 	or	r2,r2,r18
    8528:	8080030d 	sth	r2,12(r16)
    852c:	0027883a 	mov	r19,zero
    8530:	003fd806 	br	8494 <__alt_data_end+0xff008494>
    8534:	8140038f 	ldh	r5,14(r16)
    8538:	8809883a 	mov	r4,r17
    853c:	000bc100 	call	bc10 <_isatty_r>
    8540:	103fe226 	beq	r2,zero,84cc <__alt_data_end+0xff0084cc>
    8544:	8080030b 	ldhu	r2,12(r16)
    8548:	10800054 	ori	r2,r2,1
    854c:	8080030d 	sth	r2,12(r16)
    8550:	003fde06 	br	84cc <__alt_data_end+0xff0084cc>
    8554:	8080030b 	ldhu	r2,12(r16)
    8558:	10c0800c 	andi	r3,r2,512
    855c:	183fdb1e 	bne	r3,zero,84cc <__alt_data_end+0xff0084cc>
    8560:	10800094 	ori	r2,r2,2
    8564:	80c010c4 	addi	r3,r16,67
    8568:	8080030d 	sth	r2,12(r16)
    856c:	00800044 	movi	r2,1
    8570:	80c00015 	stw	r3,0(r16)
    8574:	80c00415 	stw	r3,16(r16)
    8578:	80800515 	stw	r2,20(r16)
    857c:	003fd306 	br	84cc <__alt_data_end+0xff0084cc>
    8580:	04810004 	movi	r18,1024
    8584:	003fc306 	br	8494 <__alt_data_end+0xff008494>
    8588:	0027883a 	mov	r19,zero
    858c:	04810004 	movi	r18,1024
    8590:	003fc006 	br	8494 <__alt_data_end+0xff008494>

00008594 <memchr>:
    8594:	208000cc 	andi	r2,r4,3
    8598:	280f883a 	mov	r7,r5
    859c:	10003426 	beq	r2,zero,8670 <memchr+0xdc>
    85a0:	30bfffc4 	addi	r2,r6,-1
    85a4:	30001a26 	beq	r6,zero,8610 <memchr+0x7c>
    85a8:	20c00003 	ldbu	r3,0(r4)
    85ac:	29803fcc 	andi	r6,r5,255
    85b0:	30c0051e 	bne	r6,r3,85c8 <memchr+0x34>
    85b4:	00001806 	br	8618 <memchr+0x84>
    85b8:	10001526 	beq	r2,zero,8610 <memchr+0x7c>
    85bc:	20c00003 	ldbu	r3,0(r4)
    85c0:	10bfffc4 	addi	r2,r2,-1
    85c4:	30c01426 	beq	r6,r3,8618 <memchr+0x84>
    85c8:	21000044 	addi	r4,r4,1
    85cc:	20c000cc 	andi	r3,r4,3
    85d0:	183ff91e 	bne	r3,zero,85b8 <__alt_data_end+0xff0085b8>
    85d4:	020000c4 	movi	r8,3
    85d8:	40801136 	bltu	r8,r2,8620 <memchr+0x8c>
    85dc:	10000c26 	beq	r2,zero,8610 <memchr+0x7c>
    85e0:	20c00003 	ldbu	r3,0(r4)
    85e4:	29403fcc 	andi	r5,r5,255
    85e8:	28c00b26 	beq	r5,r3,8618 <memchr+0x84>
    85ec:	20c00044 	addi	r3,r4,1
    85f0:	39803fcc 	andi	r6,r7,255
    85f4:	2089883a 	add	r4,r4,r2
    85f8:	00000306 	br	8608 <memchr+0x74>
    85fc:	18c00044 	addi	r3,r3,1
    8600:	197fffc3 	ldbu	r5,-1(r3)
    8604:	31400526 	beq	r6,r5,861c <memchr+0x88>
    8608:	1805883a 	mov	r2,r3
    860c:	20fffb1e 	bne	r4,r3,85fc <__alt_data_end+0xff0085fc>
    8610:	0005883a 	mov	r2,zero
    8614:	f800283a 	ret
    8618:	2005883a 	mov	r2,r4
    861c:	f800283a 	ret
    8620:	28c03fcc 	andi	r3,r5,255
    8624:	1812923a 	slli	r9,r3,8
    8628:	02ffbff4 	movhi	r11,65279
    862c:	02a02074 	movhi	r10,32897
    8630:	48d2b03a 	or	r9,r9,r3
    8634:	4806943a 	slli	r3,r9,16
    8638:	5affbfc4 	addi	r11,r11,-257
    863c:	52a02004 	addi	r10,r10,-32640
    8640:	48d2b03a 	or	r9,r9,r3
    8644:	20c00017 	ldw	r3,0(r4)
    8648:	48c6f03a 	xor	r3,r9,r3
    864c:	1acd883a 	add	r6,r3,r11
    8650:	00c6303a 	nor	r3,zero,r3
    8654:	30c6703a 	and	r3,r6,r3
    8658:	1a86703a 	and	r3,r3,r10
    865c:	183fe01e 	bne	r3,zero,85e0 <__alt_data_end+0xff0085e0>
    8660:	10bfff04 	addi	r2,r2,-4
    8664:	21000104 	addi	r4,r4,4
    8668:	40bff636 	bltu	r8,r2,8644 <__alt_data_end+0xff008644>
    866c:	003fdb06 	br	85dc <__alt_data_end+0xff0085dc>
    8670:	3005883a 	mov	r2,r6
    8674:	003fd706 	br	85d4 <__alt_data_end+0xff0085d4>

00008678 <memmove>:
    8678:	2005883a 	mov	r2,r4
    867c:	29000b2e 	bgeu	r5,r4,86ac <memmove+0x34>
    8680:	298f883a 	add	r7,r5,r6
    8684:	21c0092e 	bgeu	r4,r7,86ac <memmove+0x34>
    8688:	2187883a 	add	r3,r4,r6
    868c:	198bc83a 	sub	r5,r3,r6
    8690:	30004826 	beq	r6,zero,87b4 <memmove+0x13c>
    8694:	39ffffc4 	addi	r7,r7,-1
    8698:	39000003 	ldbu	r4,0(r7)
    869c:	18ffffc4 	addi	r3,r3,-1
    86a0:	19000005 	stb	r4,0(r3)
    86a4:	28fffb1e 	bne	r5,r3,8694 <__alt_data_end+0xff008694>
    86a8:	f800283a 	ret
    86ac:	00c003c4 	movi	r3,15
    86b0:	1980412e 	bgeu	r3,r6,87b8 <memmove+0x140>
    86b4:	2886b03a 	or	r3,r5,r2
    86b8:	18c000cc 	andi	r3,r3,3
    86bc:	1800401e 	bne	r3,zero,87c0 <memmove+0x148>
    86c0:	33fffc04 	addi	r15,r6,-16
    86c4:	781ed13a 	srli	r15,r15,4
    86c8:	28c00104 	addi	r3,r5,4
    86cc:	13400104 	addi	r13,r2,4
    86d0:	781c913a 	slli	r14,r15,4
    86d4:	2b000204 	addi	r12,r5,8
    86d8:	12c00204 	addi	r11,r2,8
    86dc:	73800504 	addi	r14,r14,20
    86e0:	2a800304 	addi	r10,r5,12
    86e4:	12400304 	addi	r9,r2,12
    86e8:	2b9d883a 	add	r14,r5,r14
    86ec:	2811883a 	mov	r8,r5
    86f0:	100f883a 	mov	r7,r2
    86f4:	41000017 	ldw	r4,0(r8)
    86f8:	39c00404 	addi	r7,r7,16
    86fc:	18c00404 	addi	r3,r3,16
    8700:	393ffc15 	stw	r4,-16(r7)
    8704:	193ffc17 	ldw	r4,-16(r3)
    8708:	6b400404 	addi	r13,r13,16
    870c:	5ac00404 	addi	r11,r11,16
    8710:	693ffc15 	stw	r4,-16(r13)
    8714:	61000017 	ldw	r4,0(r12)
    8718:	4a400404 	addi	r9,r9,16
    871c:	42000404 	addi	r8,r8,16
    8720:	593ffc15 	stw	r4,-16(r11)
    8724:	51000017 	ldw	r4,0(r10)
    8728:	63000404 	addi	r12,r12,16
    872c:	52800404 	addi	r10,r10,16
    8730:	493ffc15 	stw	r4,-16(r9)
    8734:	1bbfef1e 	bne	r3,r14,86f4 <__alt_data_end+0xff0086f4>
    8738:	79000044 	addi	r4,r15,1
    873c:	2008913a 	slli	r4,r4,4
    8740:	328003cc 	andi	r10,r6,15
    8744:	02c000c4 	movi	r11,3
    8748:	1107883a 	add	r3,r2,r4
    874c:	290b883a 	add	r5,r5,r4
    8750:	5a801e2e 	bgeu	r11,r10,87cc <memmove+0x154>
    8754:	1813883a 	mov	r9,r3
    8758:	2811883a 	mov	r8,r5
    875c:	500f883a 	mov	r7,r10
    8760:	41000017 	ldw	r4,0(r8)
    8764:	4a400104 	addi	r9,r9,4
    8768:	39ffff04 	addi	r7,r7,-4
    876c:	493fff15 	stw	r4,-4(r9)
    8770:	42000104 	addi	r8,r8,4
    8774:	59fffa36 	bltu	r11,r7,8760 <__alt_data_end+0xff008760>
    8778:	513fff04 	addi	r4,r10,-4
    877c:	2008d0ba 	srli	r4,r4,2
    8780:	318000cc 	andi	r6,r6,3
    8784:	21000044 	addi	r4,r4,1
    8788:	2109883a 	add	r4,r4,r4
    878c:	2109883a 	add	r4,r4,r4
    8790:	1907883a 	add	r3,r3,r4
    8794:	290b883a 	add	r5,r5,r4
    8798:	30000b26 	beq	r6,zero,87c8 <memmove+0x150>
    879c:	198d883a 	add	r6,r3,r6
    87a0:	29c00003 	ldbu	r7,0(r5)
    87a4:	18c00044 	addi	r3,r3,1
    87a8:	29400044 	addi	r5,r5,1
    87ac:	19ffffc5 	stb	r7,-1(r3)
    87b0:	19bffb1e 	bne	r3,r6,87a0 <__alt_data_end+0xff0087a0>
    87b4:	f800283a 	ret
    87b8:	1007883a 	mov	r3,r2
    87bc:	003ff606 	br	8798 <__alt_data_end+0xff008798>
    87c0:	1007883a 	mov	r3,r2
    87c4:	003ff506 	br	879c <__alt_data_end+0xff00879c>
    87c8:	f800283a 	ret
    87cc:	500d883a 	mov	r6,r10
    87d0:	003ff106 	br	8798 <__alt_data_end+0xff008798>

000087d4 <memset>:
    87d4:	20c000cc 	andi	r3,r4,3
    87d8:	2005883a 	mov	r2,r4
    87dc:	18004426 	beq	r3,zero,88f0 <memset+0x11c>
    87e0:	31ffffc4 	addi	r7,r6,-1
    87e4:	30004026 	beq	r6,zero,88e8 <memset+0x114>
    87e8:	2813883a 	mov	r9,r5
    87ec:	200d883a 	mov	r6,r4
    87f0:	2007883a 	mov	r3,r4
    87f4:	00000406 	br	8808 <memset+0x34>
    87f8:	3a3fffc4 	addi	r8,r7,-1
    87fc:	31800044 	addi	r6,r6,1
    8800:	38003926 	beq	r7,zero,88e8 <memset+0x114>
    8804:	400f883a 	mov	r7,r8
    8808:	18c00044 	addi	r3,r3,1
    880c:	32400005 	stb	r9,0(r6)
    8810:	1a0000cc 	andi	r8,r3,3
    8814:	403ff81e 	bne	r8,zero,87f8 <__alt_data_end+0xff0087f8>
    8818:	010000c4 	movi	r4,3
    881c:	21c02d2e 	bgeu	r4,r7,88d4 <memset+0x100>
    8820:	29003fcc 	andi	r4,r5,255
    8824:	200c923a 	slli	r6,r4,8
    8828:	3108b03a 	or	r4,r6,r4
    882c:	200c943a 	slli	r6,r4,16
    8830:	218cb03a 	or	r6,r4,r6
    8834:	010003c4 	movi	r4,15
    8838:	21c0182e 	bgeu	r4,r7,889c <memset+0xc8>
    883c:	3b3ffc04 	addi	r12,r7,-16
    8840:	6018d13a 	srli	r12,r12,4
    8844:	1a000104 	addi	r8,r3,4
    8848:	1ac00204 	addi	r11,r3,8
    884c:	6008913a 	slli	r4,r12,4
    8850:	1a800304 	addi	r10,r3,12
    8854:	1813883a 	mov	r9,r3
    8858:	21000504 	addi	r4,r4,20
    885c:	1909883a 	add	r4,r3,r4
    8860:	49800015 	stw	r6,0(r9)
    8864:	41800015 	stw	r6,0(r8)
    8868:	59800015 	stw	r6,0(r11)
    886c:	51800015 	stw	r6,0(r10)
    8870:	42000404 	addi	r8,r8,16
    8874:	4a400404 	addi	r9,r9,16
    8878:	5ac00404 	addi	r11,r11,16
    887c:	52800404 	addi	r10,r10,16
    8880:	413ff71e 	bne	r8,r4,8860 <__alt_data_end+0xff008860>
    8884:	63000044 	addi	r12,r12,1
    8888:	6018913a 	slli	r12,r12,4
    888c:	39c003cc 	andi	r7,r7,15
    8890:	010000c4 	movi	r4,3
    8894:	1b07883a 	add	r3,r3,r12
    8898:	21c00e2e 	bgeu	r4,r7,88d4 <memset+0x100>
    889c:	1813883a 	mov	r9,r3
    88a0:	3811883a 	mov	r8,r7
    88a4:	010000c4 	movi	r4,3
    88a8:	49800015 	stw	r6,0(r9)
    88ac:	423fff04 	addi	r8,r8,-4
    88b0:	4a400104 	addi	r9,r9,4
    88b4:	223ffc36 	bltu	r4,r8,88a8 <__alt_data_end+0xff0088a8>
    88b8:	393fff04 	addi	r4,r7,-4
    88bc:	2008d0ba 	srli	r4,r4,2
    88c0:	39c000cc 	andi	r7,r7,3
    88c4:	21000044 	addi	r4,r4,1
    88c8:	2109883a 	add	r4,r4,r4
    88cc:	2109883a 	add	r4,r4,r4
    88d0:	1907883a 	add	r3,r3,r4
    88d4:	38000526 	beq	r7,zero,88ec <memset+0x118>
    88d8:	19cf883a 	add	r7,r3,r7
    88dc:	19400005 	stb	r5,0(r3)
    88e0:	18c00044 	addi	r3,r3,1
    88e4:	38fffd1e 	bne	r7,r3,88dc <__alt_data_end+0xff0088dc>
    88e8:	f800283a 	ret
    88ec:	f800283a 	ret
    88f0:	2007883a 	mov	r3,r4
    88f4:	300f883a 	mov	r7,r6
    88f8:	003fc706 	br	8818 <__alt_data_end+0xff008818>

000088fc <_Balloc>:
    88fc:	20801317 	ldw	r2,76(r4)
    8900:	defffc04 	addi	sp,sp,-16
    8904:	dc400115 	stw	r17,4(sp)
    8908:	dc000015 	stw	r16,0(sp)
    890c:	dfc00315 	stw	ra,12(sp)
    8910:	dc800215 	stw	r18,8(sp)
    8914:	2023883a 	mov	r17,r4
    8918:	2821883a 	mov	r16,r5
    891c:	10000f26 	beq	r2,zero,895c <_Balloc+0x60>
    8920:	8407883a 	add	r3,r16,r16
    8924:	18c7883a 	add	r3,r3,r3
    8928:	10c7883a 	add	r3,r2,r3
    892c:	18800017 	ldw	r2,0(r3)
    8930:	10001126 	beq	r2,zero,8978 <_Balloc+0x7c>
    8934:	11000017 	ldw	r4,0(r2)
    8938:	19000015 	stw	r4,0(r3)
    893c:	10000415 	stw	zero,16(r2)
    8940:	10000315 	stw	zero,12(r2)
    8944:	dfc00317 	ldw	ra,12(sp)
    8948:	dc800217 	ldw	r18,8(sp)
    894c:	dc400117 	ldw	r17,4(sp)
    8950:	dc000017 	ldw	r16,0(sp)
    8954:	dec00404 	addi	sp,sp,16
    8958:	f800283a 	ret
    895c:	01800844 	movi	r6,33
    8960:	01400104 	movi	r5,4
    8964:	000b7e40 	call	b7e4 <_calloc_r>
    8968:	88801315 	stw	r2,76(r17)
    896c:	103fec1e 	bne	r2,zero,8920 <__alt_data_end+0xff008920>
    8970:	0005883a 	mov	r2,zero
    8974:	003ff306 	br	8944 <__alt_data_end+0xff008944>
    8978:	01400044 	movi	r5,1
    897c:	2c24983a 	sll	r18,r5,r16
    8980:	8809883a 	mov	r4,r17
    8984:	91800144 	addi	r6,r18,5
    8988:	318d883a 	add	r6,r6,r6
    898c:	318d883a 	add	r6,r6,r6
    8990:	000b7e40 	call	b7e4 <_calloc_r>
    8994:	103ff626 	beq	r2,zero,8970 <__alt_data_end+0xff008970>
    8998:	14000115 	stw	r16,4(r2)
    899c:	14800215 	stw	r18,8(r2)
    89a0:	003fe606 	br	893c <__alt_data_end+0xff00893c>

000089a4 <_Bfree>:
    89a4:	28000826 	beq	r5,zero,89c8 <_Bfree+0x24>
    89a8:	28c00117 	ldw	r3,4(r5)
    89ac:	20801317 	ldw	r2,76(r4)
    89b0:	18c7883a 	add	r3,r3,r3
    89b4:	18c7883a 	add	r3,r3,r3
    89b8:	10c5883a 	add	r2,r2,r3
    89bc:	10c00017 	ldw	r3,0(r2)
    89c0:	28c00015 	stw	r3,0(r5)
    89c4:	11400015 	stw	r5,0(r2)
    89c8:	f800283a 	ret

000089cc <__multadd>:
    89cc:	defffa04 	addi	sp,sp,-24
    89d0:	dc800315 	stw	r18,12(sp)
    89d4:	dc400215 	stw	r17,8(sp)
    89d8:	dc000115 	stw	r16,4(sp)
    89dc:	2823883a 	mov	r17,r5
    89e0:	2c000417 	ldw	r16,16(r5)
    89e4:	dfc00515 	stw	ra,20(sp)
    89e8:	dcc00415 	stw	r19,16(sp)
    89ec:	2025883a 	mov	r18,r4
    89f0:	29400504 	addi	r5,r5,20
    89f4:	0011883a 	mov	r8,zero
    89f8:	28c00017 	ldw	r3,0(r5)
    89fc:	29400104 	addi	r5,r5,4
    8a00:	42000044 	addi	r8,r8,1
    8a04:	18bfffcc 	andi	r2,r3,65535
    8a08:	1185383a 	mul	r2,r2,r6
    8a0c:	1806d43a 	srli	r3,r3,16
    8a10:	11cf883a 	add	r7,r2,r7
    8a14:	3808d43a 	srli	r4,r7,16
    8a18:	1987383a 	mul	r3,r3,r6
    8a1c:	38bfffcc 	andi	r2,r7,65535
    8a20:	1907883a 	add	r3,r3,r4
    8a24:	1808943a 	slli	r4,r3,16
    8a28:	180ed43a 	srli	r7,r3,16
    8a2c:	2085883a 	add	r2,r4,r2
    8a30:	28bfff15 	stw	r2,-4(r5)
    8a34:	443ff016 	blt	r8,r16,89f8 <__alt_data_end+0xff0089f8>
    8a38:	38000926 	beq	r7,zero,8a60 <__multadd+0x94>
    8a3c:	88800217 	ldw	r2,8(r17)
    8a40:	80800f0e 	bge	r16,r2,8a80 <__multadd+0xb4>
    8a44:	80800144 	addi	r2,r16,5
    8a48:	1085883a 	add	r2,r2,r2
    8a4c:	1085883a 	add	r2,r2,r2
    8a50:	8885883a 	add	r2,r17,r2
    8a54:	11c00015 	stw	r7,0(r2)
    8a58:	84000044 	addi	r16,r16,1
    8a5c:	8c000415 	stw	r16,16(r17)
    8a60:	8805883a 	mov	r2,r17
    8a64:	dfc00517 	ldw	ra,20(sp)
    8a68:	dcc00417 	ldw	r19,16(sp)
    8a6c:	dc800317 	ldw	r18,12(sp)
    8a70:	dc400217 	ldw	r17,8(sp)
    8a74:	dc000117 	ldw	r16,4(sp)
    8a78:	dec00604 	addi	sp,sp,24
    8a7c:	f800283a 	ret
    8a80:	89400117 	ldw	r5,4(r17)
    8a84:	9009883a 	mov	r4,r18
    8a88:	d9c00015 	stw	r7,0(sp)
    8a8c:	29400044 	addi	r5,r5,1
    8a90:	00088fc0 	call	88fc <_Balloc>
    8a94:	89800417 	ldw	r6,16(r17)
    8a98:	89400304 	addi	r5,r17,12
    8a9c:	11000304 	addi	r4,r2,12
    8aa0:	31800084 	addi	r6,r6,2
    8aa4:	318d883a 	add	r6,r6,r6
    8aa8:	318d883a 	add	r6,r6,r6
    8aac:	1027883a 	mov	r19,r2
    8ab0:	000321c0 	call	321c <memcpy>
    8ab4:	d9c00017 	ldw	r7,0(sp)
    8ab8:	88000a26 	beq	r17,zero,8ae4 <__multadd+0x118>
    8abc:	88c00117 	ldw	r3,4(r17)
    8ac0:	90801317 	ldw	r2,76(r18)
    8ac4:	18c7883a 	add	r3,r3,r3
    8ac8:	18c7883a 	add	r3,r3,r3
    8acc:	10c5883a 	add	r2,r2,r3
    8ad0:	10c00017 	ldw	r3,0(r2)
    8ad4:	88c00015 	stw	r3,0(r17)
    8ad8:	14400015 	stw	r17,0(r2)
    8adc:	9823883a 	mov	r17,r19
    8ae0:	003fd806 	br	8a44 <__alt_data_end+0xff008a44>
    8ae4:	9823883a 	mov	r17,r19
    8ae8:	003fd606 	br	8a44 <__alt_data_end+0xff008a44>

00008aec <__s2b>:
    8aec:	defff904 	addi	sp,sp,-28
    8af0:	dc400115 	stw	r17,4(sp)
    8af4:	dc000015 	stw	r16,0(sp)
    8af8:	2023883a 	mov	r17,r4
    8afc:	2821883a 	mov	r16,r5
    8b00:	39000204 	addi	r4,r7,8
    8b04:	01400244 	movi	r5,9
    8b08:	dcc00315 	stw	r19,12(sp)
    8b0c:	dc800215 	stw	r18,8(sp)
    8b10:	dfc00615 	stw	ra,24(sp)
    8b14:	dd400515 	stw	r21,20(sp)
    8b18:	dd000415 	stw	r20,16(sp)
    8b1c:	3825883a 	mov	r18,r7
    8b20:	3027883a 	mov	r19,r6
    8b24:	000cb140 	call	cb14 <__divsi3>
    8b28:	00c00044 	movi	r3,1
    8b2c:	000b883a 	mov	r5,zero
    8b30:	1880030e 	bge	r3,r2,8b40 <__s2b+0x54>
    8b34:	18c7883a 	add	r3,r3,r3
    8b38:	29400044 	addi	r5,r5,1
    8b3c:	18bffd16 	blt	r3,r2,8b34 <__alt_data_end+0xff008b34>
    8b40:	8809883a 	mov	r4,r17
    8b44:	00088fc0 	call	88fc <_Balloc>
    8b48:	d8c00717 	ldw	r3,28(sp)
    8b4c:	10c00515 	stw	r3,20(r2)
    8b50:	00c00044 	movi	r3,1
    8b54:	10c00415 	stw	r3,16(r2)
    8b58:	00c00244 	movi	r3,9
    8b5c:	1cc0210e 	bge	r3,r19,8be4 <__s2b+0xf8>
    8b60:	80eb883a 	add	r21,r16,r3
    8b64:	a829883a 	mov	r20,r21
    8b68:	84e1883a 	add	r16,r16,r19
    8b6c:	a1c00007 	ldb	r7,0(r20)
    8b70:	01800284 	movi	r6,10
    8b74:	a5000044 	addi	r20,r20,1
    8b78:	100b883a 	mov	r5,r2
    8b7c:	39fff404 	addi	r7,r7,-48
    8b80:	8809883a 	mov	r4,r17
    8b84:	00089cc0 	call	89cc <__multadd>
    8b88:	a43ff81e 	bne	r20,r16,8b6c <__alt_data_end+0xff008b6c>
    8b8c:	ace1883a 	add	r16,r21,r19
    8b90:	843ffe04 	addi	r16,r16,-8
    8b94:	9c800a0e 	bge	r19,r18,8bc0 <__s2b+0xd4>
    8b98:	94e5c83a 	sub	r18,r18,r19
    8b9c:	84a5883a 	add	r18,r16,r18
    8ba0:	81c00007 	ldb	r7,0(r16)
    8ba4:	01800284 	movi	r6,10
    8ba8:	84000044 	addi	r16,r16,1
    8bac:	100b883a 	mov	r5,r2
    8bb0:	39fff404 	addi	r7,r7,-48
    8bb4:	8809883a 	mov	r4,r17
    8bb8:	00089cc0 	call	89cc <__multadd>
    8bbc:	84bff81e 	bne	r16,r18,8ba0 <__alt_data_end+0xff008ba0>
    8bc0:	dfc00617 	ldw	ra,24(sp)
    8bc4:	dd400517 	ldw	r21,20(sp)
    8bc8:	dd000417 	ldw	r20,16(sp)
    8bcc:	dcc00317 	ldw	r19,12(sp)
    8bd0:	dc800217 	ldw	r18,8(sp)
    8bd4:	dc400117 	ldw	r17,4(sp)
    8bd8:	dc000017 	ldw	r16,0(sp)
    8bdc:	dec00704 	addi	sp,sp,28
    8be0:	f800283a 	ret
    8be4:	84000284 	addi	r16,r16,10
    8be8:	1827883a 	mov	r19,r3
    8bec:	003fe906 	br	8b94 <__alt_data_end+0xff008b94>

00008bf0 <__hi0bits>:
    8bf0:	20bfffec 	andhi	r2,r4,65535
    8bf4:	1000141e 	bne	r2,zero,8c48 <__hi0bits+0x58>
    8bf8:	2008943a 	slli	r4,r4,16
    8bfc:	00800404 	movi	r2,16
    8c00:	20ffc02c 	andhi	r3,r4,65280
    8c04:	1800021e 	bne	r3,zero,8c10 <__hi0bits+0x20>
    8c08:	2008923a 	slli	r4,r4,8
    8c0c:	10800204 	addi	r2,r2,8
    8c10:	20fc002c 	andhi	r3,r4,61440
    8c14:	1800021e 	bne	r3,zero,8c20 <__hi0bits+0x30>
    8c18:	2008913a 	slli	r4,r4,4
    8c1c:	10800104 	addi	r2,r2,4
    8c20:	20f0002c 	andhi	r3,r4,49152
    8c24:	1800031e 	bne	r3,zero,8c34 <__hi0bits+0x44>
    8c28:	2109883a 	add	r4,r4,r4
    8c2c:	10800084 	addi	r2,r2,2
    8c30:	2109883a 	add	r4,r4,r4
    8c34:	20000316 	blt	r4,zero,8c44 <__hi0bits+0x54>
    8c38:	2110002c 	andhi	r4,r4,16384
    8c3c:	2000041e 	bne	r4,zero,8c50 <__hi0bits+0x60>
    8c40:	00800804 	movi	r2,32
    8c44:	f800283a 	ret
    8c48:	0005883a 	mov	r2,zero
    8c4c:	003fec06 	br	8c00 <__alt_data_end+0xff008c00>
    8c50:	10800044 	addi	r2,r2,1
    8c54:	f800283a 	ret

00008c58 <__lo0bits>:
    8c58:	20c00017 	ldw	r3,0(r4)
    8c5c:	188001cc 	andi	r2,r3,7
    8c60:	10000826 	beq	r2,zero,8c84 <__lo0bits+0x2c>
    8c64:	1880004c 	andi	r2,r3,1
    8c68:	1000211e 	bne	r2,zero,8cf0 <__lo0bits+0x98>
    8c6c:	1880008c 	andi	r2,r3,2
    8c70:	1000211e 	bne	r2,zero,8cf8 <__lo0bits+0xa0>
    8c74:	1806d0ba 	srli	r3,r3,2
    8c78:	00800084 	movi	r2,2
    8c7c:	20c00015 	stw	r3,0(r4)
    8c80:	f800283a 	ret
    8c84:	18bfffcc 	andi	r2,r3,65535
    8c88:	10001326 	beq	r2,zero,8cd8 <__lo0bits+0x80>
    8c8c:	0005883a 	mov	r2,zero
    8c90:	19403fcc 	andi	r5,r3,255
    8c94:	2800021e 	bne	r5,zero,8ca0 <__lo0bits+0x48>
    8c98:	1806d23a 	srli	r3,r3,8
    8c9c:	10800204 	addi	r2,r2,8
    8ca0:	194003cc 	andi	r5,r3,15
    8ca4:	2800021e 	bne	r5,zero,8cb0 <__lo0bits+0x58>
    8ca8:	1806d13a 	srli	r3,r3,4
    8cac:	10800104 	addi	r2,r2,4
    8cb0:	194000cc 	andi	r5,r3,3
    8cb4:	2800021e 	bne	r5,zero,8cc0 <__lo0bits+0x68>
    8cb8:	1806d0ba 	srli	r3,r3,2
    8cbc:	10800084 	addi	r2,r2,2
    8cc0:	1940004c 	andi	r5,r3,1
    8cc4:	2800081e 	bne	r5,zero,8ce8 <__lo0bits+0x90>
    8cc8:	1806d07a 	srli	r3,r3,1
    8ccc:	1800051e 	bne	r3,zero,8ce4 <__lo0bits+0x8c>
    8cd0:	00800804 	movi	r2,32
    8cd4:	f800283a 	ret
    8cd8:	1806d43a 	srli	r3,r3,16
    8cdc:	00800404 	movi	r2,16
    8ce0:	003feb06 	br	8c90 <__alt_data_end+0xff008c90>
    8ce4:	10800044 	addi	r2,r2,1
    8ce8:	20c00015 	stw	r3,0(r4)
    8cec:	f800283a 	ret
    8cf0:	0005883a 	mov	r2,zero
    8cf4:	f800283a 	ret
    8cf8:	1806d07a 	srli	r3,r3,1
    8cfc:	00800044 	movi	r2,1
    8d00:	20c00015 	stw	r3,0(r4)
    8d04:	f800283a 	ret

00008d08 <__i2b>:
    8d08:	defffd04 	addi	sp,sp,-12
    8d0c:	dc000015 	stw	r16,0(sp)
    8d10:	04000044 	movi	r16,1
    8d14:	dc400115 	stw	r17,4(sp)
    8d18:	2823883a 	mov	r17,r5
    8d1c:	800b883a 	mov	r5,r16
    8d20:	dfc00215 	stw	ra,8(sp)
    8d24:	00088fc0 	call	88fc <_Balloc>
    8d28:	14400515 	stw	r17,20(r2)
    8d2c:	14000415 	stw	r16,16(r2)
    8d30:	dfc00217 	ldw	ra,8(sp)
    8d34:	dc400117 	ldw	r17,4(sp)
    8d38:	dc000017 	ldw	r16,0(sp)
    8d3c:	dec00304 	addi	sp,sp,12
    8d40:	f800283a 	ret

00008d44 <__multiply>:
    8d44:	defffa04 	addi	sp,sp,-24
    8d48:	dcc00315 	stw	r19,12(sp)
    8d4c:	dc800215 	stw	r18,8(sp)
    8d50:	34c00417 	ldw	r19,16(r6)
    8d54:	2c800417 	ldw	r18,16(r5)
    8d58:	dd000415 	stw	r20,16(sp)
    8d5c:	dc400115 	stw	r17,4(sp)
    8d60:	dfc00515 	stw	ra,20(sp)
    8d64:	dc000015 	stw	r16,0(sp)
    8d68:	2829883a 	mov	r20,r5
    8d6c:	3023883a 	mov	r17,r6
    8d70:	94c0050e 	bge	r18,r19,8d88 <__multiply+0x44>
    8d74:	9007883a 	mov	r3,r18
    8d78:	3029883a 	mov	r20,r6
    8d7c:	9825883a 	mov	r18,r19
    8d80:	2823883a 	mov	r17,r5
    8d84:	1827883a 	mov	r19,r3
    8d88:	a0800217 	ldw	r2,8(r20)
    8d8c:	94e1883a 	add	r16,r18,r19
    8d90:	a1400117 	ldw	r5,4(r20)
    8d94:	1400010e 	bge	r2,r16,8d9c <__multiply+0x58>
    8d98:	29400044 	addi	r5,r5,1
    8d9c:	00088fc0 	call	88fc <_Balloc>
    8da0:	8415883a 	add	r10,r16,r16
    8da4:	12c00504 	addi	r11,r2,20
    8da8:	5295883a 	add	r10,r10,r10
    8dac:	5a95883a 	add	r10,r11,r10
    8db0:	5807883a 	mov	r3,r11
    8db4:	5a80032e 	bgeu	r11,r10,8dc4 <__multiply+0x80>
    8db8:	18000015 	stw	zero,0(r3)
    8dbc:	18c00104 	addi	r3,r3,4
    8dc0:	1abffd36 	bltu	r3,r10,8db8 <__alt_data_end+0xff008db8>
    8dc4:	9ce7883a 	add	r19,r19,r19
    8dc8:	94a5883a 	add	r18,r18,r18
    8dcc:	89800504 	addi	r6,r17,20
    8dd0:	9ce7883a 	add	r19,r19,r19
    8dd4:	a3400504 	addi	r13,r20,20
    8dd8:	94a5883a 	add	r18,r18,r18
    8ddc:	34d9883a 	add	r12,r6,r19
    8de0:	6c93883a 	add	r9,r13,r18
    8de4:	3300422e 	bgeu	r6,r12,8ef0 <__multiply+0x1ac>
    8de8:	37c00017 	ldw	ra,0(r6)
    8dec:	fbffffcc 	andi	r15,ra,65535
    8df0:	78001b26 	beq	r15,zero,8e60 <__multiply+0x11c>
    8df4:	5811883a 	mov	r8,r11
    8df8:	681d883a 	mov	r14,r13
    8dfc:	000f883a 	mov	r7,zero
    8e00:	71000017 	ldw	r4,0(r14)
    8e04:	40c00017 	ldw	r3,0(r8)
    8e08:	73800104 	addi	r14,r14,4
    8e0c:	217fffcc 	andi	r5,r4,65535
    8e10:	2bcb383a 	mul	r5,r5,r15
    8e14:	2008d43a 	srli	r4,r4,16
    8e18:	1c7fffcc 	andi	r17,r3,65535
    8e1c:	2c4b883a 	add	r5,r5,r17
    8e20:	29cb883a 	add	r5,r5,r7
    8e24:	23c9383a 	mul	r4,r4,r15
    8e28:	1806d43a 	srli	r3,r3,16
    8e2c:	280ed43a 	srli	r7,r5,16
    8e30:	297fffcc 	andi	r5,r5,65535
    8e34:	20c7883a 	add	r3,r4,r3
    8e38:	19c7883a 	add	r3,r3,r7
    8e3c:	1808943a 	slli	r4,r3,16
    8e40:	4023883a 	mov	r17,r8
    8e44:	180ed43a 	srli	r7,r3,16
    8e48:	214ab03a 	or	r5,r4,r5
    8e4c:	41400015 	stw	r5,0(r8)
    8e50:	42000104 	addi	r8,r8,4
    8e54:	727fea36 	bltu	r14,r9,8e00 <__alt_data_end+0xff008e00>
    8e58:	89c00115 	stw	r7,4(r17)
    8e5c:	37c00017 	ldw	ra,0(r6)
    8e60:	f83ed43a 	srli	ra,ra,16
    8e64:	f8001f26 	beq	ra,zero,8ee4 <__multiply+0x1a0>
    8e68:	58c00017 	ldw	r3,0(r11)
    8e6c:	681d883a 	mov	r14,r13
    8e70:	581f883a 	mov	r15,r11
    8e74:	1811883a 	mov	r8,r3
    8e78:	5825883a 	mov	r18,r11
    8e7c:	000f883a 	mov	r7,zero
    8e80:	00000106 	br	8e88 <__multiply+0x144>
    8e84:	8825883a 	mov	r18,r17
    8e88:	7140000b 	ldhu	r5,0(r14)
    8e8c:	4010d43a 	srli	r8,r8,16
    8e90:	193fffcc 	andi	r4,r3,65535
    8e94:	2fcb383a 	mul	r5,r5,ra
    8e98:	7bc00104 	addi	r15,r15,4
    8e9c:	73800104 	addi	r14,r14,4
    8ea0:	2a0b883a 	add	r5,r5,r8
    8ea4:	29cb883a 	add	r5,r5,r7
    8ea8:	2806943a 	slli	r3,r5,16
    8eac:	94400104 	addi	r17,r18,4
    8eb0:	280ad43a 	srli	r5,r5,16
    8eb4:	1908b03a 	or	r4,r3,r4
    8eb8:	793fff15 	stw	r4,-4(r15)
    8ebc:	70ffff17 	ldw	r3,-4(r14)
    8ec0:	8a000017 	ldw	r8,0(r17)
    8ec4:	1806d43a 	srli	r3,r3,16
    8ec8:	413fffcc 	andi	r4,r8,65535
    8ecc:	1fc7383a 	mul	r3,r3,ra
    8ed0:	1907883a 	add	r3,r3,r4
    8ed4:	1947883a 	add	r3,r3,r5
    8ed8:	180ed43a 	srli	r7,r3,16
    8edc:	727fe936 	bltu	r14,r9,8e84 <__alt_data_end+0xff008e84>
    8ee0:	90c00115 	stw	r3,4(r18)
    8ee4:	31800104 	addi	r6,r6,4
    8ee8:	5ac00104 	addi	r11,r11,4
    8eec:	333fbe36 	bltu	r6,r12,8de8 <__alt_data_end+0xff008de8>
    8ef0:	0400090e 	bge	zero,r16,8f18 <__multiply+0x1d4>
    8ef4:	50ffff17 	ldw	r3,-4(r10)
    8ef8:	52bfff04 	addi	r10,r10,-4
    8efc:	18000326 	beq	r3,zero,8f0c <__multiply+0x1c8>
    8f00:	00000506 	br	8f18 <__multiply+0x1d4>
    8f04:	50c00017 	ldw	r3,0(r10)
    8f08:	1800031e 	bne	r3,zero,8f18 <__multiply+0x1d4>
    8f0c:	843fffc4 	addi	r16,r16,-1
    8f10:	52bfff04 	addi	r10,r10,-4
    8f14:	803ffb1e 	bne	r16,zero,8f04 <__alt_data_end+0xff008f04>
    8f18:	14000415 	stw	r16,16(r2)
    8f1c:	dfc00517 	ldw	ra,20(sp)
    8f20:	dd000417 	ldw	r20,16(sp)
    8f24:	dcc00317 	ldw	r19,12(sp)
    8f28:	dc800217 	ldw	r18,8(sp)
    8f2c:	dc400117 	ldw	r17,4(sp)
    8f30:	dc000017 	ldw	r16,0(sp)
    8f34:	dec00604 	addi	sp,sp,24
    8f38:	f800283a 	ret

00008f3c <__pow5mult>:
    8f3c:	defffa04 	addi	sp,sp,-24
    8f40:	dcc00315 	stw	r19,12(sp)
    8f44:	dc000015 	stw	r16,0(sp)
    8f48:	dfc00515 	stw	ra,20(sp)
    8f4c:	dd000415 	stw	r20,16(sp)
    8f50:	dc800215 	stw	r18,8(sp)
    8f54:	dc400115 	stw	r17,4(sp)
    8f58:	308000cc 	andi	r2,r6,3
    8f5c:	3021883a 	mov	r16,r6
    8f60:	2027883a 	mov	r19,r4
    8f64:	10002f1e 	bne	r2,zero,9024 <__pow5mult+0xe8>
    8f68:	2825883a 	mov	r18,r5
    8f6c:	8021d0ba 	srai	r16,r16,2
    8f70:	80001a26 	beq	r16,zero,8fdc <__pow5mult+0xa0>
    8f74:	9c401217 	ldw	r17,72(r19)
    8f78:	8800061e 	bne	r17,zero,8f94 <__pow5mult+0x58>
    8f7c:	00003406 	br	9050 <__pow5mult+0x114>
    8f80:	8021d07a 	srai	r16,r16,1
    8f84:	80001526 	beq	r16,zero,8fdc <__pow5mult+0xa0>
    8f88:	88800017 	ldw	r2,0(r17)
    8f8c:	10001c26 	beq	r2,zero,9000 <__pow5mult+0xc4>
    8f90:	1023883a 	mov	r17,r2
    8f94:	8080004c 	andi	r2,r16,1
    8f98:	103ff926 	beq	r2,zero,8f80 <__alt_data_end+0xff008f80>
    8f9c:	880d883a 	mov	r6,r17
    8fa0:	900b883a 	mov	r5,r18
    8fa4:	9809883a 	mov	r4,r19
    8fa8:	0008d440 	call	8d44 <__multiply>
    8fac:	90001b26 	beq	r18,zero,901c <__pow5mult+0xe0>
    8fb0:	91000117 	ldw	r4,4(r18)
    8fb4:	98c01317 	ldw	r3,76(r19)
    8fb8:	8021d07a 	srai	r16,r16,1
    8fbc:	2109883a 	add	r4,r4,r4
    8fc0:	2109883a 	add	r4,r4,r4
    8fc4:	1907883a 	add	r3,r3,r4
    8fc8:	19000017 	ldw	r4,0(r3)
    8fcc:	91000015 	stw	r4,0(r18)
    8fd0:	1c800015 	stw	r18,0(r3)
    8fd4:	1025883a 	mov	r18,r2
    8fd8:	803feb1e 	bne	r16,zero,8f88 <__alt_data_end+0xff008f88>
    8fdc:	9005883a 	mov	r2,r18
    8fe0:	dfc00517 	ldw	ra,20(sp)
    8fe4:	dd000417 	ldw	r20,16(sp)
    8fe8:	dcc00317 	ldw	r19,12(sp)
    8fec:	dc800217 	ldw	r18,8(sp)
    8ff0:	dc400117 	ldw	r17,4(sp)
    8ff4:	dc000017 	ldw	r16,0(sp)
    8ff8:	dec00604 	addi	sp,sp,24
    8ffc:	f800283a 	ret
    9000:	880d883a 	mov	r6,r17
    9004:	880b883a 	mov	r5,r17
    9008:	9809883a 	mov	r4,r19
    900c:	0008d440 	call	8d44 <__multiply>
    9010:	88800015 	stw	r2,0(r17)
    9014:	10000015 	stw	zero,0(r2)
    9018:	003fdd06 	br	8f90 <__alt_data_end+0xff008f90>
    901c:	1025883a 	mov	r18,r2
    9020:	003fd706 	br	8f80 <__alt_data_end+0xff008f80>
    9024:	10bfffc4 	addi	r2,r2,-1
    9028:	1085883a 	add	r2,r2,r2
    902c:	00c00074 	movhi	r3,1
    9030:	18c8df04 	addi	r3,r3,9084
    9034:	1085883a 	add	r2,r2,r2
    9038:	1885883a 	add	r2,r3,r2
    903c:	11800017 	ldw	r6,0(r2)
    9040:	000f883a 	mov	r7,zero
    9044:	00089cc0 	call	89cc <__multadd>
    9048:	1025883a 	mov	r18,r2
    904c:	003fc706 	br	8f6c <__alt_data_end+0xff008f6c>
    9050:	05000044 	movi	r20,1
    9054:	a00b883a 	mov	r5,r20
    9058:	9809883a 	mov	r4,r19
    905c:	00088fc0 	call	88fc <_Balloc>
    9060:	1023883a 	mov	r17,r2
    9064:	00809c44 	movi	r2,625
    9068:	88800515 	stw	r2,20(r17)
    906c:	8d000415 	stw	r20,16(r17)
    9070:	9c401215 	stw	r17,72(r19)
    9074:	88000015 	stw	zero,0(r17)
    9078:	003fc606 	br	8f94 <__alt_data_end+0xff008f94>

0000907c <__lshift>:
    907c:	defff904 	addi	sp,sp,-28
    9080:	dd400515 	stw	r21,20(sp)
    9084:	dcc00315 	stw	r19,12(sp)
    9088:	302bd17a 	srai	r21,r6,5
    908c:	2cc00417 	ldw	r19,16(r5)
    9090:	28800217 	ldw	r2,8(r5)
    9094:	dd000415 	stw	r20,16(sp)
    9098:	ace7883a 	add	r19,r21,r19
    909c:	dc800215 	stw	r18,8(sp)
    90a0:	dc400115 	stw	r17,4(sp)
    90a4:	dc000015 	stw	r16,0(sp)
    90a8:	dfc00615 	stw	ra,24(sp)
    90ac:	9c000044 	addi	r16,r19,1
    90b0:	2823883a 	mov	r17,r5
    90b4:	3029883a 	mov	r20,r6
    90b8:	2025883a 	mov	r18,r4
    90bc:	29400117 	ldw	r5,4(r5)
    90c0:	1400030e 	bge	r2,r16,90d0 <__lshift+0x54>
    90c4:	1085883a 	add	r2,r2,r2
    90c8:	29400044 	addi	r5,r5,1
    90cc:	143ffd16 	blt	r2,r16,90c4 <__alt_data_end+0xff0090c4>
    90d0:	9009883a 	mov	r4,r18
    90d4:	00088fc0 	call	88fc <_Balloc>
    90d8:	10c00504 	addi	r3,r2,20
    90dc:	0540070e 	bge	zero,r21,90fc <__lshift+0x80>
    90e0:	ad6b883a 	add	r21,r21,r21
    90e4:	ad6b883a 	add	r21,r21,r21
    90e8:	1809883a 	mov	r4,r3
    90ec:	1d47883a 	add	r3,r3,r21
    90f0:	20000015 	stw	zero,0(r4)
    90f4:	21000104 	addi	r4,r4,4
    90f8:	193ffd1e 	bne	r3,r4,90f0 <__alt_data_end+0xff0090f0>
    90fc:	8a000417 	ldw	r8,16(r17)
    9100:	89000504 	addi	r4,r17,20
    9104:	a18007cc 	andi	r6,r20,31
    9108:	4211883a 	add	r8,r8,r8
    910c:	4211883a 	add	r8,r8,r8
    9110:	2211883a 	add	r8,r4,r8
    9114:	30002326 	beq	r6,zero,91a4 <__lshift+0x128>
    9118:	02400804 	movi	r9,32
    911c:	4993c83a 	sub	r9,r9,r6
    9120:	000b883a 	mov	r5,zero
    9124:	21c00017 	ldw	r7,0(r4)
    9128:	1815883a 	mov	r10,r3
    912c:	18c00104 	addi	r3,r3,4
    9130:	398e983a 	sll	r7,r7,r6
    9134:	21000104 	addi	r4,r4,4
    9138:	394ab03a 	or	r5,r7,r5
    913c:	197fff15 	stw	r5,-4(r3)
    9140:	217fff17 	ldw	r5,-4(r4)
    9144:	2a4ad83a 	srl	r5,r5,r9
    9148:	223ff636 	bltu	r4,r8,9124 <__alt_data_end+0xff009124>
    914c:	51400115 	stw	r5,4(r10)
    9150:	28001a1e 	bne	r5,zero,91bc <__lshift+0x140>
    9154:	843fffc4 	addi	r16,r16,-1
    9158:	14000415 	stw	r16,16(r2)
    915c:	88000826 	beq	r17,zero,9180 <__lshift+0x104>
    9160:	89000117 	ldw	r4,4(r17)
    9164:	90c01317 	ldw	r3,76(r18)
    9168:	2109883a 	add	r4,r4,r4
    916c:	2109883a 	add	r4,r4,r4
    9170:	1907883a 	add	r3,r3,r4
    9174:	19000017 	ldw	r4,0(r3)
    9178:	89000015 	stw	r4,0(r17)
    917c:	1c400015 	stw	r17,0(r3)
    9180:	dfc00617 	ldw	ra,24(sp)
    9184:	dd400517 	ldw	r21,20(sp)
    9188:	dd000417 	ldw	r20,16(sp)
    918c:	dcc00317 	ldw	r19,12(sp)
    9190:	dc800217 	ldw	r18,8(sp)
    9194:	dc400117 	ldw	r17,4(sp)
    9198:	dc000017 	ldw	r16,0(sp)
    919c:	dec00704 	addi	sp,sp,28
    91a0:	f800283a 	ret
    91a4:	21400017 	ldw	r5,0(r4)
    91a8:	18c00104 	addi	r3,r3,4
    91ac:	21000104 	addi	r4,r4,4
    91b0:	197fff15 	stw	r5,-4(r3)
    91b4:	223ffb36 	bltu	r4,r8,91a4 <__alt_data_end+0xff0091a4>
    91b8:	003fe606 	br	9154 <__alt_data_end+0xff009154>
    91bc:	9c000084 	addi	r16,r19,2
    91c0:	003fe406 	br	9154 <__alt_data_end+0xff009154>

000091c4 <__mcmp>:
    91c4:	20800417 	ldw	r2,16(r4)
    91c8:	28c00417 	ldw	r3,16(r5)
    91cc:	10c5c83a 	sub	r2,r2,r3
    91d0:	1000111e 	bne	r2,zero,9218 <__mcmp+0x54>
    91d4:	18c7883a 	add	r3,r3,r3
    91d8:	18c7883a 	add	r3,r3,r3
    91dc:	21000504 	addi	r4,r4,20
    91e0:	29400504 	addi	r5,r5,20
    91e4:	20c5883a 	add	r2,r4,r3
    91e8:	28cb883a 	add	r5,r5,r3
    91ec:	00000106 	br	91f4 <__mcmp+0x30>
    91f0:	20800a2e 	bgeu	r4,r2,921c <__mcmp+0x58>
    91f4:	10bfff04 	addi	r2,r2,-4
    91f8:	297fff04 	addi	r5,r5,-4
    91fc:	11800017 	ldw	r6,0(r2)
    9200:	28c00017 	ldw	r3,0(r5)
    9204:	30fffa26 	beq	r6,r3,91f0 <__alt_data_end+0xff0091f0>
    9208:	30c00236 	bltu	r6,r3,9214 <__mcmp+0x50>
    920c:	00800044 	movi	r2,1
    9210:	f800283a 	ret
    9214:	00bfffc4 	movi	r2,-1
    9218:	f800283a 	ret
    921c:	0005883a 	mov	r2,zero
    9220:	f800283a 	ret

00009224 <__mdiff>:
    9224:	28c00417 	ldw	r3,16(r5)
    9228:	30800417 	ldw	r2,16(r6)
    922c:	defffa04 	addi	sp,sp,-24
    9230:	dcc00315 	stw	r19,12(sp)
    9234:	dc800215 	stw	r18,8(sp)
    9238:	dfc00515 	stw	ra,20(sp)
    923c:	dd000415 	stw	r20,16(sp)
    9240:	dc400115 	stw	r17,4(sp)
    9244:	dc000015 	stw	r16,0(sp)
    9248:	1887c83a 	sub	r3,r3,r2
    924c:	2825883a 	mov	r18,r5
    9250:	3027883a 	mov	r19,r6
    9254:	1800141e 	bne	r3,zero,92a8 <__mdiff+0x84>
    9258:	1085883a 	add	r2,r2,r2
    925c:	1085883a 	add	r2,r2,r2
    9260:	2a000504 	addi	r8,r5,20
    9264:	34000504 	addi	r16,r6,20
    9268:	4087883a 	add	r3,r8,r2
    926c:	8085883a 	add	r2,r16,r2
    9270:	00000106 	br	9278 <__mdiff+0x54>
    9274:	40c0592e 	bgeu	r8,r3,93dc <__mdiff+0x1b8>
    9278:	18ffff04 	addi	r3,r3,-4
    927c:	10bfff04 	addi	r2,r2,-4
    9280:	19c00017 	ldw	r7,0(r3)
    9284:	11400017 	ldw	r5,0(r2)
    9288:	397ffa26 	beq	r7,r5,9274 <__alt_data_end+0xff009274>
    928c:	3940592e 	bgeu	r7,r5,93f4 <__mdiff+0x1d0>
    9290:	9005883a 	mov	r2,r18
    9294:	4023883a 	mov	r17,r8
    9298:	9825883a 	mov	r18,r19
    929c:	05000044 	movi	r20,1
    92a0:	1027883a 	mov	r19,r2
    92a4:	00000406 	br	92b8 <__mdiff+0x94>
    92a8:	18005616 	blt	r3,zero,9404 <__mdiff+0x1e0>
    92ac:	34400504 	addi	r17,r6,20
    92b0:	2c000504 	addi	r16,r5,20
    92b4:	0029883a 	mov	r20,zero
    92b8:	91400117 	ldw	r5,4(r18)
    92bc:	00088fc0 	call	88fc <_Balloc>
    92c0:	92400417 	ldw	r9,16(r18)
    92c4:	9b000417 	ldw	r12,16(r19)
    92c8:	12c00504 	addi	r11,r2,20
    92cc:	4a51883a 	add	r8,r9,r9
    92d0:	6319883a 	add	r12,r12,r12
    92d4:	4211883a 	add	r8,r8,r8
    92d8:	6319883a 	add	r12,r12,r12
    92dc:	15000315 	stw	r20,12(r2)
    92e0:	8211883a 	add	r8,r16,r8
    92e4:	8b19883a 	add	r12,r17,r12
    92e8:	0007883a 	mov	r3,zero
    92ec:	81400017 	ldw	r5,0(r16)
    92f0:	89c00017 	ldw	r7,0(r17)
    92f4:	59800104 	addi	r6,r11,4
    92f8:	293fffcc 	andi	r4,r5,65535
    92fc:	20c7883a 	add	r3,r4,r3
    9300:	393fffcc 	andi	r4,r7,65535
    9304:	1909c83a 	sub	r4,r3,r4
    9308:	280ad43a 	srli	r5,r5,16
    930c:	380ed43a 	srli	r7,r7,16
    9310:	2007d43a 	srai	r3,r4,16
    9314:	213fffcc 	andi	r4,r4,65535
    9318:	29cbc83a 	sub	r5,r5,r7
    931c:	28c7883a 	add	r3,r5,r3
    9320:	180a943a 	slli	r5,r3,16
    9324:	8c400104 	addi	r17,r17,4
    9328:	84000104 	addi	r16,r16,4
    932c:	2908b03a 	or	r4,r5,r4
    9330:	59000015 	stw	r4,0(r11)
    9334:	1807d43a 	srai	r3,r3,16
    9338:	3015883a 	mov	r10,r6
    933c:	3017883a 	mov	r11,r6
    9340:	8b3fea36 	bltu	r17,r12,92ec <__alt_data_end+0xff0092ec>
    9344:	8200162e 	bgeu	r16,r8,93a0 <__mdiff+0x17c>
    9348:	8017883a 	mov	r11,r16
    934c:	59400017 	ldw	r5,0(r11)
    9350:	31800104 	addi	r6,r6,4
    9354:	5ac00104 	addi	r11,r11,4
    9358:	293fffcc 	andi	r4,r5,65535
    935c:	20c7883a 	add	r3,r4,r3
    9360:	280ed43a 	srli	r7,r5,16
    9364:	180bd43a 	srai	r5,r3,16
    9368:	193fffcc 	andi	r4,r3,65535
    936c:	3947883a 	add	r3,r7,r5
    9370:	180a943a 	slli	r5,r3,16
    9374:	1807d43a 	srai	r3,r3,16
    9378:	2908b03a 	or	r4,r5,r4
    937c:	313fff15 	stw	r4,-4(r6)
    9380:	5a3ff236 	bltu	r11,r8,934c <__alt_data_end+0xff00934c>
    9384:	0406303a 	nor	r3,zero,r16
    9388:	1a07883a 	add	r3,r3,r8
    938c:	1806d0ba 	srli	r3,r3,2
    9390:	18c00044 	addi	r3,r3,1
    9394:	18c7883a 	add	r3,r3,r3
    9398:	18c7883a 	add	r3,r3,r3
    939c:	50d5883a 	add	r10,r10,r3
    93a0:	50ffff04 	addi	r3,r10,-4
    93a4:	2000041e 	bne	r4,zero,93b8 <__mdiff+0x194>
    93a8:	18ffff04 	addi	r3,r3,-4
    93ac:	19000017 	ldw	r4,0(r3)
    93b0:	4a7fffc4 	addi	r9,r9,-1
    93b4:	203ffc26 	beq	r4,zero,93a8 <__alt_data_end+0xff0093a8>
    93b8:	12400415 	stw	r9,16(r2)
    93bc:	dfc00517 	ldw	ra,20(sp)
    93c0:	dd000417 	ldw	r20,16(sp)
    93c4:	dcc00317 	ldw	r19,12(sp)
    93c8:	dc800217 	ldw	r18,8(sp)
    93cc:	dc400117 	ldw	r17,4(sp)
    93d0:	dc000017 	ldw	r16,0(sp)
    93d4:	dec00604 	addi	sp,sp,24
    93d8:	f800283a 	ret
    93dc:	000b883a 	mov	r5,zero
    93e0:	00088fc0 	call	88fc <_Balloc>
    93e4:	00c00044 	movi	r3,1
    93e8:	10c00415 	stw	r3,16(r2)
    93ec:	10000515 	stw	zero,20(r2)
    93f0:	003ff206 	br	93bc <__alt_data_end+0xff0093bc>
    93f4:	8023883a 	mov	r17,r16
    93f8:	0029883a 	mov	r20,zero
    93fc:	4021883a 	mov	r16,r8
    9400:	003fad06 	br	92b8 <__alt_data_end+0xff0092b8>
    9404:	9005883a 	mov	r2,r18
    9408:	94400504 	addi	r17,r18,20
    940c:	9c000504 	addi	r16,r19,20
    9410:	9825883a 	mov	r18,r19
    9414:	05000044 	movi	r20,1
    9418:	1027883a 	mov	r19,r2
    941c:	003fa606 	br	92b8 <__alt_data_end+0xff0092b8>

00009420 <__ulp>:
    9420:	295ffc2c 	andhi	r5,r5,32752
    9424:	00bf3034 	movhi	r2,64704
    9428:	2887883a 	add	r3,r5,r2
    942c:	00c0020e 	bge	zero,r3,9438 <__ulp+0x18>
    9430:	0005883a 	mov	r2,zero
    9434:	f800283a 	ret
    9438:	00c7c83a 	sub	r3,zero,r3
    943c:	1807d53a 	srai	r3,r3,20
    9440:	008004c4 	movi	r2,19
    9444:	10c00b0e 	bge	r2,r3,9474 <__ulp+0x54>
    9448:	18bffb04 	addi	r2,r3,-20
    944c:	01000784 	movi	r4,30
    9450:	0007883a 	mov	r3,zero
    9454:	20800516 	blt	r4,r2,946c <__ulp+0x4c>
    9458:	010007c4 	movi	r4,31
    945c:	2089c83a 	sub	r4,r4,r2
    9460:	00800044 	movi	r2,1
    9464:	1104983a 	sll	r2,r2,r4
    9468:	f800283a 	ret
    946c:	00800044 	movi	r2,1
    9470:	f800283a 	ret
    9474:	01400234 	movhi	r5,8
    9478:	28c7d83a 	sra	r3,r5,r3
    947c:	0005883a 	mov	r2,zero
    9480:	f800283a 	ret

00009484 <__b2d>:
    9484:	defffa04 	addi	sp,sp,-24
    9488:	dc000015 	stw	r16,0(sp)
    948c:	24000417 	ldw	r16,16(r4)
    9490:	dc400115 	stw	r17,4(sp)
    9494:	24400504 	addi	r17,r4,20
    9498:	8421883a 	add	r16,r16,r16
    949c:	8421883a 	add	r16,r16,r16
    94a0:	8c21883a 	add	r16,r17,r16
    94a4:	dc800215 	stw	r18,8(sp)
    94a8:	84bfff17 	ldw	r18,-4(r16)
    94ac:	dd000415 	stw	r20,16(sp)
    94b0:	dcc00315 	stw	r19,12(sp)
    94b4:	9009883a 	mov	r4,r18
    94b8:	2829883a 	mov	r20,r5
    94bc:	dfc00515 	stw	ra,20(sp)
    94c0:	0008bf00 	call	8bf0 <__hi0bits>
    94c4:	00c00804 	movi	r3,32
    94c8:	1889c83a 	sub	r4,r3,r2
    94cc:	a1000015 	stw	r4,0(r20)
    94d0:	01000284 	movi	r4,10
    94d4:	84ffff04 	addi	r19,r16,-4
    94d8:	20801216 	blt	r4,r2,9524 <__b2d+0xa0>
    94dc:	018002c4 	movi	r6,11
    94e0:	308dc83a 	sub	r6,r6,r2
    94e4:	9186d83a 	srl	r3,r18,r6
    94e8:	18cffc34 	orhi	r3,r3,16368
    94ec:	8cc0212e 	bgeu	r17,r19,9574 <__b2d+0xf0>
    94f0:	813ffe17 	ldw	r4,-8(r16)
    94f4:	218cd83a 	srl	r6,r4,r6
    94f8:	10800544 	addi	r2,r2,21
    94fc:	9084983a 	sll	r2,r18,r2
    9500:	1184b03a 	or	r2,r2,r6
    9504:	dfc00517 	ldw	ra,20(sp)
    9508:	dd000417 	ldw	r20,16(sp)
    950c:	dcc00317 	ldw	r19,12(sp)
    9510:	dc800217 	ldw	r18,8(sp)
    9514:	dc400117 	ldw	r17,4(sp)
    9518:	dc000017 	ldw	r16,0(sp)
    951c:	dec00604 	addi	sp,sp,24
    9520:	f800283a 	ret
    9524:	8cc00f2e 	bgeu	r17,r19,9564 <__b2d+0xe0>
    9528:	117ffd44 	addi	r5,r2,-11
    952c:	80bffe17 	ldw	r2,-8(r16)
    9530:	28000e26 	beq	r5,zero,956c <__b2d+0xe8>
    9534:	1949c83a 	sub	r4,r3,r5
    9538:	9164983a 	sll	r18,r18,r5
    953c:	1106d83a 	srl	r3,r2,r4
    9540:	81bffe04 	addi	r6,r16,-8
    9544:	948ffc34 	orhi	r18,r18,16368
    9548:	90c6b03a 	or	r3,r18,r3
    954c:	89800e2e 	bgeu	r17,r6,9588 <__b2d+0x104>
    9550:	81bffd17 	ldw	r6,-12(r16)
    9554:	1144983a 	sll	r2,r2,r5
    9558:	310ad83a 	srl	r5,r6,r4
    955c:	2884b03a 	or	r2,r5,r2
    9560:	003fe806 	br	9504 <__alt_data_end+0xff009504>
    9564:	10bffd44 	addi	r2,r2,-11
    9568:	1000041e 	bne	r2,zero,957c <__b2d+0xf8>
    956c:	90cffc34 	orhi	r3,r18,16368
    9570:	003fe406 	br	9504 <__alt_data_end+0xff009504>
    9574:	000d883a 	mov	r6,zero
    9578:	003fdf06 	br	94f8 <__alt_data_end+0xff0094f8>
    957c:	90a4983a 	sll	r18,r18,r2
    9580:	0005883a 	mov	r2,zero
    9584:	003ff906 	br	956c <__alt_data_end+0xff00956c>
    9588:	1144983a 	sll	r2,r2,r5
    958c:	003fdd06 	br	9504 <__alt_data_end+0xff009504>

00009590 <__d2b>:
    9590:	defff804 	addi	sp,sp,-32
    9594:	dc000215 	stw	r16,8(sp)
    9598:	3021883a 	mov	r16,r6
    959c:	dc400315 	stw	r17,12(sp)
    95a0:	8022907a 	slli	r17,r16,1
    95a4:	dd000615 	stw	r20,24(sp)
    95a8:	2829883a 	mov	r20,r5
    95ac:	01400044 	movi	r5,1
    95b0:	dcc00515 	stw	r19,20(sp)
    95b4:	dc800415 	stw	r18,16(sp)
    95b8:	dfc00715 	stw	ra,28(sp)
    95bc:	3825883a 	mov	r18,r7
    95c0:	8822d57a 	srli	r17,r17,21
    95c4:	00088fc0 	call	88fc <_Balloc>
    95c8:	1027883a 	mov	r19,r2
    95cc:	00800434 	movhi	r2,16
    95d0:	10bfffc4 	addi	r2,r2,-1
    95d4:	808c703a 	and	r6,r16,r2
    95d8:	88000126 	beq	r17,zero,95e0 <__d2b+0x50>
    95dc:	31800434 	orhi	r6,r6,16
    95e0:	d9800015 	stw	r6,0(sp)
    95e4:	a0002426 	beq	r20,zero,9678 <__d2b+0xe8>
    95e8:	d9000104 	addi	r4,sp,4
    95ec:	dd000115 	stw	r20,4(sp)
    95f0:	0008c580 	call	8c58 <__lo0bits>
    95f4:	d8c00017 	ldw	r3,0(sp)
    95f8:	10002f1e 	bne	r2,zero,96b8 <__d2b+0x128>
    95fc:	d9000117 	ldw	r4,4(sp)
    9600:	99000515 	stw	r4,20(r19)
    9604:	1821003a 	cmpeq	r16,r3,zero
    9608:	01000084 	movi	r4,2
    960c:	2421c83a 	sub	r16,r4,r16
    9610:	98c00615 	stw	r3,24(r19)
    9614:	9c000415 	stw	r16,16(r19)
    9618:	88001f1e 	bne	r17,zero,9698 <__d2b+0x108>
    961c:	10bef384 	addi	r2,r2,-1074
    9620:	90800015 	stw	r2,0(r18)
    9624:	00900034 	movhi	r2,16384
    9628:	10bfffc4 	addi	r2,r2,-1
    962c:	8085883a 	add	r2,r16,r2
    9630:	1085883a 	add	r2,r2,r2
    9634:	1085883a 	add	r2,r2,r2
    9638:	9885883a 	add	r2,r19,r2
    963c:	11000517 	ldw	r4,20(r2)
    9640:	8020917a 	slli	r16,r16,5
    9644:	0008bf00 	call	8bf0 <__hi0bits>
    9648:	d8c00817 	ldw	r3,32(sp)
    964c:	8085c83a 	sub	r2,r16,r2
    9650:	18800015 	stw	r2,0(r3)
    9654:	9805883a 	mov	r2,r19
    9658:	dfc00717 	ldw	ra,28(sp)
    965c:	dd000617 	ldw	r20,24(sp)
    9660:	dcc00517 	ldw	r19,20(sp)
    9664:	dc800417 	ldw	r18,16(sp)
    9668:	dc400317 	ldw	r17,12(sp)
    966c:	dc000217 	ldw	r16,8(sp)
    9670:	dec00804 	addi	sp,sp,32
    9674:	f800283a 	ret
    9678:	d809883a 	mov	r4,sp
    967c:	0008c580 	call	8c58 <__lo0bits>
    9680:	d8c00017 	ldw	r3,0(sp)
    9684:	04000044 	movi	r16,1
    9688:	9c000415 	stw	r16,16(r19)
    968c:	98c00515 	stw	r3,20(r19)
    9690:	10800804 	addi	r2,r2,32
    9694:	883fe126 	beq	r17,zero,961c <__alt_data_end+0xff00961c>
    9698:	00c00d44 	movi	r3,53
    969c:	8c7ef344 	addi	r17,r17,-1075
    96a0:	88a3883a 	add	r17,r17,r2
    96a4:	1885c83a 	sub	r2,r3,r2
    96a8:	d8c00817 	ldw	r3,32(sp)
    96ac:	94400015 	stw	r17,0(r18)
    96b0:	18800015 	stw	r2,0(r3)
    96b4:	003fe706 	br	9654 <__alt_data_end+0xff009654>
    96b8:	01000804 	movi	r4,32
    96bc:	2089c83a 	sub	r4,r4,r2
    96c0:	1908983a 	sll	r4,r3,r4
    96c4:	d9400117 	ldw	r5,4(sp)
    96c8:	1886d83a 	srl	r3,r3,r2
    96cc:	2148b03a 	or	r4,r4,r5
    96d0:	99000515 	stw	r4,20(r19)
    96d4:	d8c00015 	stw	r3,0(sp)
    96d8:	003fca06 	br	9604 <__alt_data_end+0xff009604>

000096dc <__ratio>:
    96dc:	defff904 	addi	sp,sp,-28
    96e0:	dc400315 	stw	r17,12(sp)
    96e4:	2823883a 	mov	r17,r5
    96e8:	d9400104 	addi	r5,sp,4
    96ec:	dfc00615 	stw	ra,24(sp)
    96f0:	dcc00515 	stw	r19,20(sp)
    96f4:	dc800415 	stw	r18,16(sp)
    96f8:	2027883a 	mov	r19,r4
    96fc:	dc000215 	stw	r16,8(sp)
    9700:	00094840 	call	9484 <__b2d>
    9704:	d80b883a 	mov	r5,sp
    9708:	8809883a 	mov	r4,r17
    970c:	1025883a 	mov	r18,r2
    9710:	1821883a 	mov	r16,r3
    9714:	00094840 	call	9484 <__b2d>
    9718:	8a000417 	ldw	r8,16(r17)
    971c:	99000417 	ldw	r4,16(r19)
    9720:	d9400117 	ldw	r5,4(sp)
    9724:	2209c83a 	sub	r4,r4,r8
    9728:	2010917a 	slli	r8,r4,5
    972c:	d9000017 	ldw	r4,0(sp)
    9730:	2909c83a 	sub	r4,r5,r4
    9734:	4109883a 	add	r4,r8,r4
    9738:	01000e0e 	bge	zero,r4,9774 <__ratio+0x98>
    973c:	2008953a 	slli	r4,r4,20
    9740:	2421883a 	add	r16,r4,r16
    9744:	100d883a 	mov	r6,r2
    9748:	180f883a 	mov	r7,r3
    974c:	9009883a 	mov	r4,r18
    9750:	800b883a 	mov	r5,r16
    9754:	000d5740 	call	d574 <__divdf3>
    9758:	dfc00617 	ldw	ra,24(sp)
    975c:	dcc00517 	ldw	r19,20(sp)
    9760:	dc800417 	ldw	r18,16(sp)
    9764:	dc400317 	ldw	r17,12(sp)
    9768:	dc000217 	ldw	r16,8(sp)
    976c:	dec00704 	addi	sp,sp,28
    9770:	f800283a 	ret
    9774:	2008953a 	slli	r4,r4,20
    9778:	1907c83a 	sub	r3,r3,r4
    977c:	003ff106 	br	9744 <__alt_data_end+0xff009744>

00009780 <_mprec_log10>:
    9780:	defffe04 	addi	sp,sp,-8
    9784:	dc000015 	stw	r16,0(sp)
    9788:	dfc00115 	stw	ra,4(sp)
    978c:	008005c4 	movi	r2,23
    9790:	2021883a 	mov	r16,r4
    9794:	11000d0e 	bge	r2,r4,97cc <_mprec_log10+0x4c>
    9798:	0005883a 	mov	r2,zero
    979c:	00cffc34 	movhi	r3,16368
    97a0:	843fffc4 	addi	r16,r16,-1
    97a4:	000d883a 	mov	r6,zero
    97a8:	01d00934 	movhi	r7,16420
    97ac:	1009883a 	mov	r4,r2
    97b0:	180b883a 	mov	r5,r3
    97b4:	000e0b40 	call	e0b4 <__muldf3>
    97b8:	803ff91e 	bne	r16,zero,97a0 <__alt_data_end+0xff0097a0>
    97bc:	dfc00117 	ldw	ra,4(sp)
    97c0:	dc000017 	ldw	r16,0(sp)
    97c4:	dec00204 	addi	sp,sp,8
    97c8:	f800283a 	ret
    97cc:	202090fa 	slli	r16,r4,3
    97d0:	00800074 	movhi	r2,1
    97d4:	1088f604 	addi	r2,r2,9176
    97d8:	1421883a 	add	r16,r2,r16
    97dc:	80800017 	ldw	r2,0(r16)
    97e0:	80c00117 	ldw	r3,4(r16)
    97e4:	dfc00117 	ldw	ra,4(sp)
    97e8:	dc000017 	ldw	r16,0(sp)
    97ec:	dec00204 	addi	sp,sp,8
    97f0:	f800283a 	ret

000097f4 <__copybits>:
    97f4:	297fffc4 	addi	r5,r5,-1
    97f8:	280fd17a 	srai	r7,r5,5
    97fc:	30c00417 	ldw	r3,16(r6)
    9800:	30800504 	addi	r2,r6,20
    9804:	39c00044 	addi	r7,r7,1
    9808:	18c7883a 	add	r3,r3,r3
    980c:	39cf883a 	add	r7,r7,r7
    9810:	18c7883a 	add	r3,r3,r3
    9814:	39cf883a 	add	r7,r7,r7
    9818:	10c7883a 	add	r3,r2,r3
    981c:	21cf883a 	add	r7,r4,r7
    9820:	10c00d2e 	bgeu	r2,r3,9858 <__copybits+0x64>
    9824:	200b883a 	mov	r5,r4
    9828:	12000017 	ldw	r8,0(r2)
    982c:	29400104 	addi	r5,r5,4
    9830:	10800104 	addi	r2,r2,4
    9834:	2a3fff15 	stw	r8,-4(r5)
    9838:	10fffb36 	bltu	r2,r3,9828 <__alt_data_end+0xff009828>
    983c:	1985c83a 	sub	r2,r3,r6
    9840:	10bffac4 	addi	r2,r2,-21
    9844:	1004d0ba 	srli	r2,r2,2
    9848:	10800044 	addi	r2,r2,1
    984c:	1085883a 	add	r2,r2,r2
    9850:	1085883a 	add	r2,r2,r2
    9854:	2089883a 	add	r4,r4,r2
    9858:	21c0032e 	bgeu	r4,r7,9868 <__copybits+0x74>
    985c:	20000015 	stw	zero,0(r4)
    9860:	21000104 	addi	r4,r4,4
    9864:	21fffd36 	bltu	r4,r7,985c <__alt_data_end+0xff00985c>
    9868:	f800283a 	ret

0000986c <__any_on>:
    986c:	20c00417 	ldw	r3,16(r4)
    9870:	2805d17a 	srai	r2,r5,5
    9874:	21000504 	addi	r4,r4,20
    9878:	18800d0e 	bge	r3,r2,98b0 <__any_on+0x44>
    987c:	18c7883a 	add	r3,r3,r3
    9880:	18c7883a 	add	r3,r3,r3
    9884:	20c7883a 	add	r3,r4,r3
    9888:	20c0192e 	bgeu	r4,r3,98f0 <__any_on+0x84>
    988c:	18bfff17 	ldw	r2,-4(r3)
    9890:	18ffff04 	addi	r3,r3,-4
    9894:	1000041e 	bne	r2,zero,98a8 <__any_on+0x3c>
    9898:	20c0142e 	bgeu	r4,r3,98ec <__any_on+0x80>
    989c:	18ffff04 	addi	r3,r3,-4
    98a0:	19400017 	ldw	r5,0(r3)
    98a4:	283ffc26 	beq	r5,zero,9898 <__alt_data_end+0xff009898>
    98a8:	00800044 	movi	r2,1
    98ac:	f800283a 	ret
    98b0:	10c00a0e 	bge	r2,r3,98dc <__any_on+0x70>
    98b4:	1085883a 	add	r2,r2,r2
    98b8:	1085883a 	add	r2,r2,r2
    98bc:	294007cc 	andi	r5,r5,31
    98c0:	2087883a 	add	r3,r4,r2
    98c4:	283ff026 	beq	r5,zero,9888 <__alt_data_end+0xff009888>
    98c8:	19800017 	ldw	r6,0(r3)
    98cc:	3144d83a 	srl	r2,r6,r5
    98d0:	114a983a 	sll	r5,r2,r5
    98d4:	317ff41e 	bne	r6,r5,98a8 <__alt_data_end+0xff0098a8>
    98d8:	003feb06 	br	9888 <__alt_data_end+0xff009888>
    98dc:	1085883a 	add	r2,r2,r2
    98e0:	1085883a 	add	r2,r2,r2
    98e4:	2087883a 	add	r3,r4,r2
    98e8:	003fe706 	br	9888 <__alt_data_end+0xff009888>
    98ec:	f800283a 	ret
    98f0:	0005883a 	mov	r2,zero
    98f4:	f800283a 	ret

000098f8 <_realloc_r>:
    98f8:	defff604 	addi	sp,sp,-40
    98fc:	dc800215 	stw	r18,8(sp)
    9900:	dfc00915 	stw	ra,36(sp)
    9904:	df000815 	stw	fp,32(sp)
    9908:	ddc00715 	stw	r23,28(sp)
    990c:	dd800615 	stw	r22,24(sp)
    9910:	dd400515 	stw	r21,20(sp)
    9914:	dd000415 	stw	r20,16(sp)
    9918:	dcc00315 	stw	r19,12(sp)
    991c:	dc400115 	stw	r17,4(sp)
    9920:	dc000015 	stw	r16,0(sp)
    9924:	3025883a 	mov	r18,r6
    9928:	2800b726 	beq	r5,zero,9c08 <_realloc_r+0x310>
    992c:	282b883a 	mov	r21,r5
    9930:	2029883a 	mov	r20,r4
    9934:	000f8480 	call	f848 <__malloc_lock>
    9938:	a8bfff17 	ldw	r2,-4(r21)
    993c:	043fff04 	movi	r16,-4
    9940:	90c002c4 	addi	r3,r18,11
    9944:	01000584 	movi	r4,22
    9948:	acfffe04 	addi	r19,r21,-8
    994c:	1420703a 	and	r16,r2,r16
    9950:	20c0332e 	bgeu	r4,r3,9a20 <_realloc_r+0x128>
    9954:	047ffe04 	movi	r17,-8
    9958:	1c62703a 	and	r17,r3,r17
    995c:	8807883a 	mov	r3,r17
    9960:	88005816 	blt	r17,zero,9ac4 <_realloc_r+0x1cc>
    9964:	8c805736 	bltu	r17,r18,9ac4 <_realloc_r+0x1cc>
    9968:	80c0300e 	bge	r16,r3,9a2c <_realloc_r+0x134>
    996c:	07000074 	movhi	fp,1
    9970:	e7093b04 	addi	fp,fp,9452
    9974:	e1c00217 	ldw	r7,8(fp)
    9978:	9c09883a 	add	r4,r19,r16
    997c:	22000117 	ldw	r8,4(r4)
    9980:	21c06326 	beq	r4,r7,9b10 <_realloc_r+0x218>
    9984:	017fff84 	movi	r5,-2
    9988:	414a703a 	and	r5,r8,r5
    998c:	214b883a 	add	r5,r4,r5
    9990:	29800117 	ldw	r6,4(r5)
    9994:	3180004c 	andi	r6,r6,1
    9998:	30003f26 	beq	r6,zero,9a98 <_realloc_r+0x1a0>
    999c:	1080004c 	andi	r2,r2,1
    99a0:	10008326 	beq	r2,zero,9bb0 <_realloc_r+0x2b8>
    99a4:	900b883a 	mov	r5,r18
    99a8:	a009883a 	mov	r4,r20
    99ac:	0002a100 	call	2a10 <_malloc_r>
    99b0:	1025883a 	mov	r18,r2
    99b4:	10011e26 	beq	r2,zero,9e30 <_realloc_r+0x538>
    99b8:	a93fff17 	ldw	r4,-4(r21)
    99bc:	10fffe04 	addi	r3,r2,-8
    99c0:	00bfff84 	movi	r2,-2
    99c4:	2084703a 	and	r2,r4,r2
    99c8:	9885883a 	add	r2,r19,r2
    99cc:	1880ee26 	beq	r3,r2,9d88 <_realloc_r+0x490>
    99d0:	81bfff04 	addi	r6,r16,-4
    99d4:	00800904 	movi	r2,36
    99d8:	1180b836 	bltu	r2,r6,9cbc <_realloc_r+0x3c4>
    99dc:	00c004c4 	movi	r3,19
    99e0:	19809636 	bltu	r3,r6,9c3c <_realloc_r+0x344>
    99e4:	9005883a 	mov	r2,r18
    99e8:	a807883a 	mov	r3,r21
    99ec:	19000017 	ldw	r4,0(r3)
    99f0:	11000015 	stw	r4,0(r2)
    99f4:	19000117 	ldw	r4,4(r3)
    99f8:	11000115 	stw	r4,4(r2)
    99fc:	18c00217 	ldw	r3,8(r3)
    9a00:	10c00215 	stw	r3,8(r2)
    9a04:	a80b883a 	mov	r5,r21
    9a08:	a009883a 	mov	r4,r20
    9a0c:	00079a80 	call	79a8 <_free_r>
    9a10:	a009883a 	mov	r4,r20
    9a14:	000f86c0 	call	f86c <__malloc_unlock>
    9a18:	9005883a 	mov	r2,r18
    9a1c:	00001206 	br	9a68 <_realloc_r+0x170>
    9a20:	00c00404 	movi	r3,16
    9a24:	1823883a 	mov	r17,r3
    9a28:	003fce06 	br	9964 <__alt_data_end+0xff009964>
    9a2c:	a825883a 	mov	r18,r21
    9a30:	8445c83a 	sub	r2,r16,r17
    9a34:	00c003c4 	movi	r3,15
    9a38:	18802636 	bltu	r3,r2,9ad4 <_realloc_r+0x1dc>
    9a3c:	99800117 	ldw	r6,4(r19)
    9a40:	9c07883a 	add	r3,r19,r16
    9a44:	3180004c 	andi	r6,r6,1
    9a48:	3420b03a 	or	r16,r6,r16
    9a4c:	9c000115 	stw	r16,4(r19)
    9a50:	18800117 	ldw	r2,4(r3)
    9a54:	10800054 	ori	r2,r2,1
    9a58:	18800115 	stw	r2,4(r3)
    9a5c:	a009883a 	mov	r4,r20
    9a60:	000f86c0 	call	f86c <__malloc_unlock>
    9a64:	9005883a 	mov	r2,r18
    9a68:	dfc00917 	ldw	ra,36(sp)
    9a6c:	df000817 	ldw	fp,32(sp)
    9a70:	ddc00717 	ldw	r23,28(sp)
    9a74:	dd800617 	ldw	r22,24(sp)
    9a78:	dd400517 	ldw	r21,20(sp)
    9a7c:	dd000417 	ldw	r20,16(sp)
    9a80:	dcc00317 	ldw	r19,12(sp)
    9a84:	dc800217 	ldw	r18,8(sp)
    9a88:	dc400117 	ldw	r17,4(sp)
    9a8c:	dc000017 	ldw	r16,0(sp)
    9a90:	dec00a04 	addi	sp,sp,40
    9a94:	f800283a 	ret
    9a98:	017fff04 	movi	r5,-4
    9a9c:	414a703a 	and	r5,r8,r5
    9aa0:	814d883a 	add	r6,r16,r5
    9aa4:	30c01f16 	blt	r6,r3,9b24 <_realloc_r+0x22c>
    9aa8:	20800317 	ldw	r2,12(r4)
    9aac:	20c00217 	ldw	r3,8(r4)
    9ab0:	a825883a 	mov	r18,r21
    9ab4:	3021883a 	mov	r16,r6
    9ab8:	18800315 	stw	r2,12(r3)
    9abc:	10c00215 	stw	r3,8(r2)
    9ac0:	003fdb06 	br	9a30 <__alt_data_end+0xff009a30>
    9ac4:	00800304 	movi	r2,12
    9ac8:	a0800015 	stw	r2,0(r20)
    9acc:	0005883a 	mov	r2,zero
    9ad0:	003fe506 	br	9a68 <__alt_data_end+0xff009a68>
    9ad4:	98c00117 	ldw	r3,4(r19)
    9ad8:	9c4b883a 	add	r5,r19,r17
    9adc:	11000054 	ori	r4,r2,1
    9ae0:	18c0004c 	andi	r3,r3,1
    9ae4:	1c62b03a 	or	r17,r3,r17
    9ae8:	9c400115 	stw	r17,4(r19)
    9aec:	29000115 	stw	r4,4(r5)
    9af0:	2885883a 	add	r2,r5,r2
    9af4:	10c00117 	ldw	r3,4(r2)
    9af8:	29400204 	addi	r5,r5,8
    9afc:	a009883a 	mov	r4,r20
    9b00:	18c00054 	ori	r3,r3,1
    9b04:	10c00115 	stw	r3,4(r2)
    9b08:	00079a80 	call	79a8 <_free_r>
    9b0c:	003fd306 	br	9a5c <__alt_data_end+0xff009a5c>
    9b10:	017fff04 	movi	r5,-4
    9b14:	414a703a 	and	r5,r8,r5
    9b18:	89800404 	addi	r6,r17,16
    9b1c:	8151883a 	add	r8,r16,r5
    9b20:	4180590e 	bge	r8,r6,9c88 <_realloc_r+0x390>
    9b24:	1080004c 	andi	r2,r2,1
    9b28:	103f9e1e 	bne	r2,zero,99a4 <__alt_data_end+0xff0099a4>
    9b2c:	adbffe17 	ldw	r22,-8(r21)
    9b30:	00bfff04 	movi	r2,-4
    9b34:	9dadc83a 	sub	r22,r19,r22
    9b38:	b1800117 	ldw	r6,4(r22)
    9b3c:	3084703a 	and	r2,r6,r2
    9b40:	20002026 	beq	r4,zero,9bc4 <_realloc_r+0x2cc>
    9b44:	80af883a 	add	r23,r16,r2
    9b48:	b96f883a 	add	r23,r23,r5
    9b4c:	21c05f26 	beq	r4,r7,9ccc <_realloc_r+0x3d4>
    9b50:	b8c01c16 	blt	r23,r3,9bc4 <_realloc_r+0x2cc>
    9b54:	20800317 	ldw	r2,12(r4)
    9b58:	20c00217 	ldw	r3,8(r4)
    9b5c:	81bfff04 	addi	r6,r16,-4
    9b60:	01000904 	movi	r4,36
    9b64:	18800315 	stw	r2,12(r3)
    9b68:	10c00215 	stw	r3,8(r2)
    9b6c:	b0c00217 	ldw	r3,8(r22)
    9b70:	b0800317 	ldw	r2,12(r22)
    9b74:	b4800204 	addi	r18,r22,8
    9b78:	18800315 	stw	r2,12(r3)
    9b7c:	10c00215 	stw	r3,8(r2)
    9b80:	21801b36 	bltu	r4,r6,9bf0 <_realloc_r+0x2f8>
    9b84:	008004c4 	movi	r2,19
    9b88:	1180352e 	bgeu	r2,r6,9c60 <_realloc_r+0x368>
    9b8c:	a8800017 	ldw	r2,0(r21)
    9b90:	b0800215 	stw	r2,8(r22)
    9b94:	a8800117 	ldw	r2,4(r21)
    9b98:	b0800315 	stw	r2,12(r22)
    9b9c:	008006c4 	movi	r2,27
    9ba0:	11807f36 	bltu	r2,r6,9da0 <_realloc_r+0x4a8>
    9ba4:	b0800404 	addi	r2,r22,16
    9ba8:	ad400204 	addi	r21,r21,8
    9bac:	00002d06 	br	9c64 <_realloc_r+0x36c>
    9bb0:	adbffe17 	ldw	r22,-8(r21)
    9bb4:	00bfff04 	movi	r2,-4
    9bb8:	9dadc83a 	sub	r22,r19,r22
    9bbc:	b1000117 	ldw	r4,4(r22)
    9bc0:	2084703a 	and	r2,r4,r2
    9bc4:	b03f7726 	beq	r22,zero,99a4 <__alt_data_end+0xff0099a4>
    9bc8:	80af883a 	add	r23,r16,r2
    9bcc:	b8ff7516 	blt	r23,r3,99a4 <__alt_data_end+0xff0099a4>
    9bd0:	b0800317 	ldw	r2,12(r22)
    9bd4:	b0c00217 	ldw	r3,8(r22)
    9bd8:	81bfff04 	addi	r6,r16,-4
    9bdc:	01000904 	movi	r4,36
    9be0:	18800315 	stw	r2,12(r3)
    9be4:	10c00215 	stw	r3,8(r2)
    9be8:	b4800204 	addi	r18,r22,8
    9bec:	21bfe52e 	bgeu	r4,r6,9b84 <__alt_data_end+0xff009b84>
    9bf0:	a80b883a 	mov	r5,r21
    9bf4:	9009883a 	mov	r4,r18
    9bf8:	00086780 	call	8678 <memmove>
    9bfc:	b821883a 	mov	r16,r23
    9c00:	b027883a 	mov	r19,r22
    9c04:	003f8a06 	br	9a30 <__alt_data_end+0xff009a30>
    9c08:	300b883a 	mov	r5,r6
    9c0c:	dfc00917 	ldw	ra,36(sp)
    9c10:	df000817 	ldw	fp,32(sp)
    9c14:	ddc00717 	ldw	r23,28(sp)
    9c18:	dd800617 	ldw	r22,24(sp)
    9c1c:	dd400517 	ldw	r21,20(sp)
    9c20:	dd000417 	ldw	r20,16(sp)
    9c24:	dcc00317 	ldw	r19,12(sp)
    9c28:	dc800217 	ldw	r18,8(sp)
    9c2c:	dc400117 	ldw	r17,4(sp)
    9c30:	dc000017 	ldw	r16,0(sp)
    9c34:	dec00a04 	addi	sp,sp,40
    9c38:	0002a101 	jmpi	2a10 <_malloc_r>
    9c3c:	a8c00017 	ldw	r3,0(r21)
    9c40:	90c00015 	stw	r3,0(r18)
    9c44:	a8c00117 	ldw	r3,4(r21)
    9c48:	90c00115 	stw	r3,4(r18)
    9c4c:	00c006c4 	movi	r3,27
    9c50:	19804536 	bltu	r3,r6,9d68 <_realloc_r+0x470>
    9c54:	90800204 	addi	r2,r18,8
    9c58:	a8c00204 	addi	r3,r21,8
    9c5c:	003f6306 	br	99ec <__alt_data_end+0xff0099ec>
    9c60:	9005883a 	mov	r2,r18
    9c64:	a8c00017 	ldw	r3,0(r21)
    9c68:	b821883a 	mov	r16,r23
    9c6c:	b027883a 	mov	r19,r22
    9c70:	10c00015 	stw	r3,0(r2)
    9c74:	a8c00117 	ldw	r3,4(r21)
    9c78:	10c00115 	stw	r3,4(r2)
    9c7c:	a8c00217 	ldw	r3,8(r21)
    9c80:	10c00215 	stw	r3,8(r2)
    9c84:	003f6a06 	br	9a30 <__alt_data_end+0xff009a30>
    9c88:	9c67883a 	add	r19,r19,r17
    9c8c:	4445c83a 	sub	r2,r8,r17
    9c90:	e4c00215 	stw	r19,8(fp)
    9c94:	10800054 	ori	r2,r2,1
    9c98:	98800115 	stw	r2,4(r19)
    9c9c:	a8bfff17 	ldw	r2,-4(r21)
    9ca0:	a009883a 	mov	r4,r20
    9ca4:	1080004c 	andi	r2,r2,1
    9ca8:	1462b03a 	or	r17,r2,r17
    9cac:	ac7fff15 	stw	r17,-4(r21)
    9cb0:	000f86c0 	call	f86c <__malloc_unlock>
    9cb4:	a805883a 	mov	r2,r21
    9cb8:	003f6b06 	br	9a68 <__alt_data_end+0xff009a68>
    9cbc:	a80b883a 	mov	r5,r21
    9cc0:	9009883a 	mov	r4,r18
    9cc4:	00086780 	call	8678 <memmove>
    9cc8:	003f4e06 	br	9a04 <__alt_data_end+0xff009a04>
    9ccc:	89000404 	addi	r4,r17,16
    9cd0:	b93fbc16 	blt	r23,r4,9bc4 <__alt_data_end+0xff009bc4>
    9cd4:	b0800317 	ldw	r2,12(r22)
    9cd8:	b0c00217 	ldw	r3,8(r22)
    9cdc:	81bfff04 	addi	r6,r16,-4
    9ce0:	01000904 	movi	r4,36
    9ce4:	18800315 	stw	r2,12(r3)
    9ce8:	10c00215 	stw	r3,8(r2)
    9cec:	b4800204 	addi	r18,r22,8
    9cf0:	21804336 	bltu	r4,r6,9e00 <_realloc_r+0x508>
    9cf4:	008004c4 	movi	r2,19
    9cf8:	11803f2e 	bgeu	r2,r6,9df8 <_realloc_r+0x500>
    9cfc:	a8800017 	ldw	r2,0(r21)
    9d00:	b0800215 	stw	r2,8(r22)
    9d04:	a8800117 	ldw	r2,4(r21)
    9d08:	b0800315 	stw	r2,12(r22)
    9d0c:	008006c4 	movi	r2,27
    9d10:	11803f36 	bltu	r2,r6,9e10 <_realloc_r+0x518>
    9d14:	b0800404 	addi	r2,r22,16
    9d18:	ad400204 	addi	r21,r21,8
    9d1c:	a8c00017 	ldw	r3,0(r21)
    9d20:	10c00015 	stw	r3,0(r2)
    9d24:	a8c00117 	ldw	r3,4(r21)
    9d28:	10c00115 	stw	r3,4(r2)
    9d2c:	a8c00217 	ldw	r3,8(r21)
    9d30:	10c00215 	stw	r3,8(r2)
    9d34:	b447883a 	add	r3,r22,r17
    9d38:	bc45c83a 	sub	r2,r23,r17
    9d3c:	e0c00215 	stw	r3,8(fp)
    9d40:	10800054 	ori	r2,r2,1
    9d44:	18800115 	stw	r2,4(r3)
    9d48:	b0800117 	ldw	r2,4(r22)
    9d4c:	a009883a 	mov	r4,r20
    9d50:	1080004c 	andi	r2,r2,1
    9d54:	1462b03a 	or	r17,r2,r17
    9d58:	b4400115 	stw	r17,4(r22)
    9d5c:	000f86c0 	call	f86c <__malloc_unlock>
    9d60:	9005883a 	mov	r2,r18
    9d64:	003f4006 	br	9a68 <__alt_data_end+0xff009a68>
    9d68:	a8c00217 	ldw	r3,8(r21)
    9d6c:	90c00215 	stw	r3,8(r18)
    9d70:	a8c00317 	ldw	r3,12(r21)
    9d74:	90c00315 	stw	r3,12(r18)
    9d78:	30801126 	beq	r6,r2,9dc0 <_realloc_r+0x4c8>
    9d7c:	90800404 	addi	r2,r18,16
    9d80:	a8c00404 	addi	r3,r21,16
    9d84:	003f1906 	br	99ec <__alt_data_end+0xff0099ec>
    9d88:	90ffff17 	ldw	r3,-4(r18)
    9d8c:	00bfff04 	movi	r2,-4
    9d90:	a825883a 	mov	r18,r21
    9d94:	1884703a 	and	r2,r3,r2
    9d98:	80a1883a 	add	r16,r16,r2
    9d9c:	003f2406 	br	9a30 <__alt_data_end+0xff009a30>
    9da0:	a8800217 	ldw	r2,8(r21)
    9da4:	b0800415 	stw	r2,16(r22)
    9da8:	a8800317 	ldw	r2,12(r21)
    9dac:	b0800515 	stw	r2,20(r22)
    9db0:	31000a26 	beq	r6,r4,9ddc <_realloc_r+0x4e4>
    9db4:	b0800604 	addi	r2,r22,24
    9db8:	ad400404 	addi	r21,r21,16
    9dbc:	003fa906 	br	9c64 <__alt_data_end+0xff009c64>
    9dc0:	a9000417 	ldw	r4,16(r21)
    9dc4:	90800604 	addi	r2,r18,24
    9dc8:	a8c00604 	addi	r3,r21,24
    9dcc:	91000415 	stw	r4,16(r18)
    9dd0:	a9000517 	ldw	r4,20(r21)
    9dd4:	91000515 	stw	r4,20(r18)
    9dd8:	003f0406 	br	99ec <__alt_data_end+0xff0099ec>
    9ddc:	a8c00417 	ldw	r3,16(r21)
    9de0:	ad400604 	addi	r21,r21,24
    9de4:	b0800804 	addi	r2,r22,32
    9de8:	b0c00615 	stw	r3,24(r22)
    9dec:	a8ffff17 	ldw	r3,-4(r21)
    9df0:	b0c00715 	stw	r3,28(r22)
    9df4:	003f9b06 	br	9c64 <__alt_data_end+0xff009c64>
    9df8:	9005883a 	mov	r2,r18
    9dfc:	003fc706 	br	9d1c <__alt_data_end+0xff009d1c>
    9e00:	a80b883a 	mov	r5,r21
    9e04:	9009883a 	mov	r4,r18
    9e08:	00086780 	call	8678 <memmove>
    9e0c:	003fc906 	br	9d34 <__alt_data_end+0xff009d34>
    9e10:	a8800217 	ldw	r2,8(r21)
    9e14:	b0800415 	stw	r2,16(r22)
    9e18:	a8800317 	ldw	r2,12(r21)
    9e1c:	b0800515 	stw	r2,20(r22)
    9e20:	31000726 	beq	r6,r4,9e40 <_realloc_r+0x548>
    9e24:	b0800604 	addi	r2,r22,24
    9e28:	ad400404 	addi	r21,r21,16
    9e2c:	003fbb06 	br	9d1c <__alt_data_end+0xff009d1c>
    9e30:	a009883a 	mov	r4,r20
    9e34:	000f86c0 	call	f86c <__malloc_unlock>
    9e38:	0005883a 	mov	r2,zero
    9e3c:	003f0a06 	br	9a68 <__alt_data_end+0xff009a68>
    9e40:	a8c00417 	ldw	r3,16(r21)
    9e44:	ad400604 	addi	r21,r21,24
    9e48:	b0800804 	addi	r2,r22,32
    9e4c:	b0c00615 	stw	r3,24(r22)
    9e50:	a8ffff17 	ldw	r3,-4(r21)
    9e54:	b0c00715 	stw	r3,28(r22)
    9e58:	003fb006 	br	9d1c <__alt_data_end+0xff009d1c>

00009e5c <__fpclassifyd>:
    9e5c:	00a00034 	movhi	r2,32768
    9e60:	10bfffc4 	addi	r2,r2,-1
    9e64:	2884703a 	and	r2,r5,r2
    9e68:	10000726 	beq	r2,zero,9e88 <__fpclassifyd+0x2c>
    9e6c:	00fffc34 	movhi	r3,65520
    9e70:	019ff834 	movhi	r6,32736
    9e74:	28c7883a 	add	r3,r5,r3
    9e78:	31bfffc4 	addi	r6,r6,-1
    9e7c:	30c00536 	bltu	r6,r3,9e94 <__fpclassifyd+0x38>
    9e80:	00800104 	movi	r2,4
    9e84:	f800283a 	ret
    9e88:	2000021e 	bne	r4,zero,9e94 <__fpclassifyd+0x38>
    9e8c:	00800084 	movi	r2,2
    9e90:	f800283a 	ret
    9e94:	00dffc34 	movhi	r3,32752
    9e98:	019ff834 	movhi	r6,32736
    9e9c:	28cb883a 	add	r5,r5,r3
    9ea0:	31bfffc4 	addi	r6,r6,-1
    9ea4:	317ff62e 	bgeu	r6,r5,9e80 <__alt_data_end+0xff009e80>
    9ea8:	01400434 	movhi	r5,16
    9eac:	297fffc4 	addi	r5,r5,-1
    9eb0:	28800236 	bltu	r5,r2,9ebc <__fpclassifyd+0x60>
    9eb4:	008000c4 	movi	r2,3
    9eb8:	f800283a 	ret
    9ebc:	10c00226 	beq	r2,r3,9ec8 <__fpclassifyd+0x6c>
    9ec0:	0005883a 	mov	r2,zero
    9ec4:	f800283a 	ret
    9ec8:	2005003a 	cmpeq	r2,r4,zero
    9ecc:	f800283a 	ret

00009ed0 <__sread>:
    9ed0:	defffe04 	addi	sp,sp,-8
    9ed4:	dc000015 	stw	r16,0(sp)
    9ed8:	2821883a 	mov	r16,r5
    9edc:	2940038f 	ldh	r5,14(r5)
    9ee0:	dfc00115 	stw	ra,4(sp)
    9ee4:	000bcc40 	call	bcc4 <_read_r>
    9ee8:	10000716 	blt	r2,zero,9f08 <__sread+0x38>
    9eec:	80c01417 	ldw	r3,80(r16)
    9ef0:	1887883a 	add	r3,r3,r2
    9ef4:	80c01415 	stw	r3,80(r16)
    9ef8:	dfc00117 	ldw	ra,4(sp)
    9efc:	dc000017 	ldw	r16,0(sp)
    9f00:	dec00204 	addi	sp,sp,8
    9f04:	f800283a 	ret
    9f08:	80c0030b 	ldhu	r3,12(r16)
    9f0c:	18fbffcc 	andi	r3,r3,61439
    9f10:	80c0030d 	sth	r3,12(r16)
    9f14:	dfc00117 	ldw	ra,4(sp)
    9f18:	dc000017 	ldw	r16,0(sp)
    9f1c:	dec00204 	addi	sp,sp,8
    9f20:	f800283a 	ret

00009f24 <__seofread>:
    9f24:	0005883a 	mov	r2,zero
    9f28:	f800283a 	ret

00009f2c <__swrite>:
    9f2c:	2880030b 	ldhu	r2,12(r5)
    9f30:	defffb04 	addi	sp,sp,-20
    9f34:	dcc00315 	stw	r19,12(sp)
    9f38:	dc800215 	stw	r18,8(sp)
    9f3c:	dc400115 	stw	r17,4(sp)
    9f40:	dc000015 	stw	r16,0(sp)
    9f44:	dfc00415 	stw	ra,16(sp)
    9f48:	10c0400c 	andi	r3,r2,256
    9f4c:	2821883a 	mov	r16,r5
    9f50:	2023883a 	mov	r17,r4
    9f54:	3025883a 	mov	r18,r6
    9f58:	3827883a 	mov	r19,r7
    9f5c:	18000526 	beq	r3,zero,9f74 <__swrite+0x48>
    9f60:	2940038f 	ldh	r5,14(r5)
    9f64:	01c00084 	movi	r7,2
    9f68:	000d883a 	mov	r6,zero
    9f6c:	000bc640 	call	bc64 <_lseek_r>
    9f70:	8080030b 	ldhu	r2,12(r16)
    9f74:	8140038f 	ldh	r5,14(r16)
    9f78:	10bbffcc 	andi	r2,r2,61439
    9f7c:	980f883a 	mov	r7,r19
    9f80:	900d883a 	mov	r6,r18
    9f84:	8809883a 	mov	r4,r17
    9f88:	8080030d 	sth	r2,12(r16)
    9f8c:	dfc00417 	ldw	ra,16(sp)
    9f90:	dcc00317 	ldw	r19,12(sp)
    9f94:	dc800217 	ldw	r18,8(sp)
    9f98:	dc400117 	ldw	r17,4(sp)
    9f9c:	dc000017 	ldw	r16,0(sp)
    9fa0:	dec00504 	addi	sp,sp,20
    9fa4:	000b7301 	jmpi	b730 <_write_r>

00009fa8 <__sseek>:
    9fa8:	defffe04 	addi	sp,sp,-8
    9fac:	dc000015 	stw	r16,0(sp)
    9fb0:	2821883a 	mov	r16,r5
    9fb4:	2940038f 	ldh	r5,14(r5)
    9fb8:	dfc00115 	stw	ra,4(sp)
    9fbc:	000bc640 	call	bc64 <_lseek_r>
    9fc0:	00ffffc4 	movi	r3,-1
    9fc4:	10c00826 	beq	r2,r3,9fe8 <__sseek+0x40>
    9fc8:	80c0030b 	ldhu	r3,12(r16)
    9fcc:	80801415 	stw	r2,80(r16)
    9fd0:	18c40014 	ori	r3,r3,4096
    9fd4:	80c0030d 	sth	r3,12(r16)
    9fd8:	dfc00117 	ldw	ra,4(sp)
    9fdc:	dc000017 	ldw	r16,0(sp)
    9fe0:	dec00204 	addi	sp,sp,8
    9fe4:	f800283a 	ret
    9fe8:	80c0030b 	ldhu	r3,12(r16)
    9fec:	18fbffcc 	andi	r3,r3,61439
    9ff0:	80c0030d 	sth	r3,12(r16)
    9ff4:	dfc00117 	ldw	ra,4(sp)
    9ff8:	dc000017 	ldw	r16,0(sp)
    9ffc:	dec00204 	addi	sp,sp,8
    a000:	f800283a 	ret

0000a004 <__sclose>:
    a004:	2940038f 	ldh	r5,14(r5)
    a008:	000b7901 	jmpi	b790 <_close_r>

0000a00c <strcmp>:
    a00c:	2144b03a 	or	r2,r4,r5
    a010:	108000cc 	andi	r2,r2,3
    a014:	1000171e 	bne	r2,zero,a074 <strcmp+0x68>
    a018:	20800017 	ldw	r2,0(r4)
    a01c:	28c00017 	ldw	r3,0(r5)
    a020:	10c0141e 	bne	r2,r3,a074 <strcmp+0x68>
    a024:	027fbff4 	movhi	r9,65279
    a028:	4a7fbfc4 	addi	r9,r9,-257
    a02c:	0086303a 	nor	r3,zero,r2
    a030:	02202074 	movhi	r8,32897
    a034:	1245883a 	add	r2,r2,r9
    a038:	42202004 	addi	r8,r8,-32640
    a03c:	10c4703a 	and	r2,r2,r3
    a040:	1204703a 	and	r2,r2,r8
    a044:	10000226 	beq	r2,zero,a050 <strcmp+0x44>
    a048:	00002306 	br	a0d8 <strcmp+0xcc>
    a04c:	1000221e 	bne	r2,zero,a0d8 <strcmp+0xcc>
    a050:	21000104 	addi	r4,r4,4
    a054:	20c00017 	ldw	r3,0(r4)
    a058:	29400104 	addi	r5,r5,4
    a05c:	29800017 	ldw	r6,0(r5)
    a060:	1a4f883a 	add	r7,r3,r9
    a064:	00c4303a 	nor	r2,zero,r3
    a068:	3884703a 	and	r2,r7,r2
    a06c:	1204703a 	and	r2,r2,r8
    a070:	19bff626 	beq	r3,r6,a04c <__alt_data_end+0xff00a04c>
    a074:	20800003 	ldbu	r2,0(r4)
    a078:	10c03fcc 	andi	r3,r2,255
    a07c:	18c0201c 	xori	r3,r3,128
    a080:	18ffe004 	addi	r3,r3,-128
    a084:	18000c26 	beq	r3,zero,a0b8 <strcmp+0xac>
    a088:	29800007 	ldb	r6,0(r5)
    a08c:	19800326 	beq	r3,r6,a09c <strcmp+0x90>
    a090:	00001306 	br	a0e0 <strcmp+0xd4>
    a094:	29800007 	ldb	r6,0(r5)
    a098:	11800b1e 	bne	r2,r6,a0c8 <strcmp+0xbc>
    a09c:	21000044 	addi	r4,r4,1
    a0a0:	20c00003 	ldbu	r3,0(r4)
    a0a4:	29400044 	addi	r5,r5,1
    a0a8:	18803fcc 	andi	r2,r3,255
    a0ac:	1080201c 	xori	r2,r2,128
    a0b0:	10bfe004 	addi	r2,r2,-128
    a0b4:	103ff71e 	bne	r2,zero,a094 <__alt_data_end+0xff00a094>
    a0b8:	0007883a 	mov	r3,zero
    a0bc:	28800003 	ldbu	r2,0(r5)
    a0c0:	1885c83a 	sub	r2,r3,r2
    a0c4:	f800283a 	ret
    a0c8:	28800003 	ldbu	r2,0(r5)
    a0cc:	18c03fcc 	andi	r3,r3,255
    a0d0:	1885c83a 	sub	r2,r3,r2
    a0d4:	f800283a 	ret
    a0d8:	0005883a 	mov	r2,zero
    a0dc:	f800283a 	ret
    a0e0:	10c03fcc 	andi	r3,r2,255
    a0e4:	003ff506 	br	a0bc <__alt_data_end+0xff00a0bc>

0000a0e8 <__sprint_r.part.0>:
    a0e8:	28801917 	ldw	r2,100(r5)
    a0ec:	defff604 	addi	sp,sp,-40
    a0f0:	dd400515 	stw	r21,20(sp)
    a0f4:	dfc00915 	stw	ra,36(sp)
    a0f8:	df000815 	stw	fp,32(sp)
    a0fc:	ddc00715 	stw	r23,28(sp)
    a100:	dd800615 	stw	r22,24(sp)
    a104:	dd000415 	stw	r20,16(sp)
    a108:	dcc00315 	stw	r19,12(sp)
    a10c:	dc800215 	stw	r18,8(sp)
    a110:	dc400115 	stw	r17,4(sp)
    a114:	dc000015 	stw	r16,0(sp)
    a118:	1088000c 	andi	r2,r2,8192
    a11c:	302b883a 	mov	r21,r6
    a120:	10002e26 	beq	r2,zero,a1dc <__sprint_r.part.0+0xf4>
    a124:	30800217 	ldw	r2,8(r6)
    a128:	35800017 	ldw	r22,0(r6)
    a12c:	10002926 	beq	r2,zero,a1d4 <__sprint_r.part.0+0xec>
    a130:	2827883a 	mov	r19,r5
    a134:	2029883a 	mov	r20,r4
    a138:	b5c00104 	addi	r23,r22,4
    a13c:	04bfffc4 	movi	r18,-1
    a140:	bc400017 	ldw	r17,0(r23)
    a144:	b4000017 	ldw	r16,0(r22)
    a148:	0039883a 	mov	fp,zero
    a14c:	8822d0ba 	srli	r17,r17,2
    a150:	8800031e 	bne	r17,zero,a160 <__sprint_r.part.0+0x78>
    a154:	00001806 	br	a1b8 <__sprint_r.part.0+0xd0>
    a158:	84000104 	addi	r16,r16,4
    a15c:	8f001526 	beq	r17,fp,a1b4 <__sprint_r.part.0+0xcc>
    a160:	81400017 	ldw	r5,0(r16)
    a164:	980d883a 	mov	r6,r19
    a168:	a009883a 	mov	r4,r20
    a16c:	000bb100 	call	bb10 <_fputwc_r>
    a170:	e7000044 	addi	fp,fp,1
    a174:	14bff81e 	bne	r2,r18,a158 <__alt_data_end+0xff00a158>
    a178:	9005883a 	mov	r2,r18
    a17c:	a8000215 	stw	zero,8(r21)
    a180:	a8000115 	stw	zero,4(r21)
    a184:	dfc00917 	ldw	ra,36(sp)
    a188:	df000817 	ldw	fp,32(sp)
    a18c:	ddc00717 	ldw	r23,28(sp)
    a190:	dd800617 	ldw	r22,24(sp)
    a194:	dd400517 	ldw	r21,20(sp)
    a198:	dd000417 	ldw	r20,16(sp)
    a19c:	dcc00317 	ldw	r19,12(sp)
    a1a0:	dc800217 	ldw	r18,8(sp)
    a1a4:	dc400117 	ldw	r17,4(sp)
    a1a8:	dc000017 	ldw	r16,0(sp)
    a1ac:	dec00a04 	addi	sp,sp,40
    a1b0:	f800283a 	ret
    a1b4:	a8800217 	ldw	r2,8(r21)
    a1b8:	8c63883a 	add	r17,r17,r17
    a1bc:	8c63883a 	add	r17,r17,r17
    a1c0:	1445c83a 	sub	r2,r2,r17
    a1c4:	a8800215 	stw	r2,8(r21)
    a1c8:	b5800204 	addi	r22,r22,8
    a1cc:	bdc00204 	addi	r23,r23,8
    a1d0:	103fdb1e 	bne	r2,zero,a140 <__alt_data_end+0xff00a140>
    a1d4:	0005883a 	mov	r2,zero
    a1d8:	003fe806 	br	a17c <__alt_data_end+0xff00a17c>
    a1dc:	0007cb80 	call	7cb8 <__sfvwrite_r>
    a1e0:	003fe606 	br	a17c <__alt_data_end+0xff00a17c>

0000a1e4 <__sprint_r>:
    a1e4:	30c00217 	ldw	r3,8(r6)
    a1e8:	18000126 	beq	r3,zero,a1f0 <__sprint_r+0xc>
    a1ec:	000a0e81 	jmpi	a0e8 <__sprint_r.part.0>
    a1f0:	30000115 	stw	zero,4(r6)
    a1f4:	0005883a 	mov	r2,zero
    a1f8:	f800283a 	ret

0000a1fc <___vfiprintf_internal_r>:
    a1fc:	deffc904 	addi	sp,sp,-220
    a200:	df003515 	stw	fp,212(sp)
    a204:	dd003115 	stw	r20,196(sp)
    a208:	dfc03615 	stw	ra,216(sp)
    a20c:	ddc03415 	stw	r23,208(sp)
    a210:	dd803315 	stw	r22,204(sp)
    a214:	dd403215 	stw	r21,200(sp)
    a218:	dcc03015 	stw	r19,192(sp)
    a21c:	dc802f15 	stw	r18,188(sp)
    a220:	dc402e15 	stw	r17,184(sp)
    a224:	dc002d15 	stw	r16,180(sp)
    a228:	d9002015 	stw	r4,128(sp)
    a22c:	d9c02215 	stw	r7,136(sp)
    a230:	2829883a 	mov	r20,r5
    a234:	3039883a 	mov	fp,r6
    a238:	20000226 	beq	r4,zero,a244 <___vfiprintf_internal_r+0x48>
    a23c:	20800e17 	ldw	r2,56(r4)
    a240:	1000cf26 	beq	r2,zero,a580 <___vfiprintf_internal_r+0x384>
    a244:	a080030b 	ldhu	r2,12(r20)
    a248:	10c8000c 	andi	r3,r2,8192
    a24c:	1800061e 	bne	r3,zero,a268 <___vfiprintf_internal_r+0x6c>
    a250:	a1001917 	ldw	r4,100(r20)
    a254:	00f7ffc4 	movi	r3,-8193
    a258:	10880014 	ori	r2,r2,8192
    a25c:	20c6703a 	and	r3,r4,r3
    a260:	a080030d 	sth	r2,12(r20)
    a264:	a0c01915 	stw	r3,100(r20)
    a268:	10c0020c 	andi	r3,r2,8
    a26c:	1800a926 	beq	r3,zero,a514 <___vfiprintf_internal_r+0x318>
    a270:	a0c00417 	ldw	r3,16(r20)
    a274:	1800a726 	beq	r3,zero,a514 <___vfiprintf_internal_r+0x318>
    a278:	1080068c 	andi	r2,r2,26
    a27c:	00c00284 	movi	r3,10
    a280:	10c0ac26 	beq	r2,r3,a534 <___vfiprintf_internal_r+0x338>
    a284:	da801a04 	addi	r10,sp,104
    a288:	da801e15 	stw	r10,120(sp)
    a28c:	d8801e17 	ldw	r2,120(sp)
    a290:	da8019c4 	addi	r10,sp,103
    a294:	05800074 	movhi	r22,1
    a298:	05c00074 	movhi	r23,1
    a29c:	da801f15 	stw	r10,124(sp)
    a2a0:	1295c83a 	sub	r10,r2,r10
    a2a4:	b5892c04 	addi	r22,r22,9392
    a2a8:	bdc92804 	addi	r23,r23,9376
    a2ac:	dec01a15 	stw	sp,104(sp)
    a2b0:	d8001c15 	stw	zero,112(sp)
    a2b4:	d8001b15 	stw	zero,108(sp)
    a2b8:	d8002615 	stw	zero,152(sp)
    a2bc:	d8002315 	stw	zero,140(sp)
    a2c0:	da802715 	stw	r10,156(sp)
    a2c4:	d811883a 	mov	r8,sp
    a2c8:	dd002115 	stw	r20,132(sp)
    a2cc:	e021883a 	mov	r16,fp
    a2d0:	80800007 	ldb	r2,0(r16)
    a2d4:	1003ea26 	beq	r2,zero,b280 <___vfiprintf_internal_r+0x1084>
    a2d8:	00c00944 	movi	r3,37
    a2dc:	8025883a 	mov	r18,r16
    a2e0:	10c0021e 	bne	r2,r3,a2ec <___vfiprintf_internal_r+0xf0>
    a2e4:	00001606 	br	a340 <___vfiprintf_internal_r+0x144>
    a2e8:	10c00326 	beq	r2,r3,a2f8 <___vfiprintf_internal_r+0xfc>
    a2ec:	94800044 	addi	r18,r18,1
    a2f0:	90800007 	ldb	r2,0(r18)
    a2f4:	103ffc1e 	bne	r2,zero,a2e8 <__alt_data_end+0xff00a2e8>
    a2f8:	9423c83a 	sub	r17,r18,r16
    a2fc:	88001026 	beq	r17,zero,a340 <___vfiprintf_internal_r+0x144>
    a300:	d8c01c17 	ldw	r3,112(sp)
    a304:	d8801b17 	ldw	r2,108(sp)
    a308:	44000015 	stw	r16,0(r8)
    a30c:	88c7883a 	add	r3,r17,r3
    a310:	10800044 	addi	r2,r2,1
    a314:	44400115 	stw	r17,4(r8)
    a318:	d8c01c15 	stw	r3,112(sp)
    a31c:	d8801b15 	stw	r2,108(sp)
    a320:	010001c4 	movi	r4,7
    a324:	2080760e 	bge	r4,r2,a500 <___vfiprintf_internal_r+0x304>
    a328:	1803821e 	bne	r3,zero,b134 <___vfiprintf_internal_r+0xf38>
    a32c:	da802317 	ldw	r10,140(sp)
    a330:	d8001b15 	stw	zero,108(sp)
    a334:	d811883a 	mov	r8,sp
    a338:	5455883a 	add	r10,r10,r17
    a33c:	da802315 	stw	r10,140(sp)
    a340:	90800007 	ldb	r2,0(r18)
    a344:	10044626 	beq	r2,zero,b460 <___vfiprintf_internal_r+0x1264>
    a348:	90c00047 	ldb	r3,1(r18)
    a34c:	94000044 	addi	r16,r18,1
    a350:	d8001d85 	stb	zero,118(sp)
    a354:	0009883a 	mov	r4,zero
    a358:	000f883a 	mov	r7,zero
    a35c:	027fffc4 	movi	r9,-1
    a360:	0023883a 	mov	r17,zero
    a364:	0029883a 	mov	r20,zero
    a368:	01401604 	movi	r5,88
    a36c:	01800244 	movi	r6,9
    a370:	03400a84 	movi	r13,42
    a374:	03001b04 	movi	r12,108
    a378:	84000044 	addi	r16,r16,1
    a37c:	18bff804 	addi	r2,r3,-32
    a380:	28827336 	bltu	r5,r2,ad50 <___vfiprintf_internal_r+0xb54>
    a384:	100490ba 	slli	r2,r2,2
    a388:	02800074 	movhi	r10,1
    a38c:	52a8e704 	addi	r10,r10,-23652
    a390:	1285883a 	add	r2,r2,r10
    a394:	10800017 	ldw	r2,0(r2)
    a398:	1000683a 	jmp	r2
    a39c:	0000aa84 	movi	zero,682
    a3a0:	0000ad50 	cmplti	zero,zero,693
    a3a4:	0000ad50 	cmplti	zero,zero,693
    a3a8:	0000aaa4 	muli	zero,zero,682
    a3ac:	0000ad50 	cmplti	zero,zero,693
    a3b0:	0000ad50 	cmplti	zero,zero,693
    a3b4:	0000ad50 	cmplti	zero,zero,693
    a3b8:	0000ad50 	cmplti	zero,zero,693
    a3bc:	0000ad50 	cmplti	zero,zero,693
    a3c0:	0000ad50 	cmplti	zero,zero,693
    a3c4:	0000ac8c 	andi	zero,zero,690
    a3c8:	0000aca8 	cmpgeui	zero,zero,690
    a3cc:	0000ad50 	cmplti	zero,zero,693
    a3d0:	0000a590 	cmplti	zero,zero,662
    a3d4:	0000acb8 	rdprs	zero,zero,690
    a3d8:	0000ad50 	cmplti	zero,zero,693
    a3dc:	0000aab0 	cmpltui	zero,zero,682
    a3e0:	0000aabc 	xorhi	zero,zero,682
    a3e4:	0000aabc 	xorhi	zero,zero,682
    a3e8:	0000aabc 	xorhi	zero,zero,682
    a3ec:	0000aabc 	xorhi	zero,zero,682
    a3f0:	0000aabc 	xorhi	zero,zero,682
    a3f4:	0000aabc 	xorhi	zero,zero,682
    a3f8:	0000aabc 	xorhi	zero,zero,682
    a3fc:	0000aabc 	xorhi	zero,zero,682
    a400:	0000aabc 	xorhi	zero,zero,682
    a404:	0000ad50 	cmplti	zero,zero,693
    a408:	0000ad50 	cmplti	zero,zero,693
    a40c:	0000ad50 	cmplti	zero,zero,693
    a410:	0000ad50 	cmplti	zero,zero,693
    a414:	0000ad50 	cmplti	zero,zero,693
    a418:	0000ad50 	cmplti	zero,zero,693
    a41c:	0000ad50 	cmplti	zero,zero,693
    a420:	0000ad50 	cmplti	zero,zero,693
    a424:	0000ad50 	cmplti	zero,zero,693
    a428:	0000ad50 	cmplti	zero,zero,693
    a42c:	0000aae8 	cmpgeui	zero,zero,683
    a430:	0000ad50 	cmplti	zero,zero,693
    a434:	0000ad50 	cmplti	zero,zero,693
    a438:	0000ad50 	cmplti	zero,zero,693
    a43c:	0000ad50 	cmplti	zero,zero,693
    a440:	0000ad50 	cmplti	zero,zero,693
    a444:	0000ad50 	cmplti	zero,zero,693
    a448:	0000ad50 	cmplti	zero,zero,693
    a44c:	0000ad50 	cmplti	zero,zero,693
    a450:	0000ad50 	cmplti	zero,zero,693
    a454:	0000ad50 	cmplti	zero,zero,693
    a458:	0000ab20 	cmpeqi	zero,zero,684
    a45c:	0000ad50 	cmplti	zero,zero,693
    a460:	0000ad50 	cmplti	zero,zero,693
    a464:	0000ad50 	cmplti	zero,zero,693
    a468:	0000ad50 	cmplti	zero,zero,693
    a46c:	0000ad50 	cmplti	zero,zero,693
    a470:	0000ab78 	rdprs	zero,zero,685
    a474:	0000ad50 	cmplti	zero,zero,693
    a478:	0000ad50 	cmplti	zero,zero,693
    a47c:	0000abe8 	cmpgeui	zero,zero,687
    a480:	0000ad50 	cmplti	zero,zero,693
    a484:	0000ad50 	cmplti	zero,zero,693
    a488:	0000ad50 	cmplti	zero,zero,693
    a48c:	0000ad50 	cmplti	zero,zero,693
    a490:	0000ad50 	cmplti	zero,zero,693
    a494:	0000ad50 	cmplti	zero,zero,693
    a498:	0000ad50 	cmplti	zero,zero,693
    a49c:	0000ad50 	cmplti	zero,zero,693
    a4a0:	0000ad50 	cmplti	zero,zero,693
    a4a4:	0000ad50 	cmplti	zero,zero,693
    a4a8:	0000a994 	movui	zero,678
    a4ac:	0000a9c0 	call	a9c <init_LCD+0x64>
    a4b0:	0000ad50 	cmplti	zero,zero,693
    a4b4:	0000ad50 	cmplti	zero,zero,693
    a4b8:	0000ad50 	cmplti	zero,zero,693
    a4bc:	0000acf8 	rdprs	zero,zero,691
    a4c0:	0000a9c0 	call	a9c <init_LCD+0x64>
    a4c4:	0000ad50 	cmplti	zero,zero,693
    a4c8:	0000ad50 	cmplti	zero,zero,693
    a4cc:	0000a854 	movui	zero,673
    a4d0:	0000ad50 	cmplti	zero,zero,693
    a4d4:	0000a864 	muli	zero,zero,673
    a4d8:	0000a8a0 	cmpeqi	zero,zero,674
    a4dc:	0000a59c 	xori	zero,zero,662
    a4e0:	0000a848 	cmpgei	zero,zero,673
    a4e4:	0000ad50 	cmplti	zero,zero,693
    a4e8:	0000ac24 	muli	zero,zero,688
    a4ec:	0000ad50 	cmplti	zero,zero,693
    a4f0:	0000ac7c 	xorhi	zero,zero,689
    a4f4:	0000ad50 	cmplti	zero,zero,693
    a4f8:	0000ad50 	cmplti	zero,zero,693
    a4fc:	0000a940 	call	a94 <init_LCD+0x5c>
    a500:	42000204 	addi	r8,r8,8
    a504:	da802317 	ldw	r10,140(sp)
    a508:	5455883a 	add	r10,r10,r17
    a50c:	da802315 	stw	r10,140(sp)
    a510:	003f8b06 	br	a340 <__alt_data_end+0xff00a340>
    a514:	d9002017 	ldw	r4,128(sp)
    a518:	a00b883a 	mov	r5,r20
    a51c:	00058600 	call	5860 <__swsetup_r>
    a520:	1003b11e 	bne	r2,zero,b3e8 <___vfiprintf_internal_r+0x11ec>
    a524:	a080030b 	ldhu	r2,12(r20)
    a528:	00c00284 	movi	r3,10
    a52c:	1080068c 	andi	r2,r2,26
    a530:	10ff541e 	bne	r2,r3,a284 <__alt_data_end+0xff00a284>
    a534:	a080038f 	ldh	r2,14(r20)
    a538:	103f5216 	blt	r2,zero,a284 <__alt_data_end+0xff00a284>
    a53c:	d9c02217 	ldw	r7,136(sp)
    a540:	d9002017 	ldw	r4,128(sp)
    a544:	e00d883a 	mov	r6,fp
    a548:	a00b883a 	mov	r5,r20
    a54c:	000b6740 	call	b674 <__sbprintf>
    a550:	dfc03617 	ldw	ra,216(sp)
    a554:	df003517 	ldw	fp,212(sp)
    a558:	ddc03417 	ldw	r23,208(sp)
    a55c:	dd803317 	ldw	r22,204(sp)
    a560:	dd403217 	ldw	r21,200(sp)
    a564:	dd003117 	ldw	r20,196(sp)
    a568:	dcc03017 	ldw	r19,192(sp)
    a56c:	dc802f17 	ldw	r18,188(sp)
    a570:	dc402e17 	ldw	r17,184(sp)
    a574:	dc002d17 	ldw	r16,180(sp)
    a578:	dec03704 	addi	sp,sp,220
    a57c:	f800283a 	ret
    a580:	00078340 	call	7834 <__sinit>
    a584:	003f2f06 	br	a244 <__alt_data_end+0xff00a244>
    a588:	0463c83a 	sub	r17,zero,r17
    a58c:	d8802215 	stw	r2,136(sp)
    a590:	a5000114 	ori	r20,r20,4
    a594:	80c00007 	ldb	r3,0(r16)
    a598:	003f7706 	br	a378 <__alt_data_end+0xff00a378>
    a59c:	00800c04 	movi	r2,48
    a5a0:	da802217 	ldw	r10,136(sp)
    a5a4:	d8801d05 	stb	r2,116(sp)
    a5a8:	00801e04 	movi	r2,120
    a5ac:	d8801d45 	stb	r2,117(sp)
    a5b0:	d8001d85 	stb	zero,118(sp)
    a5b4:	50c00104 	addi	r3,r10,4
    a5b8:	54800017 	ldw	r18,0(r10)
    a5bc:	0027883a 	mov	r19,zero
    a5c0:	a0800094 	ori	r2,r20,2
    a5c4:	48030b16 	blt	r9,zero,b1f4 <___vfiprintf_internal_r+0xff8>
    a5c8:	00bfdfc4 	movi	r2,-129
    a5cc:	a096703a 	and	r11,r20,r2
    a5d0:	d8c02215 	stw	r3,136(sp)
    a5d4:	5d000094 	ori	r20,r11,2
    a5d8:	90032b1e 	bne	r18,zero,b288 <___vfiprintf_internal_r+0x108c>
    a5dc:	00800074 	movhi	r2,1
    a5e0:	1088c704 	addi	r2,r2,8988
    a5e4:	d8802615 	stw	r2,152(sp)
    a5e8:	0039883a 	mov	fp,zero
    a5ec:	48017b1e 	bne	r9,zero,abdc <___vfiprintf_internal_r+0x9e0>
    a5f0:	0013883a 	mov	r9,zero
    a5f4:	0027883a 	mov	r19,zero
    a5f8:	dd401a04 	addi	r21,sp,104
    a5fc:	4825883a 	mov	r18,r9
    a600:	4cc0010e 	bge	r9,r19,a608 <___vfiprintf_internal_r+0x40c>
    a604:	9825883a 	mov	r18,r19
    a608:	e7003fcc 	andi	fp,fp,255
    a60c:	e700201c 	xori	fp,fp,128
    a610:	e73fe004 	addi	fp,fp,-128
    a614:	e0000126 	beq	fp,zero,a61c <___vfiprintf_internal_r+0x420>
    a618:	94800044 	addi	r18,r18,1
    a61c:	a380008c 	andi	r14,r20,2
    a620:	70000126 	beq	r14,zero,a628 <___vfiprintf_internal_r+0x42c>
    a624:	94800084 	addi	r18,r18,2
    a628:	a700210c 	andi	fp,r20,132
    a62c:	e001df1e 	bne	fp,zero,adac <___vfiprintf_internal_r+0xbb0>
    a630:	8c87c83a 	sub	r3,r17,r18
    a634:	00c1dd0e 	bge	zero,r3,adac <___vfiprintf_internal_r+0xbb0>
    a638:	01c00404 	movi	r7,16
    a63c:	d8801c17 	ldw	r2,112(sp)
    a640:	38c3ad0e 	bge	r7,r3,b4f8 <___vfiprintf_internal_r+0x12fc>
    a644:	02800074 	movhi	r10,1
    a648:	52892c04 	addi	r10,r10,9392
    a64c:	dc002915 	stw	r16,164(sp)
    a650:	d9801b17 	ldw	r6,108(sp)
    a654:	da802415 	stw	r10,144(sp)
    a658:	03c001c4 	movi	r15,7
    a65c:	da402515 	stw	r9,148(sp)
    a660:	db802815 	stw	r14,160(sp)
    a664:	1821883a 	mov	r16,r3
    a668:	00000506 	br	a680 <___vfiprintf_internal_r+0x484>
    a66c:	31400084 	addi	r5,r6,2
    a670:	42000204 	addi	r8,r8,8
    a674:	200d883a 	mov	r6,r4
    a678:	843ffc04 	addi	r16,r16,-16
    a67c:	3c000d0e 	bge	r7,r16,a6b4 <___vfiprintf_internal_r+0x4b8>
    a680:	10800404 	addi	r2,r2,16
    a684:	31000044 	addi	r4,r6,1
    a688:	45800015 	stw	r22,0(r8)
    a68c:	41c00115 	stw	r7,4(r8)
    a690:	d8801c15 	stw	r2,112(sp)
    a694:	d9001b15 	stw	r4,108(sp)
    a698:	793ff40e 	bge	r15,r4,a66c <__alt_data_end+0xff00a66c>
    a69c:	1001b51e 	bne	r2,zero,ad74 <___vfiprintf_internal_r+0xb78>
    a6a0:	843ffc04 	addi	r16,r16,-16
    a6a4:	000d883a 	mov	r6,zero
    a6a8:	01400044 	movi	r5,1
    a6ac:	d811883a 	mov	r8,sp
    a6b0:	3c3ff316 	blt	r7,r16,a680 <__alt_data_end+0xff00a680>
    a6b4:	8007883a 	mov	r3,r16
    a6b8:	da402517 	ldw	r9,148(sp)
    a6bc:	db802817 	ldw	r14,160(sp)
    a6c0:	dc002917 	ldw	r16,164(sp)
    a6c4:	da802417 	ldw	r10,144(sp)
    a6c8:	1885883a 	add	r2,r3,r2
    a6cc:	40c00115 	stw	r3,4(r8)
    a6d0:	42800015 	stw	r10,0(r8)
    a6d4:	d8801c15 	stw	r2,112(sp)
    a6d8:	d9401b15 	stw	r5,108(sp)
    a6dc:	00c001c4 	movi	r3,7
    a6e0:	19426016 	blt	r3,r5,b064 <___vfiprintf_internal_r+0xe68>
    a6e4:	d8c01d87 	ldb	r3,118(sp)
    a6e8:	42000204 	addi	r8,r8,8
    a6ec:	29000044 	addi	r4,r5,1
    a6f0:	1801b31e 	bne	r3,zero,adc0 <___vfiprintf_internal_r+0xbc4>
    a6f4:	7001c026 	beq	r14,zero,adf8 <___vfiprintf_internal_r+0xbfc>
    a6f8:	d8c01d04 	addi	r3,sp,116
    a6fc:	10800084 	addi	r2,r2,2
    a700:	40c00015 	stw	r3,0(r8)
    a704:	00c00084 	movi	r3,2
    a708:	40c00115 	stw	r3,4(r8)
    a70c:	d8801c15 	stw	r2,112(sp)
    a710:	d9001b15 	stw	r4,108(sp)
    a714:	00c001c4 	movi	r3,7
    a718:	1902650e 	bge	r3,r4,b0b0 <___vfiprintf_internal_r+0xeb4>
    a71c:	10029a1e 	bne	r2,zero,b188 <___vfiprintf_internal_r+0xf8c>
    a720:	00c02004 	movi	r3,128
    a724:	01000044 	movi	r4,1
    a728:	000b883a 	mov	r5,zero
    a72c:	d811883a 	mov	r8,sp
    a730:	e0c1b31e 	bne	fp,r3,ae00 <___vfiprintf_internal_r+0xc04>
    a734:	8cb9c83a 	sub	fp,r17,r18
    a738:	0701b10e 	bge	zero,fp,ae00 <___vfiprintf_internal_r+0xc04>
    a73c:	01c00404 	movi	r7,16
    a740:	3f03890e 	bge	r7,fp,b568 <___vfiprintf_internal_r+0x136c>
    a744:	00c00074 	movhi	r3,1
    a748:	18c92804 	addi	r3,r3,9376
    a74c:	d8c02415 	stw	r3,144(sp)
    a750:	8007883a 	mov	r3,r16
    a754:	034001c4 	movi	r13,7
    a758:	e021883a 	mov	r16,fp
    a75c:	da402515 	stw	r9,148(sp)
    a760:	1839883a 	mov	fp,r3
    a764:	00000506 	br	a77c <___vfiprintf_internal_r+0x580>
    a768:	29800084 	addi	r6,r5,2
    a76c:	42000204 	addi	r8,r8,8
    a770:	180b883a 	mov	r5,r3
    a774:	843ffc04 	addi	r16,r16,-16
    a778:	3c000d0e 	bge	r7,r16,a7b0 <___vfiprintf_internal_r+0x5b4>
    a77c:	10800404 	addi	r2,r2,16
    a780:	28c00044 	addi	r3,r5,1
    a784:	45c00015 	stw	r23,0(r8)
    a788:	41c00115 	stw	r7,4(r8)
    a78c:	d8801c15 	stw	r2,112(sp)
    a790:	d8c01b15 	stw	r3,108(sp)
    a794:	68fff40e 	bge	r13,r3,a768 <__alt_data_end+0xff00a768>
    a798:	1002241e 	bne	r2,zero,b02c <___vfiprintf_internal_r+0xe30>
    a79c:	843ffc04 	addi	r16,r16,-16
    a7a0:	01800044 	movi	r6,1
    a7a4:	000b883a 	mov	r5,zero
    a7a8:	d811883a 	mov	r8,sp
    a7ac:	3c3ff316 	blt	r7,r16,a77c <__alt_data_end+0xff00a77c>
    a7b0:	da402517 	ldw	r9,148(sp)
    a7b4:	e007883a 	mov	r3,fp
    a7b8:	8039883a 	mov	fp,r16
    a7bc:	1821883a 	mov	r16,r3
    a7c0:	d8c02417 	ldw	r3,144(sp)
    a7c4:	1705883a 	add	r2,r2,fp
    a7c8:	47000115 	stw	fp,4(r8)
    a7cc:	40c00015 	stw	r3,0(r8)
    a7d0:	d8801c15 	stw	r2,112(sp)
    a7d4:	d9801b15 	stw	r6,108(sp)
    a7d8:	00c001c4 	movi	r3,7
    a7dc:	19827616 	blt	r3,r6,b1b8 <___vfiprintf_internal_r+0xfbc>
    a7e0:	4cf9c83a 	sub	fp,r9,r19
    a7e4:	42000204 	addi	r8,r8,8
    a7e8:	31000044 	addi	r4,r6,1
    a7ec:	300b883a 	mov	r5,r6
    a7f0:	07018516 	blt	zero,fp,ae08 <___vfiprintf_internal_r+0xc0c>
    a7f4:	9885883a 	add	r2,r19,r2
    a7f8:	45400015 	stw	r21,0(r8)
    a7fc:	44c00115 	stw	r19,4(r8)
    a800:	d8801c15 	stw	r2,112(sp)
    a804:	d9001b15 	stw	r4,108(sp)
    a808:	00c001c4 	movi	r3,7
    a80c:	1901dd0e 	bge	r3,r4,af84 <___vfiprintf_internal_r+0xd88>
    a810:	1002401e 	bne	r2,zero,b114 <___vfiprintf_internal_r+0xf18>
    a814:	d8001b15 	stw	zero,108(sp)
    a818:	a2c0010c 	andi	r11,r20,4
    a81c:	58000226 	beq	r11,zero,a828 <___vfiprintf_internal_r+0x62c>
    a820:	8ca7c83a 	sub	r19,r17,r18
    a824:	04c2f216 	blt	zero,r19,b3f0 <___vfiprintf_internal_r+0x11f4>
    a828:	8c80010e 	bge	r17,r18,a830 <___vfiprintf_internal_r+0x634>
    a82c:	9023883a 	mov	r17,r18
    a830:	da802317 	ldw	r10,140(sp)
    a834:	5455883a 	add	r10,r10,r17
    a838:	da802315 	stw	r10,140(sp)
    a83c:	d8001b15 	stw	zero,108(sp)
    a840:	d811883a 	mov	r8,sp
    a844:	003ea206 	br	a2d0 <__alt_data_end+0xff00a2d0>
    a848:	a5000814 	ori	r20,r20,32
    a84c:	80c00007 	ldb	r3,0(r16)
    a850:	003ec906 	br	a378 <__alt_data_end+0xff00a378>
    a854:	80c00007 	ldb	r3,0(r16)
    a858:	1b030926 	beq	r3,r12,b480 <___vfiprintf_internal_r+0x1284>
    a85c:	a5000414 	ori	r20,r20,16
    a860:	003ec506 	br	a378 <__alt_data_end+0xff00a378>
    a864:	21003fcc 	andi	r4,r4,255
    a868:	20035e1e 	bne	r4,zero,b5e4 <___vfiprintf_internal_r+0x13e8>
    a86c:	a080080c 	andi	r2,r20,32
    a870:	1002a526 	beq	r2,zero,b308 <___vfiprintf_internal_r+0x110c>
    a874:	da802217 	ldw	r10,136(sp)
    a878:	50800017 	ldw	r2,0(r10)
    a87c:	da802317 	ldw	r10,140(sp)
    a880:	5007d7fa 	srai	r3,r10,31
    a884:	da802217 	ldw	r10,136(sp)
    a888:	10c00115 	stw	r3,4(r2)
    a88c:	52800104 	addi	r10,r10,4
    a890:	da802215 	stw	r10,136(sp)
    a894:	da802317 	ldw	r10,140(sp)
    a898:	12800015 	stw	r10,0(r2)
    a89c:	003e8c06 	br	a2d0 <__alt_data_end+0xff00a2d0>
    a8a0:	21003fcc 	andi	r4,r4,255
    a8a4:	2003511e 	bne	r4,zero,b5ec <___vfiprintf_internal_r+0x13f0>
    a8a8:	a080080c 	andi	r2,r20,32
    a8ac:	1000a126 	beq	r2,zero,ab34 <___vfiprintf_internal_r+0x938>
    a8b0:	da802217 	ldw	r10,136(sp)
    a8b4:	d8001d85 	stb	zero,118(sp)
    a8b8:	50800204 	addi	r2,r10,8
    a8bc:	54800017 	ldw	r18,0(r10)
    a8c0:	54c00117 	ldw	r19,4(r10)
    a8c4:	4802b416 	blt	r9,zero,b398 <___vfiprintf_internal_r+0x119c>
    a8c8:	013fdfc4 	movi	r4,-129
    a8cc:	94c6b03a 	or	r3,r18,r19
    a8d0:	d8802215 	stw	r2,136(sp)
    a8d4:	a128703a 	and	r20,r20,r4
    a8d8:	1800a226 	beq	r3,zero,ab64 <___vfiprintf_internal_r+0x968>
    a8dc:	0039883a 	mov	fp,zero
    a8e0:	dd401a04 	addi	r21,sp,104
    a8e4:	9006d0fa 	srli	r3,r18,3
    a8e8:	9808977a 	slli	r4,r19,29
    a8ec:	9826d0fa 	srli	r19,r19,3
    a8f0:	948001cc 	andi	r18,r18,7
    a8f4:	90800c04 	addi	r2,r18,48
    a8f8:	ad7fffc4 	addi	r21,r21,-1
    a8fc:	20e4b03a 	or	r18,r4,r3
    a900:	a8800005 	stb	r2,0(r21)
    a904:	94c6b03a 	or	r3,r18,r19
    a908:	183ff61e 	bne	r3,zero,a8e4 <__alt_data_end+0xff00a8e4>
    a90c:	a0c0004c 	andi	r3,r20,1
    a910:	18005926 	beq	r3,zero,aa78 <___vfiprintf_internal_r+0x87c>
    a914:	10803fcc 	andi	r2,r2,255
    a918:	1080201c 	xori	r2,r2,128
    a91c:	10bfe004 	addi	r2,r2,-128
    a920:	00c00c04 	movi	r3,48
    a924:	10c05426 	beq	r2,r3,aa78 <___vfiprintf_internal_r+0x87c>
    a928:	da801e17 	ldw	r10,120(sp)
    a92c:	a8bfffc4 	addi	r2,r21,-1
    a930:	a8ffffc5 	stb	r3,-1(r21)
    a934:	50a7c83a 	sub	r19,r10,r2
    a938:	102b883a 	mov	r21,r2
    a93c:	003f2f06 	br	a5fc <__alt_data_end+0xff00a5fc>
    a940:	21003fcc 	andi	r4,r4,255
    a944:	2003421e 	bne	r4,zero,b650 <___vfiprintf_internal_r+0x1454>
    a948:	00800074 	movhi	r2,1
    a94c:	1088c704 	addi	r2,r2,8988
    a950:	d8802615 	stw	r2,152(sp)
    a954:	a080080c 	andi	r2,r20,32
    a958:	1000aa26 	beq	r2,zero,ac04 <___vfiprintf_internal_r+0xa08>
    a95c:	da802217 	ldw	r10,136(sp)
    a960:	54800017 	ldw	r18,0(r10)
    a964:	54c00117 	ldw	r19,4(r10)
    a968:	52800204 	addi	r10,r10,8
    a96c:	da802215 	stw	r10,136(sp)
    a970:	a080004c 	andi	r2,r20,1
    a974:	1001d226 	beq	r2,zero,b0c0 <___vfiprintf_internal_r+0xec4>
    a978:	94c4b03a 	or	r2,r18,r19
    a97c:	1002351e 	bne	r2,zero,b254 <___vfiprintf_internal_r+0x1058>
    a980:	d8001d85 	stb	zero,118(sp)
    a984:	48022216 	blt	r9,zero,b210 <___vfiprintf_internal_r+0x1014>
    a988:	00bfdfc4 	movi	r2,-129
    a98c:	a0a8703a 	and	r20,r20,r2
    a990:	003f1506 	br	a5e8 <__alt_data_end+0xff00a5e8>
    a994:	da802217 	ldw	r10,136(sp)
    a998:	04800044 	movi	r18,1
    a99c:	d8001d85 	stb	zero,118(sp)
    a9a0:	50800017 	ldw	r2,0(r10)
    a9a4:	52800104 	addi	r10,r10,4
    a9a8:	da802215 	stw	r10,136(sp)
    a9ac:	d8801005 	stb	r2,64(sp)
    a9b0:	9027883a 	mov	r19,r18
    a9b4:	dd401004 	addi	r21,sp,64
    a9b8:	0013883a 	mov	r9,zero
    a9bc:	003f1706 	br	a61c <__alt_data_end+0xff00a61c>
    a9c0:	21003fcc 	andi	r4,r4,255
    a9c4:	2003201e 	bne	r4,zero,b648 <___vfiprintf_internal_r+0x144c>
    a9c8:	a080080c 	andi	r2,r20,32
    a9cc:	10004b26 	beq	r2,zero,aafc <___vfiprintf_internal_r+0x900>
    a9d0:	da802217 	ldw	r10,136(sp)
    a9d4:	50800117 	ldw	r2,4(r10)
    a9d8:	54800017 	ldw	r18,0(r10)
    a9dc:	52800204 	addi	r10,r10,8
    a9e0:	da802215 	stw	r10,136(sp)
    a9e4:	1027883a 	mov	r19,r2
    a9e8:	10022c16 	blt	r2,zero,b29c <___vfiprintf_internal_r+0x10a0>
    a9ec:	df001d83 	ldbu	fp,118(sp)
    a9f0:	48007216 	blt	r9,zero,abbc <___vfiprintf_internal_r+0x9c0>
    a9f4:	00ffdfc4 	movi	r3,-129
    a9f8:	94c4b03a 	or	r2,r18,r19
    a9fc:	a0e8703a 	and	r20,r20,r3
    aa00:	1000cc26 	beq	r2,zero,ad34 <___vfiprintf_internal_r+0xb38>
    aa04:	98021026 	beq	r19,zero,b248 <___vfiprintf_internal_r+0x104c>
    aa08:	dc402415 	stw	r17,144(sp)
    aa0c:	dc002515 	stw	r16,148(sp)
    aa10:	9823883a 	mov	r17,r19
    aa14:	9021883a 	mov	r16,r18
    aa18:	dd401a04 	addi	r21,sp,104
    aa1c:	4825883a 	mov	r18,r9
    aa20:	4027883a 	mov	r19,r8
    aa24:	8009883a 	mov	r4,r16
    aa28:	880b883a 	mov	r5,r17
    aa2c:	01800284 	movi	r6,10
    aa30:	000f883a 	mov	r7,zero
    aa34:	000c5dc0 	call	c5dc <__umoddi3>
    aa38:	10800c04 	addi	r2,r2,48
    aa3c:	ad7fffc4 	addi	r21,r21,-1
    aa40:	8009883a 	mov	r4,r16
    aa44:	880b883a 	mov	r5,r17
    aa48:	a8800005 	stb	r2,0(r21)
    aa4c:	01800284 	movi	r6,10
    aa50:	000f883a 	mov	r7,zero
    aa54:	000c0640 	call	c064 <__udivdi3>
    aa58:	1021883a 	mov	r16,r2
    aa5c:	10c4b03a 	or	r2,r2,r3
    aa60:	1823883a 	mov	r17,r3
    aa64:	103fef1e 	bne	r2,zero,aa24 <__alt_data_end+0xff00aa24>
    aa68:	dc402417 	ldw	r17,144(sp)
    aa6c:	dc002517 	ldw	r16,148(sp)
    aa70:	9013883a 	mov	r9,r18
    aa74:	9811883a 	mov	r8,r19
    aa78:	da801e17 	ldw	r10,120(sp)
    aa7c:	5567c83a 	sub	r19,r10,r21
    aa80:	003ede06 	br	a5fc <__alt_data_end+0xff00a5fc>
    aa84:	38803fcc 	andi	r2,r7,255
    aa88:	1080201c 	xori	r2,r2,128
    aa8c:	10bfe004 	addi	r2,r2,-128
    aa90:	1002371e 	bne	r2,zero,b370 <___vfiprintf_internal_r+0x1174>
    aa94:	01000044 	movi	r4,1
    aa98:	01c00804 	movi	r7,32
    aa9c:	80c00007 	ldb	r3,0(r16)
    aaa0:	003e3506 	br	a378 <__alt_data_end+0xff00a378>
    aaa4:	a5000054 	ori	r20,r20,1
    aaa8:	80c00007 	ldb	r3,0(r16)
    aaac:	003e3206 	br	a378 <__alt_data_end+0xff00a378>
    aab0:	a5002014 	ori	r20,r20,128
    aab4:	80c00007 	ldb	r3,0(r16)
    aab8:	003e2f06 	br	a378 <__alt_data_end+0xff00a378>
    aabc:	8015883a 	mov	r10,r16
    aac0:	0023883a 	mov	r17,zero
    aac4:	18bff404 	addi	r2,r3,-48
    aac8:	50c00007 	ldb	r3,0(r10)
    aacc:	8c4002a4 	muli	r17,r17,10
    aad0:	84000044 	addi	r16,r16,1
    aad4:	8015883a 	mov	r10,r16
    aad8:	1463883a 	add	r17,r2,r17
    aadc:	18bff404 	addi	r2,r3,-48
    aae0:	30bff92e 	bgeu	r6,r2,aac8 <__alt_data_end+0xff00aac8>
    aae4:	003e2506 	br	a37c <__alt_data_end+0xff00a37c>
    aae8:	21003fcc 	andi	r4,r4,255
    aaec:	2002d41e 	bne	r4,zero,b640 <___vfiprintf_internal_r+0x1444>
    aaf0:	a5000414 	ori	r20,r20,16
    aaf4:	a080080c 	andi	r2,r20,32
    aaf8:	103fb51e 	bne	r2,zero,a9d0 <__alt_data_end+0xff00a9d0>
    aafc:	a080040c 	andi	r2,r20,16
    ab00:	1001f826 	beq	r2,zero,b2e4 <___vfiprintf_internal_r+0x10e8>
    ab04:	da802217 	ldw	r10,136(sp)
    ab08:	54800017 	ldw	r18,0(r10)
    ab0c:	52800104 	addi	r10,r10,4
    ab10:	da802215 	stw	r10,136(sp)
    ab14:	9027d7fa 	srai	r19,r18,31
    ab18:	9805883a 	mov	r2,r19
    ab1c:	003fb206 	br	a9e8 <__alt_data_end+0xff00a9e8>
    ab20:	21003fcc 	andi	r4,r4,255
    ab24:	2002c41e 	bne	r4,zero,b638 <___vfiprintf_internal_r+0x143c>
    ab28:	a5000414 	ori	r20,r20,16
    ab2c:	a080080c 	andi	r2,r20,32
    ab30:	103f5f1e 	bne	r2,zero,a8b0 <__alt_data_end+0xff00a8b0>
    ab34:	a080040c 	andi	r2,r20,16
    ab38:	10020f26 	beq	r2,zero,b378 <___vfiprintf_internal_r+0x117c>
    ab3c:	da802217 	ldw	r10,136(sp)
    ab40:	d8001d85 	stb	zero,118(sp)
    ab44:	0027883a 	mov	r19,zero
    ab48:	50800104 	addi	r2,r10,4
    ab4c:	54800017 	ldw	r18,0(r10)
    ab50:	48021116 	blt	r9,zero,b398 <___vfiprintf_internal_r+0x119c>
    ab54:	00ffdfc4 	movi	r3,-129
    ab58:	d8802215 	stw	r2,136(sp)
    ab5c:	a0e8703a 	and	r20,r20,r3
    ab60:	903f5e1e 	bne	r18,zero,a8dc <__alt_data_end+0xff00a8dc>
    ab64:	0039883a 	mov	fp,zero
    ab68:	4802a626 	beq	r9,zero,b604 <___vfiprintf_internal_r+0x1408>
    ab6c:	0025883a 	mov	r18,zero
    ab70:	0027883a 	mov	r19,zero
    ab74:	003f5a06 	br	a8e0 <__alt_data_end+0xff00a8e0>
    ab78:	21003fcc 	andi	r4,r4,255
    ab7c:	20029f1e 	bne	r4,zero,b5fc <___vfiprintf_internal_r+0x1400>
    ab80:	a5000414 	ori	r20,r20,16
    ab84:	a080080c 	andi	r2,r20,32
    ab88:	10005e1e 	bne	r2,zero,ad04 <___vfiprintf_internal_r+0xb08>
    ab8c:	a080040c 	andi	r2,r20,16
    ab90:	1001a21e 	bne	r2,zero,b21c <___vfiprintf_internal_r+0x1020>
    ab94:	a080100c 	andi	r2,r20,64
    ab98:	d8001d85 	stb	zero,118(sp)
    ab9c:	da802217 	ldw	r10,136(sp)
    aba0:	1002231e 	bne	r2,zero,b430 <___vfiprintf_internal_r+0x1234>
    aba4:	50800104 	addi	r2,r10,4
    aba8:	54800017 	ldw	r18,0(r10)
    abac:	0027883a 	mov	r19,zero
    abb0:	4801a00e 	bge	r9,zero,b234 <___vfiprintf_internal_r+0x1038>
    abb4:	d8802215 	stw	r2,136(sp)
    abb8:	0039883a 	mov	fp,zero
    abbc:	94c4b03a 	or	r2,r18,r19
    abc0:	103f901e 	bne	r2,zero,aa04 <__alt_data_end+0xff00aa04>
    abc4:	00800044 	movi	r2,1
    abc8:	10803fcc 	andi	r2,r2,255
    abcc:	00c00044 	movi	r3,1
    abd0:	10c05926 	beq	r2,r3,ad38 <___vfiprintf_internal_r+0xb3c>
    abd4:	00c00084 	movi	r3,2
    abd8:	10ffe41e 	bne	r2,r3,ab6c <__alt_data_end+0xff00ab6c>
    abdc:	0025883a 	mov	r18,zero
    abe0:	0027883a 	mov	r19,zero
    abe4:	00013d06 	br	b0dc <___vfiprintf_internal_r+0xee0>
    abe8:	21003fcc 	andi	r4,r4,255
    abec:	2002811e 	bne	r4,zero,b5f4 <___vfiprintf_internal_r+0x13f8>
    abf0:	00800074 	movhi	r2,1
    abf4:	1088c204 	addi	r2,r2,8968
    abf8:	d8802615 	stw	r2,152(sp)
    abfc:	a080080c 	andi	r2,r20,32
    ac00:	103f561e 	bne	r2,zero,a95c <__alt_data_end+0xff00a95c>
    ac04:	a080040c 	andi	r2,r20,16
    ac08:	1001d126 	beq	r2,zero,b350 <___vfiprintf_internal_r+0x1154>
    ac0c:	da802217 	ldw	r10,136(sp)
    ac10:	0027883a 	mov	r19,zero
    ac14:	54800017 	ldw	r18,0(r10)
    ac18:	52800104 	addi	r10,r10,4
    ac1c:	da802215 	stw	r10,136(sp)
    ac20:	003f5306 	br	a970 <__alt_data_end+0xff00a970>
    ac24:	da802217 	ldw	r10,136(sp)
    ac28:	d8001d85 	stb	zero,118(sp)
    ac2c:	55400017 	ldw	r21,0(r10)
    ac30:	50c00104 	addi	r3,r10,4
    ac34:	a8024226 	beq	r21,zero,b540 <___vfiprintf_internal_r+0x1344>
    ac38:	48021816 	blt	r9,zero,b49c <___vfiprintf_internal_r+0x12a0>
    ac3c:	480d883a 	mov	r6,r9
    ac40:	000b883a 	mov	r5,zero
    ac44:	a809883a 	mov	r4,r21
    ac48:	d8c02a15 	stw	r3,168(sp)
    ac4c:	da002b15 	stw	r8,172(sp)
    ac50:	da402c15 	stw	r9,176(sp)
    ac54:	00085940 	call	8594 <memchr>
    ac58:	d8c02a17 	ldw	r3,168(sp)
    ac5c:	da002b17 	ldw	r8,172(sp)
    ac60:	da402c17 	ldw	r9,176(sp)
    ac64:	10024826 	beq	r2,zero,b588 <___vfiprintf_internal_r+0x138c>
    ac68:	1567c83a 	sub	r19,r2,r21
    ac6c:	df001d83 	ldbu	fp,118(sp)
    ac70:	d8c02215 	stw	r3,136(sp)
    ac74:	0013883a 	mov	r9,zero
    ac78:	003e6006 	br	a5fc <__alt_data_end+0xff00a5fc>
    ac7c:	21003fcc 	andi	r4,r4,255
    ac80:	203fc026 	beq	r4,zero,ab84 <__alt_data_end+0xff00ab84>
    ac84:	d9c01d85 	stb	r7,118(sp)
    ac88:	003fbe06 	br	ab84 <__alt_data_end+0xff00ab84>
    ac8c:	da802217 	ldw	r10,136(sp)
    ac90:	54400017 	ldw	r17,0(r10)
    ac94:	50800104 	addi	r2,r10,4
    ac98:	883e3b16 	blt	r17,zero,a588 <__alt_data_end+0xff00a588>
    ac9c:	d8802215 	stw	r2,136(sp)
    aca0:	80c00007 	ldb	r3,0(r16)
    aca4:	003db406 	br	a378 <__alt_data_end+0xff00a378>
    aca8:	01000044 	movi	r4,1
    acac:	01c00ac4 	movi	r7,43
    acb0:	80c00007 	ldb	r3,0(r16)
    acb4:	003db006 	br	a378 <__alt_data_end+0xff00a378>
    acb8:	80c00007 	ldb	r3,0(r16)
    acbc:	82800044 	addi	r10,r16,1
    acc0:	1b423c26 	beq	r3,r13,b5b4 <___vfiprintf_internal_r+0x13b8>
    acc4:	18bff404 	addi	r2,r3,-48
    acc8:	0013883a 	mov	r9,zero
    accc:	30822b36 	bltu	r6,r2,b57c <___vfiprintf_internal_r+0x1380>
    acd0:	50c00007 	ldb	r3,0(r10)
    acd4:	4a4002a4 	muli	r9,r9,10
    acd8:	54000044 	addi	r16,r10,1
    acdc:	8015883a 	mov	r10,r16
    ace0:	4893883a 	add	r9,r9,r2
    ace4:	18bff404 	addi	r2,r3,-48
    ace8:	30bff92e 	bgeu	r6,r2,acd0 <__alt_data_end+0xff00acd0>
    acec:	483da30e 	bge	r9,zero,a37c <__alt_data_end+0xff00a37c>
    acf0:	027fffc4 	movi	r9,-1
    acf4:	003da106 	br	a37c <__alt_data_end+0xff00a37c>
    acf8:	a5001014 	ori	r20,r20,64
    acfc:	80c00007 	ldb	r3,0(r16)
    ad00:	003d9d06 	br	a378 <__alt_data_end+0xff00a378>
    ad04:	da802217 	ldw	r10,136(sp)
    ad08:	d8001d85 	stb	zero,118(sp)
    ad0c:	50c00204 	addi	r3,r10,8
    ad10:	54800017 	ldw	r18,0(r10)
    ad14:	54c00117 	ldw	r19,4(r10)
    ad18:	4801ca16 	blt	r9,zero,b444 <___vfiprintf_internal_r+0x1248>
    ad1c:	013fdfc4 	movi	r4,-129
    ad20:	94c4b03a 	or	r2,r18,r19
    ad24:	d8c02215 	stw	r3,136(sp)
    ad28:	a128703a 	and	r20,r20,r4
    ad2c:	0039883a 	mov	fp,zero
    ad30:	103f341e 	bne	r2,zero,aa04 <__alt_data_end+0xff00aa04>
    ad34:	483e2e26 	beq	r9,zero,a5f0 <__alt_data_end+0xff00a5f0>
    ad38:	0025883a 	mov	r18,zero
    ad3c:	94800c04 	addi	r18,r18,48
    ad40:	dc8019c5 	stb	r18,103(sp)
    ad44:	dcc02717 	ldw	r19,156(sp)
    ad48:	dd4019c4 	addi	r21,sp,103
    ad4c:	003e2b06 	br	a5fc <__alt_data_end+0xff00a5fc>
    ad50:	21003fcc 	andi	r4,r4,255
    ad54:	2002361e 	bne	r4,zero,b630 <___vfiprintf_internal_r+0x1434>
    ad58:	1801c126 	beq	r3,zero,b460 <___vfiprintf_internal_r+0x1264>
    ad5c:	04800044 	movi	r18,1
    ad60:	d8c01005 	stb	r3,64(sp)
    ad64:	d8001d85 	stb	zero,118(sp)
    ad68:	9027883a 	mov	r19,r18
    ad6c:	dd401004 	addi	r21,sp,64
    ad70:	003f1106 	br	a9b8 <__alt_data_end+0xff00a9b8>
    ad74:	d9402117 	ldw	r5,132(sp)
    ad78:	d9002017 	ldw	r4,128(sp)
    ad7c:	d9801a04 	addi	r6,sp,104
    ad80:	d9c02b15 	stw	r7,172(sp)
    ad84:	dbc02a15 	stw	r15,168(sp)
    ad88:	000a0e80 	call	a0e8 <__sprint_r.part.0>
    ad8c:	d9c02b17 	ldw	r7,172(sp)
    ad90:	dbc02a17 	ldw	r15,168(sp)
    ad94:	10006d1e 	bne	r2,zero,af4c <___vfiprintf_internal_r+0xd50>
    ad98:	d9801b17 	ldw	r6,108(sp)
    ad9c:	d8801c17 	ldw	r2,112(sp)
    ada0:	d811883a 	mov	r8,sp
    ada4:	31400044 	addi	r5,r6,1
    ada8:	003e3306 	br	a678 <__alt_data_end+0xff00a678>
    adac:	d9401b17 	ldw	r5,108(sp)
    adb0:	d8801c17 	ldw	r2,112(sp)
    adb4:	29000044 	addi	r4,r5,1
    adb8:	d8c01d87 	ldb	r3,118(sp)
    adbc:	183e4d26 	beq	r3,zero,a6f4 <__alt_data_end+0xff00a6f4>
    adc0:	00c00044 	movi	r3,1
    adc4:	d9401d84 	addi	r5,sp,118
    adc8:	10c5883a 	add	r2,r2,r3
    adcc:	41400015 	stw	r5,0(r8)
    add0:	40c00115 	stw	r3,4(r8)
    add4:	d8801c15 	stw	r2,112(sp)
    add8:	d9001b15 	stw	r4,108(sp)
    addc:	014001c4 	movi	r5,7
    ade0:	2900a90e 	bge	r5,r4,b088 <___vfiprintf_internal_r+0xe8c>
    ade4:	1000da1e 	bne	r2,zero,b150 <___vfiprintf_internal_r+0xf54>
    ade8:	7000ab1e 	bne	r14,zero,b098 <___vfiprintf_internal_r+0xe9c>
    adec:	000b883a 	mov	r5,zero
    adf0:	1809883a 	mov	r4,r3
    adf4:	d811883a 	mov	r8,sp
    adf8:	00c02004 	movi	r3,128
    adfc:	e0fe4d26 	beq	fp,r3,a734 <__alt_data_end+0xff00a734>
    ae00:	4cf9c83a 	sub	fp,r9,r19
    ae04:	073e7b0e 	bge	zero,fp,a7f4 <__alt_data_end+0xff00a7f4>
    ae08:	01c00404 	movi	r7,16
    ae0c:	3f01900e 	bge	r7,fp,b450 <___vfiprintf_internal_r+0x1254>
    ae10:	00c00074 	movhi	r3,1
    ae14:	18c92804 	addi	r3,r3,9376
    ae18:	d8c02415 	stw	r3,144(sp)
    ae1c:	034001c4 	movi	r13,7
    ae20:	00000506 	br	ae38 <___vfiprintf_internal_r+0xc3c>
    ae24:	29000084 	addi	r4,r5,2
    ae28:	42000204 	addi	r8,r8,8
    ae2c:	180b883a 	mov	r5,r3
    ae30:	e73ffc04 	addi	fp,fp,-16
    ae34:	3f000d0e 	bge	r7,fp,ae6c <___vfiprintf_internal_r+0xc70>
    ae38:	10800404 	addi	r2,r2,16
    ae3c:	28c00044 	addi	r3,r5,1
    ae40:	45c00015 	stw	r23,0(r8)
    ae44:	41c00115 	stw	r7,4(r8)
    ae48:	d8801c15 	stw	r2,112(sp)
    ae4c:	d8c01b15 	stw	r3,108(sp)
    ae50:	68fff40e 	bge	r13,r3,ae24 <__alt_data_end+0xff00ae24>
    ae54:	1000101e 	bne	r2,zero,ae98 <___vfiprintf_internal_r+0xc9c>
    ae58:	e73ffc04 	addi	fp,fp,-16
    ae5c:	01000044 	movi	r4,1
    ae60:	000b883a 	mov	r5,zero
    ae64:	d811883a 	mov	r8,sp
    ae68:	3f3ff316 	blt	r7,fp,ae38 <__alt_data_end+0xff00ae38>
    ae6c:	da802417 	ldw	r10,144(sp)
    ae70:	1705883a 	add	r2,r2,fp
    ae74:	47000115 	stw	fp,4(r8)
    ae78:	42800015 	stw	r10,0(r8)
    ae7c:	d8801c15 	stw	r2,112(sp)
    ae80:	d9001b15 	stw	r4,108(sp)
    ae84:	00c001c4 	movi	r3,7
    ae88:	19003616 	blt	r3,r4,af64 <___vfiprintf_internal_r+0xd68>
    ae8c:	42000204 	addi	r8,r8,8
    ae90:	21000044 	addi	r4,r4,1
    ae94:	003e5706 	br	a7f4 <__alt_data_end+0xff00a7f4>
    ae98:	d9402117 	ldw	r5,132(sp)
    ae9c:	d9002017 	ldw	r4,128(sp)
    aea0:	d9801a04 	addi	r6,sp,104
    aea4:	d9c02b15 	stw	r7,172(sp)
    aea8:	db402a15 	stw	r13,168(sp)
    aeac:	000a0e80 	call	a0e8 <__sprint_r.part.0>
    aeb0:	d9c02b17 	ldw	r7,172(sp)
    aeb4:	db402a17 	ldw	r13,168(sp)
    aeb8:	1000241e 	bne	r2,zero,af4c <___vfiprintf_internal_r+0xd50>
    aebc:	d9401b17 	ldw	r5,108(sp)
    aec0:	d8801c17 	ldw	r2,112(sp)
    aec4:	d811883a 	mov	r8,sp
    aec8:	29000044 	addi	r4,r5,1
    aecc:	003fd806 	br	ae30 <__alt_data_end+0xff00ae30>
    aed0:	d9401b17 	ldw	r5,108(sp)
    aed4:	00c00074 	movhi	r3,1
    aed8:	18c92c04 	addi	r3,r3,9392
    aedc:	d8c02415 	stw	r3,144(sp)
    aee0:	29400044 	addi	r5,r5,1
    aee4:	d8c02417 	ldw	r3,144(sp)
    aee8:	14c5883a 	add	r2,r2,r19
    aeec:	44c00115 	stw	r19,4(r8)
    aef0:	40c00015 	stw	r3,0(r8)
    aef4:	d8801c15 	stw	r2,112(sp)
    aef8:	d9401b15 	stw	r5,108(sp)
    aefc:	00c001c4 	movi	r3,7
    af00:	1940070e 	bge	r3,r5,af20 <___vfiprintf_internal_r+0xd24>
    af04:	103e4826 	beq	r2,zero,a828 <__alt_data_end+0xff00a828>
    af08:	d9402117 	ldw	r5,132(sp)
    af0c:	d9002017 	ldw	r4,128(sp)
    af10:	d9801a04 	addi	r6,sp,104
    af14:	000a0e80 	call	a0e8 <__sprint_r.part.0>
    af18:	10000c1e 	bne	r2,zero,af4c <___vfiprintf_internal_r+0xd50>
    af1c:	d8801c17 	ldw	r2,112(sp)
    af20:	8c80010e 	bge	r17,r18,af28 <___vfiprintf_internal_r+0xd2c>
    af24:	9023883a 	mov	r17,r18
    af28:	da802317 	ldw	r10,140(sp)
    af2c:	5455883a 	add	r10,r10,r17
    af30:	da802315 	stw	r10,140(sp)
    af34:	103e4126 	beq	r2,zero,a83c <__alt_data_end+0xff00a83c>
    af38:	d9402117 	ldw	r5,132(sp)
    af3c:	d9002017 	ldw	r4,128(sp)
    af40:	d9801a04 	addi	r6,sp,104
    af44:	000a0e80 	call	a0e8 <__sprint_r.part.0>
    af48:	103e3c26 	beq	r2,zero,a83c <__alt_data_end+0xff00a83c>
    af4c:	dd002117 	ldw	r20,132(sp)
    af50:	a080030b 	ldhu	r2,12(r20)
    af54:	1080100c 	andi	r2,r2,64
    af58:	1001231e 	bne	r2,zero,b3e8 <___vfiprintf_internal_r+0x11ec>
    af5c:	d8802317 	ldw	r2,140(sp)
    af60:	003d7b06 	br	a550 <__alt_data_end+0xff00a550>
    af64:	1000991e 	bne	r2,zero,b1cc <___vfiprintf_internal_r+0xfd0>
    af68:	00c00044 	movi	r3,1
    af6c:	9805883a 	mov	r2,r19
    af70:	dd400015 	stw	r21,0(sp)
    af74:	dcc00115 	stw	r19,4(sp)
    af78:	dcc01c15 	stw	r19,112(sp)
    af7c:	d8c01b15 	stw	r3,108(sp)
    af80:	d811883a 	mov	r8,sp
    af84:	42000204 	addi	r8,r8,8
    af88:	a2c0010c 	andi	r11,r20,4
    af8c:	583fe426 	beq	r11,zero,af20 <__alt_data_end+0xff00af20>
    af90:	8ca7c83a 	sub	r19,r17,r18
    af94:	04ffe20e 	bge	zero,r19,af20 <__alt_data_end+0xff00af20>
    af98:	01c00404 	movi	r7,16
    af9c:	3cffcc0e 	bge	r7,r19,aed0 <__alt_data_end+0xff00aed0>
    afa0:	02800074 	movhi	r10,1
    afa4:	52892c04 	addi	r10,r10,9392
    afa8:	d9001b17 	ldw	r4,108(sp)
    afac:	da802415 	stw	r10,144(sp)
    afb0:	382b883a 	mov	r21,r7
    afb4:	050001c4 	movi	r20,7
    afb8:	df002017 	ldw	fp,128(sp)
    afbc:	00000506 	br	afd4 <___vfiprintf_internal_r+0xdd8>
    afc0:	21400084 	addi	r5,r4,2
    afc4:	42000204 	addi	r8,r8,8
    afc8:	1809883a 	mov	r4,r3
    afcc:	9cfffc04 	addi	r19,r19,-16
    afd0:	acffc40e 	bge	r21,r19,aee4 <__alt_data_end+0xff00aee4>
    afd4:	10800404 	addi	r2,r2,16
    afd8:	20c00044 	addi	r3,r4,1
    afdc:	45800015 	stw	r22,0(r8)
    afe0:	45400115 	stw	r21,4(r8)
    afe4:	d8801c15 	stw	r2,112(sp)
    afe8:	d8c01b15 	stw	r3,108(sp)
    afec:	a0fff40e 	bge	r20,r3,afc0 <__alt_data_end+0xff00afc0>
    aff0:	1000041e 	bne	r2,zero,b004 <___vfiprintf_internal_r+0xe08>
    aff4:	01400044 	movi	r5,1
    aff8:	0009883a 	mov	r4,zero
    affc:	d811883a 	mov	r8,sp
    b000:	003ff206 	br	afcc <__alt_data_end+0xff00afcc>
    b004:	d9402117 	ldw	r5,132(sp)
    b008:	d9801a04 	addi	r6,sp,104
    b00c:	e009883a 	mov	r4,fp
    b010:	000a0e80 	call	a0e8 <__sprint_r.part.0>
    b014:	103fcd1e 	bne	r2,zero,af4c <__alt_data_end+0xff00af4c>
    b018:	d9001b17 	ldw	r4,108(sp)
    b01c:	d8801c17 	ldw	r2,112(sp)
    b020:	d811883a 	mov	r8,sp
    b024:	21400044 	addi	r5,r4,1
    b028:	003fe806 	br	afcc <__alt_data_end+0xff00afcc>
    b02c:	d9402117 	ldw	r5,132(sp)
    b030:	d9002017 	ldw	r4,128(sp)
    b034:	d9801a04 	addi	r6,sp,104
    b038:	d9c02b15 	stw	r7,172(sp)
    b03c:	db402a15 	stw	r13,168(sp)
    b040:	000a0e80 	call	a0e8 <__sprint_r.part.0>
    b044:	d9c02b17 	ldw	r7,172(sp)
    b048:	db402a17 	ldw	r13,168(sp)
    b04c:	103fbf1e 	bne	r2,zero,af4c <__alt_data_end+0xff00af4c>
    b050:	d9401b17 	ldw	r5,108(sp)
    b054:	d8801c17 	ldw	r2,112(sp)
    b058:	d811883a 	mov	r8,sp
    b05c:	29800044 	addi	r6,r5,1
    b060:	003dc406 	br	a774 <__alt_data_end+0xff00a774>
    b064:	1000d21e 	bne	r2,zero,b3b0 <___vfiprintf_internal_r+0x11b4>
    b068:	d8c01d87 	ldb	r3,118(sp)
    b06c:	18009526 	beq	r3,zero,b2c4 <___vfiprintf_internal_r+0x10c8>
    b070:	00800044 	movi	r2,1
    b074:	d8c01d84 	addi	r3,sp,118
    b078:	1009883a 	mov	r4,r2
    b07c:	d8c00015 	stw	r3,0(sp)
    b080:	d8800115 	stw	r2,4(sp)
    b084:	d811883a 	mov	r8,sp
    b088:	200b883a 	mov	r5,r4
    b08c:	42000204 	addi	r8,r8,8
    b090:	21000044 	addi	r4,r4,1
    b094:	003d9706 	br	a6f4 <__alt_data_end+0xff00a6f4>
    b098:	d9001d04 	addi	r4,sp,116
    b09c:	00800084 	movi	r2,2
    b0a0:	d9000015 	stw	r4,0(sp)
    b0a4:	d8800115 	stw	r2,4(sp)
    b0a8:	1809883a 	mov	r4,r3
    b0ac:	d811883a 	mov	r8,sp
    b0b0:	200b883a 	mov	r5,r4
    b0b4:	42000204 	addi	r8,r8,8
    b0b8:	21000044 	addi	r4,r4,1
    b0bc:	003f4e06 	br	adf8 <__alt_data_end+0xff00adf8>
    b0c0:	d8001d85 	stb	zero,118(sp)
    b0c4:	48005016 	blt	r9,zero,b208 <___vfiprintf_internal_r+0x100c>
    b0c8:	00ffdfc4 	movi	r3,-129
    b0cc:	94c4b03a 	or	r2,r18,r19
    b0d0:	a0e8703a 	and	r20,r20,r3
    b0d4:	103d4426 	beq	r2,zero,a5e8 <__alt_data_end+0xff00a5e8>
    b0d8:	0039883a 	mov	fp,zero
    b0dc:	d9002617 	ldw	r4,152(sp)
    b0e0:	dd401a04 	addi	r21,sp,104
    b0e4:	908003cc 	andi	r2,r18,15
    b0e8:	9806973a 	slli	r3,r19,28
    b0ec:	2085883a 	add	r2,r4,r2
    b0f0:	9024d13a 	srli	r18,r18,4
    b0f4:	10800003 	ldbu	r2,0(r2)
    b0f8:	9826d13a 	srli	r19,r19,4
    b0fc:	ad7fffc4 	addi	r21,r21,-1
    b100:	1ca4b03a 	or	r18,r3,r18
    b104:	a8800005 	stb	r2,0(r21)
    b108:	94c4b03a 	or	r2,r18,r19
    b10c:	103ff51e 	bne	r2,zero,b0e4 <__alt_data_end+0xff00b0e4>
    b110:	003e5906 	br	aa78 <__alt_data_end+0xff00aa78>
    b114:	d9402117 	ldw	r5,132(sp)
    b118:	d9002017 	ldw	r4,128(sp)
    b11c:	d9801a04 	addi	r6,sp,104
    b120:	000a0e80 	call	a0e8 <__sprint_r.part.0>
    b124:	103f891e 	bne	r2,zero,af4c <__alt_data_end+0xff00af4c>
    b128:	d8801c17 	ldw	r2,112(sp)
    b12c:	d811883a 	mov	r8,sp
    b130:	003f9506 	br	af88 <__alt_data_end+0xff00af88>
    b134:	d9402117 	ldw	r5,132(sp)
    b138:	d9002017 	ldw	r4,128(sp)
    b13c:	d9801a04 	addi	r6,sp,104
    b140:	000a0e80 	call	a0e8 <__sprint_r.part.0>
    b144:	103f811e 	bne	r2,zero,af4c <__alt_data_end+0xff00af4c>
    b148:	d811883a 	mov	r8,sp
    b14c:	003ced06 	br	a504 <__alt_data_end+0xff00a504>
    b150:	d9402117 	ldw	r5,132(sp)
    b154:	d9002017 	ldw	r4,128(sp)
    b158:	d9801a04 	addi	r6,sp,104
    b15c:	da402c15 	stw	r9,176(sp)
    b160:	db802a15 	stw	r14,168(sp)
    b164:	000a0e80 	call	a0e8 <__sprint_r.part.0>
    b168:	da402c17 	ldw	r9,176(sp)
    b16c:	db802a17 	ldw	r14,168(sp)
    b170:	103f761e 	bne	r2,zero,af4c <__alt_data_end+0xff00af4c>
    b174:	d9401b17 	ldw	r5,108(sp)
    b178:	d8801c17 	ldw	r2,112(sp)
    b17c:	d811883a 	mov	r8,sp
    b180:	29000044 	addi	r4,r5,1
    b184:	003d5b06 	br	a6f4 <__alt_data_end+0xff00a6f4>
    b188:	d9402117 	ldw	r5,132(sp)
    b18c:	d9002017 	ldw	r4,128(sp)
    b190:	d9801a04 	addi	r6,sp,104
    b194:	da402c15 	stw	r9,176(sp)
    b198:	000a0e80 	call	a0e8 <__sprint_r.part.0>
    b19c:	da402c17 	ldw	r9,176(sp)
    b1a0:	103f6a1e 	bne	r2,zero,af4c <__alt_data_end+0xff00af4c>
    b1a4:	d9401b17 	ldw	r5,108(sp)
    b1a8:	d8801c17 	ldw	r2,112(sp)
    b1ac:	d811883a 	mov	r8,sp
    b1b0:	29000044 	addi	r4,r5,1
    b1b4:	003f1006 	br	adf8 <__alt_data_end+0xff00adf8>
    b1b8:	1000c31e 	bne	r2,zero,b4c8 <___vfiprintf_internal_r+0x12cc>
    b1bc:	01000044 	movi	r4,1
    b1c0:	000b883a 	mov	r5,zero
    b1c4:	d811883a 	mov	r8,sp
    b1c8:	003f0d06 	br	ae00 <__alt_data_end+0xff00ae00>
    b1cc:	d9402117 	ldw	r5,132(sp)
    b1d0:	d9002017 	ldw	r4,128(sp)
    b1d4:	d9801a04 	addi	r6,sp,104
    b1d8:	000a0e80 	call	a0e8 <__sprint_r.part.0>
    b1dc:	103f5b1e 	bne	r2,zero,af4c <__alt_data_end+0xff00af4c>
    b1e0:	d9001b17 	ldw	r4,108(sp)
    b1e4:	d8801c17 	ldw	r2,112(sp)
    b1e8:	d811883a 	mov	r8,sp
    b1ec:	21000044 	addi	r4,r4,1
    b1f0:	003d8006 	br	a7f4 <__alt_data_end+0xff00a7f4>
    b1f4:	01000074 	movhi	r4,1
    b1f8:	2108c704 	addi	r4,r4,8988
    b1fc:	d9002615 	stw	r4,152(sp)
    b200:	d8c02215 	stw	r3,136(sp)
    b204:	1029883a 	mov	r20,r2
    b208:	94c4b03a 	or	r2,r18,r19
    b20c:	103fb21e 	bne	r2,zero,b0d8 <__alt_data_end+0xff00b0d8>
    b210:	0039883a 	mov	fp,zero
    b214:	00800084 	movi	r2,2
    b218:	003e6b06 	br	abc8 <__alt_data_end+0xff00abc8>
    b21c:	da802217 	ldw	r10,136(sp)
    b220:	d8001d85 	stb	zero,118(sp)
    b224:	0027883a 	mov	r19,zero
    b228:	50800104 	addi	r2,r10,4
    b22c:	54800017 	ldw	r18,0(r10)
    b230:	483e6016 	blt	r9,zero,abb4 <__alt_data_end+0xff00abb4>
    b234:	00ffdfc4 	movi	r3,-129
    b238:	d8802215 	stw	r2,136(sp)
    b23c:	a0e8703a 	and	r20,r20,r3
    b240:	0039883a 	mov	fp,zero
    b244:	903ebb26 	beq	r18,zero,ad34 <__alt_data_end+0xff00ad34>
    b248:	00800244 	movi	r2,9
    b24c:	14bdee36 	bltu	r2,r18,aa08 <__alt_data_end+0xff00aa08>
    b250:	003eba06 	br	ad3c <__alt_data_end+0xff00ad3c>
    b254:	00800c04 	movi	r2,48
    b258:	d8c01d45 	stb	r3,117(sp)
    b25c:	d8801d05 	stb	r2,116(sp)
    b260:	d8001d85 	stb	zero,118(sp)
    b264:	a0c00094 	ori	r3,r20,2
    b268:	4800a916 	blt	r9,zero,b510 <___vfiprintf_internal_r+0x1314>
    b26c:	00bfdfc4 	movi	r2,-129
    b270:	a096703a 	and	r11,r20,r2
    b274:	5d000094 	ori	r20,r11,2
    b278:	0039883a 	mov	fp,zero
    b27c:	003f9706 	br	b0dc <__alt_data_end+0xff00b0dc>
    b280:	8025883a 	mov	r18,r16
    b284:	003c2e06 	br	a340 <__alt_data_end+0xff00a340>
    b288:	00800074 	movhi	r2,1
    b28c:	1088c704 	addi	r2,r2,8988
    b290:	0039883a 	mov	fp,zero
    b294:	d8802615 	stw	r2,152(sp)
    b298:	003f9006 	br	b0dc <__alt_data_end+0xff00b0dc>
    b29c:	04a5c83a 	sub	r18,zero,r18
    b2a0:	07000b44 	movi	fp,45
    b2a4:	9004c03a 	cmpne	r2,r18,zero
    b2a8:	04e7c83a 	sub	r19,zero,r19
    b2ac:	df001d85 	stb	fp,118(sp)
    b2b0:	98a7c83a 	sub	r19,r19,r2
    b2b4:	48009f16 	blt	r9,zero,b534 <___vfiprintf_internal_r+0x1338>
    b2b8:	00bfdfc4 	movi	r2,-129
    b2bc:	a0a8703a 	and	r20,r20,r2
    b2c0:	003dd006 	br	aa04 <__alt_data_end+0xff00aa04>
    b2c4:	70004c26 	beq	r14,zero,b3f8 <___vfiprintf_internal_r+0x11fc>
    b2c8:	00800084 	movi	r2,2
    b2cc:	d8c01d04 	addi	r3,sp,116
    b2d0:	d8c00015 	stw	r3,0(sp)
    b2d4:	d8800115 	stw	r2,4(sp)
    b2d8:	01000044 	movi	r4,1
    b2dc:	d811883a 	mov	r8,sp
    b2e0:	003f7306 	br	b0b0 <__alt_data_end+0xff00b0b0>
    b2e4:	a080100c 	andi	r2,r20,64
    b2e8:	da802217 	ldw	r10,136(sp)
    b2ec:	103e0626 	beq	r2,zero,ab08 <__alt_data_end+0xff00ab08>
    b2f0:	5480000f 	ldh	r18,0(r10)
    b2f4:	52800104 	addi	r10,r10,4
    b2f8:	da802215 	stw	r10,136(sp)
    b2fc:	9027d7fa 	srai	r19,r18,31
    b300:	9805883a 	mov	r2,r19
    b304:	003db806 	br	a9e8 <__alt_data_end+0xff00a9e8>
    b308:	a080040c 	andi	r2,r20,16
    b30c:	1000091e 	bne	r2,zero,b334 <___vfiprintf_internal_r+0x1138>
    b310:	a2c0100c 	andi	r11,r20,64
    b314:	58000726 	beq	r11,zero,b334 <___vfiprintf_internal_r+0x1138>
    b318:	da802217 	ldw	r10,136(sp)
    b31c:	50800017 	ldw	r2,0(r10)
    b320:	52800104 	addi	r10,r10,4
    b324:	da802215 	stw	r10,136(sp)
    b328:	da802317 	ldw	r10,140(sp)
    b32c:	1280000d 	sth	r10,0(r2)
    b330:	003be706 	br	a2d0 <__alt_data_end+0xff00a2d0>
    b334:	da802217 	ldw	r10,136(sp)
    b338:	50800017 	ldw	r2,0(r10)
    b33c:	52800104 	addi	r10,r10,4
    b340:	da802215 	stw	r10,136(sp)
    b344:	da802317 	ldw	r10,140(sp)
    b348:	12800015 	stw	r10,0(r2)
    b34c:	003be006 	br	a2d0 <__alt_data_end+0xff00a2d0>
    b350:	a080100c 	andi	r2,r20,64
    b354:	da802217 	ldw	r10,136(sp)
    b358:	10003026 	beq	r2,zero,b41c <___vfiprintf_internal_r+0x1220>
    b35c:	5480000b 	ldhu	r18,0(r10)
    b360:	52800104 	addi	r10,r10,4
    b364:	0027883a 	mov	r19,zero
    b368:	da802215 	stw	r10,136(sp)
    b36c:	003d8006 	br	a970 <__alt_data_end+0xff00a970>
    b370:	80c00007 	ldb	r3,0(r16)
    b374:	003c0006 	br	a378 <__alt_data_end+0xff00a378>
    b378:	a080100c 	andi	r2,r20,64
    b37c:	d8001d85 	stb	zero,118(sp)
    b380:	da802217 	ldw	r10,136(sp)
    b384:	1000201e 	bne	r2,zero,b408 <___vfiprintf_internal_r+0x120c>
    b388:	50800104 	addi	r2,r10,4
    b38c:	54800017 	ldw	r18,0(r10)
    b390:	0027883a 	mov	r19,zero
    b394:	483def0e 	bge	r9,zero,ab54 <__alt_data_end+0xff00ab54>
    b398:	94c6b03a 	or	r3,r18,r19
    b39c:	d8802215 	stw	r2,136(sp)
    b3a0:	183d4e1e 	bne	r3,zero,a8dc <__alt_data_end+0xff00a8dc>
    b3a4:	0039883a 	mov	fp,zero
    b3a8:	0005883a 	mov	r2,zero
    b3ac:	003e0606 	br	abc8 <__alt_data_end+0xff00abc8>
    b3b0:	d9402117 	ldw	r5,132(sp)
    b3b4:	d9002017 	ldw	r4,128(sp)
    b3b8:	d9801a04 	addi	r6,sp,104
    b3bc:	da402c15 	stw	r9,176(sp)
    b3c0:	db802a15 	stw	r14,168(sp)
    b3c4:	000a0e80 	call	a0e8 <__sprint_r.part.0>
    b3c8:	da402c17 	ldw	r9,176(sp)
    b3cc:	db802a17 	ldw	r14,168(sp)
    b3d0:	103ede1e 	bne	r2,zero,af4c <__alt_data_end+0xff00af4c>
    b3d4:	d9401b17 	ldw	r5,108(sp)
    b3d8:	d8801c17 	ldw	r2,112(sp)
    b3dc:	d811883a 	mov	r8,sp
    b3e0:	29000044 	addi	r4,r5,1
    b3e4:	003e7406 	br	adb8 <__alt_data_end+0xff00adb8>
    b3e8:	00bfffc4 	movi	r2,-1
    b3ec:	003c5806 	br	a550 <__alt_data_end+0xff00a550>
    b3f0:	d811883a 	mov	r8,sp
    b3f4:	003ee806 	br	af98 <__alt_data_end+0xff00af98>
    b3f8:	000b883a 	mov	r5,zero
    b3fc:	01000044 	movi	r4,1
    b400:	d811883a 	mov	r8,sp
    b404:	003e7c06 	br	adf8 <__alt_data_end+0xff00adf8>
    b408:	50800104 	addi	r2,r10,4
    b40c:	5480000b 	ldhu	r18,0(r10)
    b410:	0027883a 	mov	r19,zero
    b414:	483dcf0e 	bge	r9,zero,ab54 <__alt_data_end+0xff00ab54>
    b418:	003fdf06 	br	b398 <__alt_data_end+0xff00b398>
    b41c:	54800017 	ldw	r18,0(r10)
    b420:	52800104 	addi	r10,r10,4
    b424:	0027883a 	mov	r19,zero
    b428:	da802215 	stw	r10,136(sp)
    b42c:	003d5006 	br	a970 <__alt_data_end+0xff00a970>
    b430:	50800104 	addi	r2,r10,4
    b434:	5480000b 	ldhu	r18,0(r10)
    b438:	0027883a 	mov	r19,zero
    b43c:	483f7d0e 	bge	r9,zero,b234 <__alt_data_end+0xff00b234>
    b440:	003ddc06 	br	abb4 <__alt_data_end+0xff00abb4>
    b444:	d8c02215 	stw	r3,136(sp)
    b448:	0039883a 	mov	fp,zero
    b44c:	003ddb06 	br	abbc <__alt_data_end+0xff00abbc>
    b450:	02800074 	movhi	r10,1
    b454:	52892804 	addi	r10,r10,9376
    b458:	da802415 	stw	r10,144(sp)
    b45c:	003e8306 	br	ae6c <__alt_data_end+0xff00ae6c>
    b460:	d8801c17 	ldw	r2,112(sp)
    b464:	dd002117 	ldw	r20,132(sp)
    b468:	103eb926 	beq	r2,zero,af50 <__alt_data_end+0xff00af50>
    b46c:	d9002017 	ldw	r4,128(sp)
    b470:	d9801a04 	addi	r6,sp,104
    b474:	a00b883a 	mov	r5,r20
    b478:	000a0e80 	call	a0e8 <__sprint_r.part.0>
    b47c:	003eb406 	br	af50 <__alt_data_end+0xff00af50>
    b480:	80c00043 	ldbu	r3,1(r16)
    b484:	a5000814 	ori	r20,r20,32
    b488:	84000044 	addi	r16,r16,1
    b48c:	18c03fcc 	andi	r3,r3,255
    b490:	18c0201c 	xori	r3,r3,128
    b494:	18ffe004 	addi	r3,r3,-128
    b498:	003bb706 	br	a378 <__alt_data_end+0xff00a378>
    b49c:	a809883a 	mov	r4,r21
    b4a0:	d8c02a15 	stw	r3,168(sp)
    b4a4:	da002b15 	stw	r8,172(sp)
    b4a8:	00034f80 	call	34f8 <strlen>
    b4ac:	d8c02a17 	ldw	r3,168(sp)
    b4b0:	1027883a 	mov	r19,r2
    b4b4:	df001d83 	ldbu	fp,118(sp)
    b4b8:	d8c02215 	stw	r3,136(sp)
    b4bc:	0013883a 	mov	r9,zero
    b4c0:	da002b17 	ldw	r8,172(sp)
    b4c4:	003c4d06 	br	a5fc <__alt_data_end+0xff00a5fc>
    b4c8:	d9402117 	ldw	r5,132(sp)
    b4cc:	d9002017 	ldw	r4,128(sp)
    b4d0:	d9801a04 	addi	r6,sp,104
    b4d4:	da402c15 	stw	r9,176(sp)
    b4d8:	000a0e80 	call	a0e8 <__sprint_r.part.0>
    b4dc:	da402c17 	ldw	r9,176(sp)
    b4e0:	103e9a1e 	bne	r2,zero,af4c <__alt_data_end+0xff00af4c>
    b4e4:	d9401b17 	ldw	r5,108(sp)
    b4e8:	d8801c17 	ldw	r2,112(sp)
    b4ec:	d811883a 	mov	r8,sp
    b4f0:	29000044 	addi	r4,r5,1
    b4f4:	003e4206 	br	ae00 <__alt_data_end+0xff00ae00>
    b4f8:	d9401b17 	ldw	r5,108(sp)
    b4fc:	01000074 	movhi	r4,1
    b500:	21092c04 	addi	r4,r4,9392
    b504:	d9002415 	stw	r4,144(sp)
    b508:	29400044 	addi	r5,r5,1
    b50c:	003c6d06 	br	a6c4 <__alt_data_end+0xff00a6c4>
    b510:	0039883a 	mov	fp,zero
    b514:	00800084 	movi	r2,2
    b518:	10803fcc 	andi	r2,r2,255
    b51c:	01000044 	movi	r4,1
    b520:	11001e26 	beq	r2,r4,b59c <___vfiprintf_internal_r+0x13a0>
    b524:	01000084 	movi	r4,2
    b528:	11001e1e 	bne	r2,r4,b5a4 <___vfiprintf_internal_r+0x13a8>
    b52c:	1829883a 	mov	r20,r3
    b530:	003eea06 	br	b0dc <__alt_data_end+0xff00b0dc>
    b534:	a007883a 	mov	r3,r20
    b538:	00800044 	movi	r2,1
    b53c:	003ff606 	br	b518 <__alt_data_end+0xff00b518>
    b540:	00800184 	movi	r2,6
    b544:	1240012e 	bgeu	r2,r9,b54c <___vfiprintf_internal_r+0x1350>
    b548:	1013883a 	mov	r9,r2
    b54c:	4827883a 	mov	r19,r9
    b550:	4825883a 	mov	r18,r9
    b554:	48001516 	blt	r9,zero,b5ac <___vfiprintf_internal_r+0x13b0>
    b558:	05400074 	movhi	r21,1
    b55c:	d8c02215 	stw	r3,136(sp)
    b560:	ad48cc04 	addi	r21,r21,9008
    b564:	003d1406 	br	a9b8 <__alt_data_end+0xff00a9b8>
    b568:	02800074 	movhi	r10,1
    b56c:	52892804 	addi	r10,r10,9376
    b570:	da802415 	stw	r10,144(sp)
    b574:	200d883a 	mov	r6,r4
    b578:	003c9106 	br	a7c0 <__alt_data_end+0xff00a7c0>
    b57c:	5021883a 	mov	r16,r10
    b580:	0013883a 	mov	r9,zero
    b584:	003b7d06 	br	a37c <__alt_data_end+0xff00a37c>
    b588:	4827883a 	mov	r19,r9
    b58c:	df001d83 	ldbu	fp,118(sp)
    b590:	d8c02215 	stw	r3,136(sp)
    b594:	0013883a 	mov	r9,zero
    b598:	003c1806 	br	a5fc <__alt_data_end+0xff00a5fc>
    b59c:	1829883a 	mov	r20,r3
    b5a0:	003d1806 	br	aa04 <__alt_data_end+0xff00aa04>
    b5a4:	1829883a 	mov	r20,r3
    b5a8:	003ccd06 	br	a8e0 <__alt_data_end+0xff00a8e0>
    b5ac:	0025883a 	mov	r18,zero
    b5b0:	003fe906 	br	b558 <__alt_data_end+0xff00b558>
    b5b4:	d8802217 	ldw	r2,136(sp)
    b5b8:	80c00043 	ldbu	r3,1(r16)
    b5bc:	5021883a 	mov	r16,r10
    b5c0:	12400017 	ldw	r9,0(r2)
    b5c4:	10800104 	addi	r2,r2,4
    b5c8:	d8802215 	stw	r2,136(sp)
    b5cc:	483faf0e 	bge	r9,zero,b48c <__alt_data_end+0xff00b48c>
    b5d0:	18c03fcc 	andi	r3,r3,255
    b5d4:	18c0201c 	xori	r3,r3,128
    b5d8:	027fffc4 	movi	r9,-1
    b5dc:	18ffe004 	addi	r3,r3,-128
    b5e0:	003b6506 	br	a378 <__alt_data_end+0xff00a378>
    b5e4:	d9c01d85 	stb	r7,118(sp)
    b5e8:	003ca006 	br	a86c <__alt_data_end+0xff00a86c>
    b5ec:	d9c01d85 	stb	r7,118(sp)
    b5f0:	003cad06 	br	a8a8 <__alt_data_end+0xff00a8a8>
    b5f4:	d9c01d85 	stb	r7,118(sp)
    b5f8:	003d7d06 	br	abf0 <__alt_data_end+0xff00abf0>
    b5fc:	d9c01d85 	stb	r7,118(sp)
    b600:	003d5f06 	br	ab80 <__alt_data_end+0xff00ab80>
    b604:	a080004c 	andi	r2,r20,1
    b608:	0039883a 	mov	fp,zero
    b60c:	10000526 	beq	r2,zero,b624 <___vfiprintf_internal_r+0x1428>
    b610:	00800c04 	movi	r2,48
    b614:	d88019c5 	stb	r2,103(sp)
    b618:	dcc02717 	ldw	r19,156(sp)
    b61c:	dd4019c4 	addi	r21,sp,103
    b620:	003bf606 	br	a5fc <__alt_data_end+0xff00a5fc>
    b624:	0027883a 	mov	r19,zero
    b628:	dd401a04 	addi	r21,sp,104
    b62c:	003bf306 	br	a5fc <__alt_data_end+0xff00a5fc>
    b630:	d9c01d85 	stb	r7,118(sp)
    b634:	003dc806 	br	ad58 <__alt_data_end+0xff00ad58>
    b638:	d9c01d85 	stb	r7,118(sp)
    b63c:	003d3a06 	br	ab28 <__alt_data_end+0xff00ab28>
    b640:	d9c01d85 	stb	r7,118(sp)
    b644:	003d2a06 	br	aaf0 <__alt_data_end+0xff00aaf0>
    b648:	d9c01d85 	stb	r7,118(sp)
    b64c:	003cde06 	br	a9c8 <__alt_data_end+0xff00a9c8>
    b650:	d9c01d85 	stb	r7,118(sp)
    b654:	003cbc06 	br	a948 <__alt_data_end+0xff00a948>

0000b658 <__vfiprintf_internal>:
    b658:	00800074 	movhi	r2,1
    b65c:	108fe904 	addi	r2,r2,16292
    b660:	300f883a 	mov	r7,r6
    b664:	280d883a 	mov	r6,r5
    b668:	200b883a 	mov	r5,r4
    b66c:	11000017 	ldw	r4,0(r2)
    b670:	000a1fc1 	jmpi	a1fc <___vfiprintf_internal_r>

0000b674 <__sbprintf>:
    b674:	2880030b 	ldhu	r2,12(r5)
    b678:	2ac01917 	ldw	r11,100(r5)
    b67c:	2a80038b 	ldhu	r10,14(r5)
    b680:	2a400717 	ldw	r9,28(r5)
    b684:	2a000917 	ldw	r8,36(r5)
    b688:	defee204 	addi	sp,sp,-1144
    b68c:	00c10004 	movi	r3,1024
    b690:	dc011a15 	stw	r16,1128(sp)
    b694:	10bfff4c 	andi	r2,r2,65533
    b698:	2821883a 	mov	r16,r5
    b69c:	d8cb883a 	add	r5,sp,r3
    b6a0:	dc811c15 	stw	r18,1136(sp)
    b6a4:	dc411b15 	stw	r17,1132(sp)
    b6a8:	dfc11d15 	stw	ra,1140(sp)
    b6ac:	2025883a 	mov	r18,r4
    b6b0:	d881030d 	sth	r2,1036(sp)
    b6b4:	dac11915 	stw	r11,1124(sp)
    b6b8:	da81038d 	sth	r10,1038(sp)
    b6bc:	da410715 	stw	r9,1052(sp)
    b6c0:	da010915 	stw	r8,1060(sp)
    b6c4:	dec10015 	stw	sp,1024(sp)
    b6c8:	dec10415 	stw	sp,1040(sp)
    b6cc:	d8c10215 	stw	r3,1032(sp)
    b6d0:	d8c10515 	stw	r3,1044(sp)
    b6d4:	d8010615 	stw	zero,1048(sp)
    b6d8:	000a1fc0 	call	a1fc <___vfiprintf_internal_r>
    b6dc:	1023883a 	mov	r17,r2
    b6e0:	10000416 	blt	r2,zero,b6f4 <__sbprintf+0x80>
    b6e4:	d9410004 	addi	r5,sp,1024
    b6e8:	9009883a 	mov	r4,r18
    b6ec:	00074580 	call	7458 <_fflush_r>
    b6f0:	10000d1e 	bne	r2,zero,b728 <__sbprintf+0xb4>
    b6f4:	d881030b 	ldhu	r2,1036(sp)
    b6f8:	1080100c 	andi	r2,r2,64
    b6fc:	10000326 	beq	r2,zero,b70c <__sbprintf+0x98>
    b700:	8080030b 	ldhu	r2,12(r16)
    b704:	10801014 	ori	r2,r2,64
    b708:	8080030d 	sth	r2,12(r16)
    b70c:	8805883a 	mov	r2,r17
    b710:	dfc11d17 	ldw	ra,1140(sp)
    b714:	dc811c17 	ldw	r18,1136(sp)
    b718:	dc411b17 	ldw	r17,1132(sp)
    b71c:	dc011a17 	ldw	r16,1128(sp)
    b720:	dec11e04 	addi	sp,sp,1144
    b724:	f800283a 	ret
    b728:	047fffc4 	movi	r17,-1
    b72c:	003ff106 	br	b6f4 <__alt_data_end+0xff00b6f4>

0000b730 <_write_r>:
    b730:	defffd04 	addi	sp,sp,-12
    b734:	2805883a 	mov	r2,r5
    b738:	dc000015 	stw	r16,0(sp)
    b73c:	04000074 	movhi	r16,1
    b740:	dc400115 	stw	r17,4(sp)
    b744:	300b883a 	mov	r5,r6
    b748:	8416be04 	addi	r16,r16,23288
    b74c:	2023883a 	mov	r17,r4
    b750:	380d883a 	mov	r6,r7
    b754:	1009883a 	mov	r4,r2
    b758:	dfc00215 	stw	ra,8(sp)
    b75c:	80000015 	stw	zero,0(r16)
    b760:	000fb480 	call	fb48 <write>
    b764:	00ffffc4 	movi	r3,-1
    b768:	10c00526 	beq	r2,r3,b780 <_write_r+0x50>
    b76c:	dfc00217 	ldw	ra,8(sp)
    b770:	dc400117 	ldw	r17,4(sp)
    b774:	dc000017 	ldw	r16,0(sp)
    b778:	dec00304 	addi	sp,sp,12
    b77c:	f800283a 	ret
    b780:	80c00017 	ldw	r3,0(r16)
    b784:	183ff926 	beq	r3,zero,b76c <__alt_data_end+0xff00b76c>
    b788:	88c00015 	stw	r3,0(r17)
    b78c:	003ff706 	br	b76c <__alt_data_end+0xff00b76c>

0000b790 <_close_r>:
    b790:	defffd04 	addi	sp,sp,-12
    b794:	dc000015 	stw	r16,0(sp)
    b798:	04000074 	movhi	r16,1
    b79c:	dc400115 	stw	r17,4(sp)
    b7a0:	8416be04 	addi	r16,r16,23288
    b7a4:	2023883a 	mov	r17,r4
    b7a8:	2809883a 	mov	r4,r5
    b7ac:	dfc00215 	stw	ra,8(sp)
    b7b0:	80000015 	stw	zero,0(r16)
    b7b4:	000f3080 	call	f308 <close>
    b7b8:	00ffffc4 	movi	r3,-1
    b7bc:	10c00526 	beq	r2,r3,b7d4 <_close_r+0x44>
    b7c0:	dfc00217 	ldw	ra,8(sp)
    b7c4:	dc400117 	ldw	r17,4(sp)
    b7c8:	dc000017 	ldw	r16,0(sp)
    b7cc:	dec00304 	addi	sp,sp,12
    b7d0:	f800283a 	ret
    b7d4:	80c00017 	ldw	r3,0(r16)
    b7d8:	183ff926 	beq	r3,zero,b7c0 <__alt_data_end+0xff00b7c0>
    b7dc:	88c00015 	stw	r3,0(r17)
    b7e0:	003ff706 	br	b7c0 <__alt_data_end+0xff00b7c0>

0000b7e4 <_calloc_r>:
    b7e4:	298b383a 	mul	r5,r5,r6
    b7e8:	defffe04 	addi	sp,sp,-8
    b7ec:	dfc00115 	stw	ra,4(sp)
    b7f0:	dc000015 	stw	r16,0(sp)
    b7f4:	0002a100 	call	2a10 <_malloc_r>
    b7f8:	10002926 	beq	r2,zero,b8a0 <_calloc_r+0xbc>
    b7fc:	11bfff17 	ldw	r6,-4(r2)
    b800:	1021883a 	mov	r16,r2
    b804:	00bfff04 	movi	r2,-4
    b808:	308c703a 	and	r6,r6,r2
    b80c:	00c00904 	movi	r3,36
    b810:	308d883a 	add	r6,r6,r2
    b814:	19801636 	bltu	r3,r6,b870 <_calloc_r+0x8c>
    b818:	008004c4 	movi	r2,19
    b81c:	11800b2e 	bgeu	r2,r6,b84c <_calloc_r+0x68>
    b820:	80000015 	stw	zero,0(r16)
    b824:	80000115 	stw	zero,4(r16)
    b828:	008006c4 	movi	r2,27
    b82c:	11801a2e 	bgeu	r2,r6,b898 <_calloc_r+0xb4>
    b830:	80000215 	stw	zero,8(r16)
    b834:	80000315 	stw	zero,12(r16)
    b838:	30c0151e 	bne	r6,r3,b890 <_calloc_r+0xac>
    b83c:	80000415 	stw	zero,16(r16)
    b840:	80800604 	addi	r2,r16,24
    b844:	80000515 	stw	zero,20(r16)
    b848:	00000106 	br	b850 <_calloc_r+0x6c>
    b84c:	8005883a 	mov	r2,r16
    b850:	10000015 	stw	zero,0(r2)
    b854:	10000115 	stw	zero,4(r2)
    b858:	10000215 	stw	zero,8(r2)
    b85c:	8005883a 	mov	r2,r16
    b860:	dfc00117 	ldw	ra,4(sp)
    b864:	dc000017 	ldw	r16,0(sp)
    b868:	dec00204 	addi	sp,sp,8
    b86c:	f800283a 	ret
    b870:	000b883a 	mov	r5,zero
    b874:	8009883a 	mov	r4,r16
    b878:	00087d40 	call	87d4 <memset>
    b87c:	8005883a 	mov	r2,r16
    b880:	dfc00117 	ldw	ra,4(sp)
    b884:	dc000017 	ldw	r16,0(sp)
    b888:	dec00204 	addi	sp,sp,8
    b88c:	f800283a 	ret
    b890:	80800404 	addi	r2,r16,16
    b894:	003fee06 	br	b850 <__alt_data_end+0xff00b850>
    b898:	80800204 	addi	r2,r16,8
    b89c:	003fec06 	br	b850 <__alt_data_end+0xff00b850>
    b8a0:	0005883a 	mov	r2,zero
    b8a4:	003fee06 	br	b860 <__alt_data_end+0xff00b860>

0000b8a8 <_fclose_r>:
    b8a8:	28003926 	beq	r5,zero,b990 <_fclose_r+0xe8>
    b8ac:	defffc04 	addi	sp,sp,-16
    b8b0:	dc400115 	stw	r17,4(sp)
    b8b4:	dc000015 	stw	r16,0(sp)
    b8b8:	dfc00315 	stw	ra,12(sp)
    b8bc:	dc800215 	stw	r18,8(sp)
    b8c0:	2023883a 	mov	r17,r4
    b8c4:	2821883a 	mov	r16,r5
    b8c8:	20000226 	beq	r4,zero,b8d4 <_fclose_r+0x2c>
    b8cc:	20800e17 	ldw	r2,56(r4)
    b8d0:	10002726 	beq	r2,zero,b970 <_fclose_r+0xc8>
    b8d4:	8080030f 	ldh	r2,12(r16)
    b8d8:	1000071e 	bne	r2,zero,b8f8 <_fclose_r+0x50>
    b8dc:	0005883a 	mov	r2,zero
    b8e0:	dfc00317 	ldw	ra,12(sp)
    b8e4:	dc800217 	ldw	r18,8(sp)
    b8e8:	dc400117 	ldw	r17,4(sp)
    b8ec:	dc000017 	ldw	r16,0(sp)
    b8f0:	dec00404 	addi	sp,sp,16
    b8f4:	f800283a 	ret
    b8f8:	800b883a 	mov	r5,r16
    b8fc:	8809883a 	mov	r4,r17
    b900:	000723c0 	call	723c <__sflush_r>
    b904:	1025883a 	mov	r18,r2
    b908:	80800b17 	ldw	r2,44(r16)
    b90c:	10000426 	beq	r2,zero,b920 <_fclose_r+0x78>
    b910:	81400717 	ldw	r5,28(r16)
    b914:	8809883a 	mov	r4,r17
    b918:	103ee83a 	callr	r2
    b91c:	10001616 	blt	r2,zero,b978 <_fclose_r+0xd0>
    b920:	8080030b 	ldhu	r2,12(r16)
    b924:	1080200c 	andi	r2,r2,128
    b928:	1000151e 	bne	r2,zero,b980 <_fclose_r+0xd8>
    b92c:	81400c17 	ldw	r5,48(r16)
    b930:	28000526 	beq	r5,zero,b948 <_fclose_r+0xa0>
    b934:	80801004 	addi	r2,r16,64
    b938:	28800226 	beq	r5,r2,b944 <_fclose_r+0x9c>
    b93c:	8809883a 	mov	r4,r17
    b940:	00079a80 	call	79a8 <_free_r>
    b944:	80000c15 	stw	zero,48(r16)
    b948:	81401117 	ldw	r5,68(r16)
    b94c:	28000326 	beq	r5,zero,b95c <_fclose_r+0xb4>
    b950:	8809883a 	mov	r4,r17
    b954:	00079a80 	call	79a8 <_free_r>
    b958:	80001115 	stw	zero,68(r16)
    b95c:	00078440 	call	7844 <__sfp_lock_acquire>
    b960:	8000030d 	sth	zero,12(r16)
    b964:	00078480 	call	7848 <__sfp_lock_release>
    b968:	9005883a 	mov	r2,r18
    b96c:	003fdc06 	br	b8e0 <__alt_data_end+0xff00b8e0>
    b970:	00078340 	call	7834 <__sinit>
    b974:	003fd706 	br	b8d4 <__alt_data_end+0xff00b8d4>
    b978:	04bfffc4 	movi	r18,-1
    b97c:	003fe806 	br	b920 <__alt_data_end+0xff00b920>
    b980:	81400417 	ldw	r5,16(r16)
    b984:	8809883a 	mov	r4,r17
    b988:	00079a80 	call	79a8 <_free_r>
    b98c:	003fe706 	br	b92c <__alt_data_end+0xff00b92c>
    b990:	0005883a 	mov	r2,zero
    b994:	f800283a 	ret

0000b998 <fclose>:
    b998:	00800074 	movhi	r2,1
    b99c:	108fe904 	addi	r2,r2,16292
    b9a0:	200b883a 	mov	r5,r4
    b9a4:	11000017 	ldw	r4,0(r2)
    b9a8:	000b8a81 	jmpi	b8a8 <_fclose_r>

0000b9ac <__fputwc>:
    b9ac:	defff804 	addi	sp,sp,-32
    b9b0:	dcc00415 	stw	r19,16(sp)
    b9b4:	dc800315 	stw	r18,12(sp)
    b9b8:	dc000115 	stw	r16,4(sp)
    b9bc:	dfc00715 	stw	ra,28(sp)
    b9c0:	dd400615 	stw	r21,24(sp)
    b9c4:	dd000515 	stw	r20,20(sp)
    b9c8:	dc400215 	stw	r17,8(sp)
    b9cc:	2027883a 	mov	r19,r4
    b9d0:	2825883a 	mov	r18,r5
    b9d4:	3021883a 	mov	r16,r6
    b9d8:	00083840 	call	8384 <__locale_mb_cur_max>
    b9dc:	00c00044 	movi	r3,1
    b9e0:	10c03e26 	beq	r2,r3,badc <__fputwc+0x130>
    b9e4:	81c01704 	addi	r7,r16,92
    b9e8:	900d883a 	mov	r6,r18
    b9ec:	d80b883a 	mov	r5,sp
    b9f0:	9809883a 	mov	r4,r19
    b9f4:	000be7c0 	call	be7c <_wcrtomb_r>
    b9f8:	1029883a 	mov	r20,r2
    b9fc:	00bfffc4 	movi	r2,-1
    ba00:	a0802026 	beq	r20,r2,ba84 <__fputwc+0xd8>
    ba04:	d9400003 	ldbu	r5,0(sp)
    ba08:	a0001c26 	beq	r20,zero,ba7c <__fputwc+0xd0>
    ba0c:	0023883a 	mov	r17,zero
    ba10:	05400284 	movi	r21,10
    ba14:	00000906 	br	ba3c <__fputwc+0x90>
    ba18:	80800017 	ldw	r2,0(r16)
    ba1c:	11400005 	stb	r5,0(r2)
    ba20:	80c00017 	ldw	r3,0(r16)
    ba24:	18c00044 	addi	r3,r3,1
    ba28:	80c00015 	stw	r3,0(r16)
    ba2c:	8c400044 	addi	r17,r17,1
    ba30:	dc45883a 	add	r2,sp,r17
    ba34:	8d00112e 	bgeu	r17,r20,ba7c <__fputwc+0xd0>
    ba38:	11400003 	ldbu	r5,0(r2)
    ba3c:	80c00217 	ldw	r3,8(r16)
    ba40:	18ffffc4 	addi	r3,r3,-1
    ba44:	80c00215 	stw	r3,8(r16)
    ba48:	183ff30e 	bge	r3,zero,ba18 <__alt_data_end+0xff00ba18>
    ba4c:	80800617 	ldw	r2,24(r16)
    ba50:	18801916 	blt	r3,r2,bab8 <__fputwc+0x10c>
    ba54:	80800017 	ldw	r2,0(r16)
    ba58:	11400005 	stb	r5,0(r2)
    ba5c:	80800017 	ldw	r2,0(r16)
    ba60:	10c00003 	ldbu	r3,0(r2)
    ba64:	10800044 	addi	r2,r2,1
    ba68:	1d402326 	beq	r3,r21,baf8 <__fputwc+0x14c>
    ba6c:	80800015 	stw	r2,0(r16)
    ba70:	8c400044 	addi	r17,r17,1
    ba74:	dc45883a 	add	r2,sp,r17
    ba78:	8d3fef36 	bltu	r17,r20,ba38 <__alt_data_end+0xff00ba38>
    ba7c:	9005883a 	mov	r2,r18
    ba80:	00000406 	br	ba94 <__fputwc+0xe8>
    ba84:	80c0030b 	ldhu	r3,12(r16)
    ba88:	a005883a 	mov	r2,r20
    ba8c:	18c01014 	ori	r3,r3,64
    ba90:	80c0030d 	sth	r3,12(r16)
    ba94:	dfc00717 	ldw	ra,28(sp)
    ba98:	dd400617 	ldw	r21,24(sp)
    ba9c:	dd000517 	ldw	r20,20(sp)
    baa0:	dcc00417 	ldw	r19,16(sp)
    baa4:	dc800317 	ldw	r18,12(sp)
    baa8:	dc400217 	ldw	r17,8(sp)
    baac:	dc000117 	ldw	r16,4(sp)
    bab0:	dec00804 	addi	sp,sp,32
    bab4:	f800283a 	ret
    bab8:	800d883a 	mov	r6,r16
    babc:	29403fcc 	andi	r5,r5,255
    bac0:	9809883a 	mov	r4,r19
    bac4:	000bd240 	call	bd24 <__swbuf_r>
    bac8:	10bfffe0 	cmpeqi	r2,r2,-1
    bacc:	10803fcc 	andi	r2,r2,255
    bad0:	103fd626 	beq	r2,zero,ba2c <__alt_data_end+0xff00ba2c>
    bad4:	00bfffc4 	movi	r2,-1
    bad8:	003fee06 	br	ba94 <__alt_data_end+0xff00ba94>
    badc:	90ffffc4 	addi	r3,r18,-1
    bae0:	01003f84 	movi	r4,254
    bae4:	20ffbf36 	bltu	r4,r3,b9e4 <__alt_data_end+0xff00b9e4>
    bae8:	900b883a 	mov	r5,r18
    baec:	dc800005 	stb	r18,0(sp)
    baf0:	1029883a 	mov	r20,r2
    baf4:	003fc506 	br	ba0c <__alt_data_end+0xff00ba0c>
    baf8:	800d883a 	mov	r6,r16
    bafc:	a80b883a 	mov	r5,r21
    bb00:	9809883a 	mov	r4,r19
    bb04:	000bd240 	call	bd24 <__swbuf_r>
    bb08:	10bfffe0 	cmpeqi	r2,r2,-1
    bb0c:	003fef06 	br	bacc <__alt_data_end+0xff00bacc>

0000bb10 <_fputwc_r>:
    bb10:	3080030b 	ldhu	r2,12(r6)
    bb14:	10c8000c 	andi	r3,r2,8192
    bb18:	1800051e 	bne	r3,zero,bb30 <_fputwc_r+0x20>
    bb1c:	30c01917 	ldw	r3,100(r6)
    bb20:	10880014 	ori	r2,r2,8192
    bb24:	3080030d 	sth	r2,12(r6)
    bb28:	18880014 	ori	r2,r3,8192
    bb2c:	30801915 	stw	r2,100(r6)
    bb30:	000b9ac1 	jmpi	b9ac <__fputwc>

0000bb34 <fputwc>:
    bb34:	00800074 	movhi	r2,1
    bb38:	defffc04 	addi	sp,sp,-16
    bb3c:	108fe904 	addi	r2,r2,16292
    bb40:	dc000115 	stw	r16,4(sp)
    bb44:	14000017 	ldw	r16,0(r2)
    bb48:	dc400215 	stw	r17,8(sp)
    bb4c:	dfc00315 	stw	ra,12(sp)
    bb50:	2023883a 	mov	r17,r4
    bb54:	80000226 	beq	r16,zero,bb60 <fputwc+0x2c>
    bb58:	80800e17 	ldw	r2,56(r16)
    bb5c:	10001026 	beq	r2,zero,bba0 <fputwc+0x6c>
    bb60:	2880030b 	ldhu	r2,12(r5)
    bb64:	10c8000c 	andi	r3,r2,8192
    bb68:	1800051e 	bne	r3,zero,bb80 <fputwc+0x4c>
    bb6c:	28c01917 	ldw	r3,100(r5)
    bb70:	10880014 	ori	r2,r2,8192
    bb74:	2880030d 	sth	r2,12(r5)
    bb78:	18880014 	ori	r2,r3,8192
    bb7c:	28801915 	stw	r2,100(r5)
    bb80:	280d883a 	mov	r6,r5
    bb84:	8009883a 	mov	r4,r16
    bb88:	880b883a 	mov	r5,r17
    bb8c:	dfc00317 	ldw	ra,12(sp)
    bb90:	dc400217 	ldw	r17,8(sp)
    bb94:	dc000117 	ldw	r16,4(sp)
    bb98:	dec00404 	addi	sp,sp,16
    bb9c:	000b9ac1 	jmpi	b9ac <__fputwc>
    bba0:	8009883a 	mov	r4,r16
    bba4:	d9400015 	stw	r5,0(sp)
    bba8:	00078340 	call	7834 <__sinit>
    bbac:	d9400017 	ldw	r5,0(sp)
    bbb0:	003feb06 	br	bb60 <__alt_data_end+0xff00bb60>

0000bbb4 <_fstat_r>:
    bbb4:	defffd04 	addi	sp,sp,-12
    bbb8:	2805883a 	mov	r2,r5
    bbbc:	dc000015 	stw	r16,0(sp)
    bbc0:	04000074 	movhi	r16,1
    bbc4:	dc400115 	stw	r17,4(sp)
    bbc8:	8416be04 	addi	r16,r16,23288
    bbcc:	2023883a 	mov	r17,r4
    bbd0:	300b883a 	mov	r5,r6
    bbd4:	1009883a 	mov	r4,r2
    bbd8:	dfc00215 	stw	ra,8(sp)
    bbdc:	80000015 	stw	zero,0(r16)
    bbe0:	000f4400 	call	f440 <fstat>
    bbe4:	00ffffc4 	movi	r3,-1
    bbe8:	10c00526 	beq	r2,r3,bc00 <_fstat_r+0x4c>
    bbec:	dfc00217 	ldw	ra,8(sp)
    bbf0:	dc400117 	ldw	r17,4(sp)
    bbf4:	dc000017 	ldw	r16,0(sp)
    bbf8:	dec00304 	addi	sp,sp,12
    bbfc:	f800283a 	ret
    bc00:	80c00017 	ldw	r3,0(r16)
    bc04:	183ff926 	beq	r3,zero,bbec <__alt_data_end+0xff00bbec>
    bc08:	88c00015 	stw	r3,0(r17)
    bc0c:	003ff706 	br	bbec <__alt_data_end+0xff00bbec>

0000bc10 <_isatty_r>:
    bc10:	defffd04 	addi	sp,sp,-12
    bc14:	dc000015 	stw	r16,0(sp)
    bc18:	04000074 	movhi	r16,1
    bc1c:	dc400115 	stw	r17,4(sp)
    bc20:	8416be04 	addi	r16,r16,23288
    bc24:	2023883a 	mov	r17,r4
    bc28:	2809883a 	mov	r4,r5
    bc2c:	dfc00215 	stw	ra,8(sp)
    bc30:	80000015 	stw	zero,0(r16)
    bc34:	000f52c0 	call	f52c <isatty>
    bc38:	00ffffc4 	movi	r3,-1
    bc3c:	10c00526 	beq	r2,r3,bc54 <_isatty_r+0x44>
    bc40:	dfc00217 	ldw	ra,8(sp)
    bc44:	dc400117 	ldw	r17,4(sp)
    bc48:	dc000017 	ldw	r16,0(sp)
    bc4c:	dec00304 	addi	sp,sp,12
    bc50:	f800283a 	ret
    bc54:	80c00017 	ldw	r3,0(r16)
    bc58:	183ff926 	beq	r3,zero,bc40 <__alt_data_end+0xff00bc40>
    bc5c:	88c00015 	stw	r3,0(r17)
    bc60:	003ff706 	br	bc40 <__alt_data_end+0xff00bc40>

0000bc64 <_lseek_r>:
    bc64:	defffd04 	addi	sp,sp,-12
    bc68:	2805883a 	mov	r2,r5
    bc6c:	dc000015 	stw	r16,0(sp)
    bc70:	04000074 	movhi	r16,1
    bc74:	dc400115 	stw	r17,4(sp)
    bc78:	300b883a 	mov	r5,r6
    bc7c:	8416be04 	addi	r16,r16,23288
    bc80:	2023883a 	mov	r17,r4
    bc84:	380d883a 	mov	r6,r7
    bc88:	1009883a 	mov	r4,r2
    bc8c:	dfc00215 	stw	ra,8(sp)
    bc90:	80000015 	stw	zero,0(r16)
    bc94:	000f6f80 	call	f6f8 <lseek>
    bc98:	00ffffc4 	movi	r3,-1
    bc9c:	10c00526 	beq	r2,r3,bcb4 <_lseek_r+0x50>
    bca0:	dfc00217 	ldw	ra,8(sp)
    bca4:	dc400117 	ldw	r17,4(sp)
    bca8:	dc000017 	ldw	r16,0(sp)
    bcac:	dec00304 	addi	sp,sp,12
    bcb0:	f800283a 	ret
    bcb4:	80c00017 	ldw	r3,0(r16)
    bcb8:	183ff926 	beq	r3,zero,bca0 <__alt_data_end+0xff00bca0>
    bcbc:	88c00015 	stw	r3,0(r17)
    bcc0:	003ff706 	br	bca0 <__alt_data_end+0xff00bca0>

0000bcc4 <_read_r>:
    bcc4:	defffd04 	addi	sp,sp,-12
    bcc8:	2805883a 	mov	r2,r5
    bccc:	dc000015 	stw	r16,0(sp)
    bcd0:	04000074 	movhi	r16,1
    bcd4:	dc400115 	stw	r17,4(sp)
    bcd8:	300b883a 	mov	r5,r6
    bcdc:	8416be04 	addi	r16,r16,23288
    bce0:	2023883a 	mov	r17,r4
    bce4:	380d883a 	mov	r6,r7
    bce8:	1009883a 	mov	r4,r2
    bcec:	dfc00215 	stw	ra,8(sp)
    bcf0:	80000015 	stw	zero,0(r16)
    bcf4:	000f8cc0 	call	f8cc <read>
    bcf8:	00ffffc4 	movi	r3,-1
    bcfc:	10c00526 	beq	r2,r3,bd14 <_read_r+0x50>
    bd00:	dfc00217 	ldw	ra,8(sp)
    bd04:	dc400117 	ldw	r17,4(sp)
    bd08:	dc000017 	ldw	r16,0(sp)
    bd0c:	dec00304 	addi	sp,sp,12
    bd10:	f800283a 	ret
    bd14:	80c00017 	ldw	r3,0(r16)
    bd18:	183ff926 	beq	r3,zero,bd00 <__alt_data_end+0xff00bd00>
    bd1c:	88c00015 	stw	r3,0(r17)
    bd20:	003ff706 	br	bd00 <__alt_data_end+0xff00bd00>

0000bd24 <__swbuf_r>:
    bd24:	defffb04 	addi	sp,sp,-20
    bd28:	dcc00315 	stw	r19,12(sp)
    bd2c:	dc800215 	stw	r18,8(sp)
    bd30:	dc000015 	stw	r16,0(sp)
    bd34:	dfc00415 	stw	ra,16(sp)
    bd38:	dc400115 	stw	r17,4(sp)
    bd3c:	2025883a 	mov	r18,r4
    bd40:	2827883a 	mov	r19,r5
    bd44:	3021883a 	mov	r16,r6
    bd48:	20000226 	beq	r4,zero,bd54 <__swbuf_r+0x30>
    bd4c:	20800e17 	ldw	r2,56(r4)
    bd50:	10004226 	beq	r2,zero,be5c <__swbuf_r+0x138>
    bd54:	80800617 	ldw	r2,24(r16)
    bd58:	8100030b 	ldhu	r4,12(r16)
    bd5c:	80800215 	stw	r2,8(r16)
    bd60:	2080020c 	andi	r2,r4,8
    bd64:	10003626 	beq	r2,zero,be40 <__swbuf_r+0x11c>
    bd68:	80c00417 	ldw	r3,16(r16)
    bd6c:	18003426 	beq	r3,zero,be40 <__swbuf_r+0x11c>
    bd70:	2088000c 	andi	r2,r4,8192
    bd74:	9c403fcc 	andi	r17,r19,255
    bd78:	10001a26 	beq	r2,zero,bde4 <__swbuf_r+0xc0>
    bd7c:	80800017 	ldw	r2,0(r16)
    bd80:	81000517 	ldw	r4,20(r16)
    bd84:	10c7c83a 	sub	r3,r2,r3
    bd88:	1900200e 	bge	r3,r4,be0c <__swbuf_r+0xe8>
    bd8c:	18c00044 	addi	r3,r3,1
    bd90:	81000217 	ldw	r4,8(r16)
    bd94:	11400044 	addi	r5,r2,1
    bd98:	81400015 	stw	r5,0(r16)
    bd9c:	213fffc4 	addi	r4,r4,-1
    bda0:	81000215 	stw	r4,8(r16)
    bda4:	14c00005 	stb	r19,0(r2)
    bda8:	80800517 	ldw	r2,20(r16)
    bdac:	10c01e26 	beq	r2,r3,be28 <__swbuf_r+0x104>
    bdb0:	8080030b 	ldhu	r2,12(r16)
    bdb4:	1080004c 	andi	r2,r2,1
    bdb8:	10000226 	beq	r2,zero,bdc4 <__swbuf_r+0xa0>
    bdbc:	00800284 	movi	r2,10
    bdc0:	88801926 	beq	r17,r2,be28 <__swbuf_r+0x104>
    bdc4:	8805883a 	mov	r2,r17
    bdc8:	dfc00417 	ldw	ra,16(sp)
    bdcc:	dcc00317 	ldw	r19,12(sp)
    bdd0:	dc800217 	ldw	r18,8(sp)
    bdd4:	dc400117 	ldw	r17,4(sp)
    bdd8:	dc000017 	ldw	r16,0(sp)
    bddc:	dec00504 	addi	sp,sp,20
    bde0:	f800283a 	ret
    bde4:	81401917 	ldw	r5,100(r16)
    bde8:	00b7ffc4 	movi	r2,-8193
    bdec:	21080014 	ori	r4,r4,8192
    bdf0:	2884703a 	and	r2,r5,r2
    bdf4:	80801915 	stw	r2,100(r16)
    bdf8:	80800017 	ldw	r2,0(r16)
    bdfc:	8100030d 	sth	r4,12(r16)
    be00:	81000517 	ldw	r4,20(r16)
    be04:	10c7c83a 	sub	r3,r2,r3
    be08:	193fe016 	blt	r3,r4,bd8c <__alt_data_end+0xff00bd8c>
    be0c:	800b883a 	mov	r5,r16
    be10:	9009883a 	mov	r4,r18
    be14:	00074580 	call	7458 <_fflush_r>
    be18:	1000071e 	bne	r2,zero,be38 <__swbuf_r+0x114>
    be1c:	80800017 	ldw	r2,0(r16)
    be20:	00c00044 	movi	r3,1
    be24:	003fda06 	br	bd90 <__alt_data_end+0xff00bd90>
    be28:	800b883a 	mov	r5,r16
    be2c:	9009883a 	mov	r4,r18
    be30:	00074580 	call	7458 <_fflush_r>
    be34:	103fe326 	beq	r2,zero,bdc4 <__alt_data_end+0xff00bdc4>
    be38:	00bfffc4 	movi	r2,-1
    be3c:	003fe206 	br	bdc8 <__alt_data_end+0xff00bdc8>
    be40:	800b883a 	mov	r5,r16
    be44:	9009883a 	mov	r4,r18
    be48:	00058600 	call	5860 <__swsetup_r>
    be4c:	103ffa1e 	bne	r2,zero,be38 <__alt_data_end+0xff00be38>
    be50:	8100030b 	ldhu	r4,12(r16)
    be54:	80c00417 	ldw	r3,16(r16)
    be58:	003fc506 	br	bd70 <__alt_data_end+0xff00bd70>
    be5c:	00078340 	call	7834 <__sinit>
    be60:	003fbc06 	br	bd54 <__alt_data_end+0xff00bd54>

0000be64 <__swbuf>:
    be64:	00800074 	movhi	r2,1
    be68:	108fe904 	addi	r2,r2,16292
    be6c:	280d883a 	mov	r6,r5
    be70:	200b883a 	mov	r5,r4
    be74:	11000017 	ldw	r4,0(r2)
    be78:	000bd241 	jmpi	bd24 <__swbuf_r>

0000be7c <_wcrtomb_r>:
    be7c:	defff604 	addi	sp,sp,-40
    be80:	00800074 	movhi	r2,1
    be84:	dc800815 	stw	r18,32(sp)
    be88:	dc400715 	stw	r17,28(sp)
    be8c:	dc000615 	stw	r16,24(sp)
    be90:	108feb04 	addi	r2,r2,16300
    be94:	dfc00915 	stw	ra,36(sp)
    be98:	2021883a 	mov	r16,r4
    be9c:	3823883a 	mov	r17,r7
    bea0:	14800017 	ldw	r18,0(r2)
    bea4:	28001426 	beq	r5,zero,bef8 <_wcrtomb_r+0x7c>
    bea8:	d9400415 	stw	r5,16(sp)
    beac:	d9800515 	stw	r6,20(sp)
    beb0:	00083780 	call	8378 <__locale_charset>
    beb4:	d9800517 	ldw	r6,20(sp)
    beb8:	d9400417 	ldw	r5,16(sp)
    bebc:	100f883a 	mov	r7,r2
    bec0:	dc400015 	stw	r17,0(sp)
    bec4:	8009883a 	mov	r4,r16
    bec8:	903ee83a 	callr	r18
    becc:	00ffffc4 	movi	r3,-1
    bed0:	10c0031e 	bne	r2,r3,bee0 <_wcrtomb_r+0x64>
    bed4:	88000015 	stw	zero,0(r17)
    bed8:	00c02284 	movi	r3,138
    bedc:	80c00015 	stw	r3,0(r16)
    bee0:	dfc00917 	ldw	ra,36(sp)
    bee4:	dc800817 	ldw	r18,32(sp)
    bee8:	dc400717 	ldw	r17,28(sp)
    beec:	dc000617 	ldw	r16,24(sp)
    bef0:	dec00a04 	addi	sp,sp,40
    bef4:	f800283a 	ret
    bef8:	00083780 	call	8378 <__locale_charset>
    befc:	100f883a 	mov	r7,r2
    bf00:	dc400015 	stw	r17,0(sp)
    bf04:	000d883a 	mov	r6,zero
    bf08:	d9400104 	addi	r5,sp,4
    bf0c:	8009883a 	mov	r4,r16
    bf10:	903ee83a 	callr	r18
    bf14:	003fed06 	br	becc <__alt_data_end+0xff00becc>

0000bf18 <wcrtomb>:
    bf18:	defff604 	addi	sp,sp,-40
    bf1c:	00800074 	movhi	r2,1
    bf20:	dc800615 	stw	r18,24(sp)
    bf24:	dc400515 	stw	r17,20(sp)
    bf28:	108fe904 	addi	r2,r2,16292
    bf2c:	dfc00915 	stw	ra,36(sp)
    bf30:	dd000815 	stw	r20,32(sp)
    bf34:	dcc00715 	stw	r19,28(sp)
    bf38:	dc000415 	stw	r16,16(sp)
    bf3c:	3025883a 	mov	r18,r6
    bf40:	14400017 	ldw	r17,0(r2)
    bf44:	20001926 	beq	r4,zero,bfac <wcrtomb+0x94>
    bf48:	00800074 	movhi	r2,1
    bf4c:	108feb04 	addi	r2,r2,16300
    bf50:	15000017 	ldw	r20,0(r2)
    bf54:	2021883a 	mov	r16,r4
    bf58:	2827883a 	mov	r19,r5
    bf5c:	00083780 	call	8378 <__locale_charset>
    bf60:	100f883a 	mov	r7,r2
    bf64:	dc800015 	stw	r18,0(sp)
    bf68:	980d883a 	mov	r6,r19
    bf6c:	800b883a 	mov	r5,r16
    bf70:	8809883a 	mov	r4,r17
    bf74:	a03ee83a 	callr	r20
    bf78:	00ffffc4 	movi	r3,-1
    bf7c:	10c0031e 	bne	r2,r3,bf8c <wcrtomb+0x74>
    bf80:	90000015 	stw	zero,0(r18)
    bf84:	00c02284 	movi	r3,138
    bf88:	88c00015 	stw	r3,0(r17)
    bf8c:	dfc00917 	ldw	ra,36(sp)
    bf90:	dd000817 	ldw	r20,32(sp)
    bf94:	dcc00717 	ldw	r19,28(sp)
    bf98:	dc800617 	ldw	r18,24(sp)
    bf9c:	dc400517 	ldw	r17,20(sp)
    bfa0:	dc000417 	ldw	r16,16(sp)
    bfa4:	dec00a04 	addi	sp,sp,40
    bfa8:	f800283a 	ret
    bfac:	00800074 	movhi	r2,1
    bfb0:	108feb04 	addi	r2,r2,16300
    bfb4:	14000017 	ldw	r16,0(r2)
    bfb8:	00083780 	call	8378 <__locale_charset>
    bfbc:	100f883a 	mov	r7,r2
    bfc0:	dc800015 	stw	r18,0(sp)
    bfc4:	000d883a 	mov	r6,zero
    bfc8:	d9400104 	addi	r5,sp,4
    bfcc:	8809883a 	mov	r4,r17
    bfd0:	803ee83a 	callr	r16
    bfd4:	003fe806 	br	bf78 <__alt_data_end+0xff00bf78>

0000bfd8 <__ascii_wctomb>:
    bfd8:	28000526 	beq	r5,zero,bff0 <__ascii_wctomb+0x18>
    bfdc:	00803fc4 	movi	r2,255
    bfe0:	11800536 	bltu	r2,r6,bff8 <__ascii_wctomb+0x20>
    bfe4:	29800005 	stb	r6,0(r5)
    bfe8:	00800044 	movi	r2,1
    bfec:	f800283a 	ret
    bff0:	0005883a 	mov	r2,zero
    bff4:	f800283a 	ret
    bff8:	00802284 	movi	r2,138
    bffc:	20800015 	stw	r2,0(r4)
    c000:	00bfffc4 	movi	r2,-1
    c004:	f800283a 	ret

0000c008 <_wctomb_r>:
    c008:	00800074 	movhi	r2,1
    c00c:	defff904 	addi	sp,sp,-28
    c010:	108feb04 	addi	r2,r2,16300
    c014:	dfc00615 	stw	ra,24(sp)
    c018:	dc400515 	stw	r17,20(sp)
    c01c:	dc000415 	stw	r16,16(sp)
    c020:	3823883a 	mov	r17,r7
    c024:	14000017 	ldw	r16,0(r2)
    c028:	d9000115 	stw	r4,4(sp)
    c02c:	d9400215 	stw	r5,8(sp)
    c030:	d9800315 	stw	r6,12(sp)
    c034:	00083780 	call	8378 <__locale_charset>
    c038:	d9800317 	ldw	r6,12(sp)
    c03c:	d9400217 	ldw	r5,8(sp)
    c040:	d9000117 	ldw	r4,4(sp)
    c044:	100f883a 	mov	r7,r2
    c048:	dc400015 	stw	r17,0(sp)
    c04c:	803ee83a 	callr	r16
    c050:	dfc00617 	ldw	ra,24(sp)
    c054:	dc400517 	ldw	r17,20(sp)
    c058:	dc000417 	ldw	r16,16(sp)
    c05c:	dec00704 	addi	sp,sp,28
    c060:	f800283a 	ret

0000c064 <__udivdi3>:
    c064:	defff504 	addi	sp,sp,-44
    c068:	dcc00415 	stw	r19,16(sp)
    c06c:	dc000115 	stw	r16,4(sp)
    c070:	dfc00a15 	stw	ra,40(sp)
    c074:	df000915 	stw	fp,36(sp)
    c078:	ddc00815 	stw	r23,32(sp)
    c07c:	dd800715 	stw	r22,28(sp)
    c080:	dd400615 	stw	r21,24(sp)
    c084:	dd000515 	stw	r20,20(sp)
    c088:	dc800315 	stw	r18,12(sp)
    c08c:	dc400215 	stw	r17,8(sp)
    c090:	2027883a 	mov	r19,r4
    c094:	2821883a 	mov	r16,r5
    c098:	3800411e 	bne	r7,zero,c1a0 <__udivdi3+0x13c>
    c09c:	3023883a 	mov	r17,r6
    c0a0:	2025883a 	mov	r18,r4
    c0a4:	2980522e 	bgeu	r5,r6,c1f0 <__udivdi3+0x18c>
    c0a8:	00bfffd4 	movui	r2,65535
    c0ac:	282d883a 	mov	r22,r5
    c0b0:	1180a836 	bltu	r2,r6,c354 <__udivdi3+0x2f0>
    c0b4:	00803fc4 	movi	r2,255
    c0b8:	1185803a 	cmpltu	r2,r2,r6
    c0bc:	100490fa 	slli	r2,r2,3
    c0c0:	3086d83a 	srl	r3,r6,r2
    c0c4:	01000074 	movhi	r4,1
    c0c8:	21087dc4 	addi	r4,r4,8695
    c0cc:	20c7883a 	add	r3,r4,r3
    c0d0:	18c00003 	ldbu	r3,0(r3)
    c0d4:	1885883a 	add	r2,r3,r2
    c0d8:	00c00804 	movi	r3,32
    c0dc:	1887c83a 	sub	r3,r3,r2
    c0e0:	18000526 	beq	r3,zero,c0f8 <__udivdi3+0x94>
    c0e4:	80e0983a 	sll	r16,r16,r3
    c0e8:	9884d83a 	srl	r2,r19,r2
    c0ec:	30e2983a 	sll	r17,r6,r3
    c0f0:	98e4983a 	sll	r18,r19,r3
    c0f4:	142cb03a 	or	r22,r2,r16
    c0f8:	882ad43a 	srli	r21,r17,16
    c0fc:	b009883a 	mov	r4,r22
    c100:	8d3fffcc 	andi	r20,r17,65535
    c104:	a80b883a 	mov	r5,r21
    c108:	000cc700 	call	cc70 <__umodsi3>
    c10c:	b009883a 	mov	r4,r22
    c110:	a80b883a 	mov	r5,r21
    c114:	1027883a 	mov	r19,r2
    c118:	000cc0c0 	call	cc0c <__udivsi3>
    c11c:	102d883a 	mov	r22,r2
    c120:	9826943a 	slli	r19,r19,16
    c124:	9004d43a 	srli	r2,r18,16
    c128:	a5a1383a 	mul	r16,r20,r22
    c12c:	14c4b03a 	or	r2,r2,r19
    c130:	1400052e 	bgeu	r2,r16,c148 <__udivdi3+0xe4>
    c134:	1445883a 	add	r2,r2,r17
    c138:	b0ffffc4 	addi	r3,r22,-1
    c13c:	14400136 	bltu	r2,r17,c144 <__udivdi3+0xe0>
    c140:	14012336 	bltu	r2,r16,c5d0 <__udivdi3+0x56c>
    c144:	182d883a 	mov	r22,r3
    c148:	1421c83a 	sub	r16,r2,r16
    c14c:	a80b883a 	mov	r5,r21
    c150:	8009883a 	mov	r4,r16
    c154:	000cc700 	call	cc70 <__umodsi3>
    c158:	1027883a 	mov	r19,r2
    c15c:	a80b883a 	mov	r5,r21
    c160:	8009883a 	mov	r4,r16
    c164:	000cc0c0 	call	cc0c <__udivsi3>
    c168:	9826943a 	slli	r19,r19,16
    c16c:	a0a9383a 	mul	r20,r20,r2
    c170:	94bfffcc 	andi	r18,r18,65535
    c174:	94e4b03a 	or	r18,r18,r19
    c178:	9500052e 	bgeu	r18,r20,c190 <__udivdi3+0x12c>
    c17c:	8ca5883a 	add	r18,r17,r18
    c180:	10ffffc4 	addi	r3,r2,-1
    c184:	9440f136 	bltu	r18,r17,c54c <__udivdi3+0x4e8>
    c188:	9500f02e 	bgeu	r18,r20,c54c <__udivdi3+0x4e8>
    c18c:	10bfff84 	addi	r2,r2,-2
    c190:	b00c943a 	slli	r6,r22,16
    c194:	0007883a 	mov	r3,zero
    c198:	3084b03a 	or	r2,r6,r2
    c19c:	00005906 	br	c304 <__udivdi3+0x2a0>
    c1a0:	29c05636 	bltu	r5,r7,c2fc <__udivdi3+0x298>
    c1a4:	00bfffd4 	movui	r2,65535
    c1a8:	11c0622e 	bgeu	r2,r7,c334 <__udivdi3+0x2d0>
    c1ac:	00804034 	movhi	r2,256
    c1b0:	10bfffc4 	addi	r2,r2,-1
    c1b4:	11c0ee36 	bltu	r2,r7,c570 <__udivdi3+0x50c>
    c1b8:	00800404 	movi	r2,16
    c1bc:	3886d83a 	srl	r3,r7,r2
    c1c0:	01000074 	movhi	r4,1
    c1c4:	21087dc4 	addi	r4,r4,8695
    c1c8:	20c7883a 	add	r3,r4,r3
    c1cc:	18c00003 	ldbu	r3,0(r3)
    c1d0:	05400804 	movi	r21,32
    c1d4:	1885883a 	add	r2,r3,r2
    c1d8:	a8abc83a 	sub	r21,r21,r2
    c1dc:	a800621e 	bne	r21,zero,c368 <__udivdi3+0x304>
    c1e0:	3c00e936 	bltu	r7,r16,c588 <__udivdi3+0x524>
    c1e4:	9985403a 	cmpgeu	r2,r19,r6
    c1e8:	0007883a 	mov	r3,zero
    c1ec:	00004506 	br	c304 <__udivdi3+0x2a0>
    c1f0:	3000041e 	bne	r6,zero,c204 <__udivdi3+0x1a0>
    c1f4:	000b883a 	mov	r5,zero
    c1f8:	01000044 	movi	r4,1
    c1fc:	000cc0c0 	call	cc0c <__udivsi3>
    c200:	1023883a 	mov	r17,r2
    c204:	00bfffd4 	movui	r2,65535
    c208:	14404e2e 	bgeu	r2,r17,c344 <__udivdi3+0x2e0>
    c20c:	00804034 	movhi	r2,256
    c210:	10bfffc4 	addi	r2,r2,-1
    c214:	1440d836 	bltu	r2,r17,c578 <__udivdi3+0x514>
    c218:	00800404 	movi	r2,16
    c21c:	8886d83a 	srl	r3,r17,r2
    c220:	01000074 	movhi	r4,1
    c224:	21087dc4 	addi	r4,r4,8695
    c228:	20c7883a 	add	r3,r4,r3
    c22c:	18c00003 	ldbu	r3,0(r3)
    c230:	1885883a 	add	r2,r3,r2
    c234:	00c00804 	movi	r3,32
    c238:	1887c83a 	sub	r3,r3,r2
    c23c:	18008f1e 	bne	r3,zero,c47c <__udivdi3+0x418>
    c240:	882ad43a 	srli	r21,r17,16
    c244:	8461c83a 	sub	r16,r16,r17
    c248:	8d3fffcc 	andi	r20,r17,65535
    c24c:	00c00044 	movi	r3,1
    c250:	8009883a 	mov	r4,r16
    c254:	a80b883a 	mov	r5,r21
    c258:	d8c00015 	stw	r3,0(sp)
    c25c:	000cc700 	call	cc70 <__umodsi3>
    c260:	8009883a 	mov	r4,r16
    c264:	a80b883a 	mov	r5,r21
    c268:	1027883a 	mov	r19,r2
    c26c:	000cc0c0 	call	cc0c <__udivsi3>
    c270:	9826943a 	slli	r19,r19,16
    c274:	9008d43a 	srli	r4,r18,16
    c278:	1521383a 	mul	r16,r2,r20
    c27c:	102d883a 	mov	r22,r2
    c280:	24c8b03a 	or	r4,r4,r19
    c284:	d8c00017 	ldw	r3,0(sp)
    c288:	2400052e 	bgeu	r4,r16,c2a0 <__udivdi3+0x23c>
    c28c:	2449883a 	add	r4,r4,r17
    c290:	b0bfffc4 	addi	r2,r22,-1
    c294:	24400136 	bltu	r4,r17,c29c <__udivdi3+0x238>
    c298:	2400ca36 	bltu	r4,r16,c5c4 <__udivdi3+0x560>
    c29c:	102d883a 	mov	r22,r2
    c2a0:	2421c83a 	sub	r16,r4,r16
    c2a4:	a80b883a 	mov	r5,r21
    c2a8:	8009883a 	mov	r4,r16
    c2ac:	d8c00015 	stw	r3,0(sp)
    c2b0:	000cc700 	call	cc70 <__umodsi3>
    c2b4:	1027883a 	mov	r19,r2
    c2b8:	a80b883a 	mov	r5,r21
    c2bc:	8009883a 	mov	r4,r16
    c2c0:	000cc0c0 	call	cc0c <__udivsi3>
    c2c4:	9826943a 	slli	r19,r19,16
    c2c8:	1529383a 	mul	r20,r2,r20
    c2cc:	94bfffcc 	andi	r18,r18,65535
    c2d0:	94e4b03a 	or	r18,r18,r19
    c2d4:	d8c00017 	ldw	r3,0(sp)
    c2d8:	9500052e 	bgeu	r18,r20,c2f0 <__udivdi3+0x28c>
    c2dc:	8ca5883a 	add	r18,r17,r18
    c2e0:	113fffc4 	addi	r4,r2,-1
    c2e4:	94409736 	bltu	r18,r17,c544 <__udivdi3+0x4e0>
    c2e8:	9500962e 	bgeu	r18,r20,c544 <__udivdi3+0x4e0>
    c2ec:	10bfff84 	addi	r2,r2,-2
    c2f0:	b00c943a 	slli	r6,r22,16
    c2f4:	3084b03a 	or	r2,r6,r2
    c2f8:	00000206 	br	c304 <__udivdi3+0x2a0>
    c2fc:	0007883a 	mov	r3,zero
    c300:	0005883a 	mov	r2,zero
    c304:	dfc00a17 	ldw	ra,40(sp)
    c308:	df000917 	ldw	fp,36(sp)
    c30c:	ddc00817 	ldw	r23,32(sp)
    c310:	dd800717 	ldw	r22,28(sp)
    c314:	dd400617 	ldw	r21,24(sp)
    c318:	dd000517 	ldw	r20,20(sp)
    c31c:	dcc00417 	ldw	r19,16(sp)
    c320:	dc800317 	ldw	r18,12(sp)
    c324:	dc400217 	ldw	r17,8(sp)
    c328:	dc000117 	ldw	r16,4(sp)
    c32c:	dec00b04 	addi	sp,sp,44
    c330:	f800283a 	ret
    c334:	00803fc4 	movi	r2,255
    c338:	11c5803a 	cmpltu	r2,r2,r7
    c33c:	100490fa 	slli	r2,r2,3
    c340:	003f9e06 	br	c1bc <__alt_data_end+0xff00c1bc>
    c344:	00803fc4 	movi	r2,255
    c348:	1445803a 	cmpltu	r2,r2,r17
    c34c:	100490fa 	slli	r2,r2,3
    c350:	003fb206 	br	c21c <__alt_data_end+0xff00c21c>
    c354:	00804034 	movhi	r2,256
    c358:	10bfffc4 	addi	r2,r2,-1
    c35c:	11808836 	bltu	r2,r6,c580 <__udivdi3+0x51c>
    c360:	00800404 	movi	r2,16
    c364:	003f5606 	br	c0c0 <__alt_data_end+0xff00c0c0>
    c368:	30aed83a 	srl	r23,r6,r2
    c36c:	3d4e983a 	sll	r7,r7,r21
    c370:	80acd83a 	srl	r22,r16,r2
    c374:	9884d83a 	srl	r2,r19,r2
    c378:	3deeb03a 	or	r23,r7,r23
    c37c:	b824d43a 	srli	r18,r23,16
    c380:	8560983a 	sll	r16,r16,r21
    c384:	b009883a 	mov	r4,r22
    c388:	900b883a 	mov	r5,r18
    c38c:	3568983a 	sll	r20,r6,r21
    c390:	1420b03a 	or	r16,r2,r16
    c394:	000cc700 	call	cc70 <__umodsi3>
    c398:	b009883a 	mov	r4,r22
    c39c:	900b883a 	mov	r5,r18
    c3a0:	1023883a 	mov	r17,r2
    c3a4:	000cc0c0 	call	cc0c <__udivsi3>
    c3a8:	8808943a 	slli	r4,r17,16
    c3ac:	bf3fffcc 	andi	fp,r23,65535
    c3b0:	8006d43a 	srli	r3,r16,16
    c3b4:	e0a3383a 	mul	r17,fp,r2
    c3b8:	100d883a 	mov	r6,r2
    c3bc:	1906b03a 	or	r3,r3,r4
    c3c0:	1c40042e 	bgeu	r3,r17,c3d4 <__udivdi3+0x370>
    c3c4:	1dc7883a 	add	r3,r3,r23
    c3c8:	10bfffc4 	addi	r2,r2,-1
    c3cc:	1dc0752e 	bgeu	r3,r23,c5a4 <__udivdi3+0x540>
    c3d0:	100d883a 	mov	r6,r2
    c3d4:	1c63c83a 	sub	r17,r3,r17
    c3d8:	900b883a 	mov	r5,r18
    c3dc:	8809883a 	mov	r4,r17
    c3e0:	d9800015 	stw	r6,0(sp)
    c3e4:	000cc700 	call	cc70 <__umodsi3>
    c3e8:	102d883a 	mov	r22,r2
    c3ec:	8809883a 	mov	r4,r17
    c3f0:	900b883a 	mov	r5,r18
    c3f4:	000cc0c0 	call	cc0c <__udivsi3>
    c3f8:	b02c943a 	slli	r22,r22,16
    c3fc:	e089383a 	mul	r4,fp,r2
    c400:	843fffcc 	andi	r16,r16,65535
    c404:	85a0b03a 	or	r16,r16,r22
    c408:	d9800017 	ldw	r6,0(sp)
    c40c:	8100042e 	bgeu	r16,r4,c420 <__udivdi3+0x3bc>
    c410:	85e1883a 	add	r16,r16,r23
    c414:	10ffffc4 	addi	r3,r2,-1
    c418:	85c05e2e 	bgeu	r16,r23,c594 <__udivdi3+0x530>
    c41c:	1805883a 	mov	r2,r3
    c420:	300c943a 	slli	r6,r6,16
    c424:	a17fffcc 	andi	r5,r20,65535
    c428:	a028d43a 	srli	r20,r20,16
    c42c:	3084b03a 	or	r2,r6,r2
    c430:	10ffffcc 	andi	r3,r2,65535
    c434:	100cd43a 	srli	r6,r2,16
    c438:	194f383a 	mul	r7,r3,r5
    c43c:	1d07383a 	mul	r3,r3,r20
    c440:	314b383a 	mul	r5,r6,r5
    c444:	3810d43a 	srli	r8,r7,16
    c448:	8121c83a 	sub	r16,r16,r4
    c44c:	1947883a 	add	r3,r3,r5
    c450:	40c7883a 	add	r3,r8,r3
    c454:	350d383a 	mul	r6,r6,r20
    c458:	1940022e 	bgeu	r3,r5,c464 <__udivdi3+0x400>
    c45c:	01000074 	movhi	r4,1
    c460:	310d883a 	add	r6,r6,r4
    c464:	1828d43a 	srli	r20,r3,16
    c468:	a18d883a 	add	r6,r20,r6
    c46c:	81803e36 	bltu	r16,r6,c568 <__udivdi3+0x504>
    c470:	81803826 	beq	r16,r6,c554 <__udivdi3+0x4f0>
    c474:	0007883a 	mov	r3,zero
    c478:	003fa206 	br	c304 <__alt_data_end+0xff00c304>
    c47c:	88e2983a 	sll	r17,r17,r3
    c480:	80a8d83a 	srl	r20,r16,r2
    c484:	80e0983a 	sll	r16,r16,r3
    c488:	882ad43a 	srli	r21,r17,16
    c48c:	9884d83a 	srl	r2,r19,r2
    c490:	a009883a 	mov	r4,r20
    c494:	a80b883a 	mov	r5,r21
    c498:	142eb03a 	or	r23,r2,r16
    c49c:	98e4983a 	sll	r18,r19,r3
    c4a0:	000cc700 	call	cc70 <__umodsi3>
    c4a4:	a009883a 	mov	r4,r20
    c4a8:	a80b883a 	mov	r5,r21
    c4ac:	1021883a 	mov	r16,r2
    c4b0:	000cc0c0 	call	cc0c <__udivsi3>
    c4b4:	1039883a 	mov	fp,r2
    c4b8:	8d3fffcc 	andi	r20,r17,65535
    c4bc:	8020943a 	slli	r16,r16,16
    c4c0:	b804d43a 	srli	r2,r23,16
    c4c4:	a72d383a 	mul	r22,r20,fp
    c4c8:	1404b03a 	or	r2,r2,r16
    c4cc:	1580062e 	bgeu	r2,r22,c4e8 <__udivdi3+0x484>
    c4d0:	1445883a 	add	r2,r2,r17
    c4d4:	e0ffffc4 	addi	r3,fp,-1
    c4d8:	14403836 	bltu	r2,r17,c5bc <__udivdi3+0x558>
    c4dc:	1580372e 	bgeu	r2,r22,c5bc <__udivdi3+0x558>
    c4e0:	e73fff84 	addi	fp,fp,-2
    c4e4:	1445883a 	add	r2,r2,r17
    c4e8:	15adc83a 	sub	r22,r2,r22
    c4ec:	a80b883a 	mov	r5,r21
    c4f0:	b009883a 	mov	r4,r22
    c4f4:	000cc700 	call	cc70 <__umodsi3>
    c4f8:	1027883a 	mov	r19,r2
    c4fc:	b009883a 	mov	r4,r22
    c500:	a80b883a 	mov	r5,r21
    c504:	000cc0c0 	call	cc0c <__udivsi3>
    c508:	9826943a 	slli	r19,r19,16
    c50c:	a0a1383a 	mul	r16,r20,r2
    c510:	b93fffcc 	andi	r4,r23,65535
    c514:	24c8b03a 	or	r4,r4,r19
    c518:	2400062e 	bgeu	r4,r16,c534 <__udivdi3+0x4d0>
    c51c:	2449883a 	add	r4,r4,r17
    c520:	10ffffc4 	addi	r3,r2,-1
    c524:	24402336 	bltu	r4,r17,c5b4 <__udivdi3+0x550>
    c528:	2400222e 	bgeu	r4,r16,c5b4 <__udivdi3+0x550>
    c52c:	10bfff84 	addi	r2,r2,-2
    c530:	2449883a 	add	r4,r4,r17
    c534:	e038943a 	slli	fp,fp,16
    c538:	2421c83a 	sub	r16,r4,r16
    c53c:	e086b03a 	or	r3,fp,r2
    c540:	003f4306 	br	c250 <__alt_data_end+0xff00c250>
    c544:	2005883a 	mov	r2,r4
    c548:	003f6906 	br	c2f0 <__alt_data_end+0xff00c2f0>
    c54c:	1805883a 	mov	r2,r3
    c550:	003f0f06 	br	c190 <__alt_data_end+0xff00c190>
    c554:	1806943a 	slli	r3,r3,16
    c558:	9d66983a 	sll	r19,r19,r21
    c55c:	39ffffcc 	andi	r7,r7,65535
    c560:	19c7883a 	add	r3,r3,r7
    c564:	98ffc32e 	bgeu	r19,r3,c474 <__alt_data_end+0xff00c474>
    c568:	10bfffc4 	addi	r2,r2,-1
    c56c:	003fc106 	br	c474 <__alt_data_end+0xff00c474>
    c570:	00800604 	movi	r2,24
    c574:	003f1106 	br	c1bc <__alt_data_end+0xff00c1bc>
    c578:	00800604 	movi	r2,24
    c57c:	003f2706 	br	c21c <__alt_data_end+0xff00c21c>
    c580:	00800604 	movi	r2,24
    c584:	003ece06 	br	c0c0 <__alt_data_end+0xff00c0c0>
    c588:	0007883a 	mov	r3,zero
    c58c:	00800044 	movi	r2,1
    c590:	003f5c06 	br	c304 <__alt_data_end+0xff00c304>
    c594:	813fa12e 	bgeu	r16,r4,c41c <__alt_data_end+0xff00c41c>
    c598:	10bfff84 	addi	r2,r2,-2
    c59c:	85e1883a 	add	r16,r16,r23
    c5a0:	003f9f06 	br	c420 <__alt_data_end+0xff00c420>
    c5a4:	1c7f8a2e 	bgeu	r3,r17,c3d0 <__alt_data_end+0xff00c3d0>
    c5a8:	31bfff84 	addi	r6,r6,-2
    c5ac:	1dc7883a 	add	r3,r3,r23
    c5b0:	003f8806 	br	c3d4 <__alt_data_end+0xff00c3d4>
    c5b4:	1805883a 	mov	r2,r3
    c5b8:	003fde06 	br	c534 <__alt_data_end+0xff00c534>
    c5bc:	1839883a 	mov	fp,r3
    c5c0:	003fc906 	br	c4e8 <__alt_data_end+0xff00c4e8>
    c5c4:	b5bfff84 	addi	r22,r22,-2
    c5c8:	2449883a 	add	r4,r4,r17
    c5cc:	003f3406 	br	c2a0 <__alt_data_end+0xff00c2a0>
    c5d0:	b5bfff84 	addi	r22,r22,-2
    c5d4:	1445883a 	add	r2,r2,r17
    c5d8:	003edb06 	br	c148 <__alt_data_end+0xff00c148>

0000c5dc <__umoddi3>:
    c5dc:	defff404 	addi	sp,sp,-48
    c5e0:	df000a15 	stw	fp,40(sp)
    c5e4:	dc400315 	stw	r17,12(sp)
    c5e8:	dc000215 	stw	r16,8(sp)
    c5ec:	dfc00b15 	stw	ra,44(sp)
    c5f0:	ddc00915 	stw	r23,36(sp)
    c5f4:	dd800815 	stw	r22,32(sp)
    c5f8:	dd400715 	stw	r21,28(sp)
    c5fc:	dd000615 	stw	r20,24(sp)
    c600:	dcc00515 	stw	r19,20(sp)
    c604:	dc800415 	stw	r18,16(sp)
    c608:	2021883a 	mov	r16,r4
    c60c:	2823883a 	mov	r17,r5
    c610:	2839883a 	mov	fp,r5
    c614:	38003c1e 	bne	r7,zero,c708 <__umoddi3+0x12c>
    c618:	3027883a 	mov	r19,r6
    c61c:	2029883a 	mov	r20,r4
    c620:	2980512e 	bgeu	r5,r6,c768 <__umoddi3+0x18c>
    c624:	00bfffd4 	movui	r2,65535
    c628:	11809a36 	bltu	r2,r6,c894 <__umoddi3+0x2b8>
    c62c:	01003fc4 	movi	r4,255
    c630:	2189803a 	cmpltu	r4,r4,r6
    c634:	200890fa 	slli	r4,r4,3
    c638:	3104d83a 	srl	r2,r6,r4
    c63c:	00c00074 	movhi	r3,1
    c640:	18c87dc4 	addi	r3,r3,8695
    c644:	1885883a 	add	r2,r3,r2
    c648:	10c00003 	ldbu	r3,0(r2)
    c64c:	00800804 	movi	r2,32
    c650:	1909883a 	add	r4,r3,r4
    c654:	1125c83a 	sub	r18,r2,r4
    c658:	90000526 	beq	r18,zero,c670 <__umoddi3+0x94>
    c65c:	8ca2983a 	sll	r17,r17,r18
    c660:	8108d83a 	srl	r4,r16,r4
    c664:	34a6983a 	sll	r19,r6,r18
    c668:	84a8983a 	sll	r20,r16,r18
    c66c:	2478b03a 	or	fp,r4,r17
    c670:	982ed43a 	srli	r23,r19,16
    c674:	e009883a 	mov	r4,fp
    c678:	9dbfffcc 	andi	r22,r19,65535
    c67c:	b80b883a 	mov	r5,r23
    c680:	000cc700 	call	cc70 <__umodsi3>
    c684:	e009883a 	mov	r4,fp
    c688:	b80b883a 	mov	r5,r23
    c68c:	102b883a 	mov	r21,r2
    c690:	000cc0c0 	call	cc0c <__udivsi3>
    c694:	a806943a 	slli	r3,r21,16
    c698:	a008d43a 	srli	r4,r20,16
    c69c:	b085383a 	mul	r2,r22,r2
    c6a0:	20c8b03a 	or	r4,r4,r3
    c6a4:	2080032e 	bgeu	r4,r2,c6b4 <__umoddi3+0xd8>
    c6a8:	24c9883a 	add	r4,r4,r19
    c6ac:	24c00136 	bltu	r4,r19,c6b4 <__umoddi3+0xd8>
    c6b0:	20811036 	bltu	r4,r2,caf4 <__umoddi3+0x518>
    c6b4:	20abc83a 	sub	r21,r4,r2
    c6b8:	b80b883a 	mov	r5,r23
    c6bc:	a809883a 	mov	r4,r21
    c6c0:	000cc700 	call	cc70 <__umodsi3>
    c6c4:	1023883a 	mov	r17,r2
    c6c8:	b80b883a 	mov	r5,r23
    c6cc:	a809883a 	mov	r4,r21
    c6d0:	000cc0c0 	call	cc0c <__udivsi3>
    c6d4:	8822943a 	slli	r17,r17,16
    c6d8:	b085383a 	mul	r2,r22,r2
    c6dc:	a0ffffcc 	andi	r3,r20,65535
    c6e0:	1c46b03a 	or	r3,r3,r17
    c6e4:	1880042e 	bgeu	r3,r2,c6f8 <__umoddi3+0x11c>
    c6e8:	1cc7883a 	add	r3,r3,r19
    c6ec:	1cc00236 	bltu	r3,r19,c6f8 <__umoddi3+0x11c>
    c6f0:	1880012e 	bgeu	r3,r2,c6f8 <__umoddi3+0x11c>
    c6f4:	1cc7883a 	add	r3,r3,r19
    c6f8:	1885c83a 	sub	r2,r3,r2
    c6fc:	1484d83a 	srl	r2,r2,r18
    c700:	0007883a 	mov	r3,zero
    c704:	00004f06 	br	c844 <__umoddi3+0x268>
    c708:	29c04c36 	bltu	r5,r7,c83c <__umoddi3+0x260>
    c70c:	00bfffd4 	movui	r2,65535
    c710:	11c0582e 	bgeu	r2,r7,c874 <__umoddi3+0x298>
    c714:	00804034 	movhi	r2,256
    c718:	10bfffc4 	addi	r2,r2,-1
    c71c:	11c0e736 	bltu	r2,r7,cabc <__umoddi3+0x4e0>
    c720:	01000404 	movi	r4,16
    c724:	3904d83a 	srl	r2,r7,r4
    c728:	00c00074 	movhi	r3,1
    c72c:	18c87dc4 	addi	r3,r3,8695
    c730:	1885883a 	add	r2,r3,r2
    c734:	14c00003 	ldbu	r19,0(r2)
    c738:	00c00804 	movi	r3,32
    c73c:	9927883a 	add	r19,r19,r4
    c740:	1ce9c83a 	sub	r20,r3,r19
    c744:	a000581e 	bne	r20,zero,c8a8 <__umoddi3+0x2cc>
    c748:	3c400136 	bltu	r7,r17,c750 <__umoddi3+0x174>
    c74c:	8180eb36 	bltu	r16,r6,cafc <__umoddi3+0x520>
    c750:	8185c83a 	sub	r2,r16,r6
    c754:	89e3c83a 	sub	r17,r17,r7
    c758:	8089803a 	cmpltu	r4,r16,r2
    c75c:	8939c83a 	sub	fp,r17,r4
    c760:	e007883a 	mov	r3,fp
    c764:	00003706 	br	c844 <__umoddi3+0x268>
    c768:	3000041e 	bne	r6,zero,c77c <__umoddi3+0x1a0>
    c76c:	000b883a 	mov	r5,zero
    c770:	01000044 	movi	r4,1
    c774:	000cc0c0 	call	cc0c <__udivsi3>
    c778:	1027883a 	mov	r19,r2
    c77c:	00bfffd4 	movui	r2,65535
    c780:	14c0402e 	bgeu	r2,r19,c884 <__umoddi3+0x2a8>
    c784:	00804034 	movhi	r2,256
    c788:	10bfffc4 	addi	r2,r2,-1
    c78c:	14c0cd36 	bltu	r2,r19,cac4 <__umoddi3+0x4e8>
    c790:	00800404 	movi	r2,16
    c794:	9886d83a 	srl	r3,r19,r2
    c798:	01000074 	movhi	r4,1
    c79c:	21087dc4 	addi	r4,r4,8695
    c7a0:	20c7883a 	add	r3,r4,r3
    c7a4:	18c00003 	ldbu	r3,0(r3)
    c7a8:	1887883a 	add	r3,r3,r2
    c7ac:	00800804 	movi	r2,32
    c7b0:	10e5c83a 	sub	r18,r2,r3
    c7b4:	9000901e 	bne	r18,zero,c9f8 <__umoddi3+0x41c>
    c7b8:	982cd43a 	srli	r22,r19,16
    c7bc:	8ce3c83a 	sub	r17,r17,r19
    c7c0:	9d7fffcc 	andi	r21,r19,65535
    c7c4:	b00b883a 	mov	r5,r22
    c7c8:	8809883a 	mov	r4,r17
    c7cc:	000cc700 	call	cc70 <__umodsi3>
    c7d0:	8809883a 	mov	r4,r17
    c7d4:	b00b883a 	mov	r5,r22
    c7d8:	1021883a 	mov	r16,r2
    c7dc:	000cc0c0 	call	cc0c <__udivsi3>
    c7e0:	8006943a 	slli	r3,r16,16
    c7e4:	a008d43a 	srli	r4,r20,16
    c7e8:	1545383a 	mul	r2,r2,r21
    c7ec:	20c8b03a 	or	r4,r4,r3
    c7f0:	2080042e 	bgeu	r4,r2,c804 <__umoddi3+0x228>
    c7f4:	24c9883a 	add	r4,r4,r19
    c7f8:	24c00236 	bltu	r4,r19,c804 <__umoddi3+0x228>
    c7fc:	2080012e 	bgeu	r4,r2,c804 <__umoddi3+0x228>
    c800:	24c9883a 	add	r4,r4,r19
    c804:	20a1c83a 	sub	r16,r4,r2
    c808:	b00b883a 	mov	r5,r22
    c80c:	8009883a 	mov	r4,r16
    c810:	000cc700 	call	cc70 <__umodsi3>
    c814:	1023883a 	mov	r17,r2
    c818:	b00b883a 	mov	r5,r22
    c81c:	8009883a 	mov	r4,r16
    c820:	000cc0c0 	call	cc0c <__udivsi3>
    c824:	8822943a 	slli	r17,r17,16
    c828:	1545383a 	mul	r2,r2,r21
    c82c:	a53fffcc 	andi	r20,r20,65535
    c830:	a446b03a 	or	r3,r20,r17
    c834:	18bfb02e 	bgeu	r3,r2,c6f8 <__alt_data_end+0xff00c6f8>
    c838:	003fab06 	br	c6e8 <__alt_data_end+0xff00c6e8>
    c83c:	2005883a 	mov	r2,r4
    c840:	2807883a 	mov	r3,r5
    c844:	dfc00b17 	ldw	ra,44(sp)
    c848:	df000a17 	ldw	fp,40(sp)
    c84c:	ddc00917 	ldw	r23,36(sp)
    c850:	dd800817 	ldw	r22,32(sp)
    c854:	dd400717 	ldw	r21,28(sp)
    c858:	dd000617 	ldw	r20,24(sp)
    c85c:	dcc00517 	ldw	r19,20(sp)
    c860:	dc800417 	ldw	r18,16(sp)
    c864:	dc400317 	ldw	r17,12(sp)
    c868:	dc000217 	ldw	r16,8(sp)
    c86c:	dec00c04 	addi	sp,sp,48
    c870:	f800283a 	ret
    c874:	04c03fc4 	movi	r19,255
    c878:	99c9803a 	cmpltu	r4,r19,r7
    c87c:	200890fa 	slli	r4,r4,3
    c880:	003fa806 	br	c724 <__alt_data_end+0xff00c724>
    c884:	00803fc4 	movi	r2,255
    c888:	14c5803a 	cmpltu	r2,r2,r19
    c88c:	100490fa 	slli	r2,r2,3
    c890:	003fc006 	br	c794 <__alt_data_end+0xff00c794>
    c894:	00804034 	movhi	r2,256
    c898:	10bfffc4 	addi	r2,r2,-1
    c89c:	11808b36 	bltu	r2,r6,cacc <__umoddi3+0x4f0>
    c8a0:	01000404 	movi	r4,16
    c8a4:	003f6406 	br	c638 <__alt_data_end+0xff00c638>
    c8a8:	34c4d83a 	srl	r2,r6,r19
    c8ac:	3d0e983a 	sll	r7,r7,r20
    c8b0:	8cf8d83a 	srl	fp,r17,r19
    c8b4:	8d10983a 	sll	r8,r17,r20
    c8b8:	38aab03a 	or	r21,r7,r2
    c8bc:	a82cd43a 	srli	r22,r21,16
    c8c0:	84e2d83a 	srl	r17,r16,r19
    c8c4:	e009883a 	mov	r4,fp
    c8c8:	b00b883a 	mov	r5,r22
    c8cc:	8a22b03a 	or	r17,r17,r8
    c8d0:	3524983a 	sll	r18,r6,r20
    c8d4:	000cc700 	call	cc70 <__umodsi3>
    c8d8:	e009883a 	mov	r4,fp
    c8dc:	b00b883a 	mov	r5,r22
    c8e0:	102f883a 	mov	r23,r2
    c8e4:	000cc0c0 	call	cc0c <__udivsi3>
    c8e8:	100d883a 	mov	r6,r2
    c8ec:	b808943a 	slli	r4,r23,16
    c8f0:	aa3fffcc 	andi	r8,r21,65535
    c8f4:	8804d43a 	srli	r2,r17,16
    c8f8:	41af383a 	mul	r23,r8,r6
    c8fc:	8520983a 	sll	r16,r16,r20
    c900:	1104b03a 	or	r2,r2,r4
    c904:	15c0042e 	bgeu	r2,r23,c918 <__umoddi3+0x33c>
    c908:	1545883a 	add	r2,r2,r21
    c90c:	30ffffc4 	addi	r3,r6,-1
    c910:	1540742e 	bgeu	r2,r21,cae4 <__umoddi3+0x508>
    c914:	180d883a 	mov	r6,r3
    c918:	15efc83a 	sub	r23,r2,r23
    c91c:	b00b883a 	mov	r5,r22
    c920:	b809883a 	mov	r4,r23
    c924:	d9800115 	stw	r6,4(sp)
    c928:	da000015 	stw	r8,0(sp)
    c92c:	000cc700 	call	cc70 <__umodsi3>
    c930:	b00b883a 	mov	r5,r22
    c934:	b809883a 	mov	r4,r23
    c938:	1039883a 	mov	fp,r2
    c93c:	000cc0c0 	call	cc0c <__udivsi3>
    c940:	da000017 	ldw	r8,0(sp)
    c944:	e038943a 	slli	fp,fp,16
    c948:	100b883a 	mov	r5,r2
    c94c:	4089383a 	mul	r4,r8,r2
    c950:	8a3fffcc 	andi	r8,r17,65535
    c954:	4710b03a 	or	r8,r8,fp
    c958:	d9800117 	ldw	r6,4(sp)
    c95c:	4100042e 	bgeu	r8,r4,c970 <__umoddi3+0x394>
    c960:	4551883a 	add	r8,r8,r21
    c964:	10bfffc4 	addi	r2,r2,-1
    c968:	45405a2e 	bgeu	r8,r21,cad4 <__umoddi3+0x4f8>
    c96c:	100b883a 	mov	r5,r2
    c970:	300c943a 	slli	r6,r6,16
    c974:	91ffffcc 	andi	r7,r18,65535
    c978:	9004d43a 	srli	r2,r18,16
    c97c:	314cb03a 	or	r6,r6,r5
    c980:	317fffcc 	andi	r5,r6,65535
    c984:	300cd43a 	srli	r6,r6,16
    c988:	29d3383a 	mul	r9,r5,r7
    c98c:	288b383a 	mul	r5,r5,r2
    c990:	31cf383a 	mul	r7,r6,r7
    c994:	4806d43a 	srli	r3,r9,16
    c998:	4111c83a 	sub	r8,r8,r4
    c99c:	29cb883a 	add	r5,r5,r7
    c9a0:	194b883a 	add	r5,r3,r5
    c9a4:	3085383a 	mul	r2,r6,r2
    c9a8:	29c0022e 	bgeu	r5,r7,c9b4 <__umoddi3+0x3d8>
    c9ac:	00c00074 	movhi	r3,1
    c9b0:	10c5883a 	add	r2,r2,r3
    c9b4:	2808d43a 	srli	r4,r5,16
    c9b8:	280a943a 	slli	r5,r5,16
    c9bc:	4a7fffcc 	andi	r9,r9,65535
    c9c0:	2085883a 	add	r2,r4,r2
    c9c4:	2a4b883a 	add	r5,r5,r9
    c9c8:	40803636 	bltu	r8,r2,caa4 <__umoddi3+0x4c8>
    c9cc:	40804d26 	beq	r8,r2,cb04 <__umoddi3+0x528>
    c9d0:	4089c83a 	sub	r4,r8,r2
    c9d4:	280f883a 	mov	r7,r5
    c9d8:	81cfc83a 	sub	r7,r16,r7
    c9dc:	81c7803a 	cmpltu	r3,r16,r7
    c9e0:	20c7c83a 	sub	r3,r4,r3
    c9e4:	1cc4983a 	sll	r2,r3,r19
    c9e8:	3d0ed83a 	srl	r7,r7,r20
    c9ec:	1d06d83a 	srl	r3,r3,r20
    c9f0:	11c4b03a 	or	r2,r2,r7
    c9f4:	003f9306 	br	c844 <__alt_data_end+0xff00c844>
    c9f8:	9ca6983a 	sll	r19,r19,r18
    c9fc:	88e8d83a 	srl	r20,r17,r3
    ca00:	80c4d83a 	srl	r2,r16,r3
    ca04:	982cd43a 	srli	r22,r19,16
    ca08:	8ca2983a 	sll	r17,r17,r18
    ca0c:	a009883a 	mov	r4,r20
    ca10:	b00b883a 	mov	r5,r22
    ca14:	1478b03a 	or	fp,r2,r17
    ca18:	000cc700 	call	cc70 <__umodsi3>
    ca1c:	a009883a 	mov	r4,r20
    ca20:	b00b883a 	mov	r5,r22
    ca24:	1023883a 	mov	r17,r2
    ca28:	000cc0c0 	call	cc0c <__udivsi3>
    ca2c:	9d7fffcc 	andi	r21,r19,65535
    ca30:	880a943a 	slli	r5,r17,16
    ca34:	e008d43a 	srli	r4,fp,16
    ca38:	a885383a 	mul	r2,r21,r2
    ca3c:	84a8983a 	sll	r20,r16,r18
    ca40:	2148b03a 	or	r4,r4,r5
    ca44:	2080042e 	bgeu	r4,r2,ca58 <__umoddi3+0x47c>
    ca48:	24c9883a 	add	r4,r4,r19
    ca4c:	24c00236 	bltu	r4,r19,ca58 <__umoddi3+0x47c>
    ca50:	2080012e 	bgeu	r4,r2,ca58 <__umoddi3+0x47c>
    ca54:	24c9883a 	add	r4,r4,r19
    ca58:	20a3c83a 	sub	r17,r4,r2
    ca5c:	b00b883a 	mov	r5,r22
    ca60:	8809883a 	mov	r4,r17
    ca64:	000cc700 	call	cc70 <__umodsi3>
    ca68:	102f883a 	mov	r23,r2
    ca6c:	8809883a 	mov	r4,r17
    ca70:	b00b883a 	mov	r5,r22
    ca74:	000cc0c0 	call	cc0c <__udivsi3>
    ca78:	b82e943a 	slli	r23,r23,16
    ca7c:	a885383a 	mul	r2,r21,r2
    ca80:	e13fffcc 	andi	r4,fp,65535
    ca84:	25c8b03a 	or	r4,r4,r23
    ca88:	2080042e 	bgeu	r4,r2,ca9c <__umoddi3+0x4c0>
    ca8c:	24c9883a 	add	r4,r4,r19
    ca90:	24c00236 	bltu	r4,r19,ca9c <__umoddi3+0x4c0>
    ca94:	2080012e 	bgeu	r4,r2,ca9c <__umoddi3+0x4c0>
    ca98:	24c9883a 	add	r4,r4,r19
    ca9c:	20a3c83a 	sub	r17,r4,r2
    caa0:	003f4806 	br	c7c4 <__alt_data_end+0xff00c7c4>
    caa4:	2c8fc83a 	sub	r7,r5,r18
    caa8:	1545c83a 	sub	r2,r2,r21
    caac:	29cb803a 	cmpltu	r5,r5,r7
    cab0:	1145c83a 	sub	r2,r2,r5
    cab4:	4089c83a 	sub	r4,r8,r2
    cab8:	003fc706 	br	c9d8 <__alt_data_end+0xff00c9d8>
    cabc:	01000604 	movi	r4,24
    cac0:	003f1806 	br	c724 <__alt_data_end+0xff00c724>
    cac4:	00800604 	movi	r2,24
    cac8:	003f3206 	br	c794 <__alt_data_end+0xff00c794>
    cacc:	01000604 	movi	r4,24
    cad0:	003ed906 	br	c638 <__alt_data_end+0xff00c638>
    cad4:	413fa52e 	bgeu	r8,r4,c96c <__alt_data_end+0xff00c96c>
    cad8:	297fff84 	addi	r5,r5,-2
    cadc:	4551883a 	add	r8,r8,r21
    cae0:	003fa306 	br	c970 <__alt_data_end+0xff00c970>
    cae4:	15ff8b2e 	bgeu	r2,r23,c914 <__alt_data_end+0xff00c914>
    cae8:	31bfff84 	addi	r6,r6,-2
    caec:	1545883a 	add	r2,r2,r21
    caf0:	003f8906 	br	c918 <__alt_data_end+0xff00c918>
    caf4:	24c9883a 	add	r4,r4,r19
    caf8:	003eee06 	br	c6b4 <__alt_data_end+0xff00c6b4>
    cafc:	8005883a 	mov	r2,r16
    cb00:	003f1706 	br	c760 <__alt_data_end+0xff00c760>
    cb04:	817fe736 	bltu	r16,r5,caa4 <__alt_data_end+0xff00caa4>
    cb08:	280f883a 	mov	r7,r5
    cb0c:	0009883a 	mov	r4,zero
    cb10:	003fb106 	br	c9d8 <__alt_data_end+0xff00c9d8>

0000cb14 <__divsi3>:
    cb14:	20001b16 	blt	r4,zero,cb84 <__divsi3+0x70>
    cb18:	000f883a 	mov	r7,zero
    cb1c:	28001616 	blt	r5,zero,cb78 <__divsi3+0x64>
    cb20:	200d883a 	mov	r6,r4
    cb24:	29001a2e 	bgeu	r5,r4,cb90 <__divsi3+0x7c>
    cb28:	00800804 	movi	r2,32
    cb2c:	00c00044 	movi	r3,1
    cb30:	00000106 	br	cb38 <__divsi3+0x24>
    cb34:	10000d26 	beq	r2,zero,cb6c <__divsi3+0x58>
    cb38:	294b883a 	add	r5,r5,r5
    cb3c:	10bfffc4 	addi	r2,r2,-1
    cb40:	18c7883a 	add	r3,r3,r3
    cb44:	293ffb36 	bltu	r5,r4,cb34 <__alt_data_end+0xff00cb34>
    cb48:	0005883a 	mov	r2,zero
    cb4c:	18000726 	beq	r3,zero,cb6c <__divsi3+0x58>
    cb50:	0005883a 	mov	r2,zero
    cb54:	31400236 	bltu	r6,r5,cb60 <__divsi3+0x4c>
    cb58:	314dc83a 	sub	r6,r6,r5
    cb5c:	10c4b03a 	or	r2,r2,r3
    cb60:	1806d07a 	srli	r3,r3,1
    cb64:	280ad07a 	srli	r5,r5,1
    cb68:	183ffa1e 	bne	r3,zero,cb54 <__alt_data_end+0xff00cb54>
    cb6c:	38000126 	beq	r7,zero,cb74 <__divsi3+0x60>
    cb70:	0085c83a 	sub	r2,zero,r2
    cb74:	f800283a 	ret
    cb78:	014bc83a 	sub	r5,zero,r5
    cb7c:	39c0005c 	xori	r7,r7,1
    cb80:	003fe706 	br	cb20 <__alt_data_end+0xff00cb20>
    cb84:	0109c83a 	sub	r4,zero,r4
    cb88:	01c00044 	movi	r7,1
    cb8c:	003fe306 	br	cb1c <__alt_data_end+0xff00cb1c>
    cb90:	00c00044 	movi	r3,1
    cb94:	003fee06 	br	cb50 <__alt_data_end+0xff00cb50>

0000cb98 <__modsi3>:
    cb98:	20001716 	blt	r4,zero,cbf8 <__modsi3+0x60>
    cb9c:	000f883a 	mov	r7,zero
    cba0:	2005883a 	mov	r2,r4
    cba4:	28001216 	blt	r5,zero,cbf0 <__modsi3+0x58>
    cba8:	2900162e 	bgeu	r5,r4,cc04 <__modsi3+0x6c>
    cbac:	01800804 	movi	r6,32
    cbb0:	00c00044 	movi	r3,1
    cbb4:	00000106 	br	cbbc <__modsi3+0x24>
    cbb8:	30000a26 	beq	r6,zero,cbe4 <__modsi3+0x4c>
    cbbc:	294b883a 	add	r5,r5,r5
    cbc0:	31bfffc4 	addi	r6,r6,-1
    cbc4:	18c7883a 	add	r3,r3,r3
    cbc8:	293ffb36 	bltu	r5,r4,cbb8 <__alt_data_end+0xff00cbb8>
    cbcc:	18000526 	beq	r3,zero,cbe4 <__modsi3+0x4c>
    cbd0:	1806d07a 	srli	r3,r3,1
    cbd4:	11400136 	bltu	r2,r5,cbdc <__modsi3+0x44>
    cbd8:	1145c83a 	sub	r2,r2,r5
    cbdc:	280ad07a 	srli	r5,r5,1
    cbe0:	183ffb1e 	bne	r3,zero,cbd0 <__alt_data_end+0xff00cbd0>
    cbe4:	38000126 	beq	r7,zero,cbec <__modsi3+0x54>
    cbe8:	0085c83a 	sub	r2,zero,r2
    cbec:	f800283a 	ret
    cbf0:	014bc83a 	sub	r5,zero,r5
    cbf4:	003fec06 	br	cba8 <__alt_data_end+0xff00cba8>
    cbf8:	0109c83a 	sub	r4,zero,r4
    cbfc:	01c00044 	movi	r7,1
    cc00:	003fe706 	br	cba0 <__alt_data_end+0xff00cba0>
    cc04:	00c00044 	movi	r3,1
    cc08:	003ff106 	br	cbd0 <__alt_data_end+0xff00cbd0>

0000cc0c <__udivsi3>:
    cc0c:	200d883a 	mov	r6,r4
    cc10:	2900152e 	bgeu	r5,r4,cc68 <__udivsi3+0x5c>
    cc14:	28001416 	blt	r5,zero,cc68 <__udivsi3+0x5c>
    cc18:	00800804 	movi	r2,32
    cc1c:	00c00044 	movi	r3,1
    cc20:	00000206 	br	cc2c <__udivsi3+0x20>
    cc24:	10000e26 	beq	r2,zero,cc60 <__udivsi3+0x54>
    cc28:	28000516 	blt	r5,zero,cc40 <__udivsi3+0x34>
    cc2c:	294b883a 	add	r5,r5,r5
    cc30:	10bfffc4 	addi	r2,r2,-1
    cc34:	18c7883a 	add	r3,r3,r3
    cc38:	293ffa36 	bltu	r5,r4,cc24 <__alt_data_end+0xff00cc24>
    cc3c:	18000826 	beq	r3,zero,cc60 <__udivsi3+0x54>
    cc40:	0005883a 	mov	r2,zero
    cc44:	31400236 	bltu	r6,r5,cc50 <__udivsi3+0x44>
    cc48:	314dc83a 	sub	r6,r6,r5
    cc4c:	10c4b03a 	or	r2,r2,r3
    cc50:	1806d07a 	srli	r3,r3,1
    cc54:	280ad07a 	srli	r5,r5,1
    cc58:	183ffa1e 	bne	r3,zero,cc44 <__alt_data_end+0xff00cc44>
    cc5c:	f800283a 	ret
    cc60:	0005883a 	mov	r2,zero
    cc64:	f800283a 	ret
    cc68:	00c00044 	movi	r3,1
    cc6c:	003ff406 	br	cc40 <__alt_data_end+0xff00cc40>

0000cc70 <__umodsi3>:
    cc70:	2005883a 	mov	r2,r4
    cc74:	2900122e 	bgeu	r5,r4,ccc0 <__umodsi3+0x50>
    cc78:	28001116 	blt	r5,zero,ccc0 <__umodsi3+0x50>
    cc7c:	01800804 	movi	r6,32
    cc80:	00c00044 	movi	r3,1
    cc84:	00000206 	br	cc90 <__umodsi3+0x20>
    cc88:	30000c26 	beq	r6,zero,ccbc <__umodsi3+0x4c>
    cc8c:	28000516 	blt	r5,zero,cca4 <__umodsi3+0x34>
    cc90:	294b883a 	add	r5,r5,r5
    cc94:	31bfffc4 	addi	r6,r6,-1
    cc98:	18c7883a 	add	r3,r3,r3
    cc9c:	293ffa36 	bltu	r5,r4,cc88 <__alt_data_end+0xff00cc88>
    cca0:	18000626 	beq	r3,zero,ccbc <__umodsi3+0x4c>
    cca4:	1806d07a 	srli	r3,r3,1
    cca8:	11400136 	bltu	r2,r5,ccb0 <__umodsi3+0x40>
    ccac:	1145c83a 	sub	r2,r2,r5
    ccb0:	280ad07a 	srli	r5,r5,1
    ccb4:	183ffb1e 	bne	r3,zero,cca4 <__alt_data_end+0xff00cca4>
    ccb8:	f800283a 	ret
    ccbc:	f800283a 	ret
    ccc0:	00c00044 	movi	r3,1
    ccc4:	003ff706 	br	cca4 <__alt_data_end+0xff00cca4>

0000ccc8 <__adddf3>:
    ccc8:	02c00434 	movhi	r11,16
    cccc:	5affffc4 	addi	r11,r11,-1
    ccd0:	2806d7fa 	srli	r3,r5,31
    ccd4:	2ad4703a 	and	r10,r5,r11
    ccd8:	3ad2703a 	and	r9,r7,r11
    ccdc:	3804d53a 	srli	r2,r7,20
    cce0:	3018d77a 	srli	r12,r6,29
    cce4:	280ad53a 	srli	r5,r5,20
    cce8:	501490fa 	slli	r10,r10,3
    ccec:	2010d77a 	srli	r8,r4,29
    ccf0:	481290fa 	slli	r9,r9,3
    ccf4:	380ed7fa 	srli	r7,r7,31
    ccf8:	defffb04 	addi	sp,sp,-20
    ccfc:	dc800215 	stw	r18,8(sp)
    cd00:	dc400115 	stw	r17,4(sp)
    cd04:	dc000015 	stw	r16,0(sp)
    cd08:	dfc00415 	stw	ra,16(sp)
    cd0c:	dcc00315 	stw	r19,12(sp)
    cd10:	1c803fcc 	andi	r18,r3,255
    cd14:	2c01ffcc 	andi	r16,r5,2047
    cd18:	5210b03a 	or	r8,r10,r8
    cd1c:	202290fa 	slli	r17,r4,3
    cd20:	1081ffcc 	andi	r2,r2,2047
    cd24:	4b12b03a 	or	r9,r9,r12
    cd28:	300c90fa 	slli	r6,r6,3
    cd2c:	91c07526 	beq	r18,r7,cf04 <__adddf3+0x23c>
    cd30:	8087c83a 	sub	r3,r16,r2
    cd34:	00c0ab0e 	bge	zero,r3,cfe4 <__adddf3+0x31c>
    cd38:	10002a1e 	bne	r2,zero,cde4 <__adddf3+0x11c>
    cd3c:	4984b03a 	or	r2,r9,r6
    cd40:	1000961e 	bne	r2,zero,cf9c <__adddf3+0x2d4>
    cd44:	888001cc 	andi	r2,r17,7
    cd48:	10000726 	beq	r2,zero,cd68 <__adddf3+0xa0>
    cd4c:	888003cc 	andi	r2,r17,15
    cd50:	00c00104 	movi	r3,4
    cd54:	10c00426 	beq	r2,r3,cd68 <__adddf3+0xa0>
    cd58:	88c7883a 	add	r3,r17,r3
    cd5c:	1c63803a 	cmpltu	r17,r3,r17
    cd60:	4451883a 	add	r8,r8,r17
    cd64:	1823883a 	mov	r17,r3
    cd68:	4080202c 	andhi	r2,r8,128
    cd6c:	10005926 	beq	r2,zero,ced4 <__adddf3+0x20c>
    cd70:	84000044 	addi	r16,r16,1
    cd74:	0081ffc4 	movi	r2,2047
    cd78:	8080ba26 	beq	r16,r2,d064 <__adddf3+0x39c>
    cd7c:	00bfe034 	movhi	r2,65408
    cd80:	10bfffc4 	addi	r2,r2,-1
    cd84:	4090703a 	and	r8,r8,r2
    cd88:	4004977a 	slli	r2,r8,29
    cd8c:	4010927a 	slli	r8,r8,9
    cd90:	8822d0fa 	srli	r17,r17,3
    cd94:	8401ffcc 	andi	r16,r16,2047
    cd98:	4010d33a 	srli	r8,r8,12
    cd9c:	9007883a 	mov	r3,r18
    cda0:	1444b03a 	or	r2,r2,r17
    cda4:	8401ffcc 	andi	r16,r16,2047
    cda8:	8020953a 	slli	r16,r16,20
    cdac:	18c03fcc 	andi	r3,r3,255
    cdb0:	01000434 	movhi	r4,16
    cdb4:	213fffc4 	addi	r4,r4,-1
    cdb8:	180697fa 	slli	r3,r3,31
    cdbc:	4110703a 	and	r8,r8,r4
    cdc0:	4410b03a 	or	r8,r8,r16
    cdc4:	40c6b03a 	or	r3,r8,r3
    cdc8:	dfc00417 	ldw	ra,16(sp)
    cdcc:	dcc00317 	ldw	r19,12(sp)
    cdd0:	dc800217 	ldw	r18,8(sp)
    cdd4:	dc400117 	ldw	r17,4(sp)
    cdd8:	dc000017 	ldw	r16,0(sp)
    cddc:	dec00504 	addi	sp,sp,20
    cde0:	f800283a 	ret
    cde4:	0081ffc4 	movi	r2,2047
    cde8:	80bfd626 	beq	r16,r2,cd44 <__alt_data_end+0xff00cd44>
    cdec:	4a402034 	orhi	r9,r9,128
    cdf0:	00800e04 	movi	r2,56
    cdf4:	10c09f16 	blt	r2,r3,d074 <__adddf3+0x3ac>
    cdf8:	008007c4 	movi	r2,31
    cdfc:	10c0c216 	blt	r2,r3,d108 <__adddf3+0x440>
    ce00:	00800804 	movi	r2,32
    ce04:	10c5c83a 	sub	r2,r2,r3
    ce08:	488a983a 	sll	r5,r9,r2
    ce0c:	30c8d83a 	srl	r4,r6,r3
    ce10:	3084983a 	sll	r2,r6,r2
    ce14:	48c6d83a 	srl	r3,r9,r3
    ce18:	290cb03a 	or	r6,r5,r4
    ce1c:	1004c03a 	cmpne	r2,r2,zero
    ce20:	308cb03a 	or	r6,r6,r2
    ce24:	898dc83a 	sub	r6,r17,r6
    ce28:	89a3803a 	cmpltu	r17,r17,r6
    ce2c:	40d1c83a 	sub	r8,r8,r3
    ce30:	4451c83a 	sub	r8,r8,r17
    ce34:	3023883a 	mov	r17,r6
    ce38:	4080202c 	andhi	r2,r8,128
    ce3c:	10002326 	beq	r2,zero,cecc <__adddf3+0x204>
    ce40:	04c02034 	movhi	r19,128
    ce44:	9cffffc4 	addi	r19,r19,-1
    ce48:	44e6703a 	and	r19,r8,r19
    ce4c:	98007626 	beq	r19,zero,d028 <__adddf3+0x360>
    ce50:	9809883a 	mov	r4,r19
    ce54:	00029840 	call	2984 <__clzsi2>
    ce58:	10fffe04 	addi	r3,r2,-8
    ce5c:	010007c4 	movi	r4,31
    ce60:	20c07716 	blt	r4,r3,d040 <__adddf3+0x378>
    ce64:	00800804 	movi	r2,32
    ce68:	10c5c83a 	sub	r2,r2,r3
    ce6c:	8884d83a 	srl	r2,r17,r2
    ce70:	98d0983a 	sll	r8,r19,r3
    ce74:	88e2983a 	sll	r17,r17,r3
    ce78:	1204b03a 	or	r2,r2,r8
    ce7c:	1c007416 	blt	r3,r16,d050 <__adddf3+0x388>
    ce80:	1c21c83a 	sub	r16,r3,r16
    ce84:	82000044 	addi	r8,r16,1
    ce88:	00c007c4 	movi	r3,31
    ce8c:	1a009116 	blt	r3,r8,d0d4 <__adddf3+0x40c>
    ce90:	00c00804 	movi	r3,32
    ce94:	1a07c83a 	sub	r3,r3,r8
    ce98:	8a08d83a 	srl	r4,r17,r8
    ce9c:	88e2983a 	sll	r17,r17,r3
    cea0:	10c6983a 	sll	r3,r2,r3
    cea4:	1210d83a 	srl	r8,r2,r8
    cea8:	8804c03a 	cmpne	r2,r17,zero
    ceac:	1906b03a 	or	r3,r3,r4
    ceb0:	18a2b03a 	or	r17,r3,r2
    ceb4:	0021883a 	mov	r16,zero
    ceb8:	003fa206 	br	cd44 <__alt_data_end+0xff00cd44>
    cebc:	1890b03a 	or	r8,r3,r2
    cec0:	40017d26 	beq	r8,zero,d4b8 <__adddf3+0x7f0>
    cec4:	1011883a 	mov	r8,r2
    cec8:	1823883a 	mov	r17,r3
    cecc:	888001cc 	andi	r2,r17,7
    ced0:	103f9e1e 	bne	r2,zero,cd4c <__alt_data_end+0xff00cd4c>
    ced4:	4004977a 	slli	r2,r8,29
    ced8:	8822d0fa 	srli	r17,r17,3
    cedc:	4010d0fa 	srli	r8,r8,3
    cee0:	9007883a 	mov	r3,r18
    cee4:	1444b03a 	or	r2,r2,r17
    cee8:	0101ffc4 	movi	r4,2047
    ceec:	81002426 	beq	r16,r4,cf80 <__adddf3+0x2b8>
    cef0:	8120703a 	and	r16,r16,r4
    cef4:	01000434 	movhi	r4,16
    cef8:	213fffc4 	addi	r4,r4,-1
    cefc:	4110703a 	and	r8,r8,r4
    cf00:	003fa806 	br	cda4 <__alt_data_end+0xff00cda4>
    cf04:	8089c83a 	sub	r4,r16,r2
    cf08:	01005e0e 	bge	zero,r4,d084 <__adddf3+0x3bc>
    cf0c:	10002b26 	beq	r2,zero,cfbc <__adddf3+0x2f4>
    cf10:	0081ffc4 	movi	r2,2047
    cf14:	80bf8b26 	beq	r16,r2,cd44 <__alt_data_end+0xff00cd44>
    cf18:	4a402034 	orhi	r9,r9,128
    cf1c:	00800e04 	movi	r2,56
    cf20:	1100a40e 	bge	r2,r4,d1b4 <__adddf3+0x4ec>
    cf24:	498cb03a 	or	r6,r9,r6
    cf28:	300ac03a 	cmpne	r5,r6,zero
    cf2c:	0013883a 	mov	r9,zero
    cf30:	2c4b883a 	add	r5,r5,r17
    cf34:	2c63803a 	cmpltu	r17,r5,r17
    cf38:	4a11883a 	add	r8,r9,r8
    cf3c:	8a11883a 	add	r8,r17,r8
    cf40:	2823883a 	mov	r17,r5
    cf44:	4080202c 	andhi	r2,r8,128
    cf48:	103fe026 	beq	r2,zero,cecc <__alt_data_end+0xff00cecc>
    cf4c:	84000044 	addi	r16,r16,1
    cf50:	0081ffc4 	movi	r2,2047
    cf54:	8080d226 	beq	r16,r2,d2a0 <__adddf3+0x5d8>
    cf58:	00bfe034 	movhi	r2,65408
    cf5c:	10bfffc4 	addi	r2,r2,-1
    cf60:	4090703a 	and	r8,r8,r2
    cf64:	880ad07a 	srli	r5,r17,1
    cf68:	400897fa 	slli	r4,r8,31
    cf6c:	88c0004c 	andi	r3,r17,1
    cf70:	28e2b03a 	or	r17,r5,r3
    cf74:	4010d07a 	srli	r8,r8,1
    cf78:	2462b03a 	or	r17,r4,r17
    cf7c:	003f7106 	br	cd44 <__alt_data_end+0xff00cd44>
    cf80:	4088b03a 	or	r4,r8,r2
    cf84:	20014526 	beq	r4,zero,d49c <__adddf3+0x7d4>
    cf88:	01000434 	movhi	r4,16
    cf8c:	42000234 	orhi	r8,r8,8
    cf90:	213fffc4 	addi	r4,r4,-1
    cf94:	4110703a 	and	r8,r8,r4
    cf98:	003f8206 	br	cda4 <__alt_data_end+0xff00cda4>
    cf9c:	18ffffc4 	addi	r3,r3,-1
    cfa0:	1800491e 	bne	r3,zero,d0c8 <__adddf3+0x400>
    cfa4:	898bc83a 	sub	r5,r17,r6
    cfa8:	8963803a 	cmpltu	r17,r17,r5
    cfac:	4251c83a 	sub	r8,r8,r9
    cfb0:	4451c83a 	sub	r8,r8,r17
    cfb4:	2823883a 	mov	r17,r5
    cfb8:	003f9f06 	br	ce38 <__alt_data_end+0xff00ce38>
    cfbc:	4984b03a 	or	r2,r9,r6
    cfc0:	103f6026 	beq	r2,zero,cd44 <__alt_data_end+0xff00cd44>
    cfc4:	213fffc4 	addi	r4,r4,-1
    cfc8:	2000931e 	bne	r4,zero,d218 <__adddf3+0x550>
    cfcc:	898d883a 	add	r6,r17,r6
    cfd0:	3463803a 	cmpltu	r17,r6,r17
    cfd4:	4251883a 	add	r8,r8,r9
    cfd8:	8a11883a 	add	r8,r17,r8
    cfdc:	3023883a 	mov	r17,r6
    cfe0:	003fd806 	br	cf44 <__alt_data_end+0xff00cf44>
    cfe4:	1800541e 	bne	r3,zero,d138 <__adddf3+0x470>
    cfe8:	80800044 	addi	r2,r16,1
    cfec:	1081ffcc 	andi	r2,r2,2047
    cff0:	00c00044 	movi	r3,1
    cff4:	1880a00e 	bge	r3,r2,d278 <__adddf3+0x5b0>
    cff8:	8989c83a 	sub	r4,r17,r6
    cffc:	8905803a 	cmpltu	r2,r17,r4
    d000:	4267c83a 	sub	r19,r8,r9
    d004:	98a7c83a 	sub	r19,r19,r2
    d008:	9880202c 	andhi	r2,r19,128
    d00c:	10006326 	beq	r2,zero,d19c <__adddf3+0x4d4>
    d010:	3463c83a 	sub	r17,r6,r17
    d014:	4a07c83a 	sub	r3,r9,r8
    d018:	344d803a 	cmpltu	r6,r6,r17
    d01c:	19a7c83a 	sub	r19,r3,r6
    d020:	3825883a 	mov	r18,r7
    d024:	983f8a1e 	bne	r19,zero,ce50 <__alt_data_end+0xff00ce50>
    d028:	8809883a 	mov	r4,r17
    d02c:	00029840 	call	2984 <__clzsi2>
    d030:	10800804 	addi	r2,r2,32
    d034:	10fffe04 	addi	r3,r2,-8
    d038:	010007c4 	movi	r4,31
    d03c:	20ff890e 	bge	r4,r3,ce64 <__alt_data_end+0xff00ce64>
    d040:	10bff604 	addi	r2,r2,-40
    d044:	8884983a 	sll	r2,r17,r2
    d048:	0023883a 	mov	r17,zero
    d04c:	1c3f8c0e 	bge	r3,r16,ce80 <__alt_data_end+0xff00ce80>
    d050:	023fe034 	movhi	r8,65408
    d054:	423fffc4 	addi	r8,r8,-1
    d058:	80e1c83a 	sub	r16,r16,r3
    d05c:	1210703a 	and	r8,r2,r8
    d060:	003f3806 	br	cd44 <__alt_data_end+0xff00cd44>
    d064:	9007883a 	mov	r3,r18
    d068:	0011883a 	mov	r8,zero
    d06c:	0005883a 	mov	r2,zero
    d070:	003f4c06 	br	cda4 <__alt_data_end+0xff00cda4>
    d074:	498cb03a 	or	r6,r9,r6
    d078:	300cc03a 	cmpne	r6,r6,zero
    d07c:	0007883a 	mov	r3,zero
    d080:	003f6806 	br	ce24 <__alt_data_end+0xff00ce24>
    d084:	20009c1e 	bne	r4,zero,d2f8 <__adddf3+0x630>
    d088:	80800044 	addi	r2,r16,1
    d08c:	1141ffcc 	andi	r5,r2,2047
    d090:	01000044 	movi	r4,1
    d094:	2140670e 	bge	r4,r5,d234 <__adddf3+0x56c>
    d098:	0101ffc4 	movi	r4,2047
    d09c:	11007f26 	beq	r2,r4,d29c <__adddf3+0x5d4>
    d0a0:	898d883a 	add	r6,r17,r6
    d0a4:	4247883a 	add	r3,r8,r9
    d0a8:	3451803a 	cmpltu	r8,r6,r17
    d0ac:	40d1883a 	add	r8,r8,r3
    d0b0:	402297fa 	slli	r17,r8,31
    d0b4:	300cd07a 	srli	r6,r6,1
    d0b8:	4010d07a 	srli	r8,r8,1
    d0bc:	1021883a 	mov	r16,r2
    d0c0:	89a2b03a 	or	r17,r17,r6
    d0c4:	003f1f06 	br	cd44 <__alt_data_end+0xff00cd44>
    d0c8:	0081ffc4 	movi	r2,2047
    d0cc:	80bf481e 	bne	r16,r2,cdf0 <__alt_data_end+0xff00cdf0>
    d0d0:	003f1c06 	br	cd44 <__alt_data_end+0xff00cd44>
    d0d4:	843ff844 	addi	r16,r16,-31
    d0d8:	01000804 	movi	r4,32
    d0dc:	1406d83a 	srl	r3,r2,r16
    d0e0:	41005026 	beq	r8,r4,d224 <__adddf3+0x55c>
    d0e4:	01001004 	movi	r4,64
    d0e8:	2211c83a 	sub	r8,r4,r8
    d0ec:	1204983a 	sll	r2,r2,r8
    d0f0:	88a2b03a 	or	r17,r17,r2
    d0f4:	8822c03a 	cmpne	r17,r17,zero
    d0f8:	1c62b03a 	or	r17,r3,r17
    d0fc:	0011883a 	mov	r8,zero
    d100:	0021883a 	mov	r16,zero
    d104:	003f7106 	br	cecc <__alt_data_end+0xff00cecc>
    d108:	193ff804 	addi	r4,r3,-32
    d10c:	00800804 	movi	r2,32
    d110:	4908d83a 	srl	r4,r9,r4
    d114:	18804526 	beq	r3,r2,d22c <__adddf3+0x564>
    d118:	00801004 	movi	r2,64
    d11c:	10c5c83a 	sub	r2,r2,r3
    d120:	4886983a 	sll	r3,r9,r2
    d124:	198cb03a 	or	r6,r3,r6
    d128:	300cc03a 	cmpne	r6,r6,zero
    d12c:	218cb03a 	or	r6,r4,r6
    d130:	0007883a 	mov	r3,zero
    d134:	003f3b06 	br	ce24 <__alt_data_end+0xff00ce24>
    d138:	80002a26 	beq	r16,zero,d1e4 <__adddf3+0x51c>
    d13c:	0101ffc4 	movi	r4,2047
    d140:	11006826 	beq	r2,r4,d2e4 <__adddf3+0x61c>
    d144:	00c7c83a 	sub	r3,zero,r3
    d148:	42002034 	orhi	r8,r8,128
    d14c:	01000e04 	movi	r4,56
    d150:	20c07c16 	blt	r4,r3,d344 <__adddf3+0x67c>
    d154:	010007c4 	movi	r4,31
    d158:	20c0da16 	blt	r4,r3,d4c4 <__adddf3+0x7fc>
    d15c:	01000804 	movi	r4,32
    d160:	20c9c83a 	sub	r4,r4,r3
    d164:	4114983a 	sll	r10,r8,r4
    d168:	88cad83a 	srl	r5,r17,r3
    d16c:	8908983a 	sll	r4,r17,r4
    d170:	40c6d83a 	srl	r3,r8,r3
    d174:	5162b03a 	or	r17,r10,r5
    d178:	2008c03a 	cmpne	r4,r4,zero
    d17c:	8922b03a 	or	r17,r17,r4
    d180:	3463c83a 	sub	r17,r6,r17
    d184:	48c7c83a 	sub	r3,r9,r3
    d188:	344d803a 	cmpltu	r6,r6,r17
    d18c:	1991c83a 	sub	r8,r3,r6
    d190:	1021883a 	mov	r16,r2
    d194:	3825883a 	mov	r18,r7
    d198:	003f2706 	br	ce38 <__alt_data_end+0xff00ce38>
    d19c:	24d0b03a 	or	r8,r4,r19
    d1a0:	40001b1e 	bne	r8,zero,d210 <__adddf3+0x548>
    d1a4:	0005883a 	mov	r2,zero
    d1a8:	0007883a 	mov	r3,zero
    d1ac:	0021883a 	mov	r16,zero
    d1b0:	003f4d06 	br	cee8 <__alt_data_end+0xff00cee8>
    d1b4:	008007c4 	movi	r2,31
    d1b8:	11003c16 	blt	r2,r4,d2ac <__adddf3+0x5e4>
    d1bc:	00800804 	movi	r2,32
    d1c0:	1105c83a 	sub	r2,r2,r4
    d1c4:	488e983a 	sll	r7,r9,r2
    d1c8:	310ad83a 	srl	r5,r6,r4
    d1cc:	3084983a 	sll	r2,r6,r2
    d1d0:	4912d83a 	srl	r9,r9,r4
    d1d4:	394ab03a 	or	r5,r7,r5
    d1d8:	1004c03a 	cmpne	r2,r2,zero
    d1dc:	288ab03a 	or	r5,r5,r2
    d1e0:	003f5306 	br	cf30 <__alt_data_end+0xff00cf30>
    d1e4:	4448b03a 	or	r4,r8,r17
    d1e8:	20003e26 	beq	r4,zero,d2e4 <__adddf3+0x61c>
    d1ec:	00c6303a 	nor	r3,zero,r3
    d1f0:	18003a1e 	bne	r3,zero,d2dc <__adddf3+0x614>
    d1f4:	3463c83a 	sub	r17,r6,r17
    d1f8:	4a07c83a 	sub	r3,r9,r8
    d1fc:	344d803a 	cmpltu	r6,r6,r17
    d200:	1991c83a 	sub	r8,r3,r6
    d204:	1021883a 	mov	r16,r2
    d208:	3825883a 	mov	r18,r7
    d20c:	003f0a06 	br	ce38 <__alt_data_end+0xff00ce38>
    d210:	2023883a 	mov	r17,r4
    d214:	003f0d06 	br	ce4c <__alt_data_end+0xff00ce4c>
    d218:	0081ffc4 	movi	r2,2047
    d21c:	80bf3f1e 	bne	r16,r2,cf1c <__alt_data_end+0xff00cf1c>
    d220:	003ec806 	br	cd44 <__alt_data_end+0xff00cd44>
    d224:	0005883a 	mov	r2,zero
    d228:	003fb106 	br	d0f0 <__alt_data_end+0xff00d0f0>
    d22c:	0007883a 	mov	r3,zero
    d230:	003fbc06 	br	d124 <__alt_data_end+0xff00d124>
    d234:	4444b03a 	or	r2,r8,r17
    d238:	8000871e 	bne	r16,zero,d458 <__adddf3+0x790>
    d23c:	1000ba26 	beq	r2,zero,d528 <__adddf3+0x860>
    d240:	4984b03a 	or	r2,r9,r6
    d244:	103ebf26 	beq	r2,zero,cd44 <__alt_data_end+0xff00cd44>
    d248:	8985883a 	add	r2,r17,r6
    d24c:	4247883a 	add	r3,r8,r9
    d250:	1451803a 	cmpltu	r8,r2,r17
    d254:	40d1883a 	add	r8,r8,r3
    d258:	40c0202c 	andhi	r3,r8,128
    d25c:	1023883a 	mov	r17,r2
    d260:	183f1a26 	beq	r3,zero,cecc <__alt_data_end+0xff00cecc>
    d264:	00bfe034 	movhi	r2,65408
    d268:	10bfffc4 	addi	r2,r2,-1
    d26c:	2021883a 	mov	r16,r4
    d270:	4090703a 	and	r8,r8,r2
    d274:	003eb306 	br	cd44 <__alt_data_end+0xff00cd44>
    d278:	4444b03a 	or	r2,r8,r17
    d27c:	8000291e 	bne	r16,zero,d324 <__adddf3+0x65c>
    d280:	10004b1e 	bne	r2,zero,d3b0 <__adddf3+0x6e8>
    d284:	4990b03a 	or	r8,r9,r6
    d288:	40008b26 	beq	r8,zero,d4b8 <__adddf3+0x7f0>
    d28c:	4811883a 	mov	r8,r9
    d290:	3023883a 	mov	r17,r6
    d294:	3825883a 	mov	r18,r7
    d298:	003eaa06 	br	cd44 <__alt_data_end+0xff00cd44>
    d29c:	1021883a 	mov	r16,r2
    d2a0:	0011883a 	mov	r8,zero
    d2a4:	0005883a 	mov	r2,zero
    d2a8:	003f0f06 	br	cee8 <__alt_data_end+0xff00cee8>
    d2ac:	217ff804 	addi	r5,r4,-32
    d2b0:	00800804 	movi	r2,32
    d2b4:	494ad83a 	srl	r5,r9,r5
    d2b8:	20807d26 	beq	r4,r2,d4b0 <__adddf3+0x7e8>
    d2bc:	00801004 	movi	r2,64
    d2c0:	1109c83a 	sub	r4,r2,r4
    d2c4:	4912983a 	sll	r9,r9,r4
    d2c8:	498cb03a 	or	r6,r9,r6
    d2cc:	300cc03a 	cmpne	r6,r6,zero
    d2d0:	298ab03a 	or	r5,r5,r6
    d2d4:	0013883a 	mov	r9,zero
    d2d8:	003f1506 	br	cf30 <__alt_data_end+0xff00cf30>
    d2dc:	0101ffc4 	movi	r4,2047
    d2e0:	113f9a1e 	bne	r2,r4,d14c <__alt_data_end+0xff00d14c>
    d2e4:	4811883a 	mov	r8,r9
    d2e8:	3023883a 	mov	r17,r6
    d2ec:	1021883a 	mov	r16,r2
    d2f0:	3825883a 	mov	r18,r7
    d2f4:	003e9306 	br	cd44 <__alt_data_end+0xff00cd44>
    d2f8:	8000161e 	bne	r16,zero,d354 <__adddf3+0x68c>
    d2fc:	444ab03a 	or	r5,r8,r17
    d300:	28005126 	beq	r5,zero,d448 <__adddf3+0x780>
    d304:	0108303a 	nor	r4,zero,r4
    d308:	20004d1e 	bne	r4,zero,d440 <__adddf3+0x778>
    d30c:	89a3883a 	add	r17,r17,r6
    d310:	4253883a 	add	r9,r8,r9
    d314:	898d803a 	cmpltu	r6,r17,r6
    d318:	3251883a 	add	r8,r6,r9
    d31c:	1021883a 	mov	r16,r2
    d320:	003f0806 	br	cf44 <__alt_data_end+0xff00cf44>
    d324:	1000301e 	bne	r2,zero,d3e8 <__adddf3+0x720>
    d328:	4984b03a 	or	r2,r9,r6
    d32c:	10007126 	beq	r2,zero,d4f4 <__adddf3+0x82c>
    d330:	4811883a 	mov	r8,r9
    d334:	3023883a 	mov	r17,r6
    d338:	3825883a 	mov	r18,r7
    d33c:	0401ffc4 	movi	r16,2047
    d340:	003e8006 	br	cd44 <__alt_data_end+0xff00cd44>
    d344:	4462b03a 	or	r17,r8,r17
    d348:	8822c03a 	cmpne	r17,r17,zero
    d34c:	0007883a 	mov	r3,zero
    d350:	003f8b06 	br	d180 <__alt_data_end+0xff00d180>
    d354:	0141ffc4 	movi	r5,2047
    d358:	11403b26 	beq	r2,r5,d448 <__adddf3+0x780>
    d35c:	0109c83a 	sub	r4,zero,r4
    d360:	42002034 	orhi	r8,r8,128
    d364:	01400e04 	movi	r5,56
    d368:	29006716 	blt	r5,r4,d508 <__adddf3+0x840>
    d36c:	014007c4 	movi	r5,31
    d370:	29007016 	blt	r5,r4,d534 <__adddf3+0x86c>
    d374:	01400804 	movi	r5,32
    d378:	290bc83a 	sub	r5,r5,r4
    d37c:	4154983a 	sll	r10,r8,r5
    d380:	890ed83a 	srl	r7,r17,r4
    d384:	894a983a 	sll	r5,r17,r5
    d388:	4108d83a 	srl	r4,r8,r4
    d38c:	51e2b03a 	or	r17,r10,r7
    d390:	280ac03a 	cmpne	r5,r5,zero
    d394:	8962b03a 	or	r17,r17,r5
    d398:	89a3883a 	add	r17,r17,r6
    d39c:	2253883a 	add	r9,r4,r9
    d3a0:	898d803a 	cmpltu	r6,r17,r6
    d3a4:	3251883a 	add	r8,r6,r9
    d3a8:	1021883a 	mov	r16,r2
    d3ac:	003ee506 	br	cf44 <__alt_data_end+0xff00cf44>
    d3b0:	4984b03a 	or	r2,r9,r6
    d3b4:	103e6326 	beq	r2,zero,cd44 <__alt_data_end+0xff00cd44>
    d3b8:	8987c83a 	sub	r3,r17,r6
    d3bc:	88c9803a 	cmpltu	r4,r17,r3
    d3c0:	4245c83a 	sub	r2,r8,r9
    d3c4:	1105c83a 	sub	r2,r2,r4
    d3c8:	1100202c 	andhi	r4,r2,128
    d3cc:	203ebb26 	beq	r4,zero,cebc <__alt_data_end+0xff00cebc>
    d3d0:	3463c83a 	sub	r17,r6,r17
    d3d4:	4a07c83a 	sub	r3,r9,r8
    d3d8:	344d803a 	cmpltu	r6,r6,r17
    d3dc:	1991c83a 	sub	r8,r3,r6
    d3e0:	3825883a 	mov	r18,r7
    d3e4:	003e5706 	br	cd44 <__alt_data_end+0xff00cd44>
    d3e8:	4984b03a 	or	r2,r9,r6
    d3ec:	10002e26 	beq	r2,zero,d4a8 <__adddf3+0x7e0>
    d3f0:	4004d0fa 	srli	r2,r8,3
    d3f4:	8822d0fa 	srli	r17,r17,3
    d3f8:	4010977a 	slli	r8,r8,29
    d3fc:	10c0022c 	andhi	r3,r2,8
    d400:	4462b03a 	or	r17,r8,r17
    d404:	18000826 	beq	r3,zero,d428 <__adddf3+0x760>
    d408:	4808d0fa 	srli	r4,r9,3
    d40c:	20c0022c 	andhi	r3,r4,8
    d410:	1800051e 	bne	r3,zero,d428 <__adddf3+0x760>
    d414:	300cd0fa 	srli	r6,r6,3
    d418:	4806977a 	slli	r3,r9,29
    d41c:	2005883a 	mov	r2,r4
    d420:	3825883a 	mov	r18,r7
    d424:	19a2b03a 	or	r17,r3,r6
    d428:	8810d77a 	srli	r8,r17,29
    d42c:	100490fa 	slli	r2,r2,3
    d430:	882290fa 	slli	r17,r17,3
    d434:	0401ffc4 	movi	r16,2047
    d438:	4090b03a 	or	r8,r8,r2
    d43c:	003e4106 	br	cd44 <__alt_data_end+0xff00cd44>
    d440:	0141ffc4 	movi	r5,2047
    d444:	117fc71e 	bne	r2,r5,d364 <__alt_data_end+0xff00d364>
    d448:	4811883a 	mov	r8,r9
    d44c:	3023883a 	mov	r17,r6
    d450:	1021883a 	mov	r16,r2
    d454:	003e3b06 	br	cd44 <__alt_data_end+0xff00cd44>
    d458:	10002f26 	beq	r2,zero,d518 <__adddf3+0x850>
    d45c:	4984b03a 	or	r2,r9,r6
    d460:	10001126 	beq	r2,zero,d4a8 <__adddf3+0x7e0>
    d464:	4004d0fa 	srli	r2,r8,3
    d468:	8822d0fa 	srli	r17,r17,3
    d46c:	4010977a 	slli	r8,r8,29
    d470:	10c0022c 	andhi	r3,r2,8
    d474:	4462b03a 	or	r17,r8,r17
    d478:	183feb26 	beq	r3,zero,d428 <__alt_data_end+0xff00d428>
    d47c:	4808d0fa 	srli	r4,r9,3
    d480:	20c0022c 	andhi	r3,r4,8
    d484:	183fe81e 	bne	r3,zero,d428 <__alt_data_end+0xff00d428>
    d488:	300cd0fa 	srli	r6,r6,3
    d48c:	4806977a 	slli	r3,r9,29
    d490:	2005883a 	mov	r2,r4
    d494:	19a2b03a 	or	r17,r3,r6
    d498:	003fe306 	br	d428 <__alt_data_end+0xff00d428>
    d49c:	0011883a 	mov	r8,zero
    d4a0:	0005883a 	mov	r2,zero
    d4a4:	003e3f06 	br	cda4 <__alt_data_end+0xff00cda4>
    d4a8:	0401ffc4 	movi	r16,2047
    d4ac:	003e2506 	br	cd44 <__alt_data_end+0xff00cd44>
    d4b0:	0013883a 	mov	r9,zero
    d4b4:	003f8406 	br	d2c8 <__alt_data_end+0xff00d2c8>
    d4b8:	0005883a 	mov	r2,zero
    d4bc:	0007883a 	mov	r3,zero
    d4c0:	003e8906 	br	cee8 <__alt_data_end+0xff00cee8>
    d4c4:	197ff804 	addi	r5,r3,-32
    d4c8:	01000804 	movi	r4,32
    d4cc:	414ad83a 	srl	r5,r8,r5
    d4d0:	19002426 	beq	r3,r4,d564 <__adddf3+0x89c>
    d4d4:	01001004 	movi	r4,64
    d4d8:	20c7c83a 	sub	r3,r4,r3
    d4dc:	40c6983a 	sll	r3,r8,r3
    d4e0:	1c46b03a 	or	r3,r3,r17
    d4e4:	1806c03a 	cmpne	r3,r3,zero
    d4e8:	28e2b03a 	or	r17,r5,r3
    d4ec:	0007883a 	mov	r3,zero
    d4f0:	003f2306 	br	d180 <__alt_data_end+0xff00d180>
    d4f4:	0007883a 	mov	r3,zero
    d4f8:	5811883a 	mov	r8,r11
    d4fc:	00bfffc4 	movi	r2,-1
    d500:	0401ffc4 	movi	r16,2047
    d504:	003e7806 	br	cee8 <__alt_data_end+0xff00cee8>
    d508:	4462b03a 	or	r17,r8,r17
    d50c:	8822c03a 	cmpne	r17,r17,zero
    d510:	0009883a 	mov	r4,zero
    d514:	003fa006 	br	d398 <__alt_data_end+0xff00d398>
    d518:	4811883a 	mov	r8,r9
    d51c:	3023883a 	mov	r17,r6
    d520:	0401ffc4 	movi	r16,2047
    d524:	003e0706 	br	cd44 <__alt_data_end+0xff00cd44>
    d528:	4811883a 	mov	r8,r9
    d52c:	3023883a 	mov	r17,r6
    d530:	003e0406 	br	cd44 <__alt_data_end+0xff00cd44>
    d534:	21fff804 	addi	r7,r4,-32
    d538:	01400804 	movi	r5,32
    d53c:	41ced83a 	srl	r7,r8,r7
    d540:	21400a26 	beq	r4,r5,d56c <__adddf3+0x8a4>
    d544:	01401004 	movi	r5,64
    d548:	2909c83a 	sub	r4,r5,r4
    d54c:	4108983a 	sll	r4,r8,r4
    d550:	2448b03a 	or	r4,r4,r17
    d554:	2008c03a 	cmpne	r4,r4,zero
    d558:	3922b03a 	or	r17,r7,r4
    d55c:	0009883a 	mov	r4,zero
    d560:	003f8d06 	br	d398 <__alt_data_end+0xff00d398>
    d564:	0007883a 	mov	r3,zero
    d568:	003fdd06 	br	d4e0 <__alt_data_end+0xff00d4e0>
    d56c:	0009883a 	mov	r4,zero
    d570:	003ff706 	br	d550 <__alt_data_end+0xff00d550>

0000d574 <__divdf3>:
    d574:	defff204 	addi	sp,sp,-56
    d578:	dd400915 	stw	r21,36(sp)
    d57c:	282ad53a 	srli	r21,r5,20
    d580:	dd000815 	stw	r20,32(sp)
    d584:	2828d7fa 	srli	r20,r5,31
    d588:	dc000415 	stw	r16,16(sp)
    d58c:	04000434 	movhi	r16,16
    d590:	df000c15 	stw	fp,48(sp)
    d594:	843fffc4 	addi	r16,r16,-1
    d598:	dfc00d15 	stw	ra,52(sp)
    d59c:	ddc00b15 	stw	r23,44(sp)
    d5a0:	dd800a15 	stw	r22,40(sp)
    d5a4:	dcc00715 	stw	r19,28(sp)
    d5a8:	dc800615 	stw	r18,24(sp)
    d5ac:	dc400515 	stw	r17,20(sp)
    d5b0:	ad41ffcc 	andi	r21,r21,2047
    d5b4:	2c20703a 	and	r16,r5,r16
    d5b8:	a7003fcc 	andi	fp,r20,255
    d5bc:	a8006126 	beq	r21,zero,d744 <__divdf3+0x1d0>
    d5c0:	0081ffc4 	movi	r2,2047
    d5c4:	2025883a 	mov	r18,r4
    d5c8:	a8803726 	beq	r21,r2,d6a8 <__divdf3+0x134>
    d5cc:	80800434 	orhi	r2,r16,16
    d5d0:	100490fa 	slli	r2,r2,3
    d5d4:	2020d77a 	srli	r16,r4,29
    d5d8:	202490fa 	slli	r18,r4,3
    d5dc:	ad7f0044 	addi	r21,r21,-1023
    d5e0:	80a0b03a 	or	r16,r16,r2
    d5e4:	0027883a 	mov	r19,zero
    d5e8:	0013883a 	mov	r9,zero
    d5ec:	3804d53a 	srli	r2,r7,20
    d5f0:	382cd7fa 	srli	r22,r7,31
    d5f4:	04400434 	movhi	r17,16
    d5f8:	8c7fffc4 	addi	r17,r17,-1
    d5fc:	1081ffcc 	andi	r2,r2,2047
    d600:	3011883a 	mov	r8,r6
    d604:	3c62703a 	and	r17,r7,r17
    d608:	b5c03fcc 	andi	r23,r22,255
    d60c:	10006c26 	beq	r2,zero,d7c0 <__divdf3+0x24c>
    d610:	00c1ffc4 	movi	r3,2047
    d614:	10c06426 	beq	r2,r3,d7a8 <__divdf3+0x234>
    d618:	88c00434 	orhi	r3,r17,16
    d61c:	180690fa 	slli	r3,r3,3
    d620:	3022d77a 	srli	r17,r6,29
    d624:	301090fa 	slli	r8,r6,3
    d628:	10bf0044 	addi	r2,r2,-1023
    d62c:	88e2b03a 	or	r17,r17,r3
    d630:	000f883a 	mov	r7,zero
    d634:	a58cf03a 	xor	r6,r20,r22
    d638:	3cc8b03a 	or	r4,r7,r19
    d63c:	a8abc83a 	sub	r21,r21,r2
    d640:	008003c4 	movi	r2,15
    d644:	3007883a 	mov	r3,r6
    d648:	34c03fcc 	andi	r19,r6,255
    d64c:	11009036 	bltu	r2,r4,d890 <__divdf3+0x31c>
    d650:	200890ba 	slli	r4,r4,2
    d654:	00800074 	movhi	r2,1
    d658:	10b59a04 	addi	r2,r2,-10648
    d65c:	2089883a 	add	r4,r4,r2
    d660:	20800017 	ldw	r2,0(r4)
    d664:	1000683a 	jmp	r2
    d668:	0000d890 	cmplti	zero,zero,866
    d66c:	0000d6e0 	cmpeqi	zero,zero,859
    d670:	0000d880 	call	d88 <init_LCD+0x350>
    d674:	0000d6d4 	movui	zero,859
    d678:	0000d880 	call	d88 <init_LCD+0x350>
    d67c:	0000d854 	movui	zero,865
    d680:	0000d880 	call	d88 <init_LCD+0x350>
    d684:	0000d6d4 	movui	zero,859
    d688:	0000d6e0 	cmpeqi	zero,zero,859
    d68c:	0000d6e0 	cmpeqi	zero,zero,859
    d690:	0000d854 	movui	zero,865
    d694:	0000d6d4 	movui	zero,859
    d698:	0000d6c4 	movi	zero,859
    d69c:	0000d6c4 	movi	zero,859
    d6a0:	0000d6c4 	movi	zero,859
    d6a4:	0000db74 	movhi	zero,877
    d6a8:	2404b03a 	or	r2,r4,r16
    d6ac:	1000661e 	bne	r2,zero,d848 <__divdf3+0x2d4>
    d6b0:	04c00204 	movi	r19,8
    d6b4:	0021883a 	mov	r16,zero
    d6b8:	0025883a 	mov	r18,zero
    d6bc:	02400084 	movi	r9,2
    d6c0:	003fca06 	br	d5ec <__alt_data_end+0xff00d5ec>
    d6c4:	8023883a 	mov	r17,r16
    d6c8:	9011883a 	mov	r8,r18
    d6cc:	e02f883a 	mov	r23,fp
    d6d0:	480f883a 	mov	r7,r9
    d6d4:	00800084 	movi	r2,2
    d6d8:	3881311e 	bne	r7,r2,dba0 <__divdf3+0x62c>
    d6dc:	b827883a 	mov	r19,r23
    d6e0:	98c0004c 	andi	r3,r19,1
    d6e4:	0081ffc4 	movi	r2,2047
    d6e8:	000b883a 	mov	r5,zero
    d6ec:	0025883a 	mov	r18,zero
    d6f0:	1004953a 	slli	r2,r2,20
    d6f4:	18c03fcc 	andi	r3,r3,255
    d6f8:	04400434 	movhi	r17,16
    d6fc:	8c7fffc4 	addi	r17,r17,-1
    d700:	180697fa 	slli	r3,r3,31
    d704:	2c4a703a 	and	r5,r5,r17
    d708:	288ab03a 	or	r5,r5,r2
    d70c:	28c6b03a 	or	r3,r5,r3
    d710:	9005883a 	mov	r2,r18
    d714:	dfc00d17 	ldw	ra,52(sp)
    d718:	df000c17 	ldw	fp,48(sp)
    d71c:	ddc00b17 	ldw	r23,44(sp)
    d720:	dd800a17 	ldw	r22,40(sp)
    d724:	dd400917 	ldw	r21,36(sp)
    d728:	dd000817 	ldw	r20,32(sp)
    d72c:	dcc00717 	ldw	r19,28(sp)
    d730:	dc800617 	ldw	r18,24(sp)
    d734:	dc400517 	ldw	r17,20(sp)
    d738:	dc000417 	ldw	r16,16(sp)
    d73c:	dec00e04 	addi	sp,sp,56
    d740:	f800283a 	ret
    d744:	2404b03a 	or	r2,r4,r16
    d748:	2027883a 	mov	r19,r4
    d74c:	10003926 	beq	r2,zero,d834 <__divdf3+0x2c0>
    d750:	80012e26 	beq	r16,zero,dc0c <__divdf3+0x698>
    d754:	8009883a 	mov	r4,r16
    d758:	d9800315 	stw	r6,12(sp)
    d75c:	d9c00215 	stw	r7,8(sp)
    d760:	00029840 	call	2984 <__clzsi2>
    d764:	d9800317 	ldw	r6,12(sp)
    d768:	d9c00217 	ldw	r7,8(sp)
    d76c:	113ffd44 	addi	r4,r2,-11
    d770:	00c00704 	movi	r3,28
    d774:	19012116 	blt	r3,r4,dbfc <__divdf3+0x688>
    d778:	00c00744 	movi	r3,29
    d77c:	147ffe04 	addi	r17,r2,-8
    d780:	1907c83a 	sub	r3,r3,r4
    d784:	8460983a 	sll	r16,r16,r17
    d788:	98c6d83a 	srl	r3,r19,r3
    d78c:	9c64983a 	sll	r18,r19,r17
    d790:	1c20b03a 	or	r16,r3,r16
    d794:	1080fcc4 	addi	r2,r2,1011
    d798:	00abc83a 	sub	r21,zero,r2
    d79c:	0027883a 	mov	r19,zero
    d7a0:	0013883a 	mov	r9,zero
    d7a4:	003f9106 	br	d5ec <__alt_data_end+0xff00d5ec>
    d7a8:	3446b03a 	or	r3,r6,r17
    d7ac:	18001f1e 	bne	r3,zero,d82c <__divdf3+0x2b8>
    d7b0:	0023883a 	mov	r17,zero
    d7b4:	0011883a 	mov	r8,zero
    d7b8:	01c00084 	movi	r7,2
    d7bc:	003f9d06 	br	d634 <__alt_data_end+0xff00d634>
    d7c0:	3446b03a 	or	r3,r6,r17
    d7c4:	18001526 	beq	r3,zero,d81c <__divdf3+0x2a8>
    d7c8:	88011b26 	beq	r17,zero,dc38 <__divdf3+0x6c4>
    d7cc:	8809883a 	mov	r4,r17
    d7d0:	d9800315 	stw	r6,12(sp)
    d7d4:	da400115 	stw	r9,4(sp)
    d7d8:	00029840 	call	2984 <__clzsi2>
    d7dc:	d9800317 	ldw	r6,12(sp)
    d7e0:	da400117 	ldw	r9,4(sp)
    d7e4:	113ffd44 	addi	r4,r2,-11
    d7e8:	00c00704 	movi	r3,28
    d7ec:	19010e16 	blt	r3,r4,dc28 <__divdf3+0x6b4>
    d7f0:	00c00744 	movi	r3,29
    d7f4:	123ffe04 	addi	r8,r2,-8
    d7f8:	1907c83a 	sub	r3,r3,r4
    d7fc:	8a22983a 	sll	r17,r17,r8
    d800:	30c6d83a 	srl	r3,r6,r3
    d804:	3210983a 	sll	r8,r6,r8
    d808:	1c62b03a 	or	r17,r3,r17
    d80c:	1080fcc4 	addi	r2,r2,1011
    d810:	0085c83a 	sub	r2,zero,r2
    d814:	000f883a 	mov	r7,zero
    d818:	003f8606 	br	d634 <__alt_data_end+0xff00d634>
    d81c:	0023883a 	mov	r17,zero
    d820:	0011883a 	mov	r8,zero
    d824:	01c00044 	movi	r7,1
    d828:	003f8206 	br	d634 <__alt_data_end+0xff00d634>
    d82c:	01c000c4 	movi	r7,3
    d830:	003f8006 	br	d634 <__alt_data_end+0xff00d634>
    d834:	04c00104 	movi	r19,4
    d838:	0021883a 	mov	r16,zero
    d83c:	0025883a 	mov	r18,zero
    d840:	02400044 	movi	r9,1
    d844:	003f6906 	br	d5ec <__alt_data_end+0xff00d5ec>
    d848:	04c00304 	movi	r19,12
    d84c:	024000c4 	movi	r9,3
    d850:	003f6606 	br	d5ec <__alt_data_end+0xff00d5ec>
    d854:	01400434 	movhi	r5,16
    d858:	0007883a 	mov	r3,zero
    d85c:	297fffc4 	addi	r5,r5,-1
    d860:	04bfffc4 	movi	r18,-1
    d864:	0081ffc4 	movi	r2,2047
    d868:	003fa106 	br	d6f0 <__alt_data_end+0xff00d6f0>
    d86c:	00c00044 	movi	r3,1
    d870:	1887c83a 	sub	r3,r3,r2
    d874:	01000e04 	movi	r4,56
    d878:	20c1210e 	bge	r4,r3,dd00 <__divdf3+0x78c>
    d87c:	98c0004c 	andi	r3,r19,1
    d880:	0005883a 	mov	r2,zero
    d884:	000b883a 	mov	r5,zero
    d888:	0025883a 	mov	r18,zero
    d88c:	003f9806 	br	d6f0 <__alt_data_end+0xff00d6f0>
    d890:	8c00fd36 	bltu	r17,r16,dc88 <__divdf3+0x714>
    d894:	8440fb26 	beq	r16,r17,dc84 <__divdf3+0x710>
    d898:	8007883a 	mov	r3,r16
    d89c:	ad7fffc4 	addi	r21,r21,-1
    d8a0:	0021883a 	mov	r16,zero
    d8a4:	4004d63a 	srli	r2,r8,24
    d8a8:	8822923a 	slli	r17,r17,8
    d8ac:	1809883a 	mov	r4,r3
    d8b0:	402c923a 	slli	r22,r8,8
    d8b4:	88b8b03a 	or	fp,r17,r2
    d8b8:	e028d43a 	srli	r20,fp,16
    d8bc:	d8c00015 	stw	r3,0(sp)
    d8c0:	e5ffffcc 	andi	r23,fp,65535
    d8c4:	a00b883a 	mov	r5,r20
    d8c8:	000cc0c0 	call	cc0c <__udivsi3>
    d8cc:	d8c00017 	ldw	r3,0(sp)
    d8d0:	a00b883a 	mov	r5,r20
    d8d4:	d8800315 	stw	r2,12(sp)
    d8d8:	1809883a 	mov	r4,r3
    d8dc:	000cc700 	call	cc70 <__umodsi3>
    d8e0:	d9800317 	ldw	r6,12(sp)
    d8e4:	1006943a 	slli	r3,r2,16
    d8e8:	9004d43a 	srli	r2,r18,16
    d8ec:	b9a3383a 	mul	r17,r23,r6
    d8f0:	10c4b03a 	or	r2,r2,r3
    d8f4:	1440062e 	bgeu	r2,r17,d910 <__divdf3+0x39c>
    d8f8:	1705883a 	add	r2,r2,fp
    d8fc:	30ffffc4 	addi	r3,r6,-1
    d900:	1700ee36 	bltu	r2,fp,dcbc <__divdf3+0x748>
    d904:	1440ed2e 	bgeu	r2,r17,dcbc <__divdf3+0x748>
    d908:	31bfff84 	addi	r6,r6,-2
    d90c:	1705883a 	add	r2,r2,fp
    d910:	1463c83a 	sub	r17,r2,r17
    d914:	a00b883a 	mov	r5,r20
    d918:	8809883a 	mov	r4,r17
    d91c:	d9800315 	stw	r6,12(sp)
    d920:	000cc0c0 	call	cc0c <__udivsi3>
    d924:	a00b883a 	mov	r5,r20
    d928:	8809883a 	mov	r4,r17
    d92c:	d8800215 	stw	r2,8(sp)
    d930:	000cc700 	call	cc70 <__umodsi3>
    d934:	d9c00217 	ldw	r7,8(sp)
    d938:	1004943a 	slli	r2,r2,16
    d93c:	94bfffcc 	andi	r18,r18,65535
    d940:	b9d1383a 	mul	r8,r23,r7
    d944:	90a4b03a 	or	r18,r18,r2
    d948:	d9800317 	ldw	r6,12(sp)
    d94c:	9200062e 	bgeu	r18,r8,d968 <__divdf3+0x3f4>
    d950:	9725883a 	add	r18,r18,fp
    d954:	38bfffc4 	addi	r2,r7,-1
    d958:	9700d636 	bltu	r18,fp,dcb4 <__divdf3+0x740>
    d95c:	9200d52e 	bgeu	r18,r8,dcb4 <__divdf3+0x740>
    d960:	39ffff84 	addi	r7,r7,-2
    d964:	9725883a 	add	r18,r18,fp
    d968:	3004943a 	slli	r2,r6,16
    d96c:	b012d43a 	srli	r9,r22,16
    d970:	b1bfffcc 	andi	r6,r22,65535
    d974:	11e2b03a 	or	r17,r2,r7
    d978:	8806d43a 	srli	r3,r17,16
    d97c:	893fffcc 	andi	r4,r17,65535
    d980:	218b383a 	mul	r5,r4,r6
    d984:	30c5383a 	mul	r2,r6,r3
    d988:	2249383a 	mul	r4,r4,r9
    d98c:	280ed43a 	srli	r7,r5,16
    d990:	9225c83a 	sub	r18,r18,r8
    d994:	2089883a 	add	r4,r4,r2
    d998:	3909883a 	add	r4,r7,r4
    d99c:	1a47383a 	mul	r3,r3,r9
    d9a0:	2080022e 	bgeu	r4,r2,d9ac <__divdf3+0x438>
    d9a4:	00800074 	movhi	r2,1
    d9a8:	1887883a 	add	r3,r3,r2
    d9ac:	2004d43a 	srli	r2,r4,16
    d9b0:	2008943a 	slli	r4,r4,16
    d9b4:	297fffcc 	andi	r5,r5,65535
    d9b8:	10c7883a 	add	r3,r2,r3
    d9bc:	2149883a 	add	r4,r4,r5
    d9c0:	90c0a536 	bltu	r18,r3,dc58 <__divdf3+0x6e4>
    d9c4:	90c0bf26 	beq	r18,r3,dcc4 <__divdf3+0x750>
    d9c8:	90c7c83a 	sub	r3,r18,r3
    d9cc:	810fc83a 	sub	r7,r16,r4
    d9d0:	81e5803a 	cmpltu	r18,r16,r7
    d9d4:	1ca5c83a 	sub	r18,r3,r18
    d9d8:	e480c126 	beq	fp,r18,dce0 <__divdf3+0x76c>
    d9dc:	a00b883a 	mov	r5,r20
    d9e0:	9009883a 	mov	r4,r18
    d9e4:	d9800315 	stw	r6,12(sp)
    d9e8:	d9c00215 	stw	r7,8(sp)
    d9ec:	da400115 	stw	r9,4(sp)
    d9f0:	000cc0c0 	call	cc0c <__udivsi3>
    d9f4:	a00b883a 	mov	r5,r20
    d9f8:	9009883a 	mov	r4,r18
    d9fc:	d8800015 	stw	r2,0(sp)
    da00:	000cc700 	call	cc70 <__umodsi3>
    da04:	d9c00217 	ldw	r7,8(sp)
    da08:	da000017 	ldw	r8,0(sp)
    da0c:	1006943a 	slli	r3,r2,16
    da10:	3804d43a 	srli	r2,r7,16
    da14:	ba21383a 	mul	r16,r23,r8
    da18:	d9800317 	ldw	r6,12(sp)
    da1c:	10c4b03a 	or	r2,r2,r3
    da20:	da400117 	ldw	r9,4(sp)
    da24:	1400062e 	bgeu	r2,r16,da40 <__divdf3+0x4cc>
    da28:	1705883a 	add	r2,r2,fp
    da2c:	40ffffc4 	addi	r3,r8,-1
    da30:	1700ad36 	bltu	r2,fp,dce8 <__divdf3+0x774>
    da34:	1400ac2e 	bgeu	r2,r16,dce8 <__divdf3+0x774>
    da38:	423fff84 	addi	r8,r8,-2
    da3c:	1705883a 	add	r2,r2,fp
    da40:	1421c83a 	sub	r16,r2,r16
    da44:	a00b883a 	mov	r5,r20
    da48:	8009883a 	mov	r4,r16
    da4c:	d9800315 	stw	r6,12(sp)
    da50:	d9c00215 	stw	r7,8(sp)
    da54:	da000015 	stw	r8,0(sp)
    da58:	da400115 	stw	r9,4(sp)
    da5c:	000cc0c0 	call	cc0c <__udivsi3>
    da60:	8009883a 	mov	r4,r16
    da64:	a00b883a 	mov	r5,r20
    da68:	1025883a 	mov	r18,r2
    da6c:	000cc700 	call	cc70 <__umodsi3>
    da70:	d9c00217 	ldw	r7,8(sp)
    da74:	1004943a 	slli	r2,r2,16
    da78:	bcaf383a 	mul	r23,r23,r18
    da7c:	393fffcc 	andi	r4,r7,65535
    da80:	2088b03a 	or	r4,r4,r2
    da84:	d9800317 	ldw	r6,12(sp)
    da88:	da000017 	ldw	r8,0(sp)
    da8c:	da400117 	ldw	r9,4(sp)
    da90:	25c0062e 	bgeu	r4,r23,daac <__divdf3+0x538>
    da94:	2709883a 	add	r4,r4,fp
    da98:	90bfffc4 	addi	r2,r18,-1
    da9c:	27009436 	bltu	r4,fp,dcf0 <__divdf3+0x77c>
    daa0:	25c0932e 	bgeu	r4,r23,dcf0 <__divdf3+0x77c>
    daa4:	94bfff84 	addi	r18,r18,-2
    daa8:	2709883a 	add	r4,r4,fp
    daac:	4004943a 	slli	r2,r8,16
    dab0:	25efc83a 	sub	r23,r4,r23
    dab4:	1490b03a 	or	r8,r2,r18
    dab8:	4008d43a 	srli	r4,r8,16
    dabc:	40ffffcc 	andi	r3,r8,65535
    dac0:	30c5383a 	mul	r2,r6,r3
    dac4:	1a47383a 	mul	r3,r3,r9
    dac8:	310d383a 	mul	r6,r6,r4
    dacc:	100ad43a 	srli	r5,r2,16
    dad0:	4913383a 	mul	r9,r9,r4
    dad4:	1987883a 	add	r3,r3,r6
    dad8:	28c7883a 	add	r3,r5,r3
    dadc:	1980022e 	bgeu	r3,r6,dae8 <__divdf3+0x574>
    dae0:	01000074 	movhi	r4,1
    dae4:	4913883a 	add	r9,r9,r4
    dae8:	1808d43a 	srli	r4,r3,16
    daec:	1806943a 	slli	r3,r3,16
    daf0:	10bfffcc 	andi	r2,r2,65535
    daf4:	2253883a 	add	r9,r4,r9
    daf8:	1887883a 	add	r3,r3,r2
    dafc:	ba403836 	bltu	r23,r9,dbe0 <__divdf3+0x66c>
    db00:	ba403626 	beq	r23,r9,dbdc <__divdf3+0x668>
    db04:	42000054 	ori	r8,r8,1
    db08:	a880ffc4 	addi	r2,r21,1023
    db0c:	00bf570e 	bge	zero,r2,d86c <__alt_data_end+0xff00d86c>
    db10:	40c001cc 	andi	r3,r8,7
    db14:	18000726 	beq	r3,zero,db34 <__divdf3+0x5c0>
    db18:	40c003cc 	andi	r3,r8,15
    db1c:	01000104 	movi	r4,4
    db20:	19000426 	beq	r3,r4,db34 <__divdf3+0x5c0>
    db24:	4107883a 	add	r3,r8,r4
    db28:	1a11803a 	cmpltu	r8,r3,r8
    db2c:	8a23883a 	add	r17,r17,r8
    db30:	1811883a 	mov	r8,r3
    db34:	88c0402c 	andhi	r3,r17,256
    db38:	18000426 	beq	r3,zero,db4c <__divdf3+0x5d8>
    db3c:	00ffc034 	movhi	r3,65280
    db40:	18ffffc4 	addi	r3,r3,-1
    db44:	a8810004 	addi	r2,r21,1024
    db48:	88e2703a 	and	r17,r17,r3
    db4c:	00c1ff84 	movi	r3,2046
    db50:	18bee316 	blt	r3,r2,d6e0 <__alt_data_end+0xff00d6e0>
    db54:	8824977a 	slli	r18,r17,29
    db58:	4010d0fa 	srli	r8,r8,3
    db5c:	8822927a 	slli	r17,r17,9
    db60:	1081ffcc 	andi	r2,r2,2047
    db64:	9224b03a 	or	r18,r18,r8
    db68:	880ad33a 	srli	r5,r17,12
    db6c:	98c0004c 	andi	r3,r19,1
    db70:	003edf06 	br	d6f0 <__alt_data_end+0xff00d6f0>
    db74:	8080022c 	andhi	r2,r16,8
    db78:	10001226 	beq	r2,zero,dbc4 <__divdf3+0x650>
    db7c:	8880022c 	andhi	r2,r17,8
    db80:	1000101e 	bne	r2,zero,dbc4 <__divdf3+0x650>
    db84:	00800434 	movhi	r2,16
    db88:	89400234 	orhi	r5,r17,8
    db8c:	10bfffc4 	addi	r2,r2,-1
    db90:	b007883a 	mov	r3,r22
    db94:	288a703a 	and	r5,r5,r2
    db98:	4025883a 	mov	r18,r8
    db9c:	003f3106 	br	d864 <__alt_data_end+0xff00d864>
    dba0:	008000c4 	movi	r2,3
    dba4:	3880a626 	beq	r7,r2,de40 <__divdf3+0x8cc>
    dba8:	00800044 	movi	r2,1
    dbac:	3880521e 	bne	r7,r2,dcf8 <__divdf3+0x784>
    dbb0:	b807883a 	mov	r3,r23
    dbb4:	0005883a 	mov	r2,zero
    dbb8:	000b883a 	mov	r5,zero
    dbbc:	0025883a 	mov	r18,zero
    dbc0:	003ecb06 	br	d6f0 <__alt_data_end+0xff00d6f0>
    dbc4:	00800434 	movhi	r2,16
    dbc8:	81400234 	orhi	r5,r16,8
    dbcc:	10bfffc4 	addi	r2,r2,-1
    dbd0:	a007883a 	mov	r3,r20
    dbd4:	288a703a 	and	r5,r5,r2
    dbd8:	003f2206 	br	d864 <__alt_data_end+0xff00d864>
    dbdc:	183fca26 	beq	r3,zero,db08 <__alt_data_end+0xff00db08>
    dbe0:	e5ef883a 	add	r23,fp,r23
    dbe4:	40bfffc4 	addi	r2,r8,-1
    dbe8:	bf00392e 	bgeu	r23,fp,dcd0 <__divdf3+0x75c>
    dbec:	1011883a 	mov	r8,r2
    dbf0:	ba7fc41e 	bne	r23,r9,db04 <__alt_data_end+0xff00db04>
    dbf4:	b0ffc31e 	bne	r22,r3,db04 <__alt_data_end+0xff00db04>
    dbf8:	003fc306 	br	db08 <__alt_data_end+0xff00db08>
    dbfc:	143ff604 	addi	r16,r2,-40
    dc00:	9c20983a 	sll	r16,r19,r16
    dc04:	0025883a 	mov	r18,zero
    dc08:	003ee206 	br	d794 <__alt_data_end+0xff00d794>
    dc0c:	d9800315 	stw	r6,12(sp)
    dc10:	d9c00215 	stw	r7,8(sp)
    dc14:	00029840 	call	2984 <__clzsi2>
    dc18:	10800804 	addi	r2,r2,32
    dc1c:	d9c00217 	ldw	r7,8(sp)
    dc20:	d9800317 	ldw	r6,12(sp)
    dc24:	003ed106 	br	d76c <__alt_data_end+0xff00d76c>
    dc28:	147ff604 	addi	r17,r2,-40
    dc2c:	3462983a 	sll	r17,r6,r17
    dc30:	0011883a 	mov	r8,zero
    dc34:	003ef506 	br	d80c <__alt_data_end+0xff00d80c>
    dc38:	3009883a 	mov	r4,r6
    dc3c:	d9800315 	stw	r6,12(sp)
    dc40:	da400115 	stw	r9,4(sp)
    dc44:	00029840 	call	2984 <__clzsi2>
    dc48:	10800804 	addi	r2,r2,32
    dc4c:	da400117 	ldw	r9,4(sp)
    dc50:	d9800317 	ldw	r6,12(sp)
    dc54:	003ee306 	br	d7e4 <__alt_data_end+0xff00d7e4>
    dc58:	85a1883a 	add	r16,r16,r22
    dc5c:	8585803a 	cmpltu	r2,r16,r22
    dc60:	1705883a 	add	r2,r2,fp
    dc64:	14a5883a 	add	r18,r2,r18
    dc68:	88bfffc4 	addi	r2,r17,-1
    dc6c:	e4800c2e 	bgeu	fp,r18,dca0 <__divdf3+0x72c>
    dc70:	90c03e36 	bltu	r18,r3,dd6c <__divdf3+0x7f8>
    dc74:	1c806926 	beq	r3,r18,de1c <__divdf3+0x8a8>
    dc78:	90c7c83a 	sub	r3,r18,r3
    dc7c:	1023883a 	mov	r17,r2
    dc80:	003f5206 	br	d9cc <__alt_data_end+0xff00d9cc>
    dc84:	923f0436 	bltu	r18,r8,d898 <__alt_data_end+0xff00d898>
    dc88:	800897fa 	slli	r4,r16,31
    dc8c:	9004d07a 	srli	r2,r18,1
    dc90:	8006d07a 	srli	r3,r16,1
    dc94:	902097fa 	slli	r16,r18,31
    dc98:	20a4b03a 	or	r18,r4,r2
    dc9c:	003f0106 	br	d8a4 <__alt_data_end+0xff00d8a4>
    dca0:	e4bff51e 	bne	fp,r18,dc78 <__alt_data_end+0xff00dc78>
    dca4:	85bff22e 	bgeu	r16,r22,dc70 <__alt_data_end+0xff00dc70>
    dca8:	e0c7c83a 	sub	r3,fp,r3
    dcac:	1023883a 	mov	r17,r2
    dcb0:	003f4606 	br	d9cc <__alt_data_end+0xff00d9cc>
    dcb4:	100f883a 	mov	r7,r2
    dcb8:	003f2b06 	br	d968 <__alt_data_end+0xff00d968>
    dcbc:	180d883a 	mov	r6,r3
    dcc0:	003f1306 	br	d910 <__alt_data_end+0xff00d910>
    dcc4:	813fe436 	bltu	r16,r4,dc58 <__alt_data_end+0xff00dc58>
    dcc8:	0007883a 	mov	r3,zero
    dccc:	003f3f06 	br	d9cc <__alt_data_end+0xff00d9cc>
    dcd0:	ba402c36 	bltu	r23,r9,dd84 <__divdf3+0x810>
    dcd4:	4dc05426 	beq	r9,r23,de28 <__divdf3+0x8b4>
    dcd8:	1011883a 	mov	r8,r2
    dcdc:	003f8906 	br	db04 <__alt_data_end+0xff00db04>
    dce0:	023fffc4 	movi	r8,-1
    dce4:	003f8806 	br	db08 <__alt_data_end+0xff00db08>
    dce8:	1811883a 	mov	r8,r3
    dcec:	003f5406 	br	da40 <__alt_data_end+0xff00da40>
    dcf0:	1025883a 	mov	r18,r2
    dcf4:	003f6d06 	br	daac <__alt_data_end+0xff00daac>
    dcf8:	b827883a 	mov	r19,r23
    dcfc:	003f8206 	br	db08 <__alt_data_end+0xff00db08>
    dd00:	010007c4 	movi	r4,31
    dd04:	20c02616 	blt	r4,r3,dda0 <__divdf3+0x82c>
    dd08:	00800804 	movi	r2,32
    dd0c:	10c5c83a 	sub	r2,r2,r3
    dd10:	888a983a 	sll	r5,r17,r2
    dd14:	40c8d83a 	srl	r4,r8,r3
    dd18:	4084983a 	sll	r2,r8,r2
    dd1c:	88e2d83a 	srl	r17,r17,r3
    dd20:	2906b03a 	or	r3,r5,r4
    dd24:	1004c03a 	cmpne	r2,r2,zero
    dd28:	1886b03a 	or	r3,r3,r2
    dd2c:	188001cc 	andi	r2,r3,7
    dd30:	10000726 	beq	r2,zero,dd50 <__divdf3+0x7dc>
    dd34:	188003cc 	andi	r2,r3,15
    dd38:	01000104 	movi	r4,4
    dd3c:	11000426 	beq	r2,r4,dd50 <__divdf3+0x7dc>
    dd40:	1805883a 	mov	r2,r3
    dd44:	10c00104 	addi	r3,r2,4
    dd48:	1885803a 	cmpltu	r2,r3,r2
    dd4c:	88a3883a 	add	r17,r17,r2
    dd50:	8880202c 	andhi	r2,r17,128
    dd54:	10002726 	beq	r2,zero,ddf4 <__divdf3+0x880>
    dd58:	98c0004c 	andi	r3,r19,1
    dd5c:	00800044 	movi	r2,1
    dd60:	000b883a 	mov	r5,zero
    dd64:	0025883a 	mov	r18,zero
    dd68:	003e6106 	br	d6f0 <__alt_data_end+0xff00d6f0>
    dd6c:	85a1883a 	add	r16,r16,r22
    dd70:	8585803a 	cmpltu	r2,r16,r22
    dd74:	1705883a 	add	r2,r2,fp
    dd78:	14a5883a 	add	r18,r2,r18
    dd7c:	8c7fff84 	addi	r17,r17,-2
    dd80:	003f1106 	br	d9c8 <__alt_data_end+0xff00d9c8>
    dd84:	b589883a 	add	r4,r22,r22
    dd88:	25ad803a 	cmpltu	r22,r4,r22
    dd8c:	b739883a 	add	fp,r22,fp
    dd90:	40bfff84 	addi	r2,r8,-2
    dd94:	bf2f883a 	add	r23,r23,fp
    dd98:	202d883a 	mov	r22,r4
    dd9c:	003f9306 	br	dbec <__alt_data_end+0xff00dbec>
    dda0:	013ff844 	movi	r4,-31
    dda4:	2085c83a 	sub	r2,r4,r2
    dda8:	8888d83a 	srl	r4,r17,r2
    ddac:	00800804 	movi	r2,32
    ddb0:	18802126 	beq	r3,r2,de38 <__divdf3+0x8c4>
    ddb4:	00801004 	movi	r2,64
    ddb8:	10c5c83a 	sub	r2,r2,r3
    ddbc:	8884983a 	sll	r2,r17,r2
    ddc0:	1204b03a 	or	r2,r2,r8
    ddc4:	1004c03a 	cmpne	r2,r2,zero
    ddc8:	2084b03a 	or	r2,r4,r2
    ddcc:	144001cc 	andi	r17,r2,7
    ddd0:	88000d1e 	bne	r17,zero,de08 <__divdf3+0x894>
    ddd4:	000b883a 	mov	r5,zero
    ddd8:	1024d0fa 	srli	r18,r2,3
    dddc:	98c0004c 	andi	r3,r19,1
    dde0:	0005883a 	mov	r2,zero
    dde4:	9464b03a 	or	r18,r18,r17
    dde8:	003e4106 	br	d6f0 <__alt_data_end+0xff00d6f0>
    ddec:	1007883a 	mov	r3,r2
    ddf0:	0023883a 	mov	r17,zero
    ddf4:	880a927a 	slli	r5,r17,9
    ddf8:	1805883a 	mov	r2,r3
    ddfc:	8822977a 	slli	r17,r17,29
    de00:	280ad33a 	srli	r5,r5,12
    de04:	003ff406 	br	ddd8 <__alt_data_end+0xff00ddd8>
    de08:	10c003cc 	andi	r3,r2,15
    de0c:	01000104 	movi	r4,4
    de10:	193ff626 	beq	r3,r4,ddec <__alt_data_end+0xff00ddec>
    de14:	0023883a 	mov	r17,zero
    de18:	003fca06 	br	dd44 <__alt_data_end+0xff00dd44>
    de1c:	813fd336 	bltu	r16,r4,dd6c <__alt_data_end+0xff00dd6c>
    de20:	1023883a 	mov	r17,r2
    de24:	003fa806 	br	dcc8 <__alt_data_end+0xff00dcc8>
    de28:	b0ffd636 	bltu	r22,r3,dd84 <__alt_data_end+0xff00dd84>
    de2c:	1011883a 	mov	r8,r2
    de30:	b0ff341e 	bne	r22,r3,db04 <__alt_data_end+0xff00db04>
    de34:	003f3406 	br	db08 <__alt_data_end+0xff00db08>
    de38:	0005883a 	mov	r2,zero
    de3c:	003fe006 	br	ddc0 <__alt_data_end+0xff00ddc0>
    de40:	00800434 	movhi	r2,16
    de44:	89400234 	orhi	r5,r17,8
    de48:	10bfffc4 	addi	r2,r2,-1
    de4c:	b807883a 	mov	r3,r23
    de50:	288a703a 	and	r5,r5,r2
    de54:	4025883a 	mov	r18,r8
    de58:	003e8206 	br	d864 <__alt_data_end+0xff00d864>

0000de5c <__eqdf2>:
    de5c:	2804d53a 	srli	r2,r5,20
    de60:	3806d53a 	srli	r3,r7,20
    de64:	02000434 	movhi	r8,16
    de68:	423fffc4 	addi	r8,r8,-1
    de6c:	1081ffcc 	andi	r2,r2,2047
    de70:	0281ffc4 	movi	r10,2047
    de74:	2a12703a 	and	r9,r5,r8
    de78:	18c1ffcc 	andi	r3,r3,2047
    de7c:	3a10703a 	and	r8,r7,r8
    de80:	280ad7fa 	srli	r5,r5,31
    de84:	380ed7fa 	srli	r7,r7,31
    de88:	12801026 	beq	r2,r10,decc <__eqdf2+0x70>
    de8c:	0281ffc4 	movi	r10,2047
    de90:	1a800a26 	beq	r3,r10,debc <__eqdf2+0x60>
    de94:	10c00226 	beq	r2,r3,dea0 <__eqdf2+0x44>
    de98:	00800044 	movi	r2,1
    de9c:	f800283a 	ret
    dea0:	4a3ffd1e 	bne	r9,r8,de98 <__alt_data_end+0xff00de98>
    dea4:	21bffc1e 	bne	r4,r6,de98 <__alt_data_end+0xff00de98>
    dea8:	29c00c26 	beq	r5,r7,dedc <__eqdf2+0x80>
    deac:	103ffa1e 	bne	r2,zero,de98 <__alt_data_end+0xff00de98>
    deb0:	2244b03a 	or	r2,r4,r9
    deb4:	1004c03a 	cmpne	r2,r2,zero
    deb8:	f800283a 	ret
    debc:	3214b03a 	or	r10,r6,r8
    dec0:	503ff426 	beq	r10,zero,de94 <__alt_data_end+0xff00de94>
    dec4:	00800044 	movi	r2,1
    dec8:	f800283a 	ret
    decc:	2254b03a 	or	r10,r4,r9
    ded0:	503fee26 	beq	r10,zero,de8c <__alt_data_end+0xff00de8c>
    ded4:	00800044 	movi	r2,1
    ded8:	f800283a 	ret
    dedc:	0005883a 	mov	r2,zero
    dee0:	f800283a 	ret

0000dee4 <__gedf2>:
    dee4:	2804d53a 	srli	r2,r5,20
    dee8:	3806d53a 	srli	r3,r7,20
    deec:	02000434 	movhi	r8,16
    def0:	423fffc4 	addi	r8,r8,-1
    def4:	1081ffcc 	andi	r2,r2,2047
    def8:	0241ffc4 	movi	r9,2047
    defc:	2a14703a 	and	r10,r5,r8
    df00:	18c1ffcc 	andi	r3,r3,2047
    df04:	3a10703a 	and	r8,r7,r8
    df08:	280ad7fa 	srli	r5,r5,31
    df0c:	380ed7fa 	srli	r7,r7,31
    df10:	12401d26 	beq	r2,r9,df88 <__gedf2+0xa4>
    df14:	0241ffc4 	movi	r9,2047
    df18:	1a401226 	beq	r3,r9,df64 <__gedf2+0x80>
    df1c:	1000081e 	bne	r2,zero,df40 <__gedf2+0x5c>
    df20:	2296b03a 	or	r11,r4,r10
    df24:	5813003a 	cmpeq	r9,r11,zero
    df28:	1800091e 	bne	r3,zero,df50 <__gedf2+0x6c>
    df2c:	3218b03a 	or	r12,r6,r8
    df30:	6000071e 	bne	r12,zero,df50 <__gedf2+0x6c>
    df34:	0005883a 	mov	r2,zero
    df38:	5800101e 	bne	r11,zero,df7c <__gedf2+0x98>
    df3c:	f800283a 	ret
    df40:	18000c1e 	bne	r3,zero,df74 <__gedf2+0x90>
    df44:	3212b03a 	or	r9,r6,r8
    df48:	48000c26 	beq	r9,zero,df7c <__gedf2+0x98>
    df4c:	0013883a 	mov	r9,zero
    df50:	39c03fcc 	andi	r7,r7,255
    df54:	48000826 	beq	r9,zero,df78 <__gedf2+0x94>
    df58:	38000926 	beq	r7,zero,df80 <__gedf2+0x9c>
    df5c:	00800044 	movi	r2,1
    df60:	f800283a 	ret
    df64:	3212b03a 	or	r9,r6,r8
    df68:	483fec26 	beq	r9,zero,df1c <__alt_data_end+0xff00df1c>
    df6c:	00bfff84 	movi	r2,-2
    df70:	f800283a 	ret
    df74:	39c03fcc 	andi	r7,r7,255
    df78:	29c00626 	beq	r5,r7,df94 <__gedf2+0xb0>
    df7c:	283ff726 	beq	r5,zero,df5c <__alt_data_end+0xff00df5c>
    df80:	00bfffc4 	movi	r2,-1
    df84:	f800283a 	ret
    df88:	2292b03a 	or	r9,r4,r10
    df8c:	483fe126 	beq	r9,zero,df14 <__alt_data_end+0xff00df14>
    df90:	003ff606 	br	df6c <__alt_data_end+0xff00df6c>
    df94:	18bff916 	blt	r3,r2,df7c <__alt_data_end+0xff00df7c>
    df98:	10c00316 	blt	r2,r3,dfa8 <__gedf2+0xc4>
    df9c:	42bff736 	bltu	r8,r10,df7c <__alt_data_end+0xff00df7c>
    dfa0:	52000326 	beq	r10,r8,dfb0 <__gedf2+0xcc>
    dfa4:	5200042e 	bgeu	r10,r8,dfb8 <__gedf2+0xd4>
    dfa8:	283fec1e 	bne	r5,zero,df5c <__alt_data_end+0xff00df5c>
    dfac:	003ff406 	br	df80 <__alt_data_end+0xff00df80>
    dfb0:	313ff236 	bltu	r6,r4,df7c <__alt_data_end+0xff00df7c>
    dfb4:	21bffc36 	bltu	r4,r6,dfa8 <__alt_data_end+0xff00dfa8>
    dfb8:	0005883a 	mov	r2,zero
    dfbc:	f800283a 	ret

0000dfc0 <__ledf2>:
    dfc0:	2804d53a 	srli	r2,r5,20
    dfc4:	3810d53a 	srli	r8,r7,20
    dfc8:	00c00434 	movhi	r3,16
    dfcc:	18ffffc4 	addi	r3,r3,-1
    dfd0:	1081ffcc 	andi	r2,r2,2047
    dfd4:	0241ffc4 	movi	r9,2047
    dfd8:	28d4703a 	and	r10,r5,r3
    dfdc:	4201ffcc 	andi	r8,r8,2047
    dfe0:	38c6703a 	and	r3,r7,r3
    dfe4:	280ad7fa 	srli	r5,r5,31
    dfe8:	380ed7fa 	srli	r7,r7,31
    dfec:	12401f26 	beq	r2,r9,e06c <__ledf2+0xac>
    dff0:	0241ffc4 	movi	r9,2047
    dff4:	42401426 	beq	r8,r9,e048 <__ledf2+0x88>
    dff8:	1000091e 	bne	r2,zero,e020 <__ledf2+0x60>
    dffc:	2296b03a 	or	r11,r4,r10
    e000:	5813003a 	cmpeq	r9,r11,zero
    e004:	29403fcc 	andi	r5,r5,255
    e008:	40000a1e 	bne	r8,zero,e034 <__ledf2+0x74>
    e00c:	30d8b03a 	or	r12,r6,r3
    e010:	6000081e 	bne	r12,zero,e034 <__ledf2+0x74>
    e014:	0005883a 	mov	r2,zero
    e018:	5800111e 	bne	r11,zero,e060 <__ledf2+0xa0>
    e01c:	f800283a 	ret
    e020:	29403fcc 	andi	r5,r5,255
    e024:	40000c1e 	bne	r8,zero,e058 <__ledf2+0x98>
    e028:	30d2b03a 	or	r9,r6,r3
    e02c:	48000c26 	beq	r9,zero,e060 <__ledf2+0xa0>
    e030:	0013883a 	mov	r9,zero
    e034:	39c03fcc 	andi	r7,r7,255
    e038:	48000826 	beq	r9,zero,e05c <__ledf2+0x9c>
    e03c:	38001126 	beq	r7,zero,e084 <__ledf2+0xc4>
    e040:	00800044 	movi	r2,1
    e044:	f800283a 	ret
    e048:	30d2b03a 	or	r9,r6,r3
    e04c:	483fea26 	beq	r9,zero,dff8 <__alt_data_end+0xff00dff8>
    e050:	00800084 	movi	r2,2
    e054:	f800283a 	ret
    e058:	39c03fcc 	andi	r7,r7,255
    e05c:	39400726 	beq	r7,r5,e07c <__ledf2+0xbc>
    e060:	2800081e 	bne	r5,zero,e084 <__ledf2+0xc4>
    e064:	00800044 	movi	r2,1
    e068:	f800283a 	ret
    e06c:	2292b03a 	or	r9,r4,r10
    e070:	483fdf26 	beq	r9,zero,dff0 <__alt_data_end+0xff00dff0>
    e074:	00800084 	movi	r2,2
    e078:	f800283a 	ret
    e07c:	4080030e 	bge	r8,r2,e08c <__ledf2+0xcc>
    e080:	383fef26 	beq	r7,zero,e040 <__alt_data_end+0xff00e040>
    e084:	00bfffc4 	movi	r2,-1
    e088:	f800283a 	ret
    e08c:	123feb16 	blt	r2,r8,e03c <__alt_data_end+0xff00e03c>
    e090:	1abff336 	bltu	r3,r10,e060 <__alt_data_end+0xff00e060>
    e094:	50c00326 	beq	r10,r3,e0a4 <__ledf2+0xe4>
    e098:	50c0042e 	bgeu	r10,r3,e0ac <__ledf2+0xec>
    e09c:	283fe81e 	bne	r5,zero,e040 <__alt_data_end+0xff00e040>
    e0a0:	003ff806 	br	e084 <__alt_data_end+0xff00e084>
    e0a4:	313fee36 	bltu	r6,r4,e060 <__alt_data_end+0xff00e060>
    e0a8:	21bffc36 	bltu	r4,r6,e09c <__alt_data_end+0xff00e09c>
    e0ac:	0005883a 	mov	r2,zero
    e0b0:	f800283a 	ret

0000e0b4 <__muldf3>:
    e0b4:	defff304 	addi	sp,sp,-52
    e0b8:	2804d53a 	srli	r2,r5,20
    e0bc:	dd800915 	stw	r22,36(sp)
    e0c0:	282cd7fa 	srli	r22,r5,31
    e0c4:	dc000315 	stw	r16,12(sp)
    e0c8:	04000434 	movhi	r16,16
    e0cc:	dd400815 	stw	r21,32(sp)
    e0d0:	dc800515 	stw	r18,20(sp)
    e0d4:	843fffc4 	addi	r16,r16,-1
    e0d8:	dfc00c15 	stw	ra,48(sp)
    e0dc:	df000b15 	stw	fp,44(sp)
    e0e0:	ddc00a15 	stw	r23,40(sp)
    e0e4:	dd000715 	stw	r20,28(sp)
    e0e8:	dcc00615 	stw	r19,24(sp)
    e0ec:	dc400415 	stw	r17,16(sp)
    e0f0:	1481ffcc 	andi	r18,r2,2047
    e0f4:	2c20703a 	and	r16,r5,r16
    e0f8:	b02b883a 	mov	r21,r22
    e0fc:	b2403fcc 	andi	r9,r22,255
    e100:	90006026 	beq	r18,zero,e284 <__muldf3+0x1d0>
    e104:	0081ffc4 	movi	r2,2047
    e108:	2029883a 	mov	r20,r4
    e10c:	90803626 	beq	r18,r2,e1e8 <__muldf3+0x134>
    e110:	80800434 	orhi	r2,r16,16
    e114:	100490fa 	slli	r2,r2,3
    e118:	2020d77a 	srli	r16,r4,29
    e11c:	202890fa 	slli	r20,r4,3
    e120:	94bf0044 	addi	r18,r18,-1023
    e124:	80a0b03a 	or	r16,r16,r2
    e128:	0027883a 	mov	r19,zero
    e12c:	0039883a 	mov	fp,zero
    e130:	3804d53a 	srli	r2,r7,20
    e134:	382ed7fa 	srli	r23,r7,31
    e138:	04400434 	movhi	r17,16
    e13c:	8c7fffc4 	addi	r17,r17,-1
    e140:	1081ffcc 	andi	r2,r2,2047
    e144:	3011883a 	mov	r8,r6
    e148:	3c62703a 	and	r17,r7,r17
    e14c:	ba803fcc 	andi	r10,r23,255
    e150:	10006d26 	beq	r2,zero,e308 <__muldf3+0x254>
    e154:	00c1ffc4 	movi	r3,2047
    e158:	10c06526 	beq	r2,r3,e2f0 <__muldf3+0x23c>
    e15c:	88c00434 	orhi	r3,r17,16
    e160:	180690fa 	slli	r3,r3,3
    e164:	3022d77a 	srli	r17,r6,29
    e168:	301090fa 	slli	r8,r6,3
    e16c:	10bf0044 	addi	r2,r2,-1023
    e170:	88e2b03a 	or	r17,r17,r3
    e174:	000b883a 	mov	r5,zero
    e178:	9085883a 	add	r2,r18,r2
    e17c:	2cc8b03a 	or	r4,r5,r19
    e180:	00c003c4 	movi	r3,15
    e184:	bdacf03a 	xor	r22,r23,r22
    e188:	12c00044 	addi	r11,r2,1
    e18c:	19009936 	bltu	r3,r4,e3f4 <__muldf3+0x340>
    e190:	200890ba 	slli	r4,r4,2
    e194:	00c00074 	movhi	r3,1
    e198:	18f86a04 	addi	r3,r3,-7768
    e19c:	20c9883a 	add	r4,r4,r3
    e1a0:	20c00017 	ldw	r3,0(r4)
    e1a4:	1800683a 	jmp	r3
    e1a8:	0000e3f4 	movhi	zero,911
    e1ac:	0000e208 	cmpgei	zero,zero,904
    e1b0:	0000e208 	cmpgei	zero,zero,904
    e1b4:	0000e204 	movi	zero,904
    e1b8:	0000e3d0 	cmplti	zero,zero,911
    e1bc:	0000e3d0 	cmplti	zero,zero,911
    e1c0:	0000e3b8 	rdprs	zero,zero,910
    e1c4:	0000e204 	movi	zero,904
    e1c8:	0000e3d0 	cmplti	zero,zero,911
    e1cc:	0000e3b8 	rdprs	zero,zero,910
    e1d0:	0000e3d0 	cmplti	zero,zero,911
    e1d4:	0000e204 	movi	zero,904
    e1d8:	0000e3e0 	cmpeqi	zero,zero,911
    e1dc:	0000e3e0 	cmpeqi	zero,zero,911
    e1e0:	0000e3e0 	cmpeqi	zero,zero,911
    e1e4:	0000e5fc 	xorhi	zero,zero,919
    e1e8:	2404b03a 	or	r2,r4,r16
    e1ec:	10006f1e 	bne	r2,zero,e3ac <__muldf3+0x2f8>
    e1f0:	04c00204 	movi	r19,8
    e1f4:	0021883a 	mov	r16,zero
    e1f8:	0029883a 	mov	r20,zero
    e1fc:	07000084 	movi	fp,2
    e200:	003fcb06 	br	e130 <__alt_data_end+0xff00e130>
    e204:	502d883a 	mov	r22,r10
    e208:	00800084 	movi	r2,2
    e20c:	28805726 	beq	r5,r2,e36c <__muldf3+0x2b8>
    e210:	008000c4 	movi	r2,3
    e214:	28816626 	beq	r5,r2,e7b0 <__muldf3+0x6fc>
    e218:	00800044 	movi	r2,1
    e21c:	2881411e 	bne	r5,r2,e724 <__muldf3+0x670>
    e220:	b02b883a 	mov	r21,r22
    e224:	0005883a 	mov	r2,zero
    e228:	000b883a 	mov	r5,zero
    e22c:	0029883a 	mov	r20,zero
    e230:	1004953a 	slli	r2,r2,20
    e234:	a8c03fcc 	andi	r3,r21,255
    e238:	04400434 	movhi	r17,16
    e23c:	8c7fffc4 	addi	r17,r17,-1
    e240:	180697fa 	slli	r3,r3,31
    e244:	2c4a703a 	and	r5,r5,r17
    e248:	288ab03a 	or	r5,r5,r2
    e24c:	28c6b03a 	or	r3,r5,r3
    e250:	a005883a 	mov	r2,r20
    e254:	dfc00c17 	ldw	ra,48(sp)
    e258:	df000b17 	ldw	fp,44(sp)
    e25c:	ddc00a17 	ldw	r23,40(sp)
    e260:	dd800917 	ldw	r22,36(sp)
    e264:	dd400817 	ldw	r21,32(sp)
    e268:	dd000717 	ldw	r20,28(sp)
    e26c:	dcc00617 	ldw	r19,24(sp)
    e270:	dc800517 	ldw	r18,20(sp)
    e274:	dc400417 	ldw	r17,16(sp)
    e278:	dc000317 	ldw	r16,12(sp)
    e27c:	dec00d04 	addi	sp,sp,52
    e280:	f800283a 	ret
    e284:	2404b03a 	or	r2,r4,r16
    e288:	2027883a 	mov	r19,r4
    e28c:	10004226 	beq	r2,zero,e398 <__muldf3+0x2e4>
    e290:	8000fc26 	beq	r16,zero,e684 <__muldf3+0x5d0>
    e294:	8009883a 	mov	r4,r16
    e298:	d9800215 	stw	r6,8(sp)
    e29c:	d9c00015 	stw	r7,0(sp)
    e2a0:	da400115 	stw	r9,4(sp)
    e2a4:	00029840 	call	2984 <__clzsi2>
    e2a8:	d9800217 	ldw	r6,8(sp)
    e2ac:	d9c00017 	ldw	r7,0(sp)
    e2b0:	da400117 	ldw	r9,4(sp)
    e2b4:	113ffd44 	addi	r4,r2,-11
    e2b8:	00c00704 	movi	r3,28
    e2bc:	1900ed16 	blt	r3,r4,e674 <__muldf3+0x5c0>
    e2c0:	00c00744 	movi	r3,29
    e2c4:	147ffe04 	addi	r17,r2,-8
    e2c8:	1907c83a 	sub	r3,r3,r4
    e2cc:	8460983a 	sll	r16,r16,r17
    e2d0:	98c6d83a 	srl	r3,r19,r3
    e2d4:	9c68983a 	sll	r20,r19,r17
    e2d8:	1c20b03a 	or	r16,r3,r16
    e2dc:	1080fcc4 	addi	r2,r2,1011
    e2e0:	00a5c83a 	sub	r18,zero,r2
    e2e4:	0027883a 	mov	r19,zero
    e2e8:	0039883a 	mov	fp,zero
    e2ec:	003f9006 	br	e130 <__alt_data_end+0xff00e130>
    e2f0:	3446b03a 	or	r3,r6,r17
    e2f4:	1800261e 	bne	r3,zero,e390 <__muldf3+0x2dc>
    e2f8:	0023883a 	mov	r17,zero
    e2fc:	0011883a 	mov	r8,zero
    e300:	01400084 	movi	r5,2
    e304:	003f9c06 	br	e178 <__alt_data_end+0xff00e178>
    e308:	3446b03a 	or	r3,r6,r17
    e30c:	18001c26 	beq	r3,zero,e380 <__muldf3+0x2cc>
    e310:	8800ce26 	beq	r17,zero,e64c <__muldf3+0x598>
    e314:	8809883a 	mov	r4,r17
    e318:	d9800215 	stw	r6,8(sp)
    e31c:	da400115 	stw	r9,4(sp)
    e320:	da800015 	stw	r10,0(sp)
    e324:	00029840 	call	2984 <__clzsi2>
    e328:	d9800217 	ldw	r6,8(sp)
    e32c:	da400117 	ldw	r9,4(sp)
    e330:	da800017 	ldw	r10,0(sp)
    e334:	113ffd44 	addi	r4,r2,-11
    e338:	00c00704 	movi	r3,28
    e33c:	1900bf16 	blt	r3,r4,e63c <__muldf3+0x588>
    e340:	00c00744 	movi	r3,29
    e344:	123ffe04 	addi	r8,r2,-8
    e348:	1907c83a 	sub	r3,r3,r4
    e34c:	8a22983a 	sll	r17,r17,r8
    e350:	30c6d83a 	srl	r3,r6,r3
    e354:	3210983a 	sll	r8,r6,r8
    e358:	1c62b03a 	or	r17,r3,r17
    e35c:	1080fcc4 	addi	r2,r2,1011
    e360:	0085c83a 	sub	r2,zero,r2
    e364:	000b883a 	mov	r5,zero
    e368:	003f8306 	br	e178 <__alt_data_end+0xff00e178>
    e36c:	b02b883a 	mov	r21,r22
    e370:	0081ffc4 	movi	r2,2047
    e374:	000b883a 	mov	r5,zero
    e378:	0029883a 	mov	r20,zero
    e37c:	003fac06 	br	e230 <__alt_data_end+0xff00e230>
    e380:	0023883a 	mov	r17,zero
    e384:	0011883a 	mov	r8,zero
    e388:	01400044 	movi	r5,1
    e38c:	003f7a06 	br	e178 <__alt_data_end+0xff00e178>
    e390:	014000c4 	movi	r5,3
    e394:	003f7806 	br	e178 <__alt_data_end+0xff00e178>
    e398:	04c00104 	movi	r19,4
    e39c:	0021883a 	mov	r16,zero
    e3a0:	0029883a 	mov	r20,zero
    e3a4:	07000044 	movi	fp,1
    e3a8:	003f6106 	br	e130 <__alt_data_end+0xff00e130>
    e3ac:	04c00304 	movi	r19,12
    e3b0:	070000c4 	movi	fp,3
    e3b4:	003f5e06 	br	e130 <__alt_data_end+0xff00e130>
    e3b8:	01400434 	movhi	r5,16
    e3bc:	002b883a 	mov	r21,zero
    e3c0:	297fffc4 	addi	r5,r5,-1
    e3c4:	053fffc4 	movi	r20,-1
    e3c8:	0081ffc4 	movi	r2,2047
    e3cc:	003f9806 	br	e230 <__alt_data_end+0xff00e230>
    e3d0:	8023883a 	mov	r17,r16
    e3d4:	a011883a 	mov	r8,r20
    e3d8:	e00b883a 	mov	r5,fp
    e3dc:	003f8a06 	br	e208 <__alt_data_end+0xff00e208>
    e3e0:	8023883a 	mov	r17,r16
    e3e4:	a011883a 	mov	r8,r20
    e3e8:	482d883a 	mov	r22,r9
    e3ec:	e00b883a 	mov	r5,fp
    e3f0:	003f8506 	br	e208 <__alt_data_end+0xff00e208>
    e3f4:	a00ad43a 	srli	r5,r20,16
    e3f8:	401ad43a 	srli	r13,r8,16
    e3fc:	a53fffcc 	andi	r20,r20,65535
    e400:	423fffcc 	andi	r8,r8,65535
    e404:	4519383a 	mul	r12,r8,r20
    e408:	4147383a 	mul	r3,r8,r5
    e40c:	6d09383a 	mul	r4,r13,r20
    e410:	600cd43a 	srli	r6,r12,16
    e414:	2b5d383a 	mul	r14,r5,r13
    e418:	20c9883a 	add	r4,r4,r3
    e41c:	310d883a 	add	r6,r6,r4
    e420:	30c0022e 	bgeu	r6,r3,e42c <__muldf3+0x378>
    e424:	00c00074 	movhi	r3,1
    e428:	70dd883a 	add	r14,r14,r3
    e42c:	8826d43a 	srli	r19,r17,16
    e430:	8bffffcc 	andi	r15,r17,65535
    e434:	7d23383a 	mul	r17,r15,r20
    e438:	7949383a 	mul	r4,r15,r5
    e43c:	9d29383a 	mul	r20,r19,r20
    e440:	8814d43a 	srli	r10,r17,16
    e444:	3012943a 	slli	r9,r6,16
    e448:	a129883a 	add	r20,r20,r4
    e44c:	633fffcc 	andi	r12,r12,65535
    e450:	5515883a 	add	r10,r10,r20
    e454:	3006d43a 	srli	r3,r6,16
    e458:	4b13883a 	add	r9,r9,r12
    e45c:	2ccb383a 	mul	r5,r5,r19
    e460:	5100022e 	bgeu	r10,r4,e46c <__muldf3+0x3b8>
    e464:	01000074 	movhi	r4,1
    e468:	290b883a 	add	r5,r5,r4
    e46c:	802ad43a 	srli	r21,r16,16
    e470:	843fffcc 	andi	r16,r16,65535
    e474:	440d383a 	mul	r6,r8,r16
    e478:	4565383a 	mul	r18,r8,r21
    e47c:	8349383a 	mul	r4,r16,r13
    e480:	500e943a 	slli	r7,r10,16
    e484:	3010d43a 	srli	r8,r6,16
    e488:	5028d43a 	srli	r20,r10,16
    e48c:	2489883a 	add	r4,r4,r18
    e490:	8abfffcc 	andi	r10,r17,65535
    e494:	3a95883a 	add	r10,r7,r10
    e498:	4119883a 	add	r12,r8,r4
    e49c:	a169883a 	add	r20,r20,r5
    e4a0:	1a87883a 	add	r3,r3,r10
    e4a4:	6d5b383a 	mul	r13,r13,r21
    e4a8:	6480022e 	bgeu	r12,r18,e4b4 <__muldf3+0x400>
    e4ac:	01000074 	movhi	r4,1
    e4b0:	691b883a 	add	r13,r13,r4
    e4b4:	7c25383a 	mul	r18,r15,r16
    e4b8:	7d4b383a 	mul	r5,r15,r21
    e4bc:	84cf383a 	mul	r7,r16,r19
    e4c0:	901ed43a 	srli	r15,r18,16
    e4c4:	6008d43a 	srli	r4,r12,16
    e4c8:	6010943a 	slli	r8,r12,16
    e4cc:	394f883a 	add	r7,r7,r5
    e4d0:	333fffcc 	andi	r12,r6,65535
    e4d4:	79df883a 	add	r15,r15,r7
    e4d8:	235b883a 	add	r13,r4,r13
    e4dc:	9d63383a 	mul	r17,r19,r21
    e4e0:	4309883a 	add	r4,r8,r12
    e4e4:	7940022e 	bgeu	r15,r5,e4f0 <__muldf3+0x43c>
    e4e8:	01400074 	movhi	r5,1
    e4ec:	8963883a 	add	r17,r17,r5
    e4f0:	780a943a 	slli	r5,r15,16
    e4f4:	91bfffcc 	andi	r6,r18,65535
    e4f8:	70c7883a 	add	r3,r14,r3
    e4fc:	298d883a 	add	r6,r5,r6
    e500:	1a8f803a 	cmpltu	r7,r3,r10
    e504:	350b883a 	add	r5,r6,r20
    e508:	20c7883a 	add	r3,r4,r3
    e50c:	3955883a 	add	r10,r7,r5
    e510:	1909803a 	cmpltu	r4,r3,r4
    e514:	6a91883a 	add	r8,r13,r10
    e518:	780cd43a 	srli	r6,r15,16
    e51c:	2219883a 	add	r12,r4,r8
    e520:	2d0b803a 	cmpltu	r5,r5,r20
    e524:	51cf803a 	cmpltu	r7,r10,r7
    e528:	29ceb03a 	or	r7,r5,r7
    e52c:	4351803a 	cmpltu	r8,r8,r13
    e530:	610b803a 	cmpltu	r5,r12,r4
    e534:	4148b03a 	or	r4,r8,r5
    e538:	398f883a 	add	r7,r7,r6
    e53c:	3909883a 	add	r4,r7,r4
    e540:	1810927a 	slli	r8,r3,9
    e544:	2449883a 	add	r4,r4,r17
    e548:	2008927a 	slli	r4,r4,9
    e54c:	6022d5fa 	srli	r17,r12,23
    e550:	1806d5fa 	srli	r3,r3,23
    e554:	4252b03a 	or	r9,r8,r9
    e558:	600a927a 	slli	r5,r12,9
    e55c:	4810c03a 	cmpne	r8,r9,zero
    e560:	2462b03a 	or	r17,r4,r17
    e564:	40c6b03a 	or	r3,r8,r3
    e568:	8900402c 	andhi	r4,r17,256
    e56c:	1950b03a 	or	r8,r3,r5
    e570:	20000726 	beq	r4,zero,e590 <__muldf3+0x4dc>
    e574:	4006d07a 	srli	r3,r8,1
    e578:	880497fa 	slli	r2,r17,31
    e57c:	4200004c 	andi	r8,r8,1
    e580:	8822d07a 	srli	r17,r17,1
    e584:	1a10b03a 	or	r8,r3,r8
    e588:	1210b03a 	or	r8,r2,r8
    e58c:	5805883a 	mov	r2,r11
    e590:	1140ffc4 	addi	r5,r2,1023
    e594:	0140440e 	bge	zero,r5,e6a8 <__muldf3+0x5f4>
    e598:	40c001cc 	andi	r3,r8,7
    e59c:	18000726 	beq	r3,zero,e5bc <__muldf3+0x508>
    e5a0:	40c003cc 	andi	r3,r8,15
    e5a4:	01000104 	movi	r4,4
    e5a8:	19000426 	beq	r3,r4,e5bc <__muldf3+0x508>
    e5ac:	4107883a 	add	r3,r8,r4
    e5b0:	1a11803a 	cmpltu	r8,r3,r8
    e5b4:	8a23883a 	add	r17,r17,r8
    e5b8:	1811883a 	mov	r8,r3
    e5bc:	88c0402c 	andhi	r3,r17,256
    e5c0:	18000426 	beq	r3,zero,e5d4 <__muldf3+0x520>
    e5c4:	11410004 	addi	r5,r2,1024
    e5c8:	00bfc034 	movhi	r2,65280
    e5cc:	10bfffc4 	addi	r2,r2,-1
    e5d0:	88a2703a 	and	r17,r17,r2
    e5d4:	0081ff84 	movi	r2,2046
    e5d8:	117f6416 	blt	r2,r5,e36c <__alt_data_end+0xff00e36c>
    e5dc:	8828977a 	slli	r20,r17,29
    e5e0:	4010d0fa 	srli	r8,r8,3
    e5e4:	8822927a 	slli	r17,r17,9
    e5e8:	2881ffcc 	andi	r2,r5,2047
    e5ec:	a228b03a 	or	r20,r20,r8
    e5f0:	880ad33a 	srli	r5,r17,12
    e5f4:	b02b883a 	mov	r21,r22
    e5f8:	003f0d06 	br	e230 <__alt_data_end+0xff00e230>
    e5fc:	8080022c 	andhi	r2,r16,8
    e600:	10000926 	beq	r2,zero,e628 <__muldf3+0x574>
    e604:	8880022c 	andhi	r2,r17,8
    e608:	1000071e 	bne	r2,zero,e628 <__muldf3+0x574>
    e60c:	00800434 	movhi	r2,16
    e610:	89400234 	orhi	r5,r17,8
    e614:	10bfffc4 	addi	r2,r2,-1
    e618:	b82b883a 	mov	r21,r23
    e61c:	288a703a 	and	r5,r5,r2
    e620:	4029883a 	mov	r20,r8
    e624:	003f6806 	br	e3c8 <__alt_data_end+0xff00e3c8>
    e628:	00800434 	movhi	r2,16
    e62c:	81400234 	orhi	r5,r16,8
    e630:	10bfffc4 	addi	r2,r2,-1
    e634:	288a703a 	and	r5,r5,r2
    e638:	003f6306 	br	e3c8 <__alt_data_end+0xff00e3c8>
    e63c:	147ff604 	addi	r17,r2,-40
    e640:	3462983a 	sll	r17,r6,r17
    e644:	0011883a 	mov	r8,zero
    e648:	003f4406 	br	e35c <__alt_data_end+0xff00e35c>
    e64c:	3009883a 	mov	r4,r6
    e650:	d9800215 	stw	r6,8(sp)
    e654:	da400115 	stw	r9,4(sp)
    e658:	da800015 	stw	r10,0(sp)
    e65c:	00029840 	call	2984 <__clzsi2>
    e660:	10800804 	addi	r2,r2,32
    e664:	da800017 	ldw	r10,0(sp)
    e668:	da400117 	ldw	r9,4(sp)
    e66c:	d9800217 	ldw	r6,8(sp)
    e670:	003f3006 	br	e334 <__alt_data_end+0xff00e334>
    e674:	143ff604 	addi	r16,r2,-40
    e678:	9c20983a 	sll	r16,r19,r16
    e67c:	0029883a 	mov	r20,zero
    e680:	003f1606 	br	e2dc <__alt_data_end+0xff00e2dc>
    e684:	d9800215 	stw	r6,8(sp)
    e688:	d9c00015 	stw	r7,0(sp)
    e68c:	da400115 	stw	r9,4(sp)
    e690:	00029840 	call	2984 <__clzsi2>
    e694:	10800804 	addi	r2,r2,32
    e698:	da400117 	ldw	r9,4(sp)
    e69c:	d9c00017 	ldw	r7,0(sp)
    e6a0:	d9800217 	ldw	r6,8(sp)
    e6a4:	003f0306 	br	e2b4 <__alt_data_end+0xff00e2b4>
    e6a8:	00c00044 	movi	r3,1
    e6ac:	1947c83a 	sub	r3,r3,r5
    e6b0:	00800e04 	movi	r2,56
    e6b4:	10feda16 	blt	r2,r3,e220 <__alt_data_end+0xff00e220>
    e6b8:	008007c4 	movi	r2,31
    e6bc:	10c01b16 	blt	r2,r3,e72c <__muldf3+0x678>
    e6c0:	00800804 	movi	r2,32
    e6c4:	10c5c83a 	sub	r2,r2,r3
    e6c8:	888a983a 	sll	r5,r17,r2
    e6cc:	40c8d83a 	srl	r4,r8,r3
    e6d0:	4084983a 	sll	r2,r8,r2
    e6d4:	88e2d83a 	srl	r17,r17,r3
    e6d8:	2906b03a 	or	r3,r5,r4
    e6dc:	1004c03a 	cmpne	r2,r2,zero
    e6e0:	1886b03a 	or	r3,r3,r2
    e6e4:	188001cc 	andi	r2,r3,7
    e6e8:	10000726 	beq	r2,zero,e708 <__muldf3+0x654>
    e6ec:	188003cc 	andi	r2,r3,15
    e6f0:	01000104 	movi	r4,4
    e6f4:	11000426 	beq	r2,r4,e708 <__muldf3+0x654>
    e6f8:	1805883a 	mov	r2,r3
    e6fc:	10c00104 	addi	r3,r2,4
    e700:	1885803a 	cmpltu	r2,r3,r2
    e704:	88a3883a 	add	r17,r17,r2
    e708:	8880202c 	andhi	r2,r17,128
    e70c:	10001c26 	beq	r2,zero,e780 <__muldf3+0x6cc>
    e710:	b02b883a 	mov	r21,r22
    e714:	00800044 	movi	r2,1
    e718:	000b883a 	mov	r5,zero
    e71c:	0029883a 	mov	r20,zero
    e720:	003ec306 	br	e230 <__alt_data_end+0xff00e230>
    e724:	5805883a 	mov	r2,r11
    e728:	003f9906 	br	e590 <__alt_data_end+0xff00e590>
    e72c:	00bff844 	movi	r2,-31
    e730:	1145c83a 	sub	r2,r2,r5
    e734:	8888d83a 	srl	r4,r17,r2
    e738:	00800804 	movi	r2,32
    e73c:	18801a26 	beq	r3,r2,e7a8 <__muldf3+0x6f4>
    e740:	00801004 	movi	r2,64
    e744:	10c5c83a 	sub	r2,r2,r3
    e748:	8884983a 	sll	r2,r17,r2
    e74c:	1204b03a 	or	r2,r2,r8
    e750:	1004c03a 	cmpne	r2,r2,zero
    e754:	2084b03a 	or	r2,r4,r2
    e758:	144001cc 	andi	r17,r2,7
    e75c:	88000d1e 	bne	r17,zero,e794 <__muldf3+0x6e0>
    e760:	000b883a 	mov	r5,zero
    e764:	1028d0fa 	srli	r20,r2,3
    e768:	b02b883a 	mov	r21,r22
    e76c:	0005883a 	mov	r2,zero
    e770:	a468b03a 	or	r20,r20,r17
    e774:	003eae06 	br	e230 <__alt_data_end+0xff00e230>
    e778:	1007883a 	mov	r3,r2
    e77c:	0023883a 	mov	r17,zero
    e780:	880a927a 	slli	r5,r17,9
    e784:	1805883a 	mov	r2,r3
    e788:	8822977a 	slli	r17,r17,29
    e78c:	280ad33a 	srli	r5,r5,12
    e790:	003ff406 	br	e764 <__alt_data_end+0xff00e764>
    e794:	10c003cc 	andi	r3,r2,15
    e798:	01000104 	movi	r4,4
    e79c:	193ff626 	beq	r3,r4,e778 <__alt_data_end+0xff00e778>
    e7a0:	0023883a 	mov	r17,zero
    e7a4:	003fd506 	br	e6fc <__alt_data_end+0xff00e6fc>
    e7a8:	0005883a 	mov	r2,zero
    e7ac:	003fe706 	br	e74c <__alt_data_end+0xff00e74c>
    e7b0:	00800434 	movhi	r2,16
    e7b4:	89400234 	orhi	r5,r17,8
    e7b8:	10bfffc4 	addi	r2,r2,-1
    e7bc:	b02b883a 	mov	r21,r22
    e7c0:	288a703a 	and	r5,r5,r2
    e7c4:	4029883a 	mov	r20,r8
    e7c8:	003eff06 	br	e3c8 <__alt_data_end+0xff00e3c8>

0000e7cc <__subdf3>:
    e7cc:	02000434 	movhi	r8,16
    e7d0:	423fffc4 	addi	r8,r8,-1
    e7d4:	defffb04 	addi	sp,sp,-20
    e7d8:	2a14703a 	and	r10,r5,r8
    e7dc:	3812d53a 	srli	r9,r7,20
    e7e0:	3a10703a 	and	r8,r7,r8
    e7e4:	2006d77a 	srli	r3,r4,29
    e7e8:	3004d77a 	srli	r2,r6,29
    e7ec:	dc000015 	stw	r16,0(sp)
    e7f0:	501490fa 	slli	r10,r10,3
    e7f4:	2820d53a 	srli	r16,r5,20
    e7f8:	401090fa 	slli	r8,r8,3
    e7fc:	dc800215 	stw	r18,8(sp)
    e800:	dc400115 	stw	r17,4(sp)
    e804:	dfc00415 	stw	ra,16(sp)
    e808:	202290fa 	slli	r17,r4,3
    e80c:	dcc00315 	stw	r19,12(sp)
    e810:	4a41ffcc 	andi	r9,r9,2047
    e814:	0101ffc4 	movi	r4,2047
    e818:	2824d7fa 	srli	r18,r5,31
    e81c:	8401ffcc 	andi	r16,r16,2047
    e820:	50c6b03a 	or	r3,r10,r3
    e824:	380ed7fa 	srli	r7,r7,31
    e828:	408ab03a 	or	r5,r8,r2
    e82c:	300c90fa 	slli	r6,r6,3
    e830:	49009626 	beq	r9,r4,ea8c <__subdf3+0x2c0>
    e834:	39c0005c 	xori	r7,r7,1
    e838:	8245c83a 	sub	r2,r16,r9
    e83c:	3c807426 	beq	r7,r18,ea10 <__subdf3+0x244>
    e840:	0080af0e 	bge	zero,r2,eb00 <__subdf3+0x334>
    e844:	48002a1e 	bne	r9,zero,e8f0 <__subdf3+0x124>
    e848:	2988b03a 	or	r4,r5,r6
    e84c:	20009a1e 	bne	r4,zero,eab8 <__subdf3+0x2ec>
    e850:	888001cc 	andi	r2,r17,7
    e854:	10000726 	beq	r2,zero,e874 <__subdf3+0xa8>
    e858:	888003cc 	andi	r2,r17,15
    e85c:	01000104 	movi	r4,4
    e860:	11000426 	beq	r2,r4,e874 <__subdf3+0xa8>
    e864:	890b883a 	add	r5,r17,r4
    e868:	2c63803a 	cmpltu	r17,r5,r17
    e86c:	1c47883a 	add	r3,r3,r17
    e870:	2823883a 	mov	r17,r5
    e874:	1880202c 	andhi	r2,r3,128
    e878:	10005926 	beq	r2,zero,e9e0 <__subdf3+0x214>
    e87c:	84000044 	addi	r16,r16,1
    e880:	0081ffc4 	movi	r2,2047
    e884:	8080be26 	beq	r16,r2,eb80 <__subdf3+0x3b4>
    e888:	017fe034 	movhi	r5,65408
    e88c:	297fffc4 	addi	r5,r5,-1
    e890:	1946703a 	and	r3,r3,r5
    e894:	1804977a 	slli	r2,r3,29
    e898:	1806927a 	slli	r3,r3,9
    e89c:	8822d0fa 	srli	r17,r17,3
    e8a0:	8401ffcc 	andi	r16,r16,2047
    e8a4:	180ad33a 	srli	r5,r3,12
    e8a8:	9100004c 	andi	r4,r18,1
    e8ac:	1444b03a 	or	r2,r2,r17
    e8b0:	80c1ffcc 	andi	r3,r16,2047
    e8b4:	1820953a 	slli	r16,r3,20
    e8b8:	20c03fcc 	andi	r3,r4,255
    e8bc:	180897fa 	slli	r4,r3,31
    e8c0:	00c00434 	movhi	r3,16
    e8c4:	18ffffc4 	addi	r3,r3,-1
    e8c8:	28c6703a 	and	r3,r5,r3
    e8cc:	1c06b03a 	or	r3,r3,r16
    e8d0:	1906b03a 	or	r3,r3,r4
    e8d4:	dfc00417 	ldw	ra,16(sp)
    e8d8:	dcc00317 	ldw	r19,12(sp)
    e8dc:	dc800217 	ldw	r18,8(sp)
    e8e0:	dc400117 	ldw	r17,4(sp)
    e8e4:	dc000017 	ldw	r16,0(sp)
    e8e8:	dec00504 	addi	sp,sp,20
    e8ec:	f800283a 	ret
    e8f0:	0101ffc4 	movi	r4,2047
    e8f4:	813fd626 	beq	r16,r4,e850 <__alt_data_end+0xff00e850>
    e8f8:	29402034 	orhi	r5,r5,128
    e8fc:	01000e04 	movi	r4,56
    e900:	2080a316 	blt	r4,r2,eb90 <__subdf3+0x3c4>
    e904:	010007c4 	movi	r4,31
    e908:	2080c616 	blt	r4,r2,ec24 <__subdf3+0x458>
    e90c:	01000804 	movi	r4,32
    e910:	2089c83a 	sub	r4,r4,r2
    e914:	2910983a 	sll	r8,r5,r4
    e918:	308ed83a 	srl	r7,r6,r2
    e91c:	3108983a 	sll	r4,r6,r4
    e920:	2884d83a 	srl	r2,r5,r2
    e924:	41ccb03a 	or	r6,r8,r7
    e928:	2008c03a 	cmpne	r4,r4,zero
    e92c:	310cb03a 	or	r6,r6,r4
    e930:	898dc83a 	sub	r6,r17,r6
    e934:	89a3803a 	cmpltu	r17,r17,r6
    e938:	1887c83a 	sub	r3,r3,r2
    e93c:	1c47c83a 	sub	r3,r3,r17
    e940:	3023883a 	mov	r17,r6
    e944:	1880202c 	andhi	r2,r3,128
    e948:	10002326 	beq	r2,zero,e9d8 <__subdf3+0x20c>
    e94c:	04c02034 	movhi	r19,128
    e950:	9cffffc4 	addi	r19,r19,-1
    e954:	1ce6703a 	and	r19,r3,r19
    e958:	98007a26 	beq	r19,zero,eb44 <__subdf3+0x378>
    e95c:	9809883a 	mov	r4,r19
    e960:	00029840 	call	2984 <__clzsi2>
    e964:	113ffe04 	addi	r4,r2,-8
    e968:	00c007c4 	movi	r3,31
    e96c:	19007b16 	blt	r3,r4,eb5c <__subdf3+0x390>
    e970:	00800804 	movi	r2,32
    e974:	1105c83a 	sub	r2,r2,r4
    e978:	8884d83a 	srl	r2,r17,r2
    e97c:	9906983a 	sll	r3,r19,r4
    e980:	8922983a 	sll	r17,r17,r4
    e984:	10c4b03a 	or	r2,r2,r3
    e988:	24007816 	blt	r4,r16,eb6c <__subdf3+0x3a0>
    e98c:	2421c83a 	sub	r16,r4,r16
    e990:	80c00044 	addi	r3,r16,1
    e994:	010007c4 	movi	r4,31
    e998:	20c09516 	blt	r4,r3,ebf0 <__subdf3+0x424>
    e99c:	01400804 	movi	r5,32
    e9a0:	28cbc83a 	sub	r5,r5,r3
    e9a4:	88c8d83a 	srl	r4,r17,r3
    e9a8:	8962983a 	sll	r17,r17,r5
    e9ac:	114a983a 	sll	r5,r2,r5
    e9b0:	10c6d83a 	srl	r3,r2,r3
    e9b4:	8804c03a 	cmpne	r2,r17,zero
    e9b8:	290ab03a 	or	r5,r5,r4
    e9bc:	28a2b03a 	or	r17,r5,r2
    e9c0:	0021883a 	mov	r16,zero
    e9c4:	003fa206 	br	e850 <__alt_data_end+0xff00e850>
    e9c8:	2090b03a 	or	r8,r4,r2
    e9cc:	40018e26 	beq	r8,zero,f008 <__subdf3+0x83c>
    e9d0:	1007883a 	mov	r3,r2
    e9d4:	2023883a 	mov	r17,r4
    e9d8:	888001cc 	andi	r2,r17,7
    e9dc:	103f9e1e 	bne	r2,zero,e858 <__alt_data_end+0xff00e858>
    e9e0:	1804977a 	slli	r2,r3,29
    e9e4:	8822d0fa 	srli	r17,r17,3
    e9e8:	1810d0fa 	srli	r8,r3,3
    e9ec:	9100004c 	andi	r4,r18,1
    e9f0:	1444b03a 	or	r2,r2,r17
    e9f4:	00c1ffc4 	movi	r3,2047
    e9f8:	80c02826 	beq	r16,r3,ea9c <__subdf3+0x2d0>
    e9fc:	01400434 	movhi	r5,16
    ea00:	297fffc4 	addi	r5,r5,-1
    ea04:	80e0703a 	and	r16,r16,r3
    ea08:	414a703a 	and	r5,r8,r5
    ea0c:	003fa806 	br	e8b0 <__alt_data_end+0xff00e8b0>
    ea10:	0080630e 	bge	zero,r2,eba0 <__subdf3+0x3d4>
    ea14:	48003026 	beq	r9,zero,ead8 <__subdf3+0x30c>
    ea18:	0101ffc4 	movi	r4,2047
    ea1c:	813f8c26 	beq	r16,r4,e850 <__alt_data_end+0xff00e850>
    ea20:	29402034 	orhi	r5,r5,128
    ea24:	01000e04 	movi	r4,56
    ea28:	2080a90e 	bge	r4,r2,ecd0 <__subdf3+0x504>
    ea2c:	298cb03a 	or	r6,r5,r6
    ea30:	3012c03a 	cmpne	r9,r6,zero
    ea34:	0005883a 	mov	r2,zero
    ea38:	4c53883a 	add	r9,r9,r17
    ea3c:	4c63803a 	cmpltu	r17,r9,r17
    ea40:	10c7883a 	add	r3,r2,r3
    ea44:	88c7883a 	add	r3,r17,r3
    ea48:	4823883a 	mov	r17,r9
    ea4c:	1880202c 	andhi	r2,r3,128
    ea50:	1000d026 	beq	r2,zero,ed94 <__subdf3+0x5c8>
    ea54:	84000044 	addi	r16,r16,1
    ea58:	0081ffc4 	movi	r2,2047
    ea5c:	8080fe26 	beq	r16,r2,ee58 <__subdf3+0x68c>
    ea60:	00bfe034 	movhi	r2,65408
    ea64:	10bfffc4 	addi	r2,r2,-1
    ea68:	1886703a 	and	r3,r3,r2
    ea6c:	880ad07a 	srli	r5,r17,1
    ea70:	180497fa 	slli	r2,r3,31
    ea74:	8900004c 	andi	r4,r17,1
    ea78:	2922b03a 	or	r17,r5,r4
    ea7c:	1806d07a 	srli	r3,r3,1
    ea80:	1462b03a 	or	r17,r2,r17
    ea84:	3825883a 	mov	r18,r7
    ea88:	003f7106 	br	e850 <__alt_data_end+0xff00e850>
    ea8c:	2984b03a 	or	r2,r5,r6
    ea90:	103f6826 	beq	r2,zero,e834 <__alt_data_end+0xff00e834>
    ea94:	39c03fcc 	andi	r7,r7,255
    ea98:	003f6706 	br	e838 <__alt_data_end+0xff00e838>
    ea9c:	4086b03a 	or	r3,r8,r2
    eaa0:	18015226 	beq	r3,zero,efec <__subdf3+0x820>
    eaa4:	00c00434 	movhi	r3,16
    eaa8:	41400234 	orhi	r5,r8,8
    eaac:	18ffffc4 	addi	r3,r3,-1
    eab0:	28ca703a 	and	r5,r5,r3
    eab4:	003f7e06 	br	e8b0 <__alt_data_end+0xff00e8b0>
    eab8:	10bfffc4 	addi	r2,r2,-1
    eabc:	1000491e 	bne	r2,zero,ebe4 <__subdf3+0x418>
    eac0:	898fc83a 	sub	r7,r17,r6
    eac4:	89e3803a 	cmpltu	r17,r17,r7
    eac8:	1947c83a 	sub	r3,r3,r5
    eacc:	1c47c83a 	sub	r3,r3,r17
    ead0:	3823883a 	mov	r17,r7
    ead4:	003f9b06 	br	e944 <__alt_data_end+0xff00e944>
    ead8:	2988b03a 	or	r4,r5,r6
    eadc:	203f5c26 	beq	r4,zero,e850 <__alt_data_end+0xff00e850>
    eae0:	10bfffc4 	addi	r2,r2,-1
    eae4:	1000931e 	bne	r2,zero,ed34 <__subdf3+0x568>
    eae8:	898d883a 	add	r6,r17,r6
    eaec:	3463803a 	cmpltu	r17,r6,r17
    eaf0:	1947883a 	add	r3,r3,r5
    eaf4:	88c7883a 	add	r3,r17,r3
    eaf8:	3023883a 	mov	r17,r6
    eafc:	003fd306 	br	ea4c <__alt_data_end+0xff00ea4c>
    eb00:	1000541e 	bne	r2,zero,ec54 <__subdf3+0x488>
    eb04:	80800044 	addi	r2,r16,1
    eb08:	1081ffcc 	andi	r2,r2,2047
    eb0c:	01000044 	movi	r4,1
    eb10:	2080a20e 	bge	r4,r2,ed9c <__subdf3+0x5d0>
    eb14:	8989c83a 	sub	r4,r17,r6
    eb18:	8905803a 	cmpltu	r2,r17,r4
    eb1c:	1967c83a 	sub	r19,r3,r5
    eb20:	98a7c83a 	sub	r19,r19,r2
    eb24:	9880202c 	andhi	r2,r19,128
    eb28:	10006326 	beq	r2,zero,ecb8 <__subdf3+0x4ec>
    eb2c:	3463c83a 	sub	r17,r6,r17
    eb30:	28c7c83a 	sub	r3,r5,r3
    eb34:	344d803a 	cmpltu	r6,r6,r17
    eb38:	19a7c83a 	sub	r19,r3,r6
    eb3c:	3825883a 	mov	r18,r7
    eb40:	983f861e 	bne	r19,zero,e95c <__alt_data_end+0xff00e95c>
    eb44:	8809883a 	mov	r4,r17
    eb48:	00029840 	call	2984 <__clzsi2>
    eb4c:	10800804 	addi	r2,r2,32
    eb50:	113ffe04 	addi	r4,r2,-8
    eb54:	00c007c4 	movi	r3,31
    eb58:	193f850e 	bge	r3,r4,e970 <__alt_data_end+0xff00e970>
    eb5c:	10bff604 	addi	r2,r2,-40
    eb60:	8884983a 	sll	r2,r17,r2
    eb64:	0023883a 	mov	r17,zero
    eb68:	243f880e 	bge	r4,r16,e98c <__alt_data_end+0xff00e98c>
    eb6c:	00ffe034 	movhi	r3,65408
    eb70:	18ffffc4 	addi	r3,r3,-1
    eb74:	8121c83a 	sub	r16,r16,r4
    eb78:	10c6703a 	and	r3,r2,r3
    eb7c:	003f3406 	br	e850 <__alt_data_end+0xff00e850>
    eb80:	9100004c 	andi	r4,r18,1
    eb84:	000b883a 	mov	r5,zero
    eb88:	0005883a 	mov	r2,zero
    eb8c:	003f4806 	br	e8b0 <__alt_data_end+0xff00e8b0>
    eb90:	298cb03a 	or	r6,r5,r6
    eb94:	300cc03a 	cmpne	r6,r6,zero
    eb98:	0005883a 	mov	r2,zero
    eb9c:	003f6406 	br	e930 <__alt_data_end+0xff00e930>
    eba0:	10009a1e 	bne	r2,zero,ee0c <__subdf3+0x640>
    eba4:	82400044 	addi	r9,r16,1
    eba8:	4881ffcc 	andi	r2,r9,2047
    ebac:	02800044 	movi	r10,1
    ebb0:	5080670e 	bge	r10,r2,ed50 <__subdf3+0x584>
    ebb4:	0081ffc4 	movi	r2,2047
    ebb8:	4880af26 	beq	r9,r2,ee78 <__subdf3+0x6ac>
    ebbc:	898d883a 	add	r6,r17,r6
    ebc0:	1945883a 	add	r2,r3,r5
    ebc4:	3447803a 	cmpltu	r3,r6,r17
    ebc8:	1887883a 	add	r3,r3,r2
    ebcc:	182297fa 	slli	r17,r3,31
    ebd0:	300cd07a 	srli	r6,r6,1
    ebd4:	1806d07a 	srli	r3,r3,1
    ebd8:	4821883a 	mov	r16,r9
    ebdc:	89a2b03a 	or	r17,r17,r6
    ebe0:	003f1b06 	br	e850 <__alt_data_end+0xff00e850>
    ebe4:	0101ffc4 	movi	r4,2047
    ebe8:	813f441e 	bne	r16,r4,e8fc <__alt_data_end+0xff00e8fc>
    ebec:	003f1806 	br	e850 <__alt_data_end+0xff00e850>
    ebf0:	843ff844 	addi	r16,r16,-31
    ebf4:	01400804 	movi	r5,32
    ebf8:	1408d83a 	srl	r4,r2,r16
    ebfc:	19405026 	beq	r3,r5,ed40 <__subdf3+0x574>
    ec00:	01401004 	movi	r5,64
    ec04:	28c7c83a 	sub	r3,r5,r3
    ec08:	10c4983a 	sll	r2,r2,r3
    ec0c:	88a2b03a 	or	r17,r17,r2
    ec10:	8822c03a 	cmpne	r17,r17,zero
    ec14:	2462b03a 	or	r17,r4,r17
    ec18:	0007883a 	mov	r3,zero
    ec1c:	0021883a 	mov	r16,zero
    ec20:	003f6d06 	br	e9d8 <__alt_data_end+0xff00e9d8>
    ec24:	11fff804 	addi	r7,r2,-32
    ec28:	01000804 	movi	r4,32
    ec2c:	29ced83a 	srl	r7,r5,r7
    ec30:	11004526 	beq	r2,r4,ed48 <__subdf3+0x57c>
    ec34:	01001004 	movi	r4,64
    ec38:	2089c83a 	sub	r4,r4,r2
    ec3c:	2904983a 	sll	r2,r5,r4
    ec40:	118cb03a 	or	r6,r2,r6
    ec44:	300cc03a 	cmpne	r6,r6,zero
    ec48:	398cb03a 	or	r6,r7,r6
    ec4c:	0005883a 	mov	r2,zero
    ec50:	003f3706 	br	e930 <__alt_data_end+0xff00e930>
    ec54:	80002a26 	beq	r16,zero,ed00 <__subdf3+0x534>
    ec58:	0101ffc4 	movi	r4,2047
    ec5c:	49006626 	beq	r9,r4,edf8 <__subdf3+0x62c>
    ec60:	0085c83a 	sub	r2,zero,r2
    ec64:	18c02034 	orhi	r3,r3,128
    ec68:	01000e04 	movi	r4,56
    ec6c:	20807e16 	blt	r4,r2,ee68 <__subdf3+0x69c>
    ec70:	010007c4 	movi	r4,31
    ec74:	2080e716 	blt	r4,r2,f014 <__subdf3+0x848>
    ec78:	01000804 	movi	r4,32
    ec7c:	2089c83a 	sub	r4,r4,r2
    ec80:	1914983a 	sll	r10,r3,r4
    ec84:	8890d83a 	srl	r8,r17,r2
    ec88:	8908983a 	sll	r4,r17,r4
    ec8c:	1884d83a 	srl	r2,r3,r2
    ec90:	5222b03a 	or	r17,r10,r8
    ec94:	2006c03a 	cmpne	r3,r4,zero
    ec98:	88e2b03a 	or	r17,r17,r3
    ec9c:	3463c83a 	sub	r17,r6,r17
    eca0:	2885c83a 	sub	r2,r5,r2
    eca4:	344d803a 	cmpltu	r6,r6,r17
    eca8:	1187c83a 	sub	r3,r2,r6
    ecac:	4821883a 	mov	r16,r9
    ecb0:	3825883a 	mov	r18,r7
    ecb4:	003f2306 	br	e944 <__alt_data_end+0xff00e944>
    ecb8:	24d0b03a 	or	r8,r4,r19
    ecbc:	40001b1e 	bne	r8,zero,ed2c <__subdf3+0x560>
    ecc0:	0005883a 	mov	r2,zero
    ecc4:	0009883a 	mov	r4,zero
    ecc8:	0021883a 	mov	r16,zero
    eccc:	003f4906 	br	e9f4 <__alt_data_end+0xff00e9f4>
    ecd0:	010007c4 	movi	r4,31
    ecd4:	20803a16 	blt	r4,r2,edc0 <__subdf3+0x5f4>
    ecd8:	01000804 	movi	r4,32
    ecdc:	2089c83a 	sub	r4,r4,r2
    ece0:	2912983a 	sll	r9,r5,r4
    ece4:	3090d83a 	srl	r8,r6,r2
    ece8:	3108983a 	sll	r4,r6,r4
    ecec:	2884d83a 	srl	r2,r5,r2
    ecf0:	4a12b03a 	or	r9,r9,r8
    ecf4:	2008c03a 	cmpne	r4,r4,zero
    ecf8:	4912b03a 	or	r9,r9,r4
    ecfc:	003f4e06 	br	ea38 <__alt_data_end+0xff00ea38>
    ed00:	1c48b03a 	or	r4,r3,r17
    ed04:	20003c26 	beq	r4,zero,edf8 <__subdf3+0x62c>
    ed08:	0084303a 	nor	r2,zero,r2
    ed0c:	1000381e 	bne	r2,zero,edf0 <__subdf3+0x624>
    ed10:	3463c83a 	sub	r17,r6,r17
    ed14:	28c5c83a 	sub	r2,r5,r3
    ed18:	344d803a 	cmpltu	r6,r6,r17
    ed1c:	1187c83a 	sub	r3,r2,r6
    ed20:	4821883a 	mov	r16,r9
    ed24:	3825883a 	mov	r18,r7
    ed28:	003f0606 	br	e944 <__alt_data_end+0xff00e944>
    ed2c:	2023883a 	mov	r17,r4
    ed30:	003f0906 	br	e958 <__alt_data_end+0xff00e958>
    ed34:	0101ffc4 	movi	r4,2047
    ed38:	813f3a1e 	bne	r16,r4,ea24 <__alt_data_end+0xff00ea24>
    ed3c:	003ec406 	br	e850 <__alt_data_end+0xff00e850>
    ed40:	0005883a 	mov	r2,zero
    ed44:	003fb106 	br	ec0c <__alt_data_end+0xff00ec0c>
    ed48:	0005883a 	mov	r2,zero
    ed4c:	003fbc06 	br	ec40 <__alt_data_end+0xff00ec40>
    ed50:	1c44b03a 	or	r2,r3,r17
    ed54:	80008e1e 	bne	r16,zero,ef90 <__subdf3+0x7c4>
    ed58:	1000c826 	beq	r2,zero,f07c <__subdf3+0x8b0>
    ed5c:	2984b03a 	or	r2,r5,r6
    ed60:	103ebb26 	beq	r2,zero,e850 <__alt_data_end+0xff00e850>
    ed64:	8989883a 	add	r4,r17,r6
    ed68:	1945883a 	add	r2,r3,r5
    ed6c:	2447803a 	cmpltu	r3,r4,r17
    ed70:	1887883a 	add	r3,r3,r2
    ed74:	1880202c 	andhi	r2,r3,128
    ed78:	2023883a 	mov	r17,r4
    ed7c:	103f1626 	beq	r2,zero,e9d8 <__alt_data_end+0xff00e9d8>
    ed80:	00bfe034 	movhi	r2,65408
    ed84:	10bfffc4 	addi	r2,r2,-1
    ed88:	5021883a 	mov	r16,r10
    ed8c:	1886703a 	and	r3,r3,r2
    ed90:	003eaf06 	br	e850 <__alt_data_end+0xff00e850>
    ed94:	3825883a 	mov	r18,r7
    ed98:	003f0f06 	br	e9d8 <__alt_data_end+0xff00e9d8>
    ed9c:	1c44b03a 	or	r2,r3,r17
    eda0:	8000251e 	bne	r16,zero,ee38 <__subdf3+0x66c>
    eda4:	1000661e 	bne	r2,zero,ef40 <__subdf3+0x774>
    eda8:	2990b03a 	or	r8,r5,r6
    edac:	40009626 	beq	r8,zero,f008 <__subdf3+0x83c>
    edb0:	2807883a 	mov	r3,r5
    edb4:	3023883a 	mov	r17,r6
    edb8:	3825883a 	mov	r18,r7
    edbc:	003ea406 	br	e850 <__alt_data_end+0xff00e850>
    edc0:	127ff804 	addi	r9,r2,-32
    edc4:	01000804 	movi	r4,32
    edc8:	2a52d83a 	srl	r9,r5,r9
    edcc:	11008c26 	beq	r2,r4,f000 <__subdf3+0x834>
    edd0:	01001004 	movi	r4,64
    edd4:	2085c83a 	sub	r2,r4,r2
    edd8:	2884983a 	sll	r2,r5,r2
    eddc:	118cb03a 	or	r6,r2,r6
    ede0:	300cc03a 	cmpne	r6,r6,zero
    ede4:	4992b03a 	or	r9,r9,r6
    ede8:	0005883a 	mov	r2,zero
    edec:	003f1206 	br	ea38 <__alt_data_end+0xff00ea38>
    edf0:	0101ffc4 	movi	r4,2047
    edf4:	493f9c1e 	bne	r9,r4,ec68 <__alt_data_end+0xff00ec68>
    edf8:	2807883a 	mov	r3,r5
    edfc:	3023883a 	mov	r17,r6
    ee00:	4821883a 	mov	r16,r9
    ee04:	3825883a 	mov	r18,r7
    ee08:	003e9106 	br	e850 <__alt_data_end+0xff00e850>
    ee0c:	80001f1e 	bne	r16,zero,ee8c <__subdf3+0x6c0>
    ee10:	1c48b03a 	or	r4,r3,r17
    ee14:	20005a26 	beq	r4,zero,ef80 <__subdf3+0x7b4>
    ee18:	0084303a 	nor	r2,zero,r2
    ee1c:	1000561e 	bne	r2,zero,ef78 <__subdf3+0x7ac>
    ee20:	89a3883a 	add	r17,r17,r6
    ee24:	1945883a 	add	r2,r3,r5
    ee28:	898d803a 	cmpltu	r6,r17,r6
    ee2c:	3087883a 	add	r3,r6,r2
    ee30:	4821883a 	mov	r16,r9
    ee34:	003f0506 	br	ea4c <__alt_data_end+0xff00ea4c>
    ee38:	10002b1e 	bne	r2,zero,eee8 <__subdf3+0x71c>
    ee3c:	2984b03a 	or	r2,r5,r6
    ee40:	10008026 	beq	r2,zero,f044 <__subdf3+0x878>
    ee44:	2807883a 	mov	r3,r5
    ee48:	3023883a 	mov	r17,r6
    ee4c:	3825883a 	mov	r18,r7
    ee50:	0401ffc4 	movi	r16,2047
    ee54:	003e7e06 	br	e850 <__alt_data_end+0xff00e850>
    ee58:	3809883a 	mov	r4,r7
    ee5c:	0011883a 	mov	r8,zero
    ee60:	0005883a 	mov	r2,zero
    ee64:	003ee306 	br	e9f4 <__alt_data_end+0xff00e9f4>
    ee68:	1c62b03a 	or	r17,r3,r17
    ee6c:	8822c03a 	cmpne	r17,r17,zero
    ee70:	0005883a 	mov	r2,zero
    ee74:	003f8906 	br	ec9c <__alt_data_end+0xff00ec9c>
    ee78:	3809883a 	mov	r4,r7
    ee7c:	4821883a 	mov	r16,r9
    ee80:	0011883a 	mov	r8,zero
    ee84:	0005883a 	mov	r2,zero
    ee88:	003eda06 	br	e9f4 <__alt_data_end+0xff00e9f4>
    ee8c:	0101ffc4 	movi	r4,2047
    ee90:	49003b26 	beq	r9,r4,ef80 <__subdf3+0x7b4>
    ee94:	0085c83a 	sub	r2,zero,r2
    ee98:	18c02034 	orhi	r3,r3,128
    ee9c:	01000e04 	movi	r4,56
    eea0:	20806e16 	blt	r4,r2,f05c <__subdf3+0x890>
    eea4:	010007c4 	movi	r4,31
    eea8:	20807716 	blt	r4,r2,f088 <__subdf3+0x8bc>
    eeac:	01000804 	movi	r4,32
    eeb0:	2089c83a 	sub	r4,r4,r2
    eeb4:	1914983a 	sll	r10,r3,r4
    eeb8:	8890d83a 	srl	r8,r17,r2
    eebc:	8908983a 	sll	r4,r17,r4
    eec0:	1884d83a 	srl	r2,r3,r2
    eec4:	5222b03a 	or	r17,r10,r8
    eec8:	2006c03a 	cmpne	r3,r4,zero
    eecc:	88e2b03a 	or	r17,r17,r3
    eed0:	89a3883a 	add	r17,r17,r6
    eed4:	1145883a 	add	r2,r2,r5
    eed8:	898d803a 	cmpltu	r6,r17,r6
    eedc:	3087883a 	add	r3,r6,r2
    eee0:	4821883a 	mov	r16,r9
    eee4:	003ed906 	br	ea4c <__alt_data_end+0xff00ea4c>
    eee8:	2984b03a 	or	r2,r5,r6
    eeec:	10004226 	beq	r2,zero,eff8 <__subdf3+0x82c>
    eef0:	1808d0fa 	srli	r4,r3,3
    eef4:	8822d0fa 	srli	r17,r17,3
    eef8:	1806977a 	slli	r3,r3,29
    eefc:	2080022c 	andhi	r2,r4,8
    ef00:	1c62b03a 	or	r17,r3,r17
    ef04:	10000826 	beq	r2,zero,ef28 <__subdf3+0x75c>
    ef08:	2812d0fa 	srli	r9,r5,3
    ef0c:	4880022c 	andhi	r2,r9,8
    ef10:	1000051e 	bne	r2,zero,ef28 <__subdf3+0x75c>
    ef14:	300cd0fa 	srli	r6,r6,3
    ef18:	2804977a 	slli	r2,r5,29
    ef1c:	4809883a 	mov	r4,r9
    ef20:	3825883a 	mov	r18,r7
    ef24:	11a2b03a 	or	r17,r2,r6
    ef28:	8806d77a 	srli	r3,r17,29
    ef2c:	200890fa 	slli	r4,r4,3
    ef30:	882290fa 	slli	r17,r17,3
    ef34:	0401ffc4 	movi	r16,2047
    ef38:	1906b03a 	or	r3,r3,r4
    ef3c:	003e4406 	br	e850 <__alt_data_end+0xff00e850>
    ef40:	2984b03a 	or	r2,r5,r6
    ef44:	103e4226 	beq	r2,zero,e850 <__alt_data_end+0xff00e850>
    ef48:	8989c83a 	sub	r4,r17,r6
    ef4c:	8911803a 	cmpltu	r8,r17,r4
    ef50:	1945c83a 	sub	r2,r3,r5
    ef54:	1205c83a 	sub	r2,r2,r8
    ef58:	1200202c 	andhi	r8,r2,128
    ef5c:	403e9a26 	beq	r8,zero,e9c8 <__alt_data_end+0xff00e9c8>
    ef60:	3463c83a 	sub	r17,r6,r17
    ef64:	28c5c83a 	sub	r2,r5,r3
    ef68:	344d803a 	cmpltu	r6,r6,r17
    ef6c:	1187c83a 	sub	r3,r2,r6
    ef70:	3825883a 	mov	r18,r7
    ef74:	003e3606 	br	e850 <__alt_data_end+0xff00e850>
    ef78:	0101ffc4 	movi	r4,2047
    ef7c:	493fc71e 	bne	r9,r4,ee9c <__alt_data_end+0xff00ee9c>
    ef80:	2807883a 	mov	r3,r5
    ef84:	3023883a 	mov	r17,r6
    ef88:	4821883a 	mov	r16,r9
    ef8c:	003e3006 	br	e850 <__alt_data_end+0xff00e850>
    ef90:	10003626 	beq	r2,zero,f06c <__subdf3+0x8a0>
    ef94:	2984b03a 	or	r2,r5,r6
    ef98:	10001726 	beq	r2,zero,eff8 <__subdf3+0x82c>
    ef9c:	1808d0fa 	srli	r4,r3,3
    efa0:	8822d0fa 	srli	r17,r17,3
    efa4:	1806977a 	slli	r3,r3,29
    efa8:	2080022c 	andhi	r2,r4,8
    efac:	1c62b03a 	or	r17,r3,r17
    efb0:	10000726 	beq	r2,zero,efd0 <__subdf3+0x804>
    efb4:	2812d0fa 	srli	r9,r5,3
    efb8:	4880022c 	andhi	r2,r9,8
    efbc:	1000041e 	bne	r2,zero,efd0 <__subdf3+0x804>
    efc0:	300cd0fa 	srli	r6,r6,3
    efc4:	2804977a 	slli	r2,r5,29
    efc8:	4809883a 	mov	r4,r9
    efcc:	11a2b03a 	or	r17,r2,r6
    efd0:	8806d77a 	srli	r3,r17,29
    efd4:	200890fa 	slli	r4,r4,3
    efd8:	882290fa 	slli	r17,r17,3
    efdc:	3825883a 	mov	r18,r7
    efe0:	1906b03a 	or	r3,r3,r4
    efe4:	0401ffc4 	movi	r16,2047
    efe8:	003e1906 	br	e850 <__alt_data_end+0xff00e850>
    efec:	000b883a 	mov	r5,zero
    eff0:	0005883a 	mov	r2,zero
    eff4:	003e2e06 	br	e8b0 <__alt_data_end+0xff00e8b0>
    eff8:	0401ffc4 	movi	r16,2047
    effc:	003e1406 	br	e850 <__alt_data_end+0xff00e850>
    f000:	0005883a 	mov	r2,zero
    f004:	003f7506 	br	eddc <__alt_data_end+0xff00eddc>
    f008:	0005883a 	mov	r2,zero
    f00c:	0009883a 	mov	r4,zero
    f010:	003e7806 	br	e9f4 <__alt_data_end+0xff00e9f4>
    f014:	123ff804 	addi	r8,r2,-32
    f018:	01000804 	movi	r4,32
    f01c:	1a10d83a 	srl	r8,r3,r8
    f020:	11002526 	beq	r2,r4,f0b8 <__subdf3+0x8ec>
    f024:	01001004 	movi	r4,64
    f028:	2085c83a 	sub	r2,r4,r2
    f02c:	1884983a 	sll	r2,r3,r2
    f030:	1444b03a 	or	r2,r2,r17
    f034:	1004c03a 	cmpne	r2,r2,zero
    f038:	40a2b03a 	or	r17,r8,r2
    f03c:	0005883a 	mov	r2,zero
    f040:	003f1606 	br	ec9c <__alt_data_end+0xff00ec9c>
    f044:	02000434 	movhi	r8,16
    f048:	0009883a 	mov	r4,zero
    f04c:	423fffc4 	addi	r8,r8,-1
    f050:	00bfffc4 	movi	r2,-1
    f054:	0401ffc4 	movi	r16,2047
    f058:	003e6606 	br	e9f4 <__alt_data_end+0xff00e9f4>
    f05c:	1c62b03a 	or	r17,r3,r17
    f060:	8822c03a 	cmpne	r17,r17,zero
    f064:	0005883a 	mov	r2,zero
    f068:	003f9906 	br	eed0 <__alt_data_end+0xff00eed0>
    f06c:	2807883a 	mov	r3,r5
    f070:	3023883a 	mov	r17,r6
    f074:	0401ffc4 	movi	r16,2047
    f078:	003df506 	br	e850 <__alt_data_end+0xff00e850>
    f07c:	2807883a 	mov	r3,r5
    f080:	3023883a 	mov	r17,r6
    f084:	003df206 	br	e850 <__alt_data_end+0xff00e850>
    f088:	123ff804 	addi	r8,r2,-32
    f08c:	01000804 	movi	r4,32
    f090:	1a10d83a 	srl	r8,r3,r8
    f094:	11000a26 	beq	r2,r4,f0c0 <__subdf3+0x8f4>
    f098:	01001004 	movi	r4,64
    f09c:	2085c83a 	sub	r2,r4,r2
    f0a0:	1884983a 	sll	r2,r3,r2
    f0a4:	1444b03a 	or	r2,r2,r17
    f0a8:	1004c03a 	cmpne	r2,r2,zero
    f0ac:	40a2b03a 	or	r17,r8,r2
    f0b0:	0005883a 	mov	r2,zero
    f0b4:	003f8606 	br	eed0 <__alt_data_end+0xff00eed0>
    f0b8:	0005883a 	mov	r2,zero
    f0bc:	003fdc06 	br	f030 <__alt_data_end+0xff00f030>
    f0c0:	0005883a 	mov	r2,zero
    f0c4:	003ff706 	br	f0a4 <__alt_data_end+0xff00f0a4>

0000f0c8 <__fixdfsi>:
    f0c8:	280cd53a 	srli	r6,r5,20
    f0cc:	00c00434 	movhi	r3,16
    f0d0:	18ffffc4 	addi	r3,r3,-1
    f0d4:	3181ffcc 	andi	r6,r6,2047
    f0d8:	01c0ff84 	movi	r7,1022
    f0dc:	28c6703a 	and	r3,r5,r3
    f0e0:	280ad7fa 	srli	r5,r5,31
    f0e4:	3980120e 	bge	r7,r6,f130 <__fixdfsi+0x68>
    f0e8:	00810744 	movi	r2,1053
    f0ec:	11800c16 	blt	r2,r6,f120 <__fixdfsi+0x58>
    f0f0:	00810cc4 	movi	r2,1075
    f0f4:	1185c83a 	sub	r2,r2,r6
    f0f8:	01c007c4 	movi	r7,31
    f0fc:	18c00434 	orhi	r3,r3,16
    f100:	38800d16 	blt	r7,r2,f138 <__fixdfsi+0x70>
    f104:	31befb44 	addi	r6,r6,-1043
    f108:	2084d83a 	srl	r2,r4,r2
    f10c:	1986983a 	sll	r3,r3,r6
    f110:	1884b03a 	or	r2,r3,r2
    f114:	28000726 	beq	r5,zero,f134 <__fixdfsi+0x6c>
    f118:	0085c83a 	sub	r2,zero,r2
    f11c:	f800283a 	ret
    f120:	00a00034 	movhi	r2,32768
    f124:	10bfffc4 	addi	r2,r2,-1
    f128:	2885883a 	add	r2,r5,r2
    f12c:	f800283a 	ret
    f130:	0005883a 	mov	r2,zero
    f134:	f800283a 	ret
    f138:	008104c4 	movi	r2,1043
    f13c:	1185c83a 	sub	r2,r2,r6
    f140:	1884d83a 	srl	r2,r3,r2
    f144:	003ff306 	br	f114 <__alt_data_end+0xff00f114>

0000f148 <__floatsidf>:
    f148:	defffd04 	addi	sp,sp,-12
    f14c:	dfc00215 	stw	ra,8(sp)
    f150:	dc400115 	stw	r17,4(sp)
    f154:	dc000015 	stw	r16,0(sp)
    f158:	20002b26 	beq	r4,zero,f208 <__floatsidf+0xc0>
    f15c:	2023883a 	mov	r17,r4
    f160:	2020d7fa 	srli	r16,r4,31
    f164:	20002d16 	blt	r4,zero,f21c <__floatsidf+0xd4>
    f168:	8809883a 	mov	r4,r17
    f16c:	00029840 	call	2984 <__clzsi2>
    f170:	01410784 	movi	r5,1054
    f174:	288bc83a 	sub	r5,r5,r2
    f178:	01010cc4 	movi	r4,1075
    f17c:	2149c83a 	sub	r4,r4,r5
    f180:	00c007c4 	movi	r3,31
    f184:	1900160e 	bge	r3,r4,f1e0 <__floatsidf+0x98>
    f188:	00c104c4 	movi	r3,1043
    f18c:	1947c83a 	sub	r3,r3,r5
    f190:	88c6983a 	sll	r3,r17,r3
    f194:	00800434 	movhi	r2,16
    f198:	10bfffc4 	addi	r2,r2,-1
    f19c:	1886703a 	and	r3,r3,r2
    f1a0:	2941ffcc 	andi	r5,r5,2047
    f1a4:	800d883a 	mov	r6,r16
    f1a8:	0005883a 	mov	r2,zero
    f1ac:	280a953a 	slli	r5,r5,20
    f1b0:	31803fcc 	andi	r6,r6,255
    f1b4:	01000434 	movhi	r4,16
    f1b8:	300c97fa 	slli	r6,r6,31
    f1bc:	213fffc4 	addi	r4,r4,-1
    f1c0:	1906703a 	and	r3,r3,r4
    f1c4:	1946b03a 	or	r3,r3,r5
    f1c8:	1986b03a 	or	r3,r3,r6
    f1cc:	dfc00217 	ldw	ra,8(sp)
    f1d0:	dc400117 	ldw	r17,4(sp)
    f1d4:	dc000017 	ldw	r16,0(sp)
    f1d8:	dec00304 	addi	sp,sp,12
    f1dc:	f800283a 	ret
    f1e0:	00c002c4 	movi	r3,11
    f1e4:	1887c83a 	sub	r3,r3,r2
    f1e8:	88c6d83a 	srl	r3,r17,r3
    f1ec:	8904983a 	sll	r2,r17,r4
    f1f0:	01000434 	movhi	r4,16
    f1f4:	213fffc4 	addi	r4,r4,-1
    f1f8:	2941ffcc 	andi	r5,r5,2047
    f1fc:	1906703a 	and	r3,r3,r4
    f200:	800d883a 	mov	r6,r16
    f204:	003fe906 	br	f1ac <__alt_data_end+0xff00f1ac>
    f208:	000d883a 	mov	r6,zero
    f20c:	000b883a 	mov	r5,zero
    f210:	0007883a 	mov	r3,zero
    f214:	0005883a 	mov	r2,zero
    f218:	003fe406 	br	f1ac <__alt_data_end+0xff00f1ac>
    f21c:	0123c83a 	sub	r17,zero,r4
    f220:	003fd106 	br	f168 <__alt_data_end+0xff00f168>

0000f224 <__floatunsidf>:
    f224:	defffe04 	addi	sp,sp,-8
    f228:	dc000015 	stw	r16,0(sp)
    f22c:	dfc00115 	stw	ra,4(sp)
    f230:	2021883a 	mov	r16,r4
    f234:	20002226 	beq	r4,zero,f2c0 <__floatunsidf+0x9c>
    f238:	00029840 	call	2984 <__clzsi2>
    f23c:	01010784 	movi	r4,1054
    f240:	2089c83a 	sub	r4,r4,r2
    f244:	01810cc4 	movi	r6,1075
    f248:	310dc83a 	sub	r6,r6,r4
    f24c:	00c007c4 	movi	r3,31
    f250:	1980120e 	bge	r3,r6,f29c <__floatunsidf+0x78>
    f254:	00c104c4 	movi	r3,1043
    f258:	1907c83a 	sub	r3,r3,r4
    f25c:	80ca983a 	sll	r5,r16,r3
    f260:	00800434 	movhi	r2,16
    f264:	10bfffc4 	addi	r2,r2,-1
    f268:	2101ffcc 	andi	r4,r4,2047
    f26c:	0021883a 	mov	r16,zero
    f270:	288a703a 	and	r5,r5,r2
    f274:	2008953a 	slli	r4,r4,20
    f278:	00c00434 	movhi	r3,16
    f27c:	18ffffc4 	addi	r3,r3,-1
    f280:	28c6703a 	and	r3,r5,r3
    f284:	8005883a 	mov	r2,r16
    f288:	1906b03a 	or	r3,r3,r4
    f28c:	dfc00117 	ldw	ra,4(sp)
    f290:	dc000017 	ldw	r16,0(sp)
    f294:	dec00204 	addi	sp,sp,8
    f298:	f800283a 	ret
    f29c:	00c002c4 	movi	r3,11
    f2a0:	188bc83a 	sub	r5,r3,r2
    f2a4:	814ad83a 	srl	r5,r16,r5
    f2a8:	00c00434 	movhi	r3,16
    f2ac:	18ffffc4 	addi	r3,r3,-1
    f2b0:	81a0983a 	sll	r16,r16,r6
    f2b4:	2101ffcc 	andi	r4,r4,2047
    f2b8:	28ca703a 	and	r5,r5,r3
    f2bc:	003fed06 	br	f274 <__alt_data_end+0xff00f274>
    f2c0:	0009883a 	mov	r4,zero
    f2c4:	000b883a 	mov	r5,zero
    f2c8:	003fea06 	br	f274 <__alt_data_end+0xff00f274>

0000f2cc <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
    f2cc:	defffe04 	addi	sp,sp,-8
    f2d0:	dfc00115 	stw	ra,4(sp)
    f2d4:	df000015 	stw	fp,0(sp)
    f2d8:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
    f2dc:	d0a00b17 	ldw	r2,-32724(gp)
    f2e0:	10000326 	beq	r2,zero,f2f0 <alt_get_errno+0x24>
    f2e4:	d0a00b17 	ldw	r2,-32724(gp)
    f2e8:	103ee83a 	callr	r2
    f2ec:	00000106 	br	f2f4 <alt_get_errno+0x28>
    f2f0:	d0a6d804 	addi	r2,gp,-25760
}
    f2f4:	e037883a 	mov	sp,fp
    f2f8:	dfc00117 	ldw	ra,4(sp)
    f2fc:	df000017 	ldw	fp,0(sp)
    f300:	dec00204 	addi	sp,sp,8
    f304:	f800283a 	ret

0000f308 <close>:
 *
 * ALT_CLOSE is mapped onto the close() system call in alt_syscall.h
 */
 
int ALT_CLOSE (int fildes)
{
    f308:	defffb04 	addi	sp,sp,-20
    f30c:	dfc00415 	stw	ra,16(sp)
    f310:	df000315 	stw	fp,12(sp)
    f314:	df000304 	addi	fp,sp,12
    f318:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (fildes < 0) ? NULL : &alt_fd_list[fildes];
    f31c:	e0bfff17 	ldw	r2,-4(fp)
    f320:	10000616 	blt	r2,zero,f33c <close+0x34>
    f324:	e0bfff17 	ldw	r2,-4(fp)
    f328:	10c00324 	muli	r3,r2,12
    f32c:	00800074 	movhi	r2,1
    f330:	108b6e04 	addi	r2,r2,11704
    f334:	1885883a 	add	r2,r3,r2
    f338:	00000106 	br	f340 <close+0x38>
    f33c:	0005883a 	mov	r2,zero
    f340:	e0bffd15 	stw	r2,-12(fp)

  if (fd)
    f344:	e0bffd17 	ldw	r2,-12(fp)
    f348:	10001926 	beq	r2,zero,f3b0 <close+0xa8>
    /*
     * If the associated file system/device has a close function, call it so 
     * that any necessary cleanup code can run.
     */

    rval = (fd->dev->close) ? fd->dev->close(fd) : 0;
    f34c:	e0bffd17 	ldw	r2,-12(fp)
    f350:	10800017 	ldw	r2,0(r2)
    f354:	10800417 	ldw	r2,16(r2)
    f358:	10000626 	beq	r2,zero,f374 <close+0x6c>
    f35c:	e0bffd17 	ldw	r2,-12(fp)
    f360:	10800017 	ldw	r2,0(r2)
    f364:	10800417 	ldw	r2,16(r2)
    f368:	e13ffd17 	ldw	r4,-12(fp)
    f36c:	103ee83a 	callr	r2
    f370:	00000106 	br	f378 <close+0x70>
    f374:	0005883a 	mov	r2,zero
    f378:	e0bffe15 	stw	r2,-8(fp)

    /* Free the file descriptor structure and return. */

    alt_release_fd (fildes);
    f37c:	e13fff17 	ldw	r4,-4(fp)
    f380:	000f9c80 	call	f9c8 <alt_release_fd>
    if (rval < 0)
    f384:	e0bffe17 	ldw	r2,-8(fp)
    f388:	1000070e 	bge	r2,zero,f3a8 <close+0xa0>
    {
      ALT_ERRNO = -rval;
    f38c:	000f2cc0 	call	f2cc <alt_get_errno>
    f390:	1007883a 	mov	r3,r2
    f394:	e0bffe17 	ldw	r2,-8(fp)
    f398:	0085c83a 	sub	r2,zero,r2
    f39c:	18800015 	stw	r2,0(r3)
      return -1;
    f3a0:	00bfffc4 	movi	r2,-1
    f3a4:	00000706 	br	f3c4 <close+0xbc>
    }
    return 0;
    f3a8:	0005883a 	mov	r2,zero
    f3ac:	00000506 	br	f3c4 <close+0xbc>
  }
  else
  {
    ALT_ERRNO = EBADFD;
    f3b0:	000f2cc0 	call	f2cc <alt_get_errno>
    f3b4:	1007883a 	mov	r3,r2
    f3b8:	00801444 	movi	r2,81
    f3bc:	18800015 	stw	r2,0(r3)
    return -1;
    f3c0:	00bfffc4 	movi	r2,-1
  }
}
    f3c4:	e037883a 	mov	sp,fp
    f3c8:	dfc00117 	ldw	ra,4(sp)
    f3cc:	df000017 	ldw	fp,0(sp)
    f3d0:	dec00204 	addi	sp,sp,8
    f3d4:	f800283a 	ret

0000f3d8 <alt_dev_null_write>:
 * by the alt_dev_null device. It simple discards all data passed to it, and
 * indicates that the data has been successfully transmitted.
 */

static int alt_dev_null_write (alt_fd* fd, const char* ptr, int len)
{
    f3d8:	defffc04 	addi	sp,sp,-16
    f3dc:	df000315 	stw	fp,12(sp)
    f3e0:	df000304 	addi	fp,sp,12
    f3e4:	e13ffd15 	stw	r4,-12(fp)
    f3e8:	e17ffe15 	stw	r5,-8(fp)
    f3ec:	e1bfff15 	stw	r6,-4(fp)
  return len;
    f3f0:	e0bfff17 	ldw	r2,-4(fp)
}
    f3f4:	e037883a 	mov	sp,fp
    f3f8:	df000017 	ldw	fp,0(sp)
    f3fc:	dec00104 	addi	sp,sp,4
    f400:	f800283a 	ret

0000f404 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
    f404:	defffe04 	addi	sp,sp,-8
    f408:	dfc00115 	stw	ra,4(sp)
    f40c:	df000015 	stw	fp,0(sp)
    f410:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
    f414:	d0a00b17 	ldw	r2,-32724(gp)
    f418:	10000326 	beq	r2,zero,f428 <alt_get_errno+0x24>
    f41c:	d0a00b17 	ldw	r2,-32724(gp)
    f420:	103ee83a 	callr	r2
    f424:	00000106 	br	f42c <alt_get_errno+0x28>
    f428:	d0a6d804 	addi	r2,gp,-25760
}
    f42c:	e037883a 	mov	sp,fp
    f430:	dfc00117 	ldw	ra,4(sp)
    f434:	df000017 	ldw	fp,0(sp)
    f438:	dec00204 	addi	sp,sp,8
    f43c:	f800283a 	ret

0000f440 <fstat>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_FSTAT (int file, struct stat *st)
{
    f440:	defffb04 	addi	sp,sp,-20
    f444:	dfc00415 	stw	ra,16(sp)
    f448:	df000315 	stw	fp,12(sp)
    f44c:	df000304 	addi	fp,sp,12
    f450:	e13ffe15 	stw	r4,-8(fp)
    f454:	e17fff15 	stw	r5,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
    f458:	e0bffe17 	ldw	r2,-8(fp)
    f45c:	10000616 	blt	r2,zero,f478 <fstat+0x38>
    f460:	e0bffe17 	ldw	r2,-8(fp)
    f464:	10c00324 	muli	r3,r2,12
    f468:	00800074 	movhi	r2,1
    f46c:	108b6e04 	addi	r2,r2,11704
    f470:	1885883a 	add	r2,r3,r2
    f474:	00000106 	br	f47c <fstat+0x3c>
    f478:	0005883a 	mov	r2,zero
    f47c:	e0bffd15 	stw	r2,-12(fp)
  
  if (fd)
    f480:	e0bffd17 	ldw	r2,-12(fp)
    f484:	10001026 	beq	r2,zero,f4c8 <fstat+0x88>
  {
    /* Call the drivers fstat() function to fill out the "st" structure. */

    if (fd->dev->fstat)
    f488:	e0bffd17 	ldw	r2,-12(fp)
    f48c:	10800017 	ldw	r2,0(r2)
    f490:	10800817 	ldw	r2,32(r2)
    f494:	10000726 	beq	r2,zero,f4b4 <fstat+0x74>
    {
      return fd->dev->fstat(fd, st);
    f498:	e0bffd17 	ldw	r2,-12(fp)
    f49c:	10800017 	ldw	r2,0(r2)
    f4a0:	10800817 	ldw	r2,32(r2)
    f4a4:	e17fff17 	ldw	r5,-4(fp)
    f4a8:	e13ffd17 	ldw	r4,-12(fp)
    f4ac:	103ee83a 	callr	r2
    f4b0:	00000a06 	br	f4dc <fstat+0x9c>
     * device.
     */
 
    else
    {
      st->st_mode = _IFCHR;
    f4b4:	e0bfff17 	ldw	r2,-4(fp)
    f4b8:	00c80004 	movi	r3,8192
    f4bc:	10c00115 	stw	r3,4(r2)
      return 0;
    f4c0:	0005883a 	mov	r2,zero
    f4c4:	00000506 	br	f4dc <fstat+0x9c>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
    f4c8:	000f4040 	call	f404 <alt_get_errno>
    f4cc:	1007883a 	mov	r3,r2
    f4d0:	00801444 	movi	r2,81
    f4d4:	18800015 	stw	r2,0(r3)
    return -1;
    f4d8:	00bfffc4 	movi	r2,-1
  }
}
    f4dc:	e037883a 	mov	sp,fp
    f4e0:	dfc00117 	ldw	ra,4(sp)
    f4e4:	df000017 	ldw	fp,0(sp)
    f4e8:	dec00204 	addi	sp,sp,8
    f4ec:	f800283a 	ret

0000f4f0 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
    f4f0:	defffe04 	addi	sp,sp,-8
    f4f4:	dfc00115 	stw	ra,4(sp)
    f4f8:	df000015 	stw	fp,0(sp)
    f4fc:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
    f500:	d0a00b17 	ldw	r2,-32724(gp)
    f504:	10000326 	beq	r2,zero,f514 <alt_get_errno+0x24>
    f508:	d0a00b17 	ldw	r2,-32724(gp)
    f50c:	103ee83a 	callr	r2
    f510:	00000106 	br	f518 <alt_get_errno+0x28>
    f514:	d0a6d804 	addi	r2,gp,-25760
}
    f518:	e037883a 	mov	sp,fp
    f51c:	dfc00117 	ldw	ra,4(sp)
    f520:	df000017 	ldw	fp,0(sp)
    f524:	dec00204 	addi	sp,sp,8
    f528:	f800283a 	ret

0000f52c <isatty>:
 *
 * ALT_ISATTY is mapped onto the isatty() system call in alt_syscall.h
 */
 
int ALT_ISATTY (int file)
{
    f52c:	deffed04 	addi	sp,sp,-76
    f530:	dfc01215 	stw	ra,72(sp)
    f534:	df001115 	stw	fp,68(sp)
    f538:	df001104 	addi	fp,sp,68
    f53c:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
    f540:	e0bfff17 	ldw	r2,-4(fp)
    f544:	10000616 	blt	r2,zero,f560 <isatty+0x34>
    f548:	e0bfff17 	ldw	r2,-4(fp)
    f54c:	10c00324 	muli	r3,r2,12
    f550:	00800074 	movhi	r2,1
    f554:	108b6e04 	addi	r2,r2,11704
    f558:	1885883a 	add	r2,r3,r2
    f55c:	00000106 	br	f564 <isatty+0x38>
    f560:	0005883a 	mov	r2,zero
    f564:	e0bfef15 	stw	r2,-68(fp)
  
  if (fd)
    f568:	e0bfef17 	ldw	r2,-68(fp)
    f56c:	10000e26 	beq	r2,zero,f5a8 <isatty+0x7c>
    /*
     * If a device driver does not provide an fstat() function, then it is 
     * treated as a terminal device by default.
     */

    if (!fd->dev->fstat)
    f570:	e0bfef17 	ldw	r2,-68(fp)
    f574:	10800017 	ldw	r2,0(r2)
    f578:	10800817 	ldw	r2,32(r2)
    f57c:	1000021e 	bne	r2,zero,f588 <isatty+0x5c>
    {
      return 1;
    f580:	00800044 	movi	r2,1
    f584:	00000d06 	br	f5bc <isatty+0x90>
     * this is called so that the device can identify itself.
     */ 

    else
    {
      fstat (file, &stat);
    f588:	e0bff004 	addi	r2,fp,-64
    f58c:	100b883a 	mov	r5,r2
    f590:	e13fff17 	ldw	r4,-4(fp)
    f594:	000f4400 	call	f440 <fstat>
      return (stat.st_mode == _IFCHR) ? 1 : 0;
    f598:	e0bff117 	ldw	r2,-60(fp)
    f59c:	10880020 	cmpeqi	r2,r2,8192
    f5a0:	10803fcc 	andi	r2,r2,255
    f5a4:	00000506 	br	f5bc <isatty+0x90>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
    f5a8:	000f4f00 	call	f4f0 <alt_get_errno>
    f5ac:	1007883a 	mov	r3,r2
    f5b0:	00801444 	movi	r2,81
    f5b4:	18800015 	stw	r2,0(r3)
    return 0;
    f5b8:	0005883a 	mov	r2,zero
  }
}
    f5bc:	e037883a 	mov	sp,fp
    f5c0:	dfc00117 	ldw	ra,4(sp)
    f5c4:	df000017 	ldw	fp,0(sp)
    f5c8:	dec00204 	addi	sp,sp,8
    f5cc:	f800283a 	ret

0000f5d0 <alt_load_section>:
 */

static void ALT_INLINE alt_load_section (alt_u32* from, 
                                         alt_u32* to, 
                                         alt_u32* end)
{
    f5d0:	defffc04 	addi	sp,sp,-16
    f5d4:	df000315 	stw	fp,12(sp)
    f5d8:	df000304 	addi	fp,sp,12
    f5dc:	e13ffd15 	stw	r4,-12(fp)
    f5e0:	e17ffe15 	stw	r5,-8(fp)
    f5e4:	e1bfff15 	stw	r6,-4(fp)
  if (to != from)
    f5e8:	e0fffe17 	ldw	r3,-8(fp)
    f5ec:	e0bffd17 	ldw	r2,-12(fp)
    f5f0:	18800c26 	beq	r3,r2,f624 <alt_load_section+0x54>
  {
    while( to != end )
    f5f4:	00000806 	br	f618 <alt_load_section+0x48>
    {
      *to++ = *from++;
    f5f8:	e0bffe17 	ldw	r2,-8(fp)
    f5fc:	10c00104 	addi	r3,r2,4
    f600:	e0fffe15 	stw	r3,-8(fp)
    f604:	e0fffd17 	ldw	r3,-12(fp)
    f608:	19000104 	addi	r4,r3,4
    f60c:	e13ffd15 	stw	r4,-12(fp)
    f610:	18c00017 	ldw	r3,0(r3)
    f614:	10c00015 	stw	r3,0(r2)
                                         alt_u32* to, 
                                         alt_u32* end)
{
  if (to != from)
  {
    while( to != end )
    f618:	e0fffe17 	ldw	r3,-8(fp)
    f61c:	e0bfff17 	ldw	r2,-4(fp)
    f620:	18bff51e 	bne	r3,r2,f5f8 <__alt_data_end+0xff00f5f8>
    {
      *to++ = *from++;
    }
  }
}
    f624:	0001883a 	nop
    f628:	e037883a 	mov	sp,fp
    f62c:	df000017 	ldw	fp,0(sp)
    f630:	dec00104 	addi	sp,sp,4
    f634:	f800283a 	ret

0000f638 <alt_load>:
 * there is no bootloader, so this application is responsible for loading to
 * RAM any sections that are required.
 */  

void alt_load (void)
{
    f638:	defffe04 	addi	sp,sp,-8
    f63c:	dfc00115 	stw	ra,4(sp)
    f640:	df000015 	stw	fp,0(sp)
    f644:	d839883a 	mov	fp,sp
  /* 
   * Copy the .rwdata section. 
   */

  alt_load_section (&__flash_rwdata_start, 
    f648:	01800074 	movhi	r6,1
    f64c:	318ff604 	addi	r6,r6,16344
    f650:	01400074 	movhi	r5,1
    f654:	29493b04 	addi	r5,r5,9452
    f658:	01000074 	movhi	r4,1
    f65c:	210ff604 	addi	r4,r4,16344
    f660:	000f5d00 	call	f5d0 <alt_load_section>

  /*
   * Copy the exception handler.
   */

  alt_load_section (&__flash_exceptions_start, 
    f664:	01800034 	movhi	r6,0
    f668:	31809104 	addi	r6,r6,580
    f66c:	01400034 	movhi	r5,0
    f670:	29400804 	addi	r5,r5,32
    f674:	01000034 	movhi	r4,0
    f678:	21000804 	addi	r4,r4,32
    f67c:	000f5d00 	call	f5d0 <alt_load_section>

  /*
   * Copy the .rodata section.
   */

  alt_load_section (&__flash_rodata_start, 
    f680:	01800074 	movhi	r6,1
    f684:	31893b04 	addi	r6,r6,9452
    f688:	01400074 	movhi	r5,1
    f68c:	29474104 	addi	r5,r5,7428
    f690:	01000074 	movhi	r4,1
    f694:	21074104 	addi	r4,r4,7428
    f698:	000f5d00 	call	f5d0 <alt_load_section>
  
  /*
   * Now ensure that the caches are in synch.
   */
  
  alt_dcache_flush_all();
    f69c:	0010bf00 	call	10bf0 <alt_dcache_flush_all>
  alt_icache_flush_all();
    f6a0:	0010dd80 	call	10dd8 <alt_icache_flush_all>
}
    f6a4:	0001883a 	nop
    f6a8:	e037883a 	mov	sp,fp
    f6ac:	dfc00117 	ldw	ra,4(sp)
    f6b0:	df000017 	ldw	fp,0(sp)
    f6b4:	dec00204 	addi	sp,sp,8
    f6b8:	f800283a 	ret

0000f6bc <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
    f6bc:	defffe04 	addi	sp,sp,-8
    f6c0:	dfc00115 	stw	ra,4(sp)
    f6c4:	df000015 	stw	fp,0(sp)
    f6c8:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
    f6cc:	d0a00b17 	ldw	r2,-32724(gp)
    f6d0:	10000326 	beq	r2,zero,f6e0 <alt_get_errno+0x24>
    f6d4:	d0a00b17 	ldw	r2,-32724(gp)
    f6d8:	103ee83a 	callr	r2
    f6dc:	00000106 	br	f6e4 <alt_get_errno+0x28>
    f6e0:	d0a6d804 	addi	r2,gp,-25760
}
    f6e4:	e037883a 	mov	sp,fp
    f6e8:	dfc00117 	ldw	ra,4(sp)
    f6ec:	df000017 	ldw	fp,0(sp)
    f6f0:	dec00204 	addi	sp,sp,8
    f6f4:	f800283a 	ret

0000f6f8 <lseek>:
 * ALT_LSEEK is mapped onto the lseek() system call in alt_syscall.h
 *
 */

off_t ALT_LSEEK (int file, off_t ptr, int dir)
{
    f6f8:	defff904 	addi	sp,sp,-28
    f6fc:	dfc00615 	stw	ra,24(sp)
    f700:	df000515 	stw	fp,20(sp)
    f704:	df000504 	addi	fp,sp,20
    f708:	e13ffd15 	stw	r4,-12(fp)
    f70c:	e17ffe15 	stw	r5,-8(fp)
    f710:	e1bfff15 	stw	r6,-4(fp)
  alt_fd* fd;
  off_t   rc = 0; 
    f714:	e03ffb15 	stw	zero,-20(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
    f718:	e0bffd17 	ldw	r2,-12(fp)
    f71c:	10000616 	blt	r2,zero,f738 <lseek+0x40>
    f720:	e0bffd17 	ldw	r2,-12(fp)
    f724:	10c00324 	muli	r3,r2,12
    f728:	00800074 	movhi	r2,1
    f72c:	108b6e04 	addi	r2,r2,11704
    f730:	1885883a 	add	r2,r3,r2
    f734:	00000106 	br	f73c <lseek+0x44>
    f738:	0005883a 	mov	r2,zero
    f73c:	e0bffc15 	stw	r2,-16(fp)
  
  if (fd) 
    f740:	e0bffc17 	ldw	r2,-16(fp)
    f744:	10001026 	beq	r2,zero,f788 <lseek+0x90>
    /*
     * If the device driver provides an implementation of the lseek() function,
     * then call that to process the request.
     */
 
    if (fd->dev->lseek)
    f748:	e0bffc17 	ldw	r2,-16(fp)
    f74c:	10800017 	ldw	r2,0(r2)
    f750:	10800717 	ldw	r2,28(r2)
    f754:	10000926 	beq	r2,zero,f77c <lseek+0x84>
    {
      rc = fd->dev->lseek(fd, ptr, dir);
    f758:	e0bffc17 	ldw	r2,-16(fp)
    f75c:	10800017 	ldw	r2,0(r2)
    f760:	10800717 	ldw	r2,28(r2)
    f764:	e1bfff17 	ldw	r6,-4(fp)
    f768:	e17ffe17 	ldw	r5,-8(fp)
    f76c:	e13ffc17 	ldw	r4,-16(fp)
    f770:	103ee83a 	callr	r2
    f774:	e0bffb15 	stw	r2,-20(fp)
    f778:	00000506 	br	f790 <lseek+0x98>
     * Otherwise return an error.
     */

    else
    {
      rc = -ENOTSUP;
    f77c:	00bfde84 	movi	r2,-134
    f780:	e0bffb15 	stw	r2,-20(fp)
    f784:	00000206 	br	f790 <lseek+0x98>
    }
  }
  else  
  {
    rc = -EBADFD;
    f788:	00bfebc4 	movi	r2,-81
    f78c:	e0bffb15 	stw	r2,-20(fp)
  }

  if (rc < 0)
    f790:	e0bffb17 	ldw	r2,-20(fp)
    f794:	1000070e 	bge	r2,zero,f7b4 <lseek+0xbc>
  {
    ALT_ERRNO = -rc;
    f798:	000f6bc0 	call	f6bc <alt_get_errno>
    f79c:	1007883a 	mov	r3,r2
    f7a0:	e0bffb17 	ldw	r2,-20(fp)
    f7a4:	0085c83a 	sub	r2,zero,r2
    f7a8:	18800015 	stw	r2,0(r3)
    rc = -1;
    f7ac:	00bfffc4 	movi	r2,-1
    f7b0:	e0bffb15 	stw	r2,-20(fp)
  }

  return rc;
    f7b4:	e0bffb17 	ldw	r2,-20(fp)
}
    f7b8:	e037883a 	mov	sp,fp
    f7bc:	dfc00117 	ldw	ra,4(sp)
    f7c0:	df000017 	ldw	fp,0(sp)
    f7c4:	dec00204 	addi	sp,sp,8
    f7c8:	f800283a 	ret

0000f7cc <alt_main>:
 * devices/filesystems/components in the system; and call the entry point for
 * the users application, i.e. main().
 */

void alt_main (void)
{
    f7cc:	defffd04 	addi	sp,sp,-12
    f7d0:	dfc00215 	stw	ra,8(sp)
    f7d4:	df000115 	stw	fp,4(sp)
    f7d8:	df000104 	addi	fp,sp,4
#endif

  /* ALT LOG - please see HAL/sys/alt_log_printf.h for details */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Entering alt_main, calling alt_irq_init.\r\n");
  /* Initialize the interrupt controller. */
  alt_irq_init (NULL);
    f7dc:	0009883a 	mov	r4,zero
    f7e0:	000fc740 	call	fc74 <alt_irq_init>

  /* Initialize the operating system */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done alt_irq_init, calling alt_os_init.\r\n");
  ALT_OS_INIT();
    f7e4:	0001883a 	nop
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done OS Init, calling alt_sem_create.\r\n");
  ALT_SEM_CREATE (&alt_fd_list_lock, 1);

  /* Initialize the device drivers/software components. */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling alt_sys_init.\r\n");
  alt_sys_init();
    f7e8:	000fcac0 	call	fcac <alt_sys_init>
   * devices be present (not equal to /dev/null) and if direct drivers
   * aren't being used.
   */

    ALT_LOG_PRINT_BOOT("[alt_main.c] Redirecting IO.\r\n");
    alt_io_redirect(ALT_STDOUT, ALT_STDIN, ALT_STDERR);
    f7ec:	01800074 	movhi	r6,1
    f7f0:	31893304 	addi	r6,r6,9420
    f7f4:	01400074 	movhi	r5,1
    f7f8:	29493304 	addi	r5,r5,9420
    f7fc:	01000074 	movhi	r4,1
    f800:	21093304 	addi	r4,r4,9420
    f804:	00111700 	call	11170 <alt_io_redirect>
  /* 
   * Call the C++ constructors 
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling C++ constructors.\r\n");
  _do_ctors ();
    f808:	0010d180 	call	10d18 <_do_ctors>
   * redefined as _exit()). This is in the interest of reducing code footprint,
   * in that the atexit() overhead is removed when it's not needed.
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling atexit.\r\n");
  atexit (_do_dtors);
    f80c:	01000074 	movhi	r4,1
    f810:	21035e04 	addi	r4,r4,3448
    f814:	00119700 	call	11970 <atexit>
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling main.\r\n");

#ifdef ALT_NO_EXIT
  main (alt_argc, alt_argv, alt_envp);
#else
  result = main (alt_argc, alt_argv, alt_envp);
    f818:	d0a6dc17 	ldw	r2,-25744(gp)
    f81c:	d0e6dd17 	ldw	r3,-25740(gp)
    f820:	d126de17 	ldw	r4,-25736(gp)
    f824:	200d883a 	mov	r6,r4
    f828:	180b883a 	mov	r5,r3
    f82c:	1009883a 	mov	r4,r2
    f830:	0000f500 	call	f50 <main>
    f834:	e0bfff15 	stw	r2,-4(fp)
  close(STDOUT_FILENO);
    f838:	01000044 	movi	r4,1
    f83c:	000f3080 	call	f308 <close>
  exit (result);
    f840:	e13fff17 	ldw	r4,-4(fp)
    f844:	00119840 	call	11984 <exit>

0000f848 <__malloc_lock>:
 * configuration is single threaded, so there is nothing to do here. Note that 
 * this requires that malloc is never called by an interrupt service routine.
 */

void __malloc_lock ( struct _reent *_r )
{
    f848:	defffe04 	addi	sp,sp,-8
    f84c:	df000115 	stw	fp,4(sp)
    f850:	df000104 	addi	fp,sp,4
    f854:	e13fff15 	stw	r4,-4(fp)
}
    f858:	0001883a 	nop
    f85c:	e037883a 	mov	sp,fp
    f860:	df000017 	ldw	fp,0(sp)
    f864:	dec00104 	addi	sp,sp,4
    f868:	f800283a 	ret

0000f86c <__malloc_unlock>:
/*
 *
 */

void __malloc_unlock ( struct _reent *_r )
{
    f86c:	defffe04 	addi	sp,sp,-8
    f870:	df000115 	stw	fp,4(sp)
    f874:	df000104 	addi	fp,sp,4
    f878:	e13fff15 	stw	r4,-4(fp)
}
    f87c:	0001883a 	nop
    f880:	e037883a 	mov	sp,fp
    f884:	df000017 	ldw	fp,0(sp)
    f888:	dec00104 	addi	sp,sp,4
    f88c:	f800283a 	ret

0000f890 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
    f890:	defffe04 	addi	sp,sp,-8
    f894:	dfc00115 	stw	ra,4(sp)
    f898:	df000015 	stw	fp,0(sp)
    f89c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
    f8a0:	d0a00b17 	ldw	r2,-32724(gp)
    f8a4:	10000326 	beq	r2,zero,f8b4 <alt_get_errno+0x24>
    f8a8:	d0a00b17 	ldw	r2,-32724(gp)
    f8ac:	103ee83a 	callr	r2
    f8b0:	00000106 	br	f8b8 <alt_get_errno+0x28>
    f8b4:	d0a6d804 	addi	r2,gp,-25760
}
    f8b8:	e037883a 	mov	sp,fp
    f8bc:	dfc00117 	ldw	ra,4(sp)
    f8c0:	df000017 	ldw	fp,0(sp)
    f8c4:	dec00204 	addi	sp,sp,8
    f8c8:	f800283a 	ret

0000f8cc <read>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_READ (int file, void *ptr, size_t len)
{
    f8cc:	defff904 	addi	sp,sp,-28
    f8d0:	dfc00615 	stw	ra,24(sp)
    f8d4:	df000515 	stw	fp,20(sp)
    f8d8:	df000504 	addi	fp,sp,20
    f8dc:	e13ffd15 	stw	r4,-12(fp)
    f8e0:	e17ffe15 	stw	r5,-8(fp)
    f8e4:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
    f8e8:	e0bffd17 	ldw	r2,-12(fp)
    f8ec:	10000616 	blt	r2,zero,f908 <read+0x3c>
    f8f0:	e0bffd17 	ldw	r2,-12(fp)
    f8f4:	10c00324 	muli	r3,r2,12
    f8f8:	00800074 	movhi	r2,1
    f8fc:	108b6e04 	addi	r2,r2,11704
    f900:	1885883a 	add	r2,r3,r2
    f904:	00000106 	br	f90c <read+0x40>
    f908:	0005883a 	mov	r2,zero
    f90c:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
    f910:	e0bffb17 	ldw	r2,-20(fp)
    f914:	10002226 	beq	r2,zero,f9a0 <read+0xd4>
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
    f918:	e0bffb17 	ldw	r2,-20(fp)
    f91c:	10800217 	ldw	r2,8(r2)
    f920:	108000cc 	andi	r2,r2,3
    f924:	10800060 	cmpeqi	r2,r2,1
    f928:	1000181e 	bne	r2,zero,f98c <read+0xc0>
        (fd->dev->read))
    f92c:	e0bffb17 	ldw	r2,-20(fp)
    f930:	10800017 	ldw	r2,0(r2)
    f934:	10800517 	ldw	r2,20(r2)
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
    f938:	10001426 	beq	r2,zero,f98c <read+0xc0>
        (fd->dev->read))
      {
        if ((rval = fd->dev->read(fd, ptr, len)) < 0)
    f93c:	e0bffb17 	ldw	r2,-20(fp)
    f940:	10800017 	ldw	r2,0(r2)
    f944:	10800517 	ldw	r2,20(r2)
    f948:	e0ffff17 	ldw	r3,-4(fp)
    f94c:	180d883a 	mov	r6,r3
    f950:	e17ffe17 	ldw	r5,-8(fp)
    f954:	e13ffb17 	ldw	r4,-20(fp)
    f958:	103ee83a 	callr	r2
    f95c:	e0bffc15 	stw	r2,-16(fp)
    f960:	e0bffc17 	ldw	r2,-16(fp)
    f964:	1000070e 	bge	r2,zero,f984 <read+0xb8>
        {
          ALT_ERRNO = -rval;
    f968:	000f8900 	call	f890 <alt_get_errno>
    f96c:	1007883a 	mov	r3,r2
    f970:	e0bffc17 	ldw	r2,-16(fp)
    f974:	0085c83a 	sub	r2,zero,r2
    f978:	18800015 	stw	r2,0(r3)
          return -1;
    f97c:	00bfffc4 	movi	r2,-1
    f980:	00000c06 	br	f9b4 <read+0xe8>
        }
        return rval;
    f984:	e0bffc17 	ldw	r2,-16(fp)
    f988:	00000a06 	br	f9b4 <read+0xe8>
      }
      else
      {
        ALT_ERRNO = EACCES;
    f98c:	000f8900 	call	f890 <alt_get_errno>
    f990:	1007883a 	mov	r3,r2
    f994:	00800344 	movi	r2,13
    f998:	18800015 	stw	r2,0(r3)
    f99c:	00000406 	br	f9b0 <read+0xe4>
      }
    }
  else
  {
    ALT_ERRNO = EBADFD;
    f9a0:	000f8900 	call	f890 <alt_get_errno>
    f9a4:	1007883a 	mov	r3,r2
    f9a8:	00801444 	movi	r2,81
    f9ac:	18800015 	stw	r2,0(r3)
  }
  return -1;
    f9b0:	00bfffc4 	movi	r2,-1
}
    f9b4:	e037883a 	mov	sp,fp
    f9b8:	dfc00117 	ldw	ra,4(sp)
    f9bc:	df000017 	ldw	fp,0(sp)
    f9c0:	dec00204 	addi	sp,sp,8
    f9c4:	f800283a 	ret

0000f9c8 <alt_release_fd>:
 * File descriptors correcponding to standard in, standard out and standard 
 * error cannont be released backed to the pool. They are always reserved.
 */

void alt_release_fd (int fd)
{
    f9c8:	defffe04 	addi	sp,sp,-8
    f9cc:	df000115 	stw	fp,4(sp)
    f9d0:	df000104 	addi	fp,sp,4
    f9d4:	e13fff15 	stw	r4,-4(fp)
  if (fd > 2)
    f9d8:	e0bfff17 	ldw	r2,-4(fp)
    f9dc:	108000d0 	cmplti	r2,r2,3
    f9e0:	10000d1e 	bne	r2,zero,fa18 <alt_release_fd+0x50>
  {
    alt_fd_list[fd].fd_flags = 0;
    f9e4:	00800074 	movhi	r2,1
    f9e8:	108b6e04 	addi	r2,r2,11704
    f9ec:	e0ffff17 	ldw	r3,-4(fp)
    f9f0:	18c00324 	muli	r3,r3,12
    f9f4:	10c5883a 	add	r2,r2,r3
    f9f8:	10800204 	addi	r2,r2,8
    f9fc:	10000015 	stw	zero,0(r2)
    alt_fd_list[fd].dev      = 0;
    fa00:	00800074 	movhi	r2,1
    fa04:	108b6e04 	addi	r2,r2,11704
    fa08:	e0ffff17 	ldw	r3,-4(fp)
    fa0c:	18c00324 	muli	r3,r3,12
    fa10:	10c5883a 	add	r2,r2,r3
    fa14:	10000015 	stw	zero,0(r2)
  }
}
    fa18:	0001883a 	nop
    fa1c:	e037883a 	mov	sp,fp
    fa20:	df000017 	ldw	fp,0(sp)
    fa24:	dec00104 	addi	sp,sp,4
    fa28:	f800283a 	ret

0000fa2c <sbrk>:
#endif
 
caddr_t ALT_SBRK (int incr) __attribute__ ((no_instrument_function ));

caddr_t ALT_SBRK (int incr)
{ 
    fa2c:	defff904 	addi	sp,sp,-28
    fa30:	df000615 	stw	fp,24(sp)
    fa34:	df000604 	addi	fp,sp,24
    fa38:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
    fa3c:	0005303a 	rdctl	r2,status
    fa40:	e0bffe15 	stw	r2,-8(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
    fa44:	e0fffe17 	ldw	r3,-8(fp)
    fa48:	00bfff84 	movi	r2,-2
    fa4c:	1884703a 	and	r2,r3,r2
    fa50:	1001703a 	wrctl	status,r2
  
  return context;
    fa54:	e0bffe17 	ldw	r2,-8(fp)
  alt_irq_context context;
  char *prev_heap_end; 

  context = alt_irq_disable_all();
    fa58:	e0bffb15 	stw	r2,-20(fp)

  /* Always return data aligned on a word boundary */
  heap_end = (char *)(((unsigned int)heap_end + 3) & ~3);
    fa5c:	d0a00c17 	ldw	r2,-32720(gp)
    fa60:	10c000c4 	addi	r3,r2,3
    fa64:	00bfff04 	movi	r2,-4
    fa68:	1884703a 	and	r2,r3,r2
    fa6c:	d0a00c15 	stw	r2,-32720(gp)
  if (((heap_end + incr) - __alt_heap_start) > ALT_MAX_HEAP_BYTES) {
    alt_irq_enable_all(context);
    return (caddr_t)-1;
  }
#else
  if ((heap_end + incr) > __alt_heap_limit) {
    fa70:	d0e00c17 	ldw	r3,-32720(gp)
    fa74:	e0bfff17 	ldw	r2,-4(fp)
    fa78:	1887883a 	add	r3,r3,r2
    fa7c:	00804034 	movhi	r2,256
    fa80:	10800004 	addi	r2,r2,0
    fa84:	10c0062e 	bgeu	r2,r3,faa0 <sbrk+0x74>
    fa88:	e0bffb17 	ldw	r2,-20(fp)
    fa8c:	e0bffa15 	stw	r2,-24(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
    fa90:	e0bffa17 	ldw	r2,-24(fp)
    fa94:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
    return (caddr_t)-1;
    fa98:	00bfffc4 	movi	r2,-1
    fa9c:	00000b06 	br	facc <sbrk+0xa0>
  }
#endif

  prev_heap_end = heap_end; 
    faa0:	d0a00c17 	ldw	r2,-32720(gp)
    faa4:	e0bffd15 	stw	r2,-12(fp)
  heap_end += incr; 
    faa8:	d0e00c17 	ldw	r3,-32720(gp)
    faac:	e0bfff17 	ldw	r2,-4(fp)
    fab0:	1885883a 	add	r2,r3,r2
    fab4:	d0a00c15 	stw	r2,-32720(gp)
    fab8:	e0bffb17 	ldw	r2,-20(fp)
    fabc:	e0bffc15 	stw	r2,-16(fp)
    fac0:	e0bffc17 	ldw	r2,-16(fp)
    fac4:	1001703a 	wrctl	status,r2

#endif

  alt_irq_enable_all(context);

  return (caddr_t) prev_heap_end; 
    fac8:	e0bffd17 	ldw	r2,-12(fp)
} 
    facc:	e037883a 	mov	sp,fp
    fad0:	df000017 	ldw	fp,0(sp)
    fad4:	dec00104 	addi	sp,sp,4
    fad8:	f800283a 	ret

0000fadc <usleep>:
#if defined (__GNUC__) && __GNUC__ >= 4
int ALT_USLEEP (useconds_t us)
#else
unsigned int ALT_USLEEP (unsigned int us)
#endif
{
    fadc:	defffd04 	addi	sp,sp,-12
    fae0:	dfc00215 	stw	ra,8(sp)
    fae4:	df000115 	stw	fp,4(sp)
    fae8:	df000104 	addi	fp,sp,4
    faec:	e13fff15 	stw	r4,-4(fp)
  return alt_busy_sleep(us);
    faf0:	e13fff17 	ldw	r4,-4(fp)
    faf4:	0010ac80 	call	10ac8 <alt_busy_sleep>
}
    faf8:	e037883a 	mov	sp,fp
    fafc:	dfc00117 	ldw	ra,4(sp)
    fb00:	df000017 	ldw	fp,0(sp)
    fb04:	dec00204 	addi	sp,sp,8
    fb08:	f800283a 	ret

0000fb0c <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
    fb0c:	defffe04 	addi	sp,sp,-8
    fb10:	dfc00115 	stw	ra,4(sp)
    fb14:	df000015 	stw	fp,0(sp)
    fb18:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
    fb1c:	d0a00b17 	ldw	r2,-32724(gp)
    fb20:	10000326 	beq	r2,zero,fb30 <alt_get_errno+0x24>
    fb24:	d0a00b17 	ldw	r2,-32724(gp)
    fb28:	103ee83a 	callr	r2
    fb2c:	00000106 	br	fb34 <alt_get_errno+0x28>
    fb30:	d0a6d804 	addi	r2,gp,-25760
}
    fb34:	e037883a 	mov	sp,fp
    fb38:	dfc00117 	ldw	ra,4(sp)
    fb3c:	df000017 	ldw	fp,0(sp)
    fb40:	dec00204 	addi	sp,sp,8
    fb44:	f800283a 	ret

0000fb48 <write>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_WRITE (int file, const void *ptr, size_t len)
{
    fb48:	defff904 	addi	sp,sp,-28
    fb4c:	dfc00615 	stw	ra,24(sp)
    fb50:	df000515 	stw	fp,20(sp)
    fb54:	df000504 	addi	fp,sp,20
    fb58:	e13ffd15 	stw	r4,-12(fp)
    fb5c:	e17ffe15 	stw	r5,-8(fp)
    fb60:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
    fb64:	e0bffd17 	ldw	r2,-12(fp)
    fb68:	10000616 	blt	r2,zero,fb84 <write+0x3c>
    fb6c:	e0bffd17 	ldw	r2,-12(fp)
    fb70:	10c00324 	muli	r3,r2,12
    fb74:	00800074 	movhi	r2,1
    fb78:	108b6e04 	addi	r2,r2,11704
    fb7c:	1885883a 	add	r2,r3,r2
    fb80:	00000106 	br	fb88 <write+0x40>
    fb84:	0005883a 	mov	r2,zero
    fb88:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
    fb8c:	e0bffb17 	ldw	r2,-20(fp)
    fb90:	10002126 	beq	r2,zero,fc18 <write+0xd0>
     * If the file has not been opened with write access, or if the driver does
     * not provide an implementation of write(), generate an error. Otherwise
     * call the drivers write() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_RDONLY) && fd->dev->write)
    fb94:	e0bffb17 	ldw	r2,-20(fp)
    fb98:	10800217 	ldw	r2,8(r2)
    fb9c:	108000cc 	andi	r2,r2,3
    fba0:	10001826 	beq	r2,zero,fc04 <write+0xbc>
    fba4:	e0bffb17 	ldw	r2,-20(fp)
    fba8:	10800017 	ldw	r2,0(r2)
    fbac:	10800617 	ldw	r2,24(r2)
    fbb0:	10001426 	beq	r2,zero,fc04 <write+0xbc>
    {
      
      /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */
      ALT_LOG_WRITE_FUNCTION(ptr,len);

      if ((rval = fd->dev->write(fd, ptr, len)) < 0)
    fbb4:	e0bffb17 	ldw	r2,-20(fp)
    fbb8:	10800017 	ldw	r2,0(r2)
    fbbc:	10800617 	ldw	r2,24(r2)
    fbc0:	e0ffff17 	ldw	r3,-4(fp)
    fbc4:	180d883a 	mov	r6,r3
    fbc8:	e17ffe17 	ldw	r5,-8(fp)
    fbcc:	e13ffb17 	ldw	r4,-20(fp)
    fbd0:	103ee83a 	callr	r2
    fbd4:	e0bffc15 	stw	r2,-16(fp)
    fbd8:	e0bffc17 	ldw	r2,-16(fp)
    fbdc:	1000070e 	bge	r2,zero,fbfc <write+0xb4>
      {
        ALT_ERRNO = -rval;
    fbe0:	000fb0c0 	call	fb0c <alt_get_errno>
    fbe4:	1007883a 	mov	r3,r2
    fbe8:	e0bffc17 	ldw	r2,-16(fp)
    fbec:	0085c83a 	sub	r2,zero,r2
    fbf0:	18800015 	stw	r2,0(r3)
        return -1;
    fbf4:	00bfffc4 	movi	r2,-1
    fbf8:	00000c06 	br	fc2c <write+0xe4>
      }
      return rval;
    fbfc:	e0bffc17 	ldw	r2,-16(fp)
    fc00:	00000a06 	br	fc2c <write+0xe4>
    }
    else
    {
      ALT_ERRNO = EACCES;
    fc04:	000fb0c0 	call	fb0c <alt_get_errno>
    fc08:	1007883a 	mov	r3,r2
    fc0c:	00800344 	movi	r2,13
    fc10:	18800015 	stw	r2,0(r3)
    fc14:	00000406 	br	fc28 <write+0xe0>
    }
  }
  else  
  {
    ALT_ERRNO = EBADFD;
    fc18:	000fb0c0 	call	fb0c <alt_get_errno>
    fc1c:	1007883a 	mov	r3,r2
    fc20:	00801444 	movi	r2,81
    fc24:	18800015 	stw	r2,0(r3)
  }
  return -1;
    fc28:	00bfffc4 	movi	r2,-1
}
    fc2c:	e037883a 	mov	sp,fp
    fc30:	dfc00117 	ldw	ra,4(sp)
    fc34:	df000017 	ldw	fp,0(sp)
    fc38:	dec00204 	addi	sp,sp,8
    fc3c:	f800283a 	ret

0000fc40 <alt_dev_reg>:
 */

extern int alt_fs_reg  (alt_dev* dev); 

static ALT_INLINE int alt_dev_reg (alt_dev* dev)
{
    fc40:	defffd04 	addi	sp,sp,-12
    fc44:	dfc00215 	stw	ra,8(sp)
    fc48:	df000115 	stw	fp,4(sp)
    fc4c:	df000104 	addi	fp,sp,4
    fc50:	e13fff15 	stw	r4,-4(fp)
  extern alt_llist alt_dev_list;

  return alt_dev_llist_insert ((alt_dev_llist*) dev, &alt_dev_list);
    fc54:	d1600804 	addi	r5,gp,-32736
    fc58:	e13fff17 	ldw	r4,-4(fp)
    fc5c:	0010c740 	call	10c74 <alt_dev_llist_insert>
}
    fc60:	e037883a 	mov	sp,fp
    fc64:	dfc00117 	ldw	ra,4(sp)
    fc68:	df000017 	ldw	fp,0(sp)
    fc6c:	dec00204 	addi	sp,sp,8
    fc70:	f800283a 	ret

0000fc74 <alt_irq_init>:
 * The "base" parameter is ignored and only
 * present for backwards-compatibility.
 */

void alt_irq_init ( const void* base )
{
    fc74:	defffd04 	addi	sp,sp,-12
    fc78:	dfc00215 	stw	ra,8(sp)
    fc7c:	df000115 	stw	fp,4(sp)
    fc80:	df000104 	addi	fp,sp,4
    fc84:	e13fff15 	stw	r4,-4(fp)
    ALTERA_NIOS2_GEN2_IRQ_INIT ( NIOS2_GEN2_0, nios2_gen2_0);
    fc88:	00115e40 	call	115e4 <altera_nios2_gen2_irq_init>
 * alt_irq_cpu_enable_interrupts() enables the CPU to start taking interrupts.
 */
static ALT_INLINE void ALT_ALWAYS_INLINE 
       alt_irq_cpu_enable_interrupts (void)
{
    NIOS2_WRITE_STATUS(NIOS2_STATUS_PIE_MSK
    fc8c:	00800044 	movi	r2,1
    fc90:	1001703a 	wrctl	status,r2
    alt_irq_cpu_enable_interrupts();
}
    fc94:	0001883a 	nop
    fc98:	e037883a 	mov	sp,fp
    fc9c:	dfc00117 	ldw	ra,4(sp)
    fca0:	df000017 	ldw	fp,0(sp)
    fca4:	dec00204 	addi	sp,sp,8
    fca8:	f800283a 	ret

0000fcac <alt_sys_init>:
 * Initialize the non-interrupt controller devices.
 * Called after alt_irq_init().
 */

void alt_sys_init( void )
{
    fcac:	defffe04 	addi	sp,sp,-8
    fcb0:	dfc00115 	stw	ra,4(sp)
    fcb4:	df000015 	stw	fp,0(sp)
    fcb8:	d839883a 	mov	fp,sp
    ALTERA_AVALON_TIMER_INIT ( PROFILETIMER, ProfileTimer);
    fcbc:	00804034 	movhi	r2,256
    fcc0:	10840004 	addi	r2,r2,4096
    fcc4:	d0a6df15 	stw	r2,-25732(gp)
    fcc8:	0080bef4 	movhi	r2,763
    fccc:	10bc2004 	addi	r2,r2,-3968
    fcd0:	d0a6e015 	stw	r2,-25728(gp)
    ALTERA_AVALON_TIMER_INIT ( SYSTIMER, Systimer);
    fcd4:	01c0fa04 	movi	r7,1000
    fcd8:	01800104 	movi	r6,4
    fcdc:	000b883a 	mov	r5,zero
    fce0:	01004034 	movhi	r4,256
    fce4:	21040804 	addi	r4,r4,4128
    fce8:	00108080 	call	10808 <alt_avalon_timer_sc_init>
    ALTERA_AVALON_JTAG_UART_INIT ( JTAG_UART, jtag_uart);
    fcec:	000d883a 	mov	r6,zero
    fcf0:	000b883a 	mov	r5,zero
    fcf4:	01000074 	movhi	r4,1
    fcf8:	210bd804 	addi	r4,r4,12128
    fcfc:	000fe8c0 	call	fe8c <altera_avalon_jtag_uart_init>
    fd00:	01000074 	movhi	r4,1
    fd04:	210bce04 	addi	r4,r4,12088
    fd08:	000fc400 	call	fc40 <alt_dev_reg>
    ALTERA_AVALON_SYSID_QSYS_INIT ( SYSID, sysid);
    fd0c:	0001883a 	nop
}
    fd10:	0001883a 	nop
    fd14:	e037883a 	mov	sp,fp
    fd18:	dfc00117 	ldw	ra,4(sp)
    fd1c:	df000017 	ldw	fp,0(sp)
    fd20:	dec00204 	addi	sp,sp,8
    fd24:	f800283a 	ret

0000fd28 <altera_avalon_jtag_uart_read_fd>:
 *
 */

int 
altera_avalon_jtag_uart_read_fd(alt_fd* fd, char* buffer, int space)
{
    fd28:	defffa04 	addi	sp,sp,-24
    fd2c:	dfc00515 	stw	ra,20(sp)
    fd30:	df000415 	stw	fp,16(sp)
    fd34:	df000404 	addi	fp,sp,16
    fd38:	e13ffd15 	stw	r4,-12(fp)
    fd3c:	e17ffe15 	stw	r5,-8(fp)
    fd40:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
    fd44:	e0bffd17 	ldw	r2,-12(fp)
    fd48:	10800017 	ldw	r2,0(r2)
    fd4c:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_read(&dev->state, buffer, space,
    fd50:	e0bffc17 	ldw	r2,-16(fp)
    fd54:	10c00a04 	addi	r3,r2,40
    fd58:	e0bffd17 	ldw	r2,-12(fp)
    fd5c:	10800217 	ldw	r2,8(r2)
    fd60:	100f883a 	mov	r7,r2
    fd64:	e1bfff17 	ldw	r6,-4(fp)
    fd68:	e17ffe17 	ldw	r5,-8(fp)
    fd6c:	1809883a 	mov	r4,r3
    fd70:	00103500 	call	10350 <altera_avalon_jtag_uart_read>
      fd->fd_flags);
}
    fd74:	e037883a 	mov	sp,fp
    fd78:	dfc00117 	ldw	ra,4(sp)
    fd7c:	df000017 	ldw	fp,0(sp)
    fd80:	dec00204 	addi	sp,sp,8
    fd84:	f800283a 	ret

0000fd88 <altera_avalon_jtag_uart_write_fd>:

int 
altera_avalon_jtag_uart_write_fd(alt_fd* fd, const char* buffer, int space)
{
    fd88:	defffa04 	addi	sp,sp,-24
    fd8c:	dfc00515 	stw	ra,20(sp)
    fd90:	df000415 	stw	fp,16(sp)
    fd94:	df000404 	addi	fp,sp,16
    fd98:	e13ffd15 	stw	r4,-12(fp)
    fd9c:	e17ffe15 	stw	r5,-8(fp)
    fda0:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
    fda4:	e0bffd17 	ldw	r2,-12(fp)
    fda8:	10800017 	ldw	r2,0(r2)
    fdac:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_write(&dev->state, buffer, space,
    fdb0:	e0bffc17 	ldw	r2,-16(fp)
    fdb4:	10c00a04 	addi	r3,r2,40
    fdb8:	e0bffd17 	ldw	r2,-12(fp)
    fdbc:	10800217 	ldw	r2,8(r2)
    fdc0:	100f883a 	mov	r7,r2
    fdc4:	e1bfff17 	ldw	r6,-4(fp)
    fdc8:	e17ffe17 	ldw	r5,-8(fp)
    fdcc:	1809883a 	mov	r4,r3
    fdd0:	001056c0 	call	1056c <altera_avalon_jtag_uart_write>
      fd->fd_flags);
}
    fdd4:	e037883a 	mov	sp,fp
    fdd8:	dfc00117 	ldw	ra,4(sp)
    fddc:	df000017 	ldw	fp,0(sp)
    fde0:	dec00204 	addi	sp,sp,8
    fde4:	f800283a 	ret

0000fde8 <altera_avalon_jtag_uart_close_fd>:

#ifndef ALTERA_AVALON_JTAG_UART_SMALL

int 
altera_avalon_jtag_uart_close_fd(alt_fd* fd)
{
    fde8:	defffc04 	addi	sp,sp,-16
    fdec:	dfc00315 	stw	ra,12(sp)
    fdf0:	df000215 	stw	fp,8(sp)
    fdf4:	df000204 	addi	fp,sp,8
    fdf8:	e13fff15 	stw	r4,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
    fdfc:	e0bfff17 	ldw	r2,-4(fp)
    fe00:	10800017 	ldw	r2,0(r2)
    fe04:	e0bffe15 	stw	r2,-8(fp)

    return altera_avalon_jtag_uart_close(&dev->state, fd->fd_flags);
    fe08:	e0bffe17 	ldw	r2,-8(fp)
    fe0c:	10c00a04 	addi	r3,r2,40
    fe10:	e0bfff17 	ldw	r2,-4(fp)
    fe14:	10800217 	ldw	r2,8(r2)
    fe18:	100b883a 	mov	r5,r2
    fe1c:	1809883a 	mov	r4,r3
    fe20:	00101f80 	call	101f8 <altera_avalon_jtag_uart_close>
}
    fe24:	e037883a 	mov	sp,fp
    fe28:	dfc00117 	ldw	ra,4(sp)
    fe2c:	df000017 	ldw	fp,0(sp)
    fe30:	dec00204 	addi	sp,sp,8
    fe34:	f800283a 	ret

0000fe38 <altera_avalon_jtag_uart_ioctl_fd>:

int 
altera_avalon_jtag_uart_ioctl_fd(alt_fd* fd, int req, void* arg)
{
    fe38:	defffa04 	addi	sp,sp,-24
    fe3c:	dfc00515 	stw	ra,20(sp)
    fe40:	df000415 	stw	fp,16(sp)
    fe44:	df000404 	addi	fp,sp,16
    fe48:	e13ffd15 	stw	r4,-12(fp)
    fe4c:	e17ffe15 	stw	r5,-8(fp)
    fe50:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev;
    fe54:	e0bffd17 	ldw	r2,-12(fp)
    fe58:	10800017 	ldw	r2,0(r2)
    fe5c:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_ioctl(&dev->state, req, arg);
    fe60:	e0bffc17 	ldw	r2,-16(fp)
    fe64:	10800a04 	addi	r2,r2,40
    fe68:	e1bfff17 	ldw	r6,-4(fp)
    fe6c:	e17ffe17 	ldw	r5,-8(fp)
    fe70:	1009883a 	mov	r4,r2
    fe74:	00102600 	call	10260 <altera_avalon_jtag_uart_ioctl>
}
    fe78:	e037883a 	mov	sp,fp
    fe7c:	dfc00117 	ldw	ra,4(sp)
    fe80:	df000017 	ldw	fp,0(sp)
    fe84:	dec00204 	addi	sp,sp,8
    fe88:	f800283a 	ret

0000fe8c <altera_avalon_jtag_uart_init>:
 * Return 1 on sucessful IRQ register and 0 on failure.
 */

void altera_avalon_jtag_uart_init(altera_avalon_jtag_uart_state* sp, 
                                  int irq_controller_id, int irq)
{
    fe8c:	defffa04 	addi	sp,sp,-24
    fe90:	dfc00515 	stw	ra,20(sp)
    fe94:	df000415 	stw	fp,16(sp)
    fe98:	df000404 	addi	fp,sp,16
    fe9c:	e13ffd15 	stw	r4,-12(fp)
    fea0:	e17ffe15 	stw	r5,-8(fp)
    fea4:	e1bfff15 	stw	r6,-4(fp)
  ALT_FLAG_CREATE(&sp->events, 0);
  ALT_SEM_CREATE(&sp->read_lock, 1);
  ALT_SEM_CREATE(&sp->write_lock, 1);

  /* enable read interrupts at the device */
  sp->irq_enable = ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
    fea8:	e0bffd17 	ldw	r2,-12(fp)
    feac:	00c00044 	movi	r3,1
    feb0:	10c00815 	stw	r3,32(r2)

  IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable); 
    feb4:	e0bffd17 	ldw	r2,-12(fp)
    feb8:	10800017 	ldw	r2,0(r2)
    febc:	10800104 	addi	r2,r2,4
    fec0:	1007883a 	mov	r3,r2
    fec4:	e0bffd17 	ldw	r2,-12(fp)
    fec8:	10800817 	ldw	r2,32(r2)
    fecc:	18800035 	stwio	r2,0(r3)
  
  /* register the interrupt handler */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, altera_avalon_jtag_uart_irq, 
    fed0:	e0bffe17 	ldw	r2,-8(fp)
    fed4:	e0ffff17 	ldw	r3,-4(fp)
    fed8:	d8000015 	stw	zero,0(sp)
    fedc:	e1fffd17 	ldw	r7,-12(fp)
    fee0:	01800074 	movhi	r6,1
    fee4:	31bfd304 	addi	r6,r6,-180
    fee8:	180b883a 	mov	r5,r3
    feec:	1009883a 	mov	r4,r2
    fef0:	0010e0c0 	call	10e0c <alt_ic_isr_register>
#else
  alt_irq_register(irq, sp, altera_avalon_jtag_uart_irq);
#endif  

  /* Register an alarm to go off every second to check for presence of host */
  sp->host_inactive = 0;
    fef4:	e0bffd17 	ldw	r2,-12(fp)
    fef8:	10000915 	stw	zero,36(r2)

  if (alt_alarm_start(&sp->alarm, alt_ticks_per_second(), 
    fefc:	e0bffd17 	ldw	r2,-12(fp)
    ff00:	10800204 	addi	r2,r2,8
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
    ff04:	d0e6e217 	ldw	r3,-25720(gp)
    ff08:	e1fffd17 	ldw	r7,-12(fp)
    ff0c:	01800074 	movhi	r6,1
    ff10:	31805604 	addi	r6,r6,344
    ff14:	180b883a 	mov	r5,r3
    ff18:	1009883a 	mov	r4,r2
    ff1c:	001099c0 	call	1099c <alt_alarm_start>
    ff20:	1000040e 	bge	r2,zero,ff34 <altera_avalon_jtag_uart_init+0xa8>
    &altera_avalon_jtag_uart_timeout, sp) < 0)
  {
    /* If we can't set the alarm then record "don't know if host present" 
     * and behave as though the host is present.
     */
    sp->timeout = INT_MAX;
    ff24:	e0fffd17 	ldw	r3,-12(fp)
    ff28:	00a00034 	movhi	r2,32768
    ff2c:	10bfffc4 	addi	r2,r2,-1
    ff30:	18800115 	stw	r2,4(r3)
  }

  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ALARM_REGISTER(sp, sp->base);
}
    ff34:	0001883a 	nop
    ff38:	e037883a 	mov	sp,fp
    ff3c:	dfc00117 	ldw	ra,4(sp)
    ff40:	df000017 	ldw	fp,0(sp)
    ff44:	dec00204 	addi	sp,sp,8
    ff48:	f800283a 	ret

0000ff4c <altera_avalon_jtag_uart_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void altera_avalon_jtag_uart_irq(void* context)
#else
static void altera_avalon_jtag_uart_irq(void* context, alt_u32 id)
#endif
{
    ff4c:	defff804 	addi	sp,sp,-32
    ff50:	df000715 	stw	fp,28(sp)
    ff54:	df000704 	addi	fp,sp,28
    ff58:	e13fff15 	stw	r4,-4(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state*) context;
    ff5c:	e0bfff17 	ldw	r2,-4(fp)
    ff60:	e0bffb15 	stw	r2,-20(fp)
  unsigned int base = sp->base;
    ff64:	e0bffb17 	ldw	r2,-20(fp)
    ff68:	10800017 	ldw	r2,0(r2)
    ff6c:	e0bffc15 	stw	r2,-16(fp)
  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ISR_FUNCTION(base, sp);

  for ( ; ; )
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
    ff70:	e0bffc17 	ldw	r2,-16(fp)
    ff74:	10800104 	addi	r2,r2,4
    ff78:	10800037 	ldwio	r2,0(r2)
    ff7c:	e0bffd15 	stw	r2,-12(fp)

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
    ff80:	e0bffd17 	ldw	r2,-12(fp)
    ff84:	1080c00c 	andi	r2,r2,768
    ff88:	10006d26 	beq	r2,zero,10140 <altera_avalon_jtag_uart_irq+0x1f4>
      break;

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK)
    ff8c:	e0bffd17 	ldw	r2,-12(fp)
    ff90:	1080400c 	andi	r2,r2,256
    ff94:	10003526 	beq	r2,zero,1006c <altera_avalon_jtag_uart_irq+0x120>
    {
      /* process a read irq.  Start by assuming that there is data in the
       * receive FIFO (otherwise why would we have been interrupted?)
       */
      unsigned int data = 1 << ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_OFST;
    ff98:	00800074 	movhi	r2,1
    ff9c:	e0bff915 	stw	r2,-28(fp)
      for ( ; ; )
      {
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    ffa0:	e0bffb17 	ldw	r2,-20(fp)
    ffa4:	10800a17 	ldw	r2,40(r2)
    ffa8:	10800044 	addi	r2,r2,1
    ffac:	1081ffcc 	andi	r2,r2,2047
    ffb0:	e0bffe15 	stw	r2,-8(fp)
        if (next == sp->rx_out)
    ffb4:	e0bffb17 	ldw	r2,-20(fp)
    ffb8:	10c00b17 	ldw	r3,44(r2)
    ffbc:	e0bffe17 	ldw	r2,-8(fp)
    ffc0:	18801526 	beq	r3,r2,10018 <altera_avalon_jtag_uart_irq+0xcc>
          break;

        /* Try to remove a character from the FIFO and find out whether there
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
    ffc4:	e0bffc17 	ldw	r2,-16(fp)
    ffc8:	10800037 	ldwio	r2,0(r2)
    ffcc:	e0bff915 	stw	r2,-28(fp)
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
    ffd0:	e0bff917 	ldw	r2,-28(fp)
    ffd4:	10a0000c 	andi	r2,r2,32768
    ffd8:	10001126 	beq	r2,zero,10020 <altera_avalon_jtag_uart_irq+0xd4>
          break;

        sp->rx_buf[sp->rx_in] = (data & ALTERA_AVALON_JTAG_UART_DATA_DATA_MSK) >> ALTERA_AVALON_JTAG_UART_DATA_DATA_OFST;
    ffdc:	e0bffb17 	ldw	r2,-20(fp)
    ffe0:	10800a17 	ldw	r2,40(r2)
    ffe4:	e0fff917 	ldw	r3,-28(fp)
    ffe8:	1809883a 	mov	r4,r3
    ffec:	e0fffb17 	ldw	r3,-20(fp)
    fff0:	1885883a 	add	r2,r3,r2
    fff4:	10800e04 	addi	r2,r2,56
    fff8:	11000005 	stb	r4,0(r2)
        sp->rx_in = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    fffc:	e0bffb17 	ldw	r2,-20(fp)
   10000:	10800a17 	ldw	r2,40(r2)
   10004:	10800044 	addi	r2,r2,1
   10008:	10c1ffcc 	andi	r3,r2,2047
   1000c:	e0bffb17 	ldw	r2,-20(fp)
   10010:	10c00a15 	stw	r3,40(r2)

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }
   10014:	003fe206 	br	ffa0 <__alt_data_end+0xff00ffa0>
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
        if (next == sp->rx_out)
          break;
   10018:	0001883a 	nop
   1001c:	00000106 	br	10024 <altera_avalon_jtag_uart_irq+0xd8>
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
          break;
   10020:	0001883a 	nop

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }

      if (data & ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_MSK)
   10024:	e0bff917 	ldw	r2,-28(fp)
   10028:	10bfffec 	andhi	r2,r2,65535
   1002c:	10000f26 	beq	r2,zero,1006c <altera_avalon_jtag_uart_irq+0x120>
      {
        /* If there is still data available here then the buffer is full 
         * so turn off receive interrupts until some space becomes available.
         */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
   10030:	e0bffb17 	ldw	r2,-20(fp)
   10034:	10c00817 	ldw	r3,32(r2)
   10038:	00bfff84 	movi	r2,-2
   1003c:	1886703a 	and	r3,r3,r2
   10040:	e0bffb17 	ldw	r2,-20(fp)
   10044:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(base, sp->irq_enable);
   10048:	e0bffc17 	ldw	r2,-16(fp)
   1004c:	10800104 	addi	r2,r2,4
   10050:	1007883a 	mov	r3,r2
   10054:	e0bffb17 	ldw	r2,-20(fp)
   10058:	10800817 	ldw	r2,32(r2)
   1005c:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
   10060:	e0bffc17 	ldw	r2,-16(fp)
   10064:	10800104 	addi	r2,r2,4
   10068:	10800037 	ldwio	r2,0(r2)
      }
    }

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
   1006c:	e0bffd17 	ldw	r2,-12(fp)
   10070:	1080800c 	andi	r2,r2,512
   10074:	103fbe26 	beq	r2,zero,ff70 <__alt_data_end+0xff00ff70>
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;
   10078:	e0bffd17 	ldw	r2,-12(fp)
   1007c:	1004d43a 	srli	r2,r2,16
   10080:	e0bffa15 	stw	r2,-24(fp)

      while (space > 0 && sp->tx_out != sp->tx_in)
   10084:	00001406 	br	100d8 <altera_avalon_jtag_uart_irq+0x18c>
      {
        IOWR_ALTERA_AVALON_JTAG_UART_DATA(base, sp->tx_buf[sp->tx_out]);
   10088:	e0bffc17 	ldw	r2,-16(fp)
   1008c:	e0fffb17 	ldw	r3,-20(fp)
   10090:	18c00d17 	ldw	r3,52(r3)
   10094:	e13ffb17 	ldw	r4,-20(fp)
   10098:	20c7883a 	add	r3,r4,r3
   1009c:	18c20e04 	addi	r3,r3,2104
   100a0:	18c00003 	ldbu	r3,0(r3)
   100a4:	18c03fcc 	andi	r3,r3,255
   100a8:	18c0201c 	xori	r3,r3,128
   100ac:	18ffe004 	addi	r3,r3,-128
   100b0:	10c00035 	stwio	r3,0(r2)

        sp->tx_out = (sp->tx_out + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   100b4:	e0bffb17 	ldw	r2,-20(fp)
   100b8:	10800d17 	ldw	r2,52(r2)
   100bc:	10800044 	addi	r2,r2,1
   100c0:	10c1ffcc 	andi	r3,r2,2047
   100c4:	e0bffb17 	ldw	r2,-20(fp)
   100c8:	10c00d15 	stw	r3,52(r2)

        /* Post an event to notify jtag_uart_write that a character has been written */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
   100cc:	e0bffa17 	ldw	r2,-24(fp)
   100d0:	10bfffc4 	addi	r2,r2,-1
   100d4:	e0bffa15 	stw	r2,-24(fp)
    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;

      while (space > 0 && sp->tx_out != sp->tx_in)
   100d8:	e0bffa17 	ldw	r2,-24(fp)
   100dc:	10000526 	beq	r2,zero,100f4 <altera_avalon_jtag_uart_irq+0x1a8>
   100e0:	e0bffb17 	ldw	r2,-20(fp)
   100e4:	10c00d17 	ldw	r3,52(r2)
   100e8:	e0bffb17 	ldw	r2,-20(fp)
   100ec:	10800c17 	ldw	r2,48(r2)
   100f0:	18bfe51e 	bne	r3,r2,10088 <__alt_data_end+0xff010088>
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
      }

      if (space > 0)
   100f4:	e0bffa17 	ldw	r2,-24(fp)
   100f8:	103f9d26 	beq	r2,zero,ff70 <__alt_data_end+0xff00ff70>
      {
        /* If we don't have any more data available then turn off the TX interrupt */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
   100fc:	e0bffb17 	ldw	r2,-20(fp)
   10100:	10c00817 	ldw	r3,32(r2)
   10104:	00bfff44 	movi	r2,-3
   10108:	1886703a 	and	r3,r3,r2
   1010c:	e0bffb17 	ldw	r2,-20(fp)
   10110:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
   10114:	e0bffb17 	ldw	r2,-20(fp)
   10118:	10800017 	ldw	r2,0(r2)
   1011c:	10800104 	addi	r2,r2,4
   10120:	1007883a 	mov	r3,r2
   10124:	e0bffb17 	ldw	r2,-20(fp)
   10128:	10800817 	ldw	r2,32(r2)
   1012c:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
   10130:	e0bffc17 	ldw	r2,-16(fp)
   10134:	10800104 	addi	r2,r2,4
   10138:	10800037 	ldwio	r2,0(r2)
      }
    }
  }
   1013c:	003f8c06 	br	ff70 <__alt_data_end+0xff00ff70>
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
      break;
   10140:	0001883a 	nop
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
      }
    }
  }
}
   10144:	0001883a 	nop
   10148:	e037883a 	mov	sp,fp
   1014c:	df000017 	ldw	fp,0(sp)
   10150:	dec00104 	addi	sp,sp,4
   10154:	f800283a 	ret

00010158 <altera_avalon_jtag_uart_timeout>:
 * Timeout routine is called every second
 */

static alt_u32 
altera_avalon_jtag_uart_timeout(void* context) 
{
   10158:	defff804 	addi	sp,sp,-32
   1015c:	df000715 	stw	fp,28(sp)
   10160:	df000704 	addi	fp,sp,28
   10164:	e13ffb15 	stw	r4,-20(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state *) context;
   10168:	e0bffb17 	ldw	r2,-20(fp)
   1016c:	e0bff915 	stw	r2,-28(fp)

  unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base);
   10170:	e0bff917 	ldw	r2,-28(fp)
   10174:	10800017 	ldw	r2,0(r2)
   10178:	10800104 	addi	r2,r2,4
   1017c:	10800037 	ldwio	r2,0(r2)
   10180:	e0bffa15 	stw	r2,-24(fp)

  if (control & ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK)
   10184:	e0bffa17 	ldw	r2,-24(fp)
   10188:	1081000c 	andi	r2,r2,1024
   1018c:	10000b26 	beq	r2,zero,101bc <altera_avalon_jtag_uart_timeout+0x64>
  {
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable | ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK);
   10190:	e0bff917 	ldw	r2,-28(fp)
   10194:	10800017 	ldw	r2,0(r2)
   10198:	10800104 	addi	r2,r2,4
   1019c:	1007883a 	mov	r3,r2
   101a0:	e0bff917 	ldw	r2,-28(fp)
   101a4:	10800817 	ldw	r2,32(r2)
   101a8:	10810014 	ori	r2,r2,1024
   101ac:	18800035 	stwio	r2,0(r3)
    sp->host_inactive = 0;
   101b0:	e0bff917 	ldw	r2,-28(fp)
   101b4:	10000915 	stw	zero,36(r2)
   101b8:	00000a06 	br	101e4 <altera_avalon_jtag_uart_timeout+0x8c>
  }
  else if (sp->host_inactive < INT_MAX - 2) {
   101bc:	e0bff917 	ldw	r2,-28(fp)
   101c0:	10c00917 	ldw	r3,36(r2)
   101c4:	00a00034 	movhi	r2,32768
   101c8:	10bfff04 	addi	r2,r2,-4
   101cc:	10c00536 	bltu	r2,r3,101e4 <altera_avalon_jtag_uart_timeout+0x8c>
    sp->host_inactive++;
   101d0:	e0bff917 	ldw	r2,-28(fp)
   101d4:	10800917 	ldw	r2,36(r2)
   101d8:	10c00044 	addi	r3,r2,1
   101dc:	e0bff917 	ldw	r2,-28(fp)
   101e0:	10c00915 	stw	r3,36(r2)
   101e4:	d0a6e217 	ldw	r2,-25720(gp)
      ALT_FLAG_POST (sp->events, ALT_JTAG_UART_TIMEOUT, OS_FLAG_SET);
    }
  }

  return alt_ticks_per_second();
}
   101e8:	e037883a 	mov	sp,fp
   101ec:	df000017 	ldw	fp,0(sp)
   101f0:	dec00104 	addi	sp,sp,4
   101f4:	f800283a 	ret

000101f8 <altera_avalon_jtag_uart_close>:
 * The close routine is not implemented for the small driver; instead it will
 * map to null. This is because the small driver simply waits while characters
 * are transmitted; there is no interrupt-serviced buffer to empty 
 */
int altera_avalon_jtag_uart_close(altera_avalon_jtag_uart_state* sp, int flags)
{
   101f8:	defffd04 	addi	sp,sp,-12
   101fc:	df000215 	stw	fp,8(sp)
   10200:	df000204 	addi	fp,sp,8
   10204:	e13ffe15 	stw	r4,-8(fp)
   10208:	e17fff15 	stw	r5,-4(fp)
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
   1020c:	00000506 	br	10224 <altera_avalon_jtag_uart_close+0x2c>
    if (flags & O_NONBLOCK) {
   10210:	e0bfff17 	ldw	r2,-4(fp)
   10214:	1090000c 	andi	r2,r2,16384
   10218:	10000226 	beq	r2,zero,10224 <altera_avalon_jtag_uart_close+0x2c>
      return -EWOULDBLOCK; 
   1021c:	00bffd44 	movi	r2,-11
   10220:	00000b06 	br	10250 <altera_avalon_jtag_uart_close+0x58>
{
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
   10224:	e0bffe17 	ldw	r2,-8(fp)
   10228:	10c00d17 	ldw	r3,52(r2)
   1022c:	e0bffe17 	ldw	r2,-8(fp)
   10230:	10800c17 	ldw	r2,48(r2)
   10234:	18800526 	beq	r3,r2,1024c <altera_avalon_jtag_uart_close+0x54>
   10238:	e0bffe17 	ldw	r2,-8(fp)
   1023c:	10c00917 	ldw	r3,36(r2)
   10240:	e0bffe17 	ldw	r2,-8(fp)
   10244:	10800117 	ldw	r2,4(r2)
   10248:	18bff136 	bltu	r3,r2,10210 <__alt_data_end+0xff010210>
    if (flags & O_NONBLOCK) {
      return -EWOULDBLOCK; 
    }
  }

  return 0;
   1024c:	0005883a 	mov	r2,zero
}
   10250:	e037883a 	mov	sp,fp
   10254:	df000017 	ldw	fp,0(sp)
   10258:	dec00104 	addi	sp,sp,4
   1025c:	f800283a 	ret

00010260 <altera_avalon_jtag_uart_ioctl>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_ioctl(altera_avalon_jtag_uart_state* sp, int req,
  void* arg)
{
   10260:	defffa04 	addi	sp,sp,-24
   10264:	df000515 	stw	fp,20(sp)
   10268:	df000504 	addi	fp,sp,20
   1026c:	e13ffd15 	stw	r4,-12(fp)
   10270:	e17ffe15 	stw	r5,-8(fp)
   10274:	e1bfff15 	stw	r6,-4(fp)
  int rc = -ENOTTY;
   10278:	00bff9c4 	movi	r2,-25
   1027c:	e0bffb15 	stw	r2,-20(fp)

  switch (req)
   10280:	e0bffe17 	ldw	r2,-8(fp)
   10284:	10da8060 	cmpeqi	r3,r2,27137
   10288:	1800031e 	bne	r3,zero,10298 <altera_avalon_jtag_uart_ioctl+0x38>
   1028c:	109a80a0 	cmpeqi	r2,r2,27138
   10290:	1000181e 	bne	r2,zero,102f4 <altera_avalon_jtag_uart_ioctl+0x94>
      rc = 0;
    }
    break;

  default:
    break;
   10294:	00002906 	br	1033c <altera_avalon_jtag_uart_ioctl+0xdc>

  switch (req)
  {
  case TIOCSTIMEOUT:
    /* Set the time to wait until assuming host is not connected */
    if (sp->timeout != INT_MAX)
   10298:	e0bffd17 	ldw	r2,-12(fp)
   1029c:	10c00117 	ldw	r3,4(r2)
   102a0:	00a00034 	movhi	r2,32768
   102a4:	10bfffc4 	addi	r2,r2,-1
   102a8:	18802126 	beq	r3,r2,10330 <altera_avalon_jtag_uart_ioctl+0xd0>
    {
      int timeout = *((int *)arg);
   102ac:	e0bfff17 	ldw	r2,-4(fp)
   102b0:	10800017 	ldw	r2,0(r2)
   102b4:	e0bffc15 	stw	r2,-16(fp)
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
   102b8:	e0bffc17 	ldw	r2,-16(fp)
   102bc:	10800090 	cmplti	r2,r2,2
   102c0:	1000061e 	bne	r2,zero,102dc <altera_avalon_jtag_uart_ioctl+0x7c>
   102c4:	e0fffc17 	ldw	r3,-16(fp)
   102c8:	00a00034 	movhi	r2,32768
   102cc:	10bfffc4 	addi	r2,r2,-1
   102d0:	18800226 	beq	r3,r2,102dc <altera_avalon_jtag_uart_ioctl+0x7c>
   102d4:	e0bffc17 	ldw	r2,-16(fp)
   102d8:	00000206 	br	102e4 <altera_avalon_jtag_uart_ioctl+0x84>
   102dc:	00a00034 	movhi	r2,32768
   102e0:	10bfff84 	addi	r2,r2,-2
   102e4:	e0fffd17 	ldw	r3,-12(fp)
   102e8:	18800115 	stw	r2,4(r3)
      rc = 0;
   102ec:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
   102f0:	00000f06 	br	10330 <altera_avalon_jtag_uart_ioctl+0xd0>

  case TIOCGCONNECTED:
    /* Find out whether host is connected */
    if (sp->timeout != INT_MAX)
   102f4:	e0bffd17 	ldw	r2,-12(fp)
   102f8:	10c00117 	ldw	r3,4(r2)
   102fc:	00a00034 	movhi	r2,32768
   10300:	10bfffc4 	addi	r2,r2,-1
   10304:	18800c26 	beq	r3,r2,10338 <altera_avalon_jtag_uart_ioctl+0xd8>
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
   10308:	e0bffd17 	ldw	r2,-12(fp)
   1030c:	10c00917 	ldw	r3,36(r2)
   10310:	e0bffd17 	ldw	r2,-12(fp)
   10314:	10800117 	ldw	r2,4(r2)
   10318:	1885803a 	cmpltu	r2,r3,r2
   1031c:	10c03fcc 	andi	r3,r2,255
   10320:	e0bfff17 	ldw	r2,-4(fp)
   10324:	10c00015 	stw	r3,0(r2)
      rc = 0;
   10328:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
   1032c:	00000206 	br	10338 <altera_avalon_jtag_uart_ioctl+0xd8>
    {
      int timeout = *((int *)arg);
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
      rc = 0;
    }
    break;
   10330:	0001883a 	nop
   10334:	00000106 	br	1033c <altera_avalon_jtag_uart_ioctl+0xdc>
    if (sp->timeout != INT_MAX)
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
      rc = 0;
    }
    break;
   10338:	0001883a 	nop

  default:
    break;
  }

  return rc;
   1033c:	e0bffb17 	ldw	r2,-20(fp)
}
   10340:	e037883a 	mov	sp,fp
   10344:	df000017 	ldw	fp,0(sp)
   10348:	dec00104 	addi	sp,sp,4
   1034c:	f800283a 	ret

00010350 <altera_avalon_jtag_uart_read>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_read(altera_avalon_jtag_uart_state* sp, 
  char * buffer, int space, int flags)
{
   10350:	defff304 	addi	sp,sp,-52
   10354:	dfc00c15 	stw	ra,48(sp)
   10358:	df000b15 	stw	fp,44(sp)
   1035c:	df000b04 	addi	fp,sp,44
   10360:	e13ffc15 	stw	r4,-16(fp)
   10364:	e17ffd15 	stw	r5,-12(fp)
   10368:	e1bffe15 	stw	r6,-8(fp)
   1036c:	e1ffff15 	stw	r7,-4(fp)
  char * ptr = buffer;
   10370:	e0bffd17 	ldw	r2,-12(fp)
   10374:	e0bff515 	stw	r2,-44(fp)
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
   10378:	00004706 	br	10498 <altera_avalon_jtag_uart_read+0x148>
    unsigned int in, out;

    /* Read as much data as possible */
    do
    {
      in  = sp->rx_in;
   1037c:	e0bffc17 	ldw	r2,-16(fp)
   10380:	10800a17 	ldw	r2,40(r2)
   10384:	e0bff715 	stw	r2,-36(fp)
      out = sp->rx_out;
   10388:	e0bffc17 	ldw	r2,-16(fp)
   1038c:	10800b17 	ldw	r2,44(r2)
   10390:	e0bff815 	stw	r2,-32(fp)

      if (in >= out)
   10394:	e0fff717 	ldw	r3,-36(fp)
   10398:	e0bff817 	ldw	r2,-32(fp)
   1039c:	18800536 	bltu	r3,r2,103b4 <altera_avalon_jtag_uart_read+0x64>
        n = in - out;
   103a0:	e0fff717 	ldw	r3,-36(fp)
   103a4:	e0bff817 	ldw	r2,-32(fp)
   103a8:	1885c83a 	sub	r2,r3,r2
   103ac:	e0bff615 	stw	r2,-40(fp)
   103b0:	00000406 	br	103c4 <altera_avalon_jtag_uart_read+0x74>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;
   103b4:	00c20004 	movi	r3,2048
   103b8:	e0bff817 	ldw	r2,-32(fp)
   103bc:	1885c83a 	sub	r2,r3,r2
   103c0:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
   103c4:	e0bff617 	ldw	r2,-40(fp)
   103c8:	10001e26 	beq	r2,zero,10444 <altera_avalon_jtag_uart_read+0xf4>
        break; /* No more data available */

      if (n > space)
   103cc:	e0fffe17 	ldw	r3,-8(fp)
   103d0:	e0bff617 	ldw	r2,-40(fp)
   103d4:	1880022e 	bgeu	r3,r2,103e0 <altera_avalon_jtag_uart_read+0x90>
        n = space;
   103d8:	e0bffe17 	ldw	r2,-8(fp)
   103dc:	e0bff615 	stw	r2,-40(fp)

      memcpy(ptr, sp->rx_buf + out, n);
   103e0:	e0bffc17 	ldw	r2,-16(fp)
   103e4:	10c00e04 	addi	r3,r2,56
   103e8:	e0bff817 	ldw	r2,-32(fp)
   103ec:	1885883a 	add	r2,r3,r2
   103f0:	e1bff617 	ldw	r6,-40(fp)
   103f4:	100b883a 	mov	r5,r2
   103f8:	e13ff517 	ldw	r4,-44(fp)
   103fc:	000321c0 	call	321c <memcpy>
      ptr   += n;
   10400:	e0fff517 	ldw	r3,-44(fp)
   10404:	e0bff617 	ldw	r2,-40(fp)
   10408:	1885883a 	add	r2,r3,r2
   1040c:	e0bff515 	stw	r2,-44(fp)
      space -= n;
   10410:	e0fffe17 	ldw	r3,-8(fp)
   10414:	e0bff617 	ldw	r2,-40(fp)
   10418:	1885c83a 	sub	r2,r3,r2
   1041c:	e0bffe15 	stw	r2,-8(fp)

      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   10420:	e0fff817 	ldw	r3,-32(fp)
   10424:	e0bff617 	ldw	r2,-40(fp)
   10428:	1885883a 	add	r2,r3,r2
   1042c:	10c1ffcc 	andi	r3,r2,2047
   10430:	e0bffc17 	ldw	r2,-16(fp)
   10434:	10c00b15 	stw	r3,44(r2)
    }
    while (space > 0);
   10438:	e0bffe17 	ldw	r2,-8(fp)
   1043c:	00bfcf16 	blt	zero,r2,1037c <__alt_data_end+0xff01037c>
   10440:	00000106 	br	10448 <altera_avalon_jtag_uart_read+0xf8>
        n = in - out;
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;

      if (n == 0)
        break; /* No more data available */
   10444:	0001883a 	nop
      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    }
    while (space > 0);

    /* If we read any data then return it */
    if (ptr != buffer)
   10448:	e0fff517 	ldw	r3,-44(fp)
   1044c:	e0bffd17 	ldw	r2,-12(fp)
   10450:	1880141e 	bne	r3,r2,104a4 <altera_avalon_jtag_uart_read+0x154>
      break;

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
   10454:	e0bfff17 	ldw	r2,-4(fp)
   10458:	1090000c 	andi	r2,r2,16384
   1045c:	1000131e 	bne	r2,zero,104ac <altera_avalon_jtag_uart_read+0x15c>
      while (in == sp->rx_in && sp->host_inactive < sp->timeout)
        ;
    }
#else
    /* No OS: Always spin */
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
   10460:	0001883a 	nop
   10464:	e0bffc17 	ldw	r2,-16(fp)
   10468:	10c00a17 	ldw	r3,40(r2)
   1046c:	e0bff717 	ldw	r2,-36(fp)
   10470:	1880051e 	bne	r3,r2,10488 <altera_avalon_jtag_uart_read+0x138>
   10474:	e0bffc17 	ldw	r2,-16(fp)
   10478:	10c00917 	ldw	r3,36(r2)
   1047c:	e0bffc17 	ldw	r2,-16(fp)
   10480:	10800117 	ldw	r2,4(r2)
   10484:	18bff736 	bltu	r3,r2,10464 <__alt_data_end+0xff010464>
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
   10488:	e0bffc17 	ldw	r2,-16(fp)
   1048c:	10c00a17 	ldw	r3,40(r2)
   10490:	e0bff717 	ldw	r2,-36(fp)
   10494:	18800726 	beq	r3,r2,104b4 <altera_avalon_jtag_uart_read+0x164>
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
   10498:	e0bffe17 	ldw	r2,-8(fp)
   1049c:	00bfb716 	blt	zero,r2,1037c <__alt_data_end+0xff01037c>
   104a0:	00000506 	br	104b8 <altera_avalon_jtag_uart_read+0x168>
    }
    while (space > 0);

    /* If we read any data then return it */
    if (ptr != buffer)
      break;
   104a4:	0001883a 	nop
   104a8:	00000306 	br	104b8 <altera_avalon_jtag_uart_read+0x168>

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
      break;
   104ac:	0001883a 	nop
   104b0:	00000106 	br	104b8 <altera_avalon_jtag_uart_read+0x168>
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
      break;
   104b4:	0001883a 	nop
   * semaphore so that other threads can access the buffer.
   */

  ALT_SEM_POST (sp->read_lock);

  if (ptr != buffer)
   104b8:	e0fff517 	ldw	r3,-44(fp)
   104bc:	e0bffd17 	ldw	r2,-12(fp)
   104c0:	18801826 	beq	r3,r2,10524 <altera_avalon_jtag_uart_read+0x1d4>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   104c4:	0005303a 	rdctl	r2,status
   104c8:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   104cc:	e0fffb17 	ldw	r3,-20(fp)
   104d0:	00bfff84 	movi	r2,-2
   104d4:	1884703a 	and	r2,r3,r2
   104d8:	1001703a 	wrctl	status,r2
  
  return context;
   104dc:	e0bffb17 	ldw	r2,-20(fp)
  {
    /* If we read any data then there is space in the buffer so enable interrupts */
    context = alt_irq_disable_all();
   104e0:	e0bffa15 	stw	r2,-24(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
   104e4:	e0bffc17 	ldw	r2,-16(fp)
   104e8:	10800817 	ldw	r2,32(r2)
   104ec:	10c00054 	ori	r3,r2,1
   104f0:	e0bffc17 	ldw	r2,-16(fp)
   104f4:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
   104f8:	e0bffc17 	ldw	r2,-16(fp)
   104fc:	10800017 	ldw	r2,0(r2)
   10500:	10800104 	addi	r2,r2,4
   10504:	1007883a 	mov	r3,r2
   10508:	e0bffc17 	ldw	r2,-16(fp)
   1050c:	10800817 	ldw	r2,32(r2)
   10510:	18800035 	stwio	r2,0(r3)
   10514:	e0bffa17 	ldw	r2,-24(fp)
   10518:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   1051c:	e0bff917 	ldw	r2,-28(fp)
   10520:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
  }

  if (ptr != buffer)
   10524:	e0fff517 	ldw	r3,-44(fp)
   10528:	e0bffd17 	ldw	r2,-12(fp)
   1052c:	18800426 	beq	r3,r2,10540 <altera_avalon_jtag_uart_read+0x1f0>
    return ptr - buffer;
   10530:	e0fff517 	ldw	r3,-44(fp)
   10534:	e0bffd17 	ldw	r2,-12(fp)
   10538:	1885c83a 	sub	r2,r3,r2
   1053c:	00000606 	br	10558 <altera_avalon_jtag_uart_read+0x208>
  else if (flags & O_NONBLOCK)
   10540:	e0bfff17 	ldw	r2,-4(fp)
   10544:	1090000c 	andi	r2,r2,16384
   10548:	10000226 	beq	r2,zero,10554 <altera_avalon_jtag_uart_read+0x204>
    return -EWOULDBLOCK;
   1054c:	00bffd44 	movi	r2,-11
   10550:	00000106 	br	10558 <altera_avalon_jtag_uart_read+0x208>
  else
    return -EIO;
   10554:	00bffec4 	movi	r2,-5
}
   10558:	e037883a 	mov	sp,fp
   1055c:	dfc00117 	ldw	ra,4(sp)
   10560:	df000017 	ldw	fp,0(sp)
   10564:	dec00204 	addi	sp,sp,8
   10568:	f800283a 	ret

0001056c <altera_avalon_jtag_uart_write>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_write(altera_avalon_jtag_uart_state* sp, 
  const char * ptr, int count, int flags)
{
   1056c:	defff304 	addi	sp,sp,-52
   10570:	dfc00c15 	stw	ra,48(sp)
   10574:	df000b15 	stw	fp,44(sp)
   10578:	df000b04 	addi	fp,sp,44
   1057c:	e13ffc15 	stw	r4,-16(fp)
   10580:	e17ffd15 	stw	r5,-12(fp)
   10584:	e1bffe15 	stw	r6,-8(fp)
   10588:	e1ffff15 	stw	r7,-4(fp)
  /* Remove warning at optimisation level 03 by seting out to 0 */
  unsigned int in, out=0;
   1058c:	e03ff515 	stw	zero,-44(fp)
  unsigned int n;
  alt_irq_context context;

  const char * start = ptr;
   10590:	e0bffd17 	ldw	r2,-12(fp)
   10594:	e0bff715 	stw	r2,-36(fp)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
   10598:	00003706 	br	10678 <altera_avalon_jtag_uart_write+0x10c>
    {
      /* We need a stable value of the out pointer to calculate the space available */
      in  = sp->tx_in;
   1059c:	e0bffc17 	ldw	r2,-16(fp)
   105a0:	10800c17 	ldw	r2,48(r2)
   105a4:	e0bff915 	stw	r2,-28(fp)
      out = sp->tx_out;
   105a8:	e0bffc17 	ldw	r2,-16(fp)
   105ac:	10800d17 	ldw	r2,52(r2)
   105b0:	e0bff515 	stw	r2,-44(fp)

      if (in < out)
   105b4:	e0fff917 	ldw	r3,-28(fp)
   105b8:	e0bff517 	ldw	r2,-44(fp)
   105bc:	1880062e 	bgeu	r3,r2,105d8 <altera_avalon_jtag_uart_write+0x6c>
        n = out - 1 - in;
   105c0:	e0fff517 	ldw	r3,-44(fp)
   105c4:	e0bff917 	ldw	r2,-28(fp)
   105c8:	1885c83a 	sub	r2,r3,r2
   105cc:	10bfffc4 	addi	r2,r2,-1
   105d0:	e0bff615 	stw	r2,-40(fp)
   105d4:	00000b06 	br	10604 <altera_avalon_jtag_uart_write+0x98>
      else if (out > 0)
   105d8:	e0bff517 	ldw	r2,-44(fp)
   105dc:	10000526 	beq	r2,zero,105f4 <altera_avalon_jtag_uart_write+0x88>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
   105e0:	00c20004 	movi	r3,2048
   105e4:	e0bff917 	ldw	r2,-28(fp)
   105e8:	1885c83a 	sub	r2,r3,r2
   105ec:	e0bff615 	stw	r2,-40(fp)
   105f0:	00000406 	br	10604 <altera_avalon_jtag_uart_write+0x98>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;
   105f4:	00c1ffc4 	movi	r3,2047
   105f8:	e0bff917 	ldw	r2,-28(fp)
   105fc:	1885c83a 	sub	r2,r3,r2
   10600:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
   10604:	e0bff617 	ldw	r2,-40(fp)
   10608:	10001e26 	beq	r2,zero,10684 <altera_avalon_jtag_uart_write+0x118>
        break;

      if (n > count)
   1060c:	e0fffe17 	ldw	r3,-8(fp)
   10610:	e0bff617 	ldw	r2,-40(fp)
   10614:	1880022e 	bgeu	r3,r2,10620 <altera_avalon_jtag_uart_write+0xb4>
        n = count;
   10618:	e0bffe17 	ldw	r2,-8(fp)
   1061c:	e0bff615 	stw	r2,-40(fp)

      memcpy(sp->tx_buf + in, ptr, n);
   10620:	e0bffc17 	ldw	r2,-16(fp)
   10624:	10c20e04 	addi	r3,r2,2104
   10628:	e0bff917 	ldw	r2,-28(fp)
   1062c:	1885883a 	add	r2,r3,r2
   10630:	e1bff617 	ldw	r6,-40(fp)
   10634:	e17ffd17 	ldw	r5,-12(fp)
   10638:	1009883a 	mov	r4,r2
   1063c:	000321c0 	call	321c <memcpy>
      ptr   += n;
   10640:	e0fffd17 	ldw	r3,-12(fp)
   10644:	e0bff617 	ldw	r2,-40(fp)
   10648:	1885883a 	add	r2,r3,r2
   1064c:	e0bffd15 	stw	r2,-12(fp)
      count -= n;
   10650:	e0fffe17 	ldw	r3,-8(fp)
   10654:	e0bff617 	ldw	r2,-40(fp)
   10658:	1885c83a 	sub	r2,r3,r2
   1065c:	e0bffe15 	stw	r2,-8(fp)

      sp->tx_in = (in + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   10660:	e0fff917 	ldw	r3,-28(fp)
   10664:	e0bff617 	ldw	r2,-40(fp)
   10668:	1885883a 	add	r2,r3,r2
   1066c:	10c1ffcc 	andi	r3,r2,2047
   10670:	e0bffc17 	ldw	r2,-16(fp)
   10674:	10c00c15 	stw	r3,48(r2)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
   10678:	e0bffe17 	ldw	r2,-8(fp)
   1067c:	00bfc716 	blt	zero,r2,1059c <__alt_data_end+0xff01059c>
   10680:	00000106 	br	10688 <altera_avalon_jtag_uart_write+0x11c>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;

      if (n == 0)
        break;
   10684:	0001883a 	nop
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   10688:	0005303a 	rdctl	r2,status
   1068c:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   10690:	e0fffb17 	ldw	r3,-20(fp)
   10694:	00bfff84 	movi	r2,-2
   10698:	1884703a 	and	r2,r3,r2
   1069c:	1001703a 	wrctl	status,r2
  
  return context;
   106a0:	e0bffb17 	ldw	r2,-20(fp)
     * to enable interrupts if there is no space left in the FIFO
     *
     * For now kick the interrupt routine every time to make it transmit 
     * the data 
     */
    context = alt_irq_disable_all();
   106a4:	e0bffa15 	stw	r2,-24(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
   106a8:	e0bffc17 	ldw	r2,-16(fp)
   106ac:	10800817 	ldw	r2,32(r2)
   106b0:	10c00094 	ori	r3,r2,2
   106b4:	e0bffc17 	ldw	r2,-16(fp)
   106b8:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
   106bc:	e0bffc17 	ldw	r2,-16(fp)
   106c0:	10800017 	ldw	r2,0(r2)
   106c4:	10800104 	addi	r2,r2,4
   106c8:	1007883a 	mov	r3,r2
   106cc:	e0bffc17 	ldw	r2,-16(fp)
   106d0:	10800817 	ldw	r2,32(r2)
   106d4:	18800035 	stwio	r2,0(r3)
   106d8:	e0bffa17 	ldw	r2,-24(fp)
   106dc:	e0bff815 	stw	r2,-32(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   106e0:	e0bff817 	ldw	r2,-32(fp)
   106e4:	1001703a 	wrctl	status,r2
    /* 
     * If there is any data left then either return now or block until 
     * some has been sent 
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
   106e8:	e0bffe17 	ldw	r2,-8(fp)
   106ec:	0080100e 	bge	zero,r2,10730 <altera_avalon_jtag_uart_write+0x1c4>
    {
      if (flags & O_NONBLOCK)
   106f0:	e0bfff17 	ldw	r2,-4(fp)
   106f4:	1090000c 	andi	r2,r2,16384
   106f8:	1000101e 	bne	r2,zero,1073c <altera_avalon_jtag_uart_write+0x1d0>
      /*
       * No OS present: Always wait for data to be removed from buffer.  Once
       * the interrupt routine has removed some data then we will be able to
       * insert some more.
       */
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
   106fc:	0001883a 	nop
   10700:	e0bffc17 	ldw	r2,-16(fp)
   10704:	10c00d17 	ldw	r3,52(r2)
   10708:	e0bff517 	ldw	r2,-44(fp)
   1070c:	1880051e 	bne	r3,r2,10724 <altera_avalon_jtag_uart_write+0x1b8>
   10710:	e0bffc17 	ldw	r2,-16(fp)
   10714:	10c00917 	ldw	r3,36(r2)
   10718:	e0bffc17 	ldw	r2,-16(fp)
   1071c:	10800117 	ldw	r2,4(r2)
   10720:	18bff736 	bltu	r3,r2,10700 <__alt_data_end+0xff010700>
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
   10724:	e0bffc17 	ldw	r2,-16(fp)
   10728:	10800917 	ldw	r2,36(r2)
   1072c:	1000051e 	bne	r2,zero,10744 <altera_avalon_jtag_uart_write+0x1d8>
         break;
    }
  }
  while (count > 0);
   10730:	e0bffe17 	ldw	r2,-8(fp)
   10734:	00bfd016 	blt	zero,r2,10678 <__alt_data_end+0xff010678>
   10738:	00000306 	br	10748 <altera_avalon_jtag_uart_write+0x1dc>
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
    {
      if (flags & O_NONBLOCK)
        break;
   1073c:	0001883a 	nop
   10740:	00000106 	br	10748 <altera_avalon_jtag_uart_write+0x1dc>
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
         break;
   10744:	0001883a 	nop
   * Now that access to the circular buffer is complete, release the write
   * semaphore so that other threads can access the buffer.
   */
  ALT_SEM_POST (sp->write_lock);

  if (ptr != start)
   10748:	e0fffd17 	ldw	r3,-12(fp)
   1074c:	e0bff717 	ldw	r2,-36(fp)
   10750:	18800426 	beq	r3,r2,10764 <altera_avalon_jtag_uart_write+0x1f8>
    return ptr - start;
   10754:	e0fffd17 	ldw	r3,-12(fp)
   10758:	e0bff717 	ldw	r2,-36(fp)
   1075c:	1885c83a 	sub	r2,r3,r2
   10760:	00000606 	br	1077c <altera_avalon_jtag_uart_write+0x210>
  else if (flags & O_NONBLOCK)
   10764:	e0bfff17 	ldw	r2,-4(fp)
   10768:	1090000c 	andi	r2,r2,16384
   1076c:	10000226 	beq	r2,zero,10778 <altera_avalon_jtag_uart_write+0x20c>
    return -EWOULDBLOCK;
   10770:	00bffd44 	movi	r2,-11
   10774:	00000106 	br	1077c <altera_avalon_jtag_uart_write+0x210>
    sp->tx_out = sp->tx_in = 0;
    return ptr - start + count;
  }
#endif
  else
    return -EIO; /* Host not connected */
   10778:	00bffec4 	movi	r2,-5
}
   1077c:	e037883a 	mov	sp,fp
   10780:	dfc00117 	ldw	ra,4(sp)
   10784:	df000017 	ldw	fp,0(sp)
   10788:	dec00204 	addi	sp,sp,8
   1078c:	f800283a 	ret

00010790 <alt_avalon_timer_sc_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void alt_avalon_timer_sc_irq (void* base)
#else
static void alt_avalon_timer_sc_irq (void* base, alt_u32 id)
#endif
{
   10790:	defffa04 	addi	sp,sp,-24
   10794:	dfc00515 	stw	ra,20(sp)
   10798:	df000415 	stw	fp,16(sp)
   1079c:	df000404 	addi	fp,sp,16
   107a0:	e13fff15 	stw	r4,-4(fp)
  alt_irq_context cpu_sr;
  
  /* clear the interrupt */
  IOWR_ALTERA_AVALON_TIMER_STATUS (base, 0);
   107a4:	0007883a 	mov	r3,zero
   107a8:	e0bfff17 	ldw	r2,-4(fp)
   107ac:	10c00035 	stwio	r3,0(r2)
  /* 
   * Dummy read to ensure IRQ is negated before the ISR returns.
   * The control register is read because reading the status
   * register has side-effects per the register map documentation.
   */
  IORD_ALTERA_AVALON_TIMER_CONTROL (base);
   107b0:	e0bfff17 	ldw	r2,-4(fp)
   107b4:	10800104 	addi	r2,r2,4
   107b8:	10800037 	ldwio	r2,0(r2)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   107bc:	0005303a 	rdctl	r2,status
   107c0:	e0bffd15 	stw	r2,-12(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   107c4:	e0fffd17 	ldw	r3,-12(fp)
   107c8:	00bfff84 	movi	r2,-2
   107cc:	1884703a 	and	r2,r3,r2
   107d0:	1001703a 	wrctl	status,r2
  
  return context;
   107d4:	e0bffd17 	ldw	r2,-12(fp)

  /* 
   * Notify the system of a clock tick. disable interrupts 
   * during this time to safely support ISR preemption
   */
  cpu_sr = alt_irq_disable_all();
   107d8:	e0bffc15 	stw	r2,-16(fp)
  alt_tick ();
   107dc:	00114dc0 	call	114dc <alt_tick>
   107e0:	e0bffc17 	ldw	r2,-16(fp)
   107e4:	e0bffe15 	stw	r2,-8(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   107e8:	e0bffe17 	ldw	r2,-8(fp)
   107ec:	1001703a 	wrctl	status,r2
  alt_irq_enable_all(cpu_sr);
}
   107f0:	0001883a 	nop
   107f4:	e037883a 	mov	sp,fp
   107f8:	dfc00117 	ldw	ra,4(sp)
   107fc:	df000017 	ldw	fp,0(sp)
   10800:	dec00204 	addi	sp,sp,8
   10804:	f800283a 	ret

00010808 <alt_avalon_timer_sc_init>:
 * auto-generated alt_sys_init() function.
 */

void alt_avalon_timer_sc_init (void* base, alt_u32 irq_controller_id, 
                                alt_u32 irq, alt_u32 freq)
{
   10808:	defff804 	addi	sp,sp,-32
   1080c:	dfc00715 	stw	ra,28(sp)
   10810:	df000615 	stw	fp,24(sp)
   10814:	df000604 	addi	fp,sp,24
   10818:	e13ffc15 	stw	r4,-16(fp)
   1081c:	e17ffd15 	stw	r5,-12(fp)
   10820:	e1bffe15 	stw	r6,-8(fp)
   10824:	e1ffff15 	stw	r7,-4(fp)
   10828:	e0bfff17 	ldw	r2,-4(fp)
   1082c:	e0bffb15 	stw	r2,-20(fp)
 * in order to initialise the value of the clock frequency.
 */

static ALT_INLINE int ALT_ALWAYS_INLINE alt_sysclk_init (alt_u32 nticks)
{
  if (! _alt_tick_rate)
   10830:	d0a6e217 	ldw	r2,-25720(gp)
   10834:	1000021e 	bne	r2,zero,10840 <alt_avalon_timer_sc_init+0x38>
  {
    _alt_tick_rate = nticks;
   10838:	e0bffb17 	ldw	r2,-20(fp)
   1083c:	d0a6e215 	stw	r2,-25720(gp)
  
  alt_sysclk_init (freq);
  
  /* set to free running mode */
  
  IOWR_ALTERA_AVALON_TIMER_CONTROL (base, 
   10840:	e0bffc17 	ldw	r2,-16(fp)
   10844:	10800104 	addi	r2,r2,4
   10848:	00c001c4 	movi	r3,7
   1084c:	10c00035 	stwio	r3,0(r2)
            ALTERA_AVALON_TIMER_CONTROL_CONT_MSK |
            ALTERA_AVALON_TIMER_CONTROL_START_MSK);

  /* register the interrupt handler, and enable the interrupt */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, alt_avalon_timer_sc_irq, 
   10850:	d8000015 	stw	zero,0(sp)
   10854:	e1fffc17 	ldw	r7,-16(fp)
   10858:	01800074 	movhi	r6,1
   1085c:	3181e404 	addi	r6,r6,1936
   10860:	e17ffe17 	ldw	r5,-8(fp)
   10864:	e13ffd17 	ldw	r4,-12(fp)
   10868:	0010e0c0 	call	10e0c <alt_ic_isr_register>
                      base, NULL);
#else
  alt_irq_register (irq, base, alt_avalon_timer_sc_irq);
#endif  
}
   1086c:	0001883a 	nop
   10870:	e037883a 	mov	sp,fp
   10874:	dfc00117 	ldw	ra,4(sp)
   10878:	df000017 	ldw	fp,0(sp)
   1087c:	dec00204 	addi	sp,sp,8
   10880:	f800283a 	ret

00010884 <alt_timestamp_start>:
 * The return value of this function is 0 upon sucess and -1 if in timestamp
 * device has not been registered. 
 */

int alt_timestamp_start(void)
{
   10884:	defffe04 	addi	sp,sp,-8
   10888:	df000115 	stw	fp,4(sp)
   1088c:	df000104 	addi	fp,sp,4
  void* base = altera_avalon_timer_ts_base;
   10890:	d0a6df17 	ldw	r2,-25732(gp)
   10894:	e0bfff15 	stw	r2,-4(fp)

  if (!altera_avalon_timer_ts_freq)
   10898:	d0a6e017 	ldw	r2,-25728(gp)
   1089c:	1000021e 	bne	r2,zero,108a8 <alt_timestamp_start+0x24>
  {
    return -1;
   108a0:	00bfffc4 	movi	r2,-1
   108a4:	00001106 	br	108ec <alt_timestamp_start+0x68>
        IOWR_ALTERA_AVALON_TIMER_PERIOD_1 (base, 0xFFFF);;
        IOWR_ALTERA_AVALON_TIMER_PERIOD_2 (base, 0xFFFF);
        IOWR_ALTERA_AVALON_TIMER_PERIOD_3 (base, 0xFFFF);
        IOWR_ALTERA_AVALON_TIMER_CONTROL (base, ALTERA_AVALON_TIMER_CONTROL_START_MSK);
    } else {
        IOWR_ALTERA_AVALON_TIMER_CONTROL (base,ALTERA_AVALON_TIMER_CONTROL_STOP_MSK);
   108a8:	e0bfff17 	ldw	r2,-4(fp)
   108ac:	10800104 	addi	r2,r2,4
   108b0:	00c00204 	movi	r3,8
   108b4:	10c00035 	stwio	r3,0(r2)
        IOWR_ALTERA_AVALON_TIMER_PERIODL (base, 0xFFFF);
   108b8:	e0bfff17 	ldw	r2,-4(fp)
   108bc:	10800204 	addi	r2,r2,8
   108c0:	00ffffd4 	movui	r3,65535
   108c4:	10c00035 	stwio	r3,0(r2)
        IOWR_ALTERA_AVALON_TIMER_PERIODH (base, 0xFFFF);
   108c8:	e0bfff17 	ldw	r2,-4(fp)
   108cc:	10800304 	addi	r2,r2,12
   108d0:	00ffffd4 	movui	r3,65535
   108d4:	10c00035 	stwio	r3,0(r2)
        IOWR_ALTERA_AVALON_TIMER_CONTROL (base, ALTERA_AVALON_TIMER_CONTROL_START_MSK); 
   108d8:	e0bfff17 	ldw	r2,-4(fp)
   108dc:	10800104 	addi	r2,r2,4
   108e0:	00c00104 	movi	r3,4
   108e4:	10c00035 	stwio	r3,0(r2)
    } 
  }
  return 0;
   108e8:	0005883a 	mov	r2,zero
}
   108ec:	e037883a 	mov	sp,fp
   108f0:	df000017 	ldw	fp,0(sp)
   108f4:	dec00104 	addi	sp,sp,4
   108f8:	f800283a 	ret

000108fc <alt_timestamp>:
 * The returned timestamp counts up from the last time the period register
 * was reset. 
 */

alt_timestamp_type alt_timestamp(void)
{
   108fc:	defffc04 	addi	sp,sp,-16
   10900:	df000315 	stw	fp,12(sp)
   10904:	df000304 	addi	fp,sp,12

  void* base = altera_avalon_timer_ts_base;
   10908:	d0a6df17 	ldw	r2,-25732(gp)
   1090c:	e0bffd15 	stw	r2,-12(fp)

  if (!altera_avalon_timer_ts_freq)
   10910:	d0a6e017 	ldw	r2,-25728(gp)
   10914:	1000021e 	bne	r2,zero,10920 <alt_timestamp+0x24>
  {
#if (ALT_TIMESTAMP_COUNTER_SIZE == 64)
        return 0xFFFFFFFFFFFFFFFFULL;
#else
        return 0xFFFFFFFF;
   10918:	00bfffc4 	movi	r2,-1
   1091c:	00001306 	br	1096c <alt_timestamp+0x70>
        alt_timestamp_type snap_2 = IORD_ALTERA_AVALON_TIMER_SNAP_2(base) & ALTERA_AVALON_TIMER_SNAP_2_MSK;
        alt_timestamp_type snap_3 = IORD_ALTERA_AVALON_TIMER_SNAP_3(base) & ALTERA_AVALON_TIMER_SNAP_3_MSK;
        
        return (0xFFFFFFFFFFFFFFFFULL - ( (snap_3 << 48) | (snap_2 << 32) | (snap_1 << 16) | (snap_0) ));
#else
        IOWR_ALTERA_AVALON_TIMER_SNAPL (base, 0);
   10920:	e0bffd17 	ldw	r2,-12(fp)
   10924:	10800404 	addi	r2,r2,16
   10928:	0007883a 	mov	r3,zero
   1092c:	10c00035 	stwio	r3,0(r2)
        alt_timestamp_type lower = IORD_ALTERA_AVALON_TIMER_SNAPL(base) & ALTERA_AVALON_TIMER_SNAPL_MSK;
   10930:	e0bffd17 	ldw	r2,-12(fp)
   10934:	10800404 	addi	r2,r2,16
   10938:	10800037 	ldwio	r2,0(r2)
   1093c:	10bfffcc 	andi	r2,r2,65535
   10940:	e0bffe15 	stw	r2,-8(fp)
        alt_timestamp_type upper = IORD_ALTERA_AVALON_TIMER_SNAPH(base) & ALTERA_AVALON_TIMER_SNAPH_MSK;
   10944:	e0bffd17 	ldw	r2,-12(fp)
   10948:	10800504 	addi	r2,r2,20
   1094c:	10800037 	ldwio	r2,0(r2)
   10950:	10bfffcc 	andi	r2,r2,65535
   10954:	e0bfff15 	stw	r2,-4(fp)
        
        return (0xFFFFFFFF - ((upper << 16) | lower)); 
   10958:	e0bfff17 	ldw	r2,-4(fp)
   1095c:	1006943a 	slli	r3,r2,16
   10960:	e0bffe17 	ldw	r2,-8(fp)
   10964:	1884b03a 	or	r2,r3,r2
   10968:	0084303a 	nor	r2,zero,r2
#endif
  }
}
   1096c:	e037883a 	mov	sp,fp
   10970:	df000017 	ldw	fp,0(sp)
   10974:	dec00104 	addi	sp,sp,4
   10978:	f800283a 	ret

0001097c <alt_timestamp_freq>:
 * Return the number of timestamp ticks per second. This will be 0 if no
 * timestamp device has been registered.
 */

alt_u32 alt_timestamp_freq(void)
{
   1097c:	deffff04 	addi	sp,sp,-4
   10980:	df000015 	stw	fp,0(sp)
   10984:	d839883a 	mov	fp,sp
  return altera_avalon_timer_ts_freq;
   10988:	d0a6e017 	ldw	r2,-25728(gp)
}
   1098c:	e037883a 	mov	sp,fp
   10990:	df000017 	ldw	fp,0(sp)
   10994:	dec00104 	addi	sp,sp,4
   10998:	f800283a 	ret

0001099c <alt_alarm_start>:
 */ 

int alt_alarm_start (alt_alarm* alarm, alt_u32 nticks,
                     alt_u32 (*callback) (void* context),
                     void* context)
{
   1099c:	defff504 	addi	sp,sp,-44
   109a0:	df000a15 	stw	fp,40(sp)
   109a4:	df000a04 	addi	fp,sp,40
   109a8:	e13ffc15 	stw	r4,-16(fp)
   109ac:	e17ffd15 	stw	r5,-12(fp)
   109b0:	e1bffe15 	stw	r6,-8(fp)
   109b4:	e1ffff15 	stw	r7,-4(fp)
  alt_irq_context irq_context;
  alt_u32 current_nticks = 0;
   109b8:	e03ff615 	stw	zero,-40(fp)
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
   109bc:	d0a6e217 	ldw	r2,-25720(gp)
  
  if (alt_ticks_per_second ())
   109c0:	10003c26 	beq	r2,zero,10ab4 <alt_alarm_start+0x118>
  {
    if (alarm)
   109c4:	e0bffc17 	ldw	r2,-16(fp)
   109c8:	10003826 	beq	r2,zero,10aac <alt_alarm_start+0x110>
    {
      alarm->callback = callback;
   109cc:	e0bffc17 	ldw	r2,-16(fp)
   109d0:	e0fffe17 	ldw	r3,-8(fp)
   109d4:	10c00315 	stw	r3,12(r2)
      alarm->context  = context;
   109d8:	e0bffc17 	ldw	r2,-16(fp)
   109dc:	e0ffff17 	ldw	r3,-4(fp)
   109e0:	10c00515 	stw	r3,20(r2)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   109e4:	0005303a 	rdctl	r2,status
   109e8:	e0bff915 	stw	r2,-28(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   109ec:	e0fff917 	ldw	r3,-28(fp)
   109f0:	00bfff84 	movi	r2,-2
   109f4:	1884703a 	and	r2,r3,r2
   109f8:	1001703a 	wrctl	status,r2
  
  return context;
   109fc:	e0bff917 	ldw	r2,-28(fp)
 
      irq_context = alt_irq_disable_all ();
   10a00:	e0bff815 	stw	r2,-32(fp)
 * alt_nticks() returns the elapsed number of system clock ticks since reset.
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_nticks (void)
{
  return _alt_nticks;
   10a04:	d0a6e317 	ldw	r2,-25716(gp)
      
      current_nticks = alt_nticks();
   10a08:	e0bff615 	stw	r2,-40(fp)
      
      alarm->time = nticks + current_nticks + 1; 
   10a0c:	e0fffd17 	ldw	r3,-12(fp)
   10a10:	e0bff617 	ldw	r2,-40(fp)
   10a14:	1885883a 	add	r2,r3,r2
   10a18:	10c00044 	addi	r3,r2,1
   10a1c:	e0bffc17 	ldw	r2,-16(fp)
   10a20:	10c00215 	stw	r3,8(r2)
      /* 
       * If the desired alarm time causes a roll-over, set the rollover
       * flag. This will prevent the subsequent tick event from causing
       * an alarm too early.
       */
      if(alarm->time < current_nticks)
   10a24:	e0bffc17 	ldw	r2,-16(fp)
   10a28:	10c00217 	ldw	r3,8(r2)
   10a2c:	e0bff617 	ldw	r2,-40(fp)
   10a30:	1880042e 	bgeu	r3,r2,10a44 <alt_alarm_start+0xa8>
      {
        alarm->rollover = 1;
   10a34:	e0bffc17 	ldw	r2,-16(fp)
   10a38:	00c00044 	movi	r3,1
   10a3c:	10c00405 	stb	r3,16(r2)
   10a40:	00000206 	br	10a4c <alt_alarm_start+0xb0>
      }
      else
      {
        alarm->rollover = 0;
   10a44:	e0bffc17 	ldw	r2,-16(fp)
   10a48:	10000405 	stb	zero,16(r2)
      }
    
      alt_llist_insert (&alt_alarm_list, &alarm->llist);
   10a4c:	e0bffc17 	ldw	r2,-16(fp)
   10a50:	d0e00e04 	addi	r3,gp,-32712
   10a54:	e0fffa15 	stw	r3,-24(fp)
   10a58:	e0bffb15 	stw	r2,-20(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
   10a5c:	e0bffb17 	ldw	r2,-20(fp)
   10a60:	e0fffa17 	ldw	r3,-24(fp)
   10a64:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
   10a68:	e0bffa17 	ldw	r2,-24(fp)
   10a6c:	10c00017 	ldw	r3,0(r2)
   10a70:	e0bffb17 	ldw	r2,-20(fp)
   10a74:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
   10a78:	e0bffa17 	ldw	r2,-24(fp)
   10a7c:	10800017 	ldw	r2,0(r2)
   10a80:	e0fffb17 	ldw	r3,-20(fp)
   10a84:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
   10a88:	e0bffa17 	ldw	r2,-24(fp)
   10a8c:	e0fffb17 	ldw	r3,-20(fp)
   10a90:	10c00015 	stw	r3,0(r2)
   10a94:	e0bff817 	ldw	r2,-32(fp)
   10a98:	e0bff715 	stw	r2,-36(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   10a9c:	e0bff717 	ldw	r2,-36(fp)
   10aa0:	1001703a 	wrctl	status,r2
      alt_irq_enable_all (irq_context);

      return 0;
   10aa4:	0005883a 	mov	r2,zero
   10aa8:	00000306 	br	10ab8 <alt_alarm_start+0x11c>
    }
    else
    {
      return -EINVAL;
   10aac:	00bffa84 	movi	r2,-22
   10ab0:	00000106 	br	10ab8 <alt_alarm_start+0x11c>
    }
  }
  else
  {
    return -ENOTSUP;
   10ab4:	00bfde84 	movi	r2,-134
  }
}
   10ab8:	e037883a 	mov	sp,fp
   10abc:	df000017 	ldw	fp,0(sp)
   10ac0:	dec00104 	addi	sp,sp,4
   10ac4:	f800283a 	ret

00010ac8 <alt_busy_sleep>:
#include "alt_types.h"

#include "priv/alt_busy_sleep.h"

unsigned int alt_busy_sleep (unsigned int us)
{
   10ac8:	defffb04 	addi	sp,sp,-20
   10acc:	df000415 	stw	fp,16(sp)
   10ad0:	df000404 	addi	fp,sp,16
   10ad4:	e13fff15 	stw	r4,-4(fp)
  {
    cycles_per_loop = 9;
  }
  else  
  {
    cycles_per_loop = 3;
   10ad8:	008000c4 	movi	r2,3
   10adc:	e0bffd15 	stw	r2,-12(fp)
  }
  

  big_loops = us / (INT_MAX/
  (ALT_CPU_FREQ/(cycles_per_loop * 1000000)));
   10ae0:	e0fffd17 	ldw	r3,-12(fp)
   10ae4:	008003f4 	movhi	r2,15
   10ae8:	10909004 	addi	r2,r2,16960
   10aec:	1887383a 	mul	r3,r3,r2
   10af0:	0080bef4 	movhi	r2,763
   10af4:	10bc2004 	addi	r2,r2,-3968
   10af8:	10c7203a 	divu	r3,r2,r3
  {
    cycles_per_loop = 3;
  }
  

  big_loops = us / (INT_MAX/
   10afc:	00a00034 	movhi	r2,32768
   10b00:	10bfffc4 	addi	r2,r2,-1
   10b04:	10c5203a 	divu	r2,r2,r3
   10b08:	e0ffff17 	ldw	r3,-4(fp)
   10b0c:	1885203a 	divu	r2,r3,r2
   10b10:	e0bffe15 	stw	r2,-8(fp)
  (ALT_CPU_FREQ/(cycles_per_loop * 1000000)));

  if (big_loops)
   10b14:	e0bffe17 	ldw	r2,-8(fp)
   10b18:	10002526 	beq	r2,zero,10bb0 <alt_busy_sleep+0xe8>
  {
    for(i=0;i<big_loops;i++)
   10b1c:	e03ffc15 	stw	zero,-16(fp)
   10b20:	00001406 	br	10b74 <alt_busy_sleep+0xac>
      /*
      * Do NOT Try to single step the asm statement below 
      * (single step will never return)
      * Step out of this function or set a breakpoint after the asm statements
      */
      __asm__ volatile (
   10b24:	00a00034 	movhi	r2,32768
   10b28:	10bfffc4 	addi	r2,r2,-1
   10b2c:	10bfffc4 	addi	r2,r2,-1
   10b30:	103ffe1e 	bne	r2,zero,10b2c <__alt_data_end+0xff010b2c>
        "\n\t.pushsection .debug_alt_sim_info"
        "\n\t.int 4, 0, 0b, 1b"
        "\n\t.popsection"
        :: "r" (INT_MAX));
      us -= (INT_MAX/(ALT_CPU_FREQ/
      (cycles_per_loop * 1000000)));
   10b34:	e0fffd17 	ldw	r3,-12(fp)
   10b38:	008003f4 	movhi	r2,15
   10b3c:	10909004 	addi	r2,r2,16960
   10b40:	1887383a 	mul	r3,r3,r2
        "\n1:"
        "\n\t.pushsection .debug_alt_sim_info"
        "\n\t.int 4, 0, 0b, 1b"
        "\n\t.popsection"
        :: "r" (INT_MAX));
      us -= (INT_MAX/(ALT_CPU_FREQ/
   10b44:	0080bef4 	movhi	r2,763
   10b48:	10bc2004 	addi	r2,r2,-3968
   10b4c:	10c7203a 	divu	r3,r2,r3
   10b50:	00a00034 	movhi	r2,32768
   10b54:	10bfffc4 	addi	r2,r2,-1
   10b58:	10c5203a 	divu	r2,r2,r3
   10b5c:	e0ffff17 	ldw	r3,-4(fp)
   10b60:	1885c83a 	sub	r2,r3,r2
   10b64:	e0bfff15 	stw	r2,-4(fp)
  big_loops = us / (INT_MAX/
  (ALT_CPU_FREQ/(cycles_per_loop * 1000000)));

  if (big_loops)
  {
    for(i=0;i<big_loops;i++)
   10b68:	e0bffc17 	ldw	r2,-16(fp)
   10b6c:	10800044 	addi	r2,r2,1
   10b70:	e0bffc15 	stw	r2,-16(fp)
   10b74:	e0fffc17 	ldw	r3,-16(fp)
   10b78:	e0bffe17 	ldw	r2,-8(fp)
   10b7c:	18bfe916 	blt	r3,r2,10b24 <__alt_data_end+0xff010b24>
      "\n\tbne %0,zero,0b"
      "\n1:"
      "\n\t.pushsection .debug_alt_sim_info"
      "\n\t.int 4, 0, 0b, 1b"
      "\n\t.popsection"
      :: "r" (us*(ALT_CPU_FREQ/(cycles_per_loop * 1000000))));
   10b80:	e0fffd17 	ldw	r3,-12(fp)
   10b84:	008003f4 	movhi	r2,15
   10b88:	10909004 	addi	r2,r2,16960
   10b8c:	1887383a 	mul	r3,r3,r2
   10b90:	0080bef4 	movhi	r2,763
   10b94:	10bc2004 	addi	r2,r2,-3968
   10b98:	10c7203a 	divu	r3,r2,r3
   10b9c:	e0bfff17 	ldw	r2,-4(fp)
   10ba0:	1885383a 	mul	r2,r3,r2
    /*
    * Do NOT Try to single step the asm statement below 
    * (single step will never return)
    * Step out of this function or set a breakpoint after the asm statements
    */
    __asm__ volatile (
   10ba4:	10bfffc4 	addi	r2,r2,-1
   10ba8:	103ffe1e 	bne	r2,zero,10ba4 <__alt_data_end+0xff010ba4>
   10bac:	00000b06 	br	10bdc <alt_busy_sleep+0x114>
      "\n\tbgt %0,zero,0b"
      "\n1:"
      "\n\t.pushsection .debug_alt_sim_info"
      "\n\t.int 4, 0, 0b, 1b"
      "\n\t.popsection"
      :: "r" (us*(ALT_CPU_FREQ/(cycles_per_loop * 1000000))));
   10bb0:	e0fffd17 	ldw	r3,-12(fp)
   10bb4:	008003f4 	movhi	r2,15
   10bb8:	10909004 	addi	r2,r2,16960
   10bbc:	1887383a 	mul	r3,r3,r2
   10bc0:	0080bef4 	movhi	r2,763
   10bc4:	10bc2004 	addi	r2,r2,-3968
   10bc8:	10c7203a 	divu	r3,r2,r3
   10bcc:	e0bfff17 	ldw	r2,-4(fp)
   10bd0:	1885383a 	mul	r2,r3,r2
    /*
    * Do NOT Try to single step the asm statement below 
    * (single step will never return)
    * Step out of this function or set a breakpoint after the asm statements
    */
    __asm__ volatile (
   10bd4:	10bfffc4 	addi	r2,r2,-1
   10bd8:	00bffe16 	blt	zero,r2,10bd4 <__alt_data_end+0xff010bd4>
      "\n\t.int 4, 0, 0b, 1b"
      "\n\t.popsection"
      :: "r" (us*(ALT_CPU_FREQ/(cycles_per_loop * 1000000))));
  }
#endif /* #ifndef ALT_SIM_OPTIMIZE */
  return 0;
   10bdc:	0005883a 	mov	r2,zero
}
   10be0:	e037883a 	mov	sp,fp
   10be4:	df000017 	ldw	fp,0(sp)
   10be8:	dec00104 	addi	sp,sp,4
   10bec:	f800283a 	ret

00010bf0 <alt_dcache_flush_all>:
/*
 * alt_dcache_flush_all() is called to flush the entire data cache.
 */

void alt_dcache_flush_all (void)
{
   10bf0:	defffe04 	addi	sp,sp,-8
   10bf4:	df000115 	stw	fp,4(sp)
   10bf8:	df000104 	addi	fp,sp,4
#if NIOS2_DCACHE_SIZE > 0
  char* i;
  
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
   10bfc:	e03fff15 	stw	zero,-4(fp)
   10c00:	00000506 	br	10c18 <alt_dcache_flush_all+0x28>
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
   10c04:	e0bfff17 	ldw	r2,-4(fp)
   10c08:	1000003b 	flushd	0(r2)
void alt_dcache_flush_all (void)
{
#if NIOS2_DCACHE_SIZE > 0
  char* i;
  
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
   10c0c:	e0bfff17 	ldw	r2,-4(fp)
   10c10:	10800804 	addi	r2,r2,32
   10c14:	e0bfff15 	stw	r2,-4(fp)
   10c18:	e0bfff17 	ldw	r2,-4(fp)
   10c1c:	10900030 	cmpltui	r2,r2,16384
   10c20:	103ff81e 	bne	r2,zero,10c04 <__alt_data_end+0xff010c04>
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
  }
#endif /* NIOS2_DCACHE_SIZE > 0 */
}
   10c24:	0001883a 	nop
   10c28:	e037883a 	mov	sp,fp
   10c2c:	df000017 	ldw	fp,0(sp)
   10c30:	dec00104 	addi	sp,sp,4
   10c34:	f800283a 	ret

00010c38 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   10c38:	defffe04 	addi	sp,sp,-8
   10c3c:	dfc00115 	stw	ra,4(sp)
   10c40:	df000015 	stw	fp,0(sp)
   10c44:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   10c48:	d0a00b17 	ldw	r2,-32724(gp)
   10c4c:	10000326 	beq	r2,zero,10c5c <alt_get_errno+0x24>
   10c50:	d0a00b17 	ldw	r2,-32724(gp)
   10c54:	103ee83a 	callr	r2
   10c58:	00000106 	br	10c60 <alt_get_errno+0x28>
   10c5c:	d0a6d804 	addi	r2,gp,-25760
}
   10c60:	e037883a 	mov	sp,fp
   10c64:	dfc00117 	ldw	ra,4(sp)
   10c68:	df000017 	ldw	fp,0(sp)
   10c6c:	dec00204 	addi	sp,sp,8
   10c70:	f800283a 	ret

00010c74 <alt_dev_llist_insert>:
/*
 *
 */

int alt_dev_llist_insert (alt_dev_llist* dev, alt_llist* list)
{
   10c74:	defffa04 	addi	sp,sp,-24
   10c78:	dfc00515 	stw	ra,20(sp)
   10c7c:	df000415 	stw	fp,16(sp)
   10c80:	df000404 	addi	fp,sp,16
   10c84:	e13ffe15 	stw	r4,-8(fp)
   10c88:	e17fff15 	stw	r5,-4(fp)
  /*
   * check that the device exists, and that it has a valid name.
   */

  if (!dev || !dev->name)
   10c8c:	e0bffe17 	ldw	r2,-8(fp)
   10c90:	10000326 	beq	r2,zero,10ca0 <alt_dev_llist_insert+0x2c>
   10c94:	e0bffe17 	ldw	r2,-8(fp)
   10c98:	10800217 	ldw	r2,8(r2)
   10c9c:	1000061e 	bne	r2,zero,10cb8 <alt_dev_llist_insert+0x44>
  {
    ALT_ERRNO = EINVAL;
   10ca0:	0010c380 	call	10c38 <alt_get_errno>
   10ca4:	1007883a 	mov	r3,r2
   10ca8:	00800584 	movi	r2,22
   10cac:	18800015 	stw	r2,0(r3)
    return -EINVAL;
   10cb0:	00bffa84 	movi	r2,-22
   10cb4:	00001306 	br	10d04 <alt_dev_llist_insert+0x90>
  
  /*
   * register the device.
   */
  
  alt_llist_insert(list, &dev->llist);
   10cb8:	e0bffe17 	ldw	r2,-8(fp)
   10cbc:	e0ffff17 	ldw	r3,-4(fp)
   10cc0:	e0fffc15 	stw	r3,-16(fp)
   10cc4:	e0bffd15 	stw	r2,-12(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
   10cc8:	e0bffd17 	ldw	r2,-12(fp)
   10ccc:	e0fffc17 	ldw	r3,-16(fp)
   10cd0:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
   10cd4:	e0bffc17 	ldw	r2,-16(fp)
   10cd8:	10c00017 	ldw	r3,0(r2)
   10cdc:	e0bffd17 	ldw	r2,-12(fp)
   10ce0:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
   10ce4:	e0bffc17 	ldw	r2,-16(fp)
   10ce8:	10800017 	ldw	r2,0(r2)
   10cec:	e0fffd17 	ldw	r3,-12(fp)
   10cf0:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
   10cf4:	e0bffc17 	ldw	r2,-16(fp)
   10cf8:	e0fffd17 	ldw	r3,-12(fp)
   10cfc:	10c00015 	stw	r3,0(r2)

  return 0;  
   10d00:	0005883a 	mov	r2,zero
}
   10d04:	e037883a 	mov	sp,fp
   10d08:	dfc00117 	ldw	ra,4(sp)
   10d0c:	df000017 	ldw	fp,0(sp)
   10d10:	dec00204 	addi	sp,sp,8
   10d14:	f800283a 	ret

00010d18 <_do_ctors>:
/*
 * Run the C++ static constructors.
 */

void _do_ctors(void)
{
   10d18:	defffd04 	addi	sp,sp,-12
   10d1c:	dfc00215 	stw	ra,8(sp)
   10d20:	df000115 	stw	fp,4(sp)
   10d24:	df000104 	addi	fp,sp,4
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
   10d28:	00800074 	movhi	r2,1
   10d2c:	10874004 	addi	r2,r2,7424
   10d30:	e0bfff15 	stw	r2,-4(fp)
   10d34:	00000606 	br	10d50 <_do_ctors+0x38>
        (*ctor) (); 
   10d38:	e0bfff17 	ldw	r2,-4(fp)
   10d3c:	10800017 	ldw	r2,0(r2)
   10d40:	103ee83a 	callr	r2

void _do_ctors(void)
{
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
   10d44:	e0bfff17 	ldw	r2,-4(fp)
   10d48:	10bfff04 	addi	r2,r2,-4
   10d4c:	e0bfff15 	stw	r2,-4(fp)
   10d50:	e0ffff17 	ldw	r3,-4(fp)
   10d54:	00800074 	movhi	r2,1
   10d58:	10874104 	addi	r2,r2,7428
   10d5c:	18bff62e 	bgeu	r3,r2,10d38 <__alt_data_end+0xff010d38>
        (*ctor) (); 
}
   10d60:	0001883a 	nop
   10d64:	e037883a 	mov	sp,fp
   10d68:	dfc00117 	ldw	ra,4(sp)
   10d6c:	df000017 	ldw	fp,0(sp)
   10d70:	dec00204 	addi	sp,sp,8
   10d74:	f800283a 	ret

00010d78 <_do_dtors>:
/*
 * Run the C++ static destructors.
 */

void _do_dtors(void)
{
   10d78:	defffd04 	addi	sp,sp,-12
   10d7c:	dfc00215 	stw	ra,8(sp)
   10d80:	df000115 	stw	fp,4(sp)
   10d84:	df000104 	addi	fp,sp,4
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
   10d88:	00800074 	movhi	r2,1
   10d8c:	10874004 	addi	r2,r2,7424
   10d90:	e0bfff15 	stw	r2,-4(fp)
   10d94:	00000606 	br	10db0 <_do_dtors+0x38>
        (*dtor) (); 
   10d98:	e0bfff17 	ldw	r2,-4(fp)
   10d9c:	10800017 	ldw	r2,0(r2)
   10da0:	103ee83a 	callr	r2

void _do_dtors(void)
{
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
   10da4:	e0bfff17 	ldw	r2,-4(fp)
   10da8:	10bfff04 	addi	r2,r2,-4
   10dac:	e0bfff15 	stw	r2,-4(fp)
   10db0:	e0ffff17 	ldw	r3,-4(fp)
   10db4:	00800074 	movhi	r2,1
   10db8:	10874104 	addi	r2,r2,7428
   10dbc:	18bff62e 	bgeu	r3,r2,10d98 <__alt_data_end+0xff010d98>
        (*dtor) (); 
}
   10dc0:	0001883a 	nop
   10dc4:	e037883a 	mov	sp,fp
   10dc8:	dfc00117 	ldw	ra,4(sp)
   10dcc:	df000017 	ldw	fp,0(sp)
   10dd0:	dec00204 	addi	sp,sp,8
   10dd4:	f800283a 	ret

00010dd8 <alt_icache_flush_all>:
/*
 * alt_icache_flush_all() is called to flush the entire instruction cache.
 */

void alt_icache_flush_all (void)
{
   10dd8:	defffe04 	addi	sp,sp,-8
   10ddc:	dfc00115 	stw	ra,4(sp)
   10de0:	df000015 	stw	fp,0(sp)
   10de4:	d839883a 	mov	fp,sp
#if NIOS2_ICACHE_SIZE > 0
  alt_icache_flush (0, NIOS2_ICACHE_SIZE);
   10de8:	01500004 	movi	r5,16384
   10dec:	0009883a 	mov	r4,zero
   10df0:	00118440 	call	11844 <alt_icache_flush>
#endif
}
   10df4:	0001883a 	nop
   10df8:	e037883a 	mov	sp,fp
   10dfc:	dfc00117 	ldw	ra,4(sp)
   10e00:	df000017 	ldw	fp,0(sp)
   10e04:	dec00204 	addi	sp,sp,8
   10e08:	f800283a 	ret

00010e0c <alt_ic_isr_register>:
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
   10e0c:	defff904 	addi	sp,sp,-28
   10e10:	dfc00615 	stw	ra,24(sp)
   10e14:	df000515 	stw	fp,20(sp)
   10e18:	df000504 	addi	fp,sp,20
   10e1c:	e13ffc15 	stw	r4,-16(fp)
   10e20:	e17ffd15 	stw	r5,-12(fp)
   10e24:	e1bffe15 	stw	r6,-8(fp)
   10e28:	e1ffff15 	stw	r7,-4(fp)
    return alt_iic_isr_register(ic_id, irq, isr, isr_context, flags);
   10e2c:	e0800217 	ldw	r2,8(fp)
   10e30:	d8800015 	stw	r2,0(sp)
   10e34:	e1ffff17 	ldw	r7,-4(fp)
   10e38:	e1bffe17 	ldw	r6,-8(fp)
   10e3c:	e17ffd17 	ldw	r5,-12(fp)
   10e40:	e13ffc17 	ldw	r4,-16(fp)
   10e44:	0010fbc0 	call	10fbc <alt_iic_isr_register>
}  
   10e48:	e037883a 	mov	sp,fp
   10e4c:	dfc00117 	ldw	ra,4(sp)
   10e50:	df000017 	ldw	fp,0(sp)
   10e54:	dec00204 	addi	sp,sp,8
   10e58:	f800283a 	ret

00010e5c <alt_ic_irq_enable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_enable (alt_u32 ic_id, alt_u32 irq)
{
   10e5c:	defff904 	addi	sp,sp,-28
   10e60:	df000615 	stw	fp,24(sp)
   10e64:	df000604 	addi	fp,sp,24
   10e68:	e13ffe15 	stw	r4,-8(fp)
   10e6c:	e17fff15 	stw	r5,-4(fp)
   10e70:	e0bfff17 	ldw	r2,-4(fp)
   10e74:	e0bffa15 	stw	r2,-24(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   10e78:	0005303a 	rdctl	r2,status
   10e7c:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   10e80:	e0fffb17 	ldw	r3,-20(fp)
   10e84:	00bfff84 	movi	r2,-2
   10e88:	1884703a 	and	r2,r3,r2
   10e8c:	1001703a 	wrctl	status,r2
  
  return context;
   10e90:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_enable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
   10e94:	e0bffc15 	stw	r2,-16(fp)

  alt_irq_active |= (1 << id);
   10e98:	00c00044 	movi	r3,1
   10e9c:	e0bffa17 	ldw	r2,-24(fp)
   10ea0:	1884983a 	sll	r2,r3,r2
   10ea4:	1007883a 	mov	r3,r2
   10ea8:	d0a6e117 	ldw	r2,-25724(gp)
   10eac:	1884b03a 	or	r2,r3,r2
   10eb0:	d0a6e115 	stw	r2,-25724(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
   10eb4:	d0a6e117 	ldw	r2,-25724(gp)
   10eb8:	100170fa 	wrctl	ienable,r2
   10ebc:	e0bffc17 	ldw	r2,-16(fp)
   10ec0:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   10ec4:	e0bffd17 	ldw	r2,-12(fp)
   10ec8:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
   10ecc:	0005883a 	mov	r2,zero
    return alt_irq_enable(irq);
   10ed0:	0001883a 	nop
}
   10ed4:	e037883a 	mov	sp,fp
   10ed8:	df000017 	ldw	fp,0(sp)
   10edc:	dec00104 	addi	sp,sp,4
   10ee0:	f800283a 	ret

00010ee4 <alt_ic_irq_disable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_disable(alt_u32 ic_id, alt_u32 irq)
{
   10ee4:	defff904 	addi	sp,sp,-28
   10ee8:	df000615 	stw	fp,24(sp)
   10eec:	df000604 	addi	fp,sp,24
   10ef0:	e13ffe15 	stw	r4,-8(fp)
   10ef4:	e17fff15 	stw	r5,-4(fp)
   10ef8:	e0bfff17 	ldw	r2,-4(fp)
   10efc:	e0bffa15 	stw	r2,-24(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   10f00:	0005303a 	rdctl	r2,status
   10f04:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   10f08:	e0fffb17 	ldw	r3,-20(fp)
   10f0c:	00bfff84 	movi	r2,-2
   10f10:	1884703a 	and	r2,r3,r2
   10f14:	1001703a 	wrctl	status,r2
  
  return context;
   10f18:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_disable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
   10f1c:	e0bffc15 	stw	r2,-16(fp)

  alt_irq_active &= ~(1 << id);
   10f20:	00c00044 	movi	r3,1
   10f24:	e0bffa17 	ldw	r2,-24(fp)
   10f28:	1884983a 	sll	r2,r3,r2
   10f2c:	0084303a 	nor	r2,zero,r2
   10f30:	1007883a 	mov	r3,r2
   10f34:	d0a6e117 	ldw	r2,-25724(gp)
   10f38:	1884703a 	and	r2,r3,r2
   10f3c:	d0a6e115 	stw	r2,-25724(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
   10f40:	d0a6e117 	ldw	r2,-25724(gp)
   10f44:	100170fa 	wrctl	ienable,r2
   10f48:	e0bffc17 	ldw	r2,-16(fp)
   10f4c:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   10f50:	e0bffd17 	ldw	r2,-12(fp)
   10f54:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
   10f58:	0005883a 	mov	r2,zero
    return alt_irq_disable(irq);
   10f5c:	0001883a 	nop
}
   10f60:	e037883a 	mov	sp,fp
   10f64:	df000017 	ldw	fp,0(sp)
   10f68:	dec00104 	addi	sp,sp,4
   10f6c:	f800283a 	ret

00010f70 <alt_ic_irq_enabled>:
  * @param irq              IRQ number
  * @return                 Zero if corresponding interrupt is disabled and
  *                         non-zero otherwise.
  */
alt_u32 alt_ic_irq_enabled(alt_u32 ic_id, alt_u32 irq)
{
   10f70:	defffc04 	addi	sp,sp,-16
   10f74:	df000315 	stw	fp,12(sp)
   10f78:	df000304 	addi	fp,sp,12
   10f7c:	e13ffe15 	stw	r4,-8(fp)
   10f80:	e17fff15 	stw	r5,-4(fp)
    alt_u32 irq_enabled;

    NIOS2_READ_IENABLE(irq_enabled);
   10f84:	000530fa 	rdctl	r2,ienable
   10f88:	e0bffd15 	stw	r2,-12(fp)

    return (irq_enabled & (1 << irq)) ? 1: 0;
   10f8c:	00c00044 	movi	r3,1
   10f90:	e0bfff17 	ldw	r2,-4(fp)
   10f94:	1884983a 	sll	r2,r3,r2
   10f98:	1007883a 	mov	r3,r2
   10f9c:	e0bffd17 	ldw	r2,-12(fp)
   10fa0:	1884703a 	and	r2,r3,r2
   10fa4:	1004c03a 	cmpne	r2,r2,zero
   10fa8:	10803fcc 	andi	r2,r2,255
}
   10fac:	e037883a 	mov	sp,fp
   10fb0:	df000017 	ldw	fp,0(sp)
   10fb4:	dec00104 	addi	sp,sp,4
   10fb8:	f800283a 	ret

00010fbc <alt_iic_isr_register>:
  * @param flags            
  * @return                 0 if successful, else error (-1)
  */
int alt_iic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
   10fbc:	defff504 	addi	sp,sp,-44
   10fc0:	dfc00a15 	stw	ra,40(sp)
   10fc4:	df000915 	stw	fp,36(sp)
   10fc8:	df000904 	addi	fp,sp,36
   10fcc:	e13ffc15 	stw	r4,-16(fp)
   10fd0:	e17ffd15 	stw	r5,-12(fp)
   10fd4:	e1bffe15 	stw	r6,-8(fp)
   10fd8:	e1ffff15 	stw	r7,-4(fp)
  int rc = -EINVAL;  
   10fdc:	00bffa84 	movi	r2,-22
   10fe0:	e0bff715 	stw	r2,-36(fp)
  int id = irq;             /* IRQ interpreted as the interrupt ID. */
   10fe4:	e0bffd17 	ldw	r2,-12(fp)
   10fe8:	e0bff815 	stw	r2,-32(fp)
  alt_irq_context status;

  if (id < ALT_NIRQ)
   10fec:	e0bff817 	ldw	r2,-32(fp)
   10ff0:	10800808 	cmpgei	r2,r2,32
   10ff4:	1000271e 	bne	r2,zero,11094 <alt_iic_isr_register+0xd8>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   10ff8:	0005303a 	rdctl	r2,status
   10ffc:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   11000:	e0fffb17 	ldw	r3,-20(fp)
   11004:	00bfff84 	movi	r2,-2
   11008:	1884703a 	and	r2,r3,r2
   1100c:	1001703a 	wrctl	status,r2
  
  return context;
   11010:	e0bffb17 	ldw	r2,-20(fp)
     * interrupts are disabled while the handler tables are updated to ensure
     * that an interrupt doesn't occur while the tables are in an inconsistant
     * state.
     */

    status = alt_irq_disable_all();
   11014:	e0bffa15 	stw	r2,-24(fp)

    alt_irq[id].handler = isr;
   11018:	00800074 	movhi	r2,1
   1101c:	1096d504 	addi	r2,r2,23380
   11020:	e0fff817 	ldw	r3,-32(fp)
   11024:	180690fa 	slli	r3,r3,3
   11028:	10c5883a 	add	r2,r2,r3
   1102c:	e0fffe17 	ldw	r3,-8(fp)
   11030:	10c00015 	stw	r3,0(r2)
    alt_irq[id].context = isr_context;
   11034:	00800074 	movhi	r2,1
   11038:	1096d504 	addi	r2,r2,23380
   1103c:	e0fff817 	ldw	r3,-32(fp)
   11040:	180690fa 	slli	r3,r3,3
   11044:	10c5883a 	add	r2,r2,r3
   11048:	10800104 	addi	r2,r2,4
   1104c:	e0ffff17 	ldw	r3,-4(fp)
   11050:	10c00015 	stw	r3,0(r2)

    rc = (isr) ? alt_ic_irq_enable(ic_id, id) : alt_ic_irq_disable(ic_id, id);
   11054:	e0bffe17 	ldw	r2,-8(fp)
   11058:	10000526 	beq	r2,zero,11070 <alt_iic_isr_register+0xb4>
   1105c:	e0bff817 	ldw	r2,-32(fp)
   11060:	100b883a 	mov	r5,r2
   11064:	e13ffc17 	ldw	r4,-16(fp)
   11068:	0010e5c0 	call	10e5c <alt_ic_irq_enable>
   1106c:	00000406 	br	11080 <alt_iic_isr_register+0xc4>
   11070:	e0bff817 	ldw	r2,-32(fp)
   11074:	100b883a 	mov	r5,r2
   11078:	e13ffc17 	ldw	r4,-16(fp)
   1107c:	0010ee40 	call	10ee4 <alt_ic_irq_disable>
   11080:	e0bff715 	stw	r2,-36(fp)
   11084:	e0bffa17 	ldw	r2,-24(fp)
   11088:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   1108c:	e0bff917 	ldw	r2,-28(fp)
   11090:	1001703a 	wrctl	status,r2

    alt_irq_enable_all(status);
  }

  return rc; 
   11094:	e0bff717 	ldw	r2,-36(fp)
}
   11098:	e037883a 	mov	sp,fp
   1109c:	dfc00117 	ldw	ra,4(sp)
   110a0:	df000017 	ldw	fp,0(sp)
   110a4:	dec00204 	addi	sp,sp,8
   110a8:	f800283a 	ret

000110ac <alt_open_fd>:
 * If the device can not be succesfully opened, then the input file descriptor
 * remains unchanged.
 */

static void alt_open_fd(alt_fd* fd, const char* name, int flags, int mode)
{
   110ac:	defff904 	addi	sp,sp,-28
   110b0:	dfc00615 	stw	ra,24(sp)
   110b4:	df000515 	stw	fp,20(sp)
   110b8:	df000504 	addi	fp,sp,20
   110bc:	e13ffc15 	stw	r4,-16(fp)
   110c0:	e17ffd15 	stw	r5,-12(fp)
   110c4:	e1bffe15 	stw	r6,-8(fp)
   110c8:	e1ffff15 	stw	r7,-4(fp)
  int old;

  old = open (name, flags, mode);
   110cc:	e1bfff17 	ldw	r6,-4(fp)
   110d0:	e17ffe17 	ldw	r5,-8(fp)
   110d4:	e13ffd17 	ldw	r4,-12(fp)
   110d8:	00112ec0 	call	112ec <open>
   110dc:	e0bffb15 	stw	r2,-20(fp)

  if (old >= 0)
   110e0:	e0bffb17 	ldw	r2,-20(fp)
   110e4:	10001c16 	blt	r2,zero,11158 <alt_open_fd+0xac>
  {
    fd->dev      = alt_fd_list[old].dev;
   110e8:	00800074 	movhi	r2,1
   110ec:	108b6e04 	addi	r2,r2,11704
   110f0:	e0fffb17 	ldw	r3,-20(fp)
   110f4:	18c00324 	muli	r3,r3,12
   110f8:	10c5883a 	add	r2,r2,r3
   110fc:	10c00017 	ldw	r3,0(r2)
   11100:	e0bffc17 	ldw	r2,-16(fp)
   11104:	10c00015 	stw	r3,0(r2)
    fd->priv     = alt_fd_list[old].priv;
   11108:	00800074 	movhi	r2,1
   1110c:	108b6e04 	addi	r2,r2,11704
   11110:	e0fffb17 	ldw	r3,-20(fp)
   11114:	18c00324 	muli	r3,r3,12
   11118:	10c5883a 	add	r2,r2,r3
   1111c:	10800104 	addi	r2,r2,4
   11120:	10c00017 	ldw	r3,0(r2)
   11124:	e0bffc17 	ldw	r2,-16(fp)
   11128:	10c00115 	stw	r3,4(r2)
    fd->fd_flags = alt_fd_list[old].fd_flags;
   1112c:	00800074 	movhi	r2,1
   11130:	108b6e04 	addi	r2,r2,11704
   11134:	e0fffb17 	ldw	r3,-20(fp)
   11138:	18c00324 	muli	r3,r3,12
   1113c:	10c5883a 	add	r2,r2,r3
   11140:	10800204 	addi	r2,r2,8
   11144:	10c00017 	ldw	r3,0(r2)
   11148:	e0bffc17 	ldw	r2,-16(fp)
   1114c:	10c00215 	stw	r3,8(r2)

    alt_release_fd (old);
   11150:	e13ffb17 	ldw	r4,-20(fp)
   11154:	000f9c80 	call	f9c8 <alt_release_fd>
  }
} 
   11158:	0001883a 	nop
   1115c:	e037883a 	mov	sp,fp
   11160:	dfc00117 	ldw	ra,4(sp)
   11164:	df000017 	ldw	fp,0(sp)
   11168:	dec00204 	addi	sp,sp,8
   1116c:	f800283a 	ret

00011170 <alt_io_redirect>:
 */
 
void alt_io_redirect(const char* stdout_dev, 
                     const char* stdin_dev, 
                     const char* stderr_dev)
{
   11170:	defffb04 	addi	sp,sp,-20
   11174:	dfc00415 	stw	ra,16(sp)
   11178:	df000315 	stw	fp,12(sp)
   1117c:	df000304 	addi	fp,sp,12
   11180:	e13ffd15 	stw	r4,-12(fp)
   11184:	e17ffe15 	stw	r5,-8(fp)
   11188:	e1bfff15 	stw	r6,-4(fp)
  /* Redirect the channels */

  alt_open_fd (&alt_fd_list[STDOUT_FILENO], stdout_dev, O_WRONLY, 0777);
   1118c:	01c07fc4 	movi	r7,511
   11190:	01800044 	movi	r6,1
   11194:	e17ffd17 	ldw	r5,-12(fp)
   11198:	01000074 	movhi	r4,1
   1119c:	210b7104 	addi	r4,r4,11716
   111a0:	00110ac0 	call	110ac <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDIN_FILENO], stdin_dev, O_RDONLY, 0777);
   111a4:	01c07fc4 	movi	r7,511
   111a8:	000d883a 	mov	r6,zero
   111ac:	e17ffe17 	ldw	r5,-8(fp)
   111b0:	01000074 	movhi	r4,1
   111b4:	210b6e04 	addi	r4,r4,11704
   111b8:	00110ac0 	call	110ac <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDERR_FILENO], stderr_dev, O_WRONLY, 0777);
   111bc:	01c07fc4 	movi	r7,511
   111c0:	01800044 	movi	r6,1
   111c4:	e17fff17 	ldw	r5,-4(fp)
   111c8:	01000074 	movhi	r4,1
   111cc:	210b7404 	addi	r4,r4,11728
   111d0:	00110ac0 	call	110ac <alt_open_fd>
}  
   111d4:	0001883a 	nop
   111d8:	e037883a 	mov	sp,fp
   111dc:	dfc00117 	ldw	ra,4(sp)
   111e0:	df000017 	ldw	fp,0(sp)
   111e4:	dec00204 	addi	sp,sp,8
   111e8:	f800283a 	ret

000111ec <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   111ec:	defffe04 	addi	sp,sp,-8
   111f0:	dfc00115 	stw	ra,4(sp)
   111f4:	df000015 	stw	fp,0(sp)
   111f8:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   111fc:	d0a00b17 	ldw	r2,-32724(gp)
   11200:	10000326 	beq	r2,zero,11210 <alt_get_errno+0x24>
   11204:	d0a00b17 	ldw	r2,-32724(gp)
   11208:	103ee83a 	callr	r2
   1120c:	00000106 	br	11214 <alt_get_errno+0x28>
   11210:	d0a6d804 	addi	r2,gp,-25760
}
   11214:	e037883a 	mov	sp,fp
   11218:	dfc00117 	ldw	ra,4(sp)
   1121c:	df000017 	ldw	fp,0(sp)
   11220:	dec00204 	addi	sp,sp,8
   11224:	f800283a 	ret

00011228 <alt_file_locked>:
 * performed for devices. Filesystems are required to handle the ioctl() call
 * themselves, and report the error from the filesystems open() function. 
 */ 

static int alt_file_locked (alt_fd* fd)
{
   11228:	defffd04 	addi	sp,sp,-12
   1122c:	df000215 	stw	fp,8(sp)
   11230:	df000204 	addi	fp,sp,8
   11234:	e13fff15 	stw	r4,-4(fp)

  /*
   * Mark the file descriptor as belonging to a device.
   */

  fd->fd_flags |= ALT_FD_DEV;
   11238:	e0bfff17 	ldw	r2,-4(fp)
   1123c:	10800217 	ldw	r2,8(r2)
   11240:	10d00034 	orhi	r3,r2,16384
   11244:	e0bfff17 	ldw	r2,-4(fp)
   11248:	10c00215 	stw	r3,8(r2)
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
   1124c:	e03ffe15 	stw	zero,-8(fp)
   11250:	00001d06 	br	112c8 <alt_file_locked+0xa0>
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
   11254:	00800074 	movhi	r2,1
   11258:	108b6e04 	addi	r2,r2,11704
   1125c:	e0fffe17 	ldw	r3,-8(fp)
   11260:	18c00324 	muli	r3,r3,12
   11264:	10c5883a 	add	r2,r2,r3
   11268:	10c00017 	ldw	r3,0(r2)
   1126c:	e0bfff17 	ldw	r2,-4(fp)
   11270:	10800017 	ldw	r2,0(r2)
   11274:	1880111e 	bne	r3,r2,112bc <alt_file_locked+0x94>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
   11278:	00800074 	movhi	r2,1
   1127c:	108b6e04 	addi	r2,r2,11704
   11280:	e0fffe17 	ldw	r3,-8(fp)
   11284:	18c00324 	muli	r3,r3,12
   11288:	10c5883a 	add	r2,r2,r3
   1128c:	10800204 	addi	r2,r2,8
   11290:	10800017 	ldw	r2,0(r2)
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
   11294:	1000090e 	bge	r2,zero,112bc <alt_file_locked+0x94>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
        (&alt_fd_list[i] != fd))
   11298:	e0bffe17 	ldw	r2,-8(fp)
   1129c:	10c00324 	muli	r3,r2,12
   112a0:	00800074 	movhi	r2,1
   112a4:	108b6e04 	addi	r2,r2,11704
   112a8:	1887883a 	add	r3,r3,r2
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
   112ac:	e0bfff17 	ldw	r2,-4(fp)
   112b0:	18800226 	beq	r3,r2,112bc <alt_file_locked+0x94>
        (&alt_fd_list[i] != fd))
    {
      return -EACCES;
   112b4:	00bffcc4 	movi	r2,-13
   112b8:	00000806 	br	112dc <alt_file_locked+0xb4>
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
   112bc:	e0bffe17 	ldw	r2,-8(fp)
   112c0:	10800044 	addi	r2,r2,1
   112c4:	e0bffe15 	stw	r2,-8(fp)
   112c8:	d0a00a17 	ldw	r2,-32728(gp)
   112cc:	1007883a 	mov	r3,r2
   112d0:	e0bffe17 	ldw	r2,-8(fp)
   112d4:	18bfdf2e 	bgeu	r3,r2,11254 <__alt_data_end+0xff011254>
    }
  }
  
  /* The device is not locked */
 
  return 0;
   112d8:	0005883a 	mov	r2,zero
}
   112dc:	e037883a 	mov	sp,fp
   112e0:	df000017 	ldw	fp,0(sp)
   112e4:	dec00104 	addi	sp,sp,4
   112e8:	f800283a 	ret

000112ec <open>:
 *
 * ALT_OPEN is mapped onto the open() system call in alt_syscall.h
 */
 
int ALT_OPEN (const char* file, int flags, int mode)
{ 
   112ec:	defff604 	addi	sp,sp,-40
   112f0:	dfc00915 	stw	ra,36(sp)
   112f4:	df000815 	stw	fp,32(sp)
   112f8:	df000804 	addi	fp,sp,32
   112fc:	e13ffd15 	stw	r4,-12(fp)
   11300:	e17ffe15 	stw	r5,-8(fp)
   11304:	e1bfff15 	stw	r6,-4(fp)
  alt_dev* dev;
  alt_fd*  fd;
  int index  = -1;
   11308:	00bfffc4 	movi	r2,-1
   1130c:	e0bff915 	stw	r2,-28(fp)
  int status = -ENODEV;
   11310:	00bffb44 	movi	r2,-19
   11314:	e0bffa15 	stw	r2,-24(fp)
  int isafs = 0;
   11318:	e03ffb15 	stw	zero,-20(fp)
  /* 
   * Check the device list, to see if a device with a matching name is 
   * registered.
   */
  
  if (!(dev = alt_find_dev (file, &alt_dev_list)))
   1131c:	d1600804 	addi	r5,gp,-32736
   11320:	e13ffd17 	ldw	r4,-12(fp)
   11324:	00116080 	call	11608 <alt_find_dev>
   11328:	e0bff815 	stw	r2,-32(fp)
   1132c:	e0bff817 	ldw	r2,-32(fp)
   11330:	1000051e 	bne	r2,zero,11348 <open+0x5c>
  {
    /* No matching device, so try the filesystem list */

    dev   = alt_find_file (file);
   11334:	e13ffd17 	ldw	r4,-12(fp)
   11338:	00116980 	call	11698 <alt_find_file>
   1133c:	e0bff815 	stw	r2,-32(fp)
    isafs = 1;
   11340:	00800044 	movi	r2,1
   11344:	e0bffb15 	stw	r2,-20(fp)

  /* 
   * If a matching device or filesystem is found, allocate a file descriptor. 
   */

  if (dev)
   11348:	e0bff817 	ldw	r2,-32(fp)
   1134c:	10002926 	beq	r2,zero,113f4 <open+0x108>
  {
    if ((index = alt_get_fd (dev)) < 0)
   11350:	e13ff817 	ldw	r4,-32(fp)
   11354:	00117a00 	call	117a0 <alt_get_fd>
   11358:	e0bff915 	stw	r2,-28(fp)
   1135c:	e0bff917 	ldw	r2,-28(fp)
   11360:	1000030e 	bge	r2,zero,11370 <open+0x84>
    {
      status = index;
   11364:	e0bff917 	ldw	r2,-28(fp)
   11368:	e0bffa15 	stw	r2,-24(fp)
   1136c:	00002306 	br	113fc <open+0x110>
    }
    else
    {
      fd = &alt_fd_list[index];
   11370:	e0bff917 	ldw	r2,-28(fp)
   11374:	10c00324 	muli	r3,r2,12
   11378:	00800074 	movhi	r2,1
   1137c:	108b6e04 	addi	r2,r2,11704
   11380:	1885883a 	add	r2,r3,r2
   11384:	e0bffc15 	stw	r2,-16(fp)
      fd->fd_flags = (flags & ~ALT_FD_FLAGS_MASK);
   11388:	e0fffe17 	ldw	r3,-8(fp)
   1138c:	00900034 	movhi	r2,16384
   11390:	10bfffc4 	addi	r2,r2,-1
   11394:	1886703a 	and	r3,r3,r2
   11398:	e0bffc17 	ldw	r2,-16(fp)
   1139c:	10c00215 	stw	r3,8(r2)
      
      /* If this is a device, ensure it isn't already locked */

      if (isafs || ((status = alt_file_locked (fd)) >= 0))
   113a0:	e0bffb17 	ldw	r2,-20(fp)
   113a4:	1000051e 	bne	r2,zero,113bc <open+0xd0>
   113a8:	e13ffc17 	ldw	r4,-16(fp)
   113ac:	00112280 	call	11228 <alt_file_locked>
   113b0:	e0bffa15 	stw	r2,-24(fp)
   113b4:	e0bffa17 	ldw	r2,-24(fp)
   113b8:	10001016 	blt	r2,zero,113fc <open+0x110>
        /* 
         * If the device or filesystem provides an open() callback function,
         * call it now to perform any device/filesystem specific operations.
         */
    
        status = (dev->open) ? dev->open(fd, file, flags, mode): 0;
   113bc:	e0bff817 	ldw	r2,-32(fp)
   113c0:	10800317 	ldw	r2,12(r2)
   113c4:	10000826 	beq	r2,zero,113e8 <open+0xfc>
   113c8:	e0bff817 	ldw	r2,-32(fp)
   113cc:	10800317 	ldw	r2,12(r2)
   113d0:	e1ffff17 	ldw	r7,-4(fp)
   113d4:	e1bffe17 	ldw	r6,-8(fp)
   113d8:	e17ffd17 	ldw	r5,-12(fp)
   113dc:	e13ffc17 	ldw	r4,-16(fp)
   113e0:	103ee83a 	callr	r2
   113e4:	00000106 	br	113ec <open+0x100>
   113e8:	0005883a 	mov	r2,zero
   113ec:	e0bffa15 	stw	r2,-24(fp)
   113f0:	00000206 	br	113fc <open+0x110>
      }
    }
  }
  else
  {
    status = -ENODEV;
   113f4:	00bffb44 	movi	r2,-19
   113f8:	e0bffa15 	stw	r2,-24(fp)
  }

  /* Allocation failed, so clean up and return an error */ 

  if (status < 0)
   113fc:	e0bffa17 	ldw	r2,-24(fp)
   11400:	1000090e 	bge	r2,zero,11428 <open+0x13c>
  {
    alt_release_fd (index);  
   11404:	e13ff917 	ldw	r4,-28(fp)
   11408:	000f9c80 	call	f9c8 <alt_release_fd>
    ALT_ERRNO = -status;
   1140c:	00111ec0 	call	111ec <alt_get_errno>
   11410:	1007883a 	mov	r3,r2
   11414:	e0bffa17 	ldw	r2,-24(fp)
   11418:	0085c83a 	sub	r2,zero,r2
   1141c:	18800015 	stw	r2,0(r3)
    return -1;
   11420:	00bfffc4 	movi	r2,-1
   11424:	00000106 	br	1142c <open+0x140>
  }
  
  /* return the reference upon success */

  return index;
   11428:	e0bff917 	ldw	r2,-28(fp)
}
   1142c:	e037883a 	mov	sp,fp
   11430:	dfc00117 	ldw	ra,4(sp)
   11434:	df000017 	ldw	fp,0(sp)
   11438:	dec00204 	addi	sp,sp,8
   1143c:	f800283a 	ret

00011440 <alt_alarm_stop>:
 * alarms. Alternatively an alarm can unregister itself by returning zero when 
 * the alarm executes.
 */

void alt_alarm_stop (alt_alarm* alarm)
{
   11440:	defffa04 	addi	sp,sp,-24
   11444:	df000515 	stw	fp,20(sp)
   11448:	df000504 	addi	fp,sp,20
   1144c:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   11450:	0005303a 	rdctl	r2,status
   11454:	e0bffc15 	stw	r2,-16(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   11458:	e0fffc17 	ldw	r3,-16(fp)
   1145c:	00bfff84 	movi	r2,-2
   11460:	1884703a 	and	r2,r3,r2
   11464:	1001703a 	wrctl	status,r2
  
  return context;
   11468:	e0bffc17 	ldw	r2,-16(fp)
  alt_irq_context irq_context;

  irq_context = alt_irq_disable_all();
   1146c:	e0bffb15 	stw	r2,-20(fp)
  alt_llist_remove (&alarm->llist);
   11470:	e0bfff17 	ldw	r2,-4(fp)
   11474:	e0bffd15 	stw	r2,-12(fp)
 * input argument is the element to remove.
 */
     
static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_remove(alt_llist* entry)
{
  entry->next->previous = entry->previous;
   11478:	e0bffd17 	ldw	r2,-12(fp)
   1147c:	10800017 	ldw	r2,0(r2)
   11480:	e0fffd17 	ldw	r3,-12(fp)
   11484:	18c00117 	ldw	r3,4(r3)
   11488:	10c00115 	stw	r3,4(r2)
  entry->previous->next = entry->next;
   1148c:	e0bffd17 	ldw	r2,-12(fp)
   11490:	10800117 	ldw	r2,4(r2)
   11494:	e0fffd17 	ldw	r3,-12(fp)
   11498:	18c00017 	ldw	r3,0(r3)
   1149c:	10c00015 	stw	r3,0(r2)
  /* 
   * Set the entry to point to itself, so that any further calls to
   * alt_llist_remove() are harmless.
   */

  entry->previous = entry;
   114a0:	e0bffd17 	ldw	r2,-12(fp)
   114a4:	e0fffd17 	ldw	r3,-12(fp)
   114a8:	10c00115 	stw	r3,4(r2)
  entry->next     = entry;
   114ac:	e0bffd17 	ldw	r2,-12(fp)
   114b0:	e0fffd17 	ldw	r3,-12(fp)
   114b4:	10c00015 	stw	r3,0(r2)
   114b8:	e0bffb17 	ldw	r2,-20(fp)
   114bc:	e0bffe15 	stw	r2,-8(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   114c0:	e0bffe17 	ldw	r2,-8(fp)
   114c4:	1001703a 	wrctl	status,r2
  alt_irq_enable_all (irq_context);
}
   114c8:	0001883a 	nop
   114cc:	e037883a 	mov	sp,fp
   114d0:	df000017 	ldw	fp,0(sp)
   114d4:	dec00104 	addi	sp,sp,4
   114d8:	f800283a 	ret

000114dc <alt_tick>:
 * 
 * alt_tick() is expected to run at interrupt level.
 */

void alt_tick (void)
{
   114dc:	defffb04 	addi	sp,sp,-20
   114e0:	dfc00415 	stw	ra,16(sp)
   114e4:	df000315 	stw	fp,12(sp)
   114e8:	df000304 	addi	fp,sp,12
  alt_alarm* next;
  alt_alarm* alarm = (alt_alarm*) alt_alarm_list.next;
   114ec:	d0a00e17 	ldw	r2,-32712(gp)
   114f0:	e0bffd15 	stw	r2,-12(fp)

  alt_u32    next_callback;

  /* update the tick counter */

  _alt_nticks++;
   114f4:	d0a6e317 	ldw	r2,-25716(gp)
   114f8:	10800044 	addi	r2,r2,1
   114fc:	d0a6e315 	stw	r2,-25716(gp)

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
   11500:	00002e06 	br	115bc <alt_tick+0xe0>
  {
    next = (alt_alarm*) alarm->llist.next;
   11504:	e0bffd17 	ldw	r2,-12(fp)
   11508:	10800017 	ldw	r2,0(r2)
   1150c:	e0bffe15 	stw	r2,-8(fp)
    /* 
     * Upon the tick-counter rolling over it is safe to clear the 
     * roll-over flag; once the flag is cleared this (or subsequnt)
     * tick events are enabled to generate an alarm event. 
     */
    if ((alarm->rollover) && (_alt_nticks == 0))
   11510:	e0bffd17 	ldw	r2,-12(fp)
   11514:	10800403 	ldbu	r2,16(r2)
   11518:	10803fcc 	andi	r2,r2,255
   1151c:	10000426 	beq	r2,zero,11530 <alt_tick+0x54>
   11520:	d0a6e317 	ldw	r2,-25716(gp)
   11524:	1000021e 	bne	r2,zero,11530 <alt_tick+0x54>
    {
      alarm->rollover = 0;
   11528:	e0bffd17 	ldw	r2,-12(fp)
   1152c:	10000405 	stb	zero,16(r2)
    }
    
    /* if the alarm period has expired, make the callback */    
    if ((alarm->time <= _alt_nticks) && (alarm->rollover == 0))
   11530:	e0bffd17 	ldw	r2,-12(fp)
   11534:	10800217 	ldw	r2,8(r2)
   11538:	d0e6e317 	ldw	r3,-25716(gp)
   1153c:	18801d36 	bltu	r3,r2,115b4 <alt_tick+0xd8>
   11540:	e0bffd17 	ldw	r2,-12(fp)
   11544:	10800403 	ldbu	r2,16(r2)
   11548:	10803fcc 	andi	r2,r2,255
   1154c:	1000191e 	bne	r2,zero,115b4 <alt_tick+0xd8>
    {
      next_callback = alarm->callback (alarm->context);
   11550:	e0bffd17 	ldw	r2,-12(fp)
   11554:	10800317 	ldw	r2,12(r2)
   11558:	e0fffd17 	ldw	r3,-12(fp)
   1155c:	18c00517 	ldw	r3,20(r3)
   11560:	1809883a 	mov	r4,r3
   11564:	103ee83a 	callr	r2
   11568:	e0bfff15 	stw	r2,-4(fp)

      /* deactivate the alarm if the return value is zero */

      if (next_callback == 0)
   1156c:	e0bfff17 	ldw	r2,-4(fp)
   11570:	1000031e 	bne	r2,zero,11580 <alt_tick+0xa4>
      {
        alt_alarm_stop (alarm);
   11574:	e13ffd17 	ldw	r4,-12(fp)
   11578:	00114400 	call	11440 <alt_alarm_stop>
   1157c:	00000d06 	br	115b4 <alt_tick+0xd8>
      }
      else
      {
        alarm->time += next_callback;
   11580:	e0bffd17 	ldw	r2,-12(fp)
   11584:	10c00217 	ldw	r3,8(r2)
   11588:	e0bfff17 	ldw	r2,-4(fp)
   1158c:	1887883a 	add	r3,r3,r2
   11590:	e0bffd17 	ldw	r2,-12(fp)
   11594:	10c00215 	stw	r3,8(r2)
        /* 
         * If the desired alarm time causes a roll-over, set the rollover
         * flag. This will prevent the subsequent tick event from causing
         * an alarm too early.
         */
        if(alarm->time < _alt_nticks)
   11598:	e0bffd17 	ldw	r2,-12(fp)
   1159c:	10c00217 	ldw	r3,8(r2)
   115a0:	d0a6e317 	ldw	r2,-25716(gp)
   115a4:	1880032e 	bgeu	r3,r2,115b4 <alt_tick+0xd8>
        {
          alarm->rollover = 1;
   115a8:	e0bffd17 	ldw	r2,-12(fp)
   115ac:	00c00044 	movi	r3,1
   115b0:	10c00405 	stb	r3,16(r2)
        }
      }
    }
    alarm = next;
   115b4:	e0bffe17 	ldw	r2,-8(fp)
   115b8:	e0bffd15 	stw	r2,-12(fp)

  _alt_nticks++;

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
   115bc:	e0fffd17 	ldw	r3,-12(fp)
   115c0:	d0a00e04 	addi	r2,gp,-32712
   115c4:	18bfcf1e 	bne	r3,r2,11504 <__alt_data_end+0xff011504>

  /* 
   * Update the operating system specific timer facilities.
   */

  ALT_OS_TIME_TICK();
   115c8:	0001883a 	nop
}
   115cc:	0001883a 	nop
   115d0:	e037883a 	mov	sp,fp
   115d4:	dfc00117 	ldw	ra,4(sp)
   115d8:	df000017 	ldw	fp,0(sp)
   115dc:	dec00204 	addi	sp,sp,8
   115e0:	f800283a 	ret

000115e4 <altera_nios2_gen2_irq_init>:
/*
 * To initialize the internal interrupt controller, just clear the IENABLE
 * register so that all possible IRQs are disabled.
 */
void altera_nios2_gen2_irq_init(void) 
{
   115e4:	deffff04 	addi	sp,sp,-4
   115e8:	df000015 	stw	fp,0(sp)
   115ec:	d839883a 	mov	fp,sp
    NIOS2_WRITE_IENABLE(0);
   115f0:	000170fa 	wrctl	ienable,zero
}
   115f4:	0001883a 	nop
   115f8:	e037883a 	mov	sp,fp
   115fc:	df000017 	ldw	fp,0(sp)
   11600:	dec00104 	addi	sp,sp,4
   11604:	f800283a 	ret

00011608 <alt_find_dev>:
 * "name" must be an exact match for the devices registered name for a match to
 * be found.
 */
 
alt_dev* alt_find_dev(const char* name, alt_llist* llist)
{
   11608:	defffa04 	addi	sp,sp,-24
   1160c:	dfc00515 	stw	ra,20(sp)
   11610:	df000415 	stw	fp,16(sp)
   11614:	df000404 	addi	fp,sp,16
   11618:	e13ffe15 	stw	r4,-8(fp)
   1161c:	e17fff15 	stw	r5,-4(fp)
  alt_dev* next = (alt_dev*) llist->next;
   11620:	e0bfff17 	ldw	r2,-4(fp)
   11624:	10800017 	ldw	r2,0(r2)
   11628:	e0bffc15 	stw	r2,-16(fp)
  alt_32 len;

  len  = strlen(name) + 1;
   1162c:	e13ffe17 	ldw	r4,-8(fp)
   11630:	00034f80 	call	34f8 <strlen>
   11634:	10800044 	addi	r2,r2,1
   11638:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
   1163c:	00000d06 	br	11674 <alt_find_dev+0x6c>
    /* 
     * memcmp() is used here rather than strcmp() in order to reduce the size
     * of the executable.
     */

    if (!memcmp (next->name, name, len))
   11640:	e0bffc17 	ldw	r2,-16(fp)
   11644:	10800217 	ldw	r2,8(r2)
   11648:	e0fffd17 	ldw	r3,-12(fp)
   1164c:	180d883a 	mov	r6,r3
   11650:	e17ffe17 	ldw	r5,-8(fp)
   11654:	1009883a 	mov	r4,r2
   11658:	00119bc0 	call	119bc <memcmp>
   1165c:	1000021e 	bne	r2,zero,11668 <alt_find_dev+0x60>
    {
      /* match found */

      return next;
   11660:	e0bffc17 	ldw	r2,-16(fp)
   11664:	00000706 	br	11684 <alt_find_dev+0x7c>
    }
    next = (alt_dev*) next->llist.next;
   11668:	e0bffc17 	ldw	r2,-16(fp)
   1166c:	10800017 	ldw	r2,0(r2)
   11670:	e0bffc15 	stw	r2,-16(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
   11674:	e0fffc17 	ldw	r3,-16(fp)
   11678:	e0bfff17 	ldw	r2,-4(fp)
   1167c:	18bff01e 	bne	r3,r2,11640 <__alt_data_end+0xff011640>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;
   11680:	0005883a 	mov	r2,zero
}
   11684:	e037883a 	mov	sp,fp
   11688:	dfc00117 	ldw	ra,4(sp)
   1168c:	df000017 	ldw	fp,0(sp)
   11690:	dec00204 	addi	sp,sp,8
   11694:	f800283a 	ret

00011698 <alt_find_file>:
 * either '/' or '\0' is the prefix of the filename. For example the filename:
 * "/myfilesystem/junk.txt" would match: "/myfilesystem", but not: "/myfile". 
 */
 
alt_dev* alt_find_file (const char* name)
{
   11698:	defffb04 	addi	sp,sp,-20
   1169c:	dfc00415 	stw	ra,16(sp)
   116a0:	df000315 	stw	fp,12(sp)
   116a4:	df000304 	addi	fp,sp,12
   116a8:	e13fff15 	stw	r4,-4(fp)
  alt_dev* next = (alt_dev*) alt_fs_list.next;   
   116ac:	d0a00617 	ldw	r2,-32744(gp)
   116b0:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
   116b4:	00003106 	br	1177c <alt_find_file+0xe4>
  {
    len = strlen(next->name);
   116b8:	e0bffd17 	ldw	r2,-12(fp)
   116bc:	10800217 	ldw	r2,8(r2)
   116c0:	1009883a 	mov	r4,r2
   116c4:	00034f80 	call	34f8 <strlen>
   116c8:	e0bffe15 	stw	r2,-8(fp)
    
    if (next->name[len-1] == '/')
   116cc:	e0bffd17 	ldw	r2,-12(fp)
   116d0:	10c00217 	ldw	r3,8(r2)
   116d4:	e0bffe17 	ldw	r2,-8(fp)
   116d8:	10bfffc4 	addi	r2,r2,-1
   116dc:	1885883a 	add	r2,r3,r2
   116e0:	10800003 	ldbu	r2,0(r2)
   116e4:	10803fcc 	andi	r2,r2,255
   116e8:	1080201c 	xori	r2,r2,128
   116ec:	10bfe004 	addi	r2,r2,-128
   116f0:	10800bd8 	cmpnei	r2,r2,47
   116f4:	1000031e 	bne	r2,zero,11704 <alt_find_file+0x6c>
    {
      len -= 1;
   116f8:	e0bffe17 	ldw	r2,-8(fp)
   116fc:	10bfffc4 	addi	r2,r2,-1
   11700:	e0bffe15 	stw	r2,-8(fp)
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
   11704:	e0bffe17 	ldw	r2,-8(fp)
   11708:	e0ffff17 	ldw	r3,-4(fp)
   1170c:	1885883a 	add	r2,r3,r2
   11710:	10800003 	ldbu	r2,0(r2)
   11714:	10803fcc 	andi	r2,r2,255
   11718:	1080201c 	xori	r2,r2,128
   1171c:	10bfe004 	addi	r2,r2,-128
   11720:	10800be0 	cmpeqi	r2,r2,47
   11724:	1000081e 	bne	r2,zero,11748 <alt_find_file+0xb0>
   11728:	e0bffe17 	ldw	r2,-8(fp)
   1172c:	e0ffff17 	ldw	r3,-4(fp)
   11730:	1885883a 	add	r2,r3,r2
   11734:	10800003 	ldbu	r2,0(r2)
   11738:	10803fcc 	andi	r2,r2,255
   1173c:	1080201c 	xori	r2,r2,128
   11740:	10bfe004 	addi	r2,r2,-128
   11744:	10000a1e 	bne	r2,zero,11770 <alt_find_file+0xd8>
        !memcmp (next->name, name, len))
   11748:	e0bffd17 	ldw	r2,-12(fp)
   1174c:	10800217 	ldw	r2,8(r2)
   11750:	e0fffe17 	ldw	r3,-8(fp)
   11754:	180d883a 	mov	r6,r3
   11758:	e17fff17 	ldw	r5,-4(fp)
   1175c:	1009883a 	mov	r4,r2
   11760:	00119bc0 	call	119bc <memcmp>
    if (next->name[len-1] == '/')
    {
      len -= 1;
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
   11764:	1000021e 	bne	r2,zero,11770 <alt_find_file+0xd8>
        !memcmp (next->name, name, len))
    {
      /* match found */

      return next;
   11768:	e0bffd17 	ldw	r2,-12(fp)
   1176c:	00000706 	br	1178c <alt_find_file+0xf4>
    }
    next = (alt_dev*) next->llist.next;
   11770:	e0bffd17 	ldw	r2,-12(fp)
   11774:	10800017 	ldw	r2,0(r2)
   11778:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
   1177c:	e0fffd17 	ldw	r3,-12(fp)
   11780:	d0a00604 	addi	r2,gp,-32744
   11784:	18bfcc1e 	bne	r3,r2,116b8 <__alt_data_end+0xff0116b8>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;     
   11788:	0005883a 	mov	r2,zero
}
   1178c:	e037883a 	mov	sp,fp
   11790:	dfc00117 	ldw	ra,4(sp)
   11794:	df000017 	ldw	fp,0(sp)
   11798:	dec00204 	addi	sp,sp,8
   1179c:	f800283a 	ret

000117a0 <alt_get_fd>:
 * the offset of the file descriptor within the file descriptor array). A
 * negative value indicates failure.
 */

int alt_get_fd (alt_dev* dev)
{
   117a0:	defffc04 	addi	sp,sp,-16
   117a4:	df000315 	stw	fp,12(sp)
   117a8:	df000304 	addi	fp,sp,12
   117ac:	e13fff15 	stw	r4,-4(fp)
  alt_32 i;
  int rc = -EMFILE;
   117b0:	00bffa04 	movi	r2,-24
   117b4:	e0bffe15 	stw	r2,-8(fp)
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
   117b8:	e03ffd15 	stw	zero,-12(fp)
   117bc:	00001906 	br	11824 <alt_get_fd+0x84>
  {
    if (!alt_fd_list[i].dev)
   117c0:	00800074 	movhi	r2,1
   117c4:	108b6e04 	addi	r2,r2,11704
   117c8:	e0fffd17 	ldw	r3,-12(fp)
   117cc:	18c00324 	muli	r3,r3,12
   117d0:	10c5883a 	add	r2,r2,r3
   117d4:	10800017 	ldw	r2,0(r2)
   117d8:	10000f1e 	bne	r2,zero,11818 <alt_get_fd+0x78>
    {
      alt_fd_list[i].dev = dev;
   117dc:	00800074 	movhi	r2,1
   117e0:	108b6e04 	addi	r2,r2,11704
   117e4:	e0fffd17 	ldw	r3,-12(fp)
   117e8:	18c00324 	muli	r3,r3,12
   117ec:	10c5883a 	add	r2,r2,r3
   117f0:	e0ffff17 	ldw	r3,-4(fp)
   117f4:	10c00015 	stw	r3,0(r2)
      if (i > alt_max_fd)
   117f8:	d0e00a17 	ldw	r3,-32728(gp)
   117fc:	e0bffd17 	ldw	r2,-12(fp)
   11800:	1880020e 	bge	r3,r2,1180c <alt_get_fd+0x6c>
      {
        alt_max_fd = i;
   11804:	e0bffd17 	ldw	r2,-12(fp)
   11808:	d0a00a15 	stw	r2,-32728(gp)
      }
      rc = i;
   1180c:	e0bffd17 	ldw	r2,-12(fp)
   11810:	e0bffe15 	stw	r2,-8(fp)
      goto alt_get_fd_exit;
   11814:	00000606 	br	11830 <alt_get_fd+0x90>
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
   11818:	e0bffd17 	ldw	r2,-12(fp)
   1181c:	10800044 	addi	r2,r2,1
   11820:	e0bffd15 	stw	r2,-12(fp)
   11824:	e0bffd17 	ldw	r2,-12(fp)
   11828:	10800810 	cmplti	r2,r2,32
   1182c:	103fe41e 	bne	r2,zero,117c0 <__alt_data_end+0xff0117c0>
   * file descriptor pool.
   */

  ALT_SEM_POST(alt_fd_list_lock);

  return rc;
   11830:	e0bffe17 	ldw	r2,-8(fp)
}
   11834:	e037883a 	mov	sp,fp
   11838:	df000017 	ldw	fp,0(sp)
   1183c:	dec00104 	addi	sp,sp,4
   11840:	f800283a 	ret

00011844 <alt_icache_flush>:
 * alt_icache_flush() is called to flush the instruction cache for a memory
 * region of length "len" bytes, starting at address "start".
 */

void alt_icache_flush (void* start, alt_u32 len)
{
   11844:	defffb04 	addi	sp,sp,-20
   11848:	df000415 	stw	fp,16(sp)
   1184c:	df000404 	addi	fp,sp,16
   11850:	e13ffe15 	stw	r4,-8(fp)
   11854:	e17fff15 	stw	r5,-4(fp)

  /*
   * This is the most we would ever need to flush.
   */
 
  if (len > NIOS2_ICACHE_SIZE)
   11858:	e0bfff17 	ldw	r2,-4(fp)
   1185c:	10900070 	cmpltui	r2,r2,16385
   11860:	1000021e 	bne	r2,zero,1186c <alt_icache_flush+0x28>
  {
    len = NIOS2_ICACHE_SIZE;
   11864:	00900004 	movi	r2,16384
   11868:	e0bfff15 	stw	r2,-4(fp)
  }

  end = ((char*) start) + len;
   1186c:	e0fffe17 	ldw	r3,-8(fp)
   11870:	e0bfff17 	ldw	r2,-4(fp)
   11874:	1885883a 	add	r2,r3,r2
   11878:	e0bffd15 	stw	r2,-12(fp)

  for (i = start; i < end; i+= NIOS2_ICACHE_LINE_SIZE)
   1187c:	e0bffe17 	ldw	r2,-8(fp)
   11880:	e0bffc15 	stw	r2,-16(fp)
   11884:	00000506 	br	1189c <alt_icache_flush+0x58>
  { 
    __asm__ volatile ("flushi %0" :: "r" (i)); 
   11888:	e0bffc17 	ldw	r2,-16(fp)
   1188c:	1000603a 	flushi	r2
    len = NIOS2_ICACHE_SIZE;
  }

  end = ((char*) start) + len;

  for (i = start; i < end; i+= NIOS2_ICACHE_LINE_SIZE)
   11890:	e0bffc17 	ldw	r2,-16(fp)
   11894:	10800804 	addi	r2,r2,32
   11898:	e0bffc15 	stw	r2,-16(fp)
   1189c:	e0fffc17 	ldw	r3,-16(fp)
   118a0:	e0bffd17 	ldw	r2,-12(fp)
   118a4:	18bff836 	bltu	r3,r2,11888 <__alt_data_end+0xff011888>
   * For an unaligned flush request, we've got one more line left.
   * Note that this is dependent on NIOS2_ICACHE_LINE_SIZE to be a 
   * multiple of 2 (which it always is).
   */

  if (((alt_u32) start) & (NIOS2_ICACHE_LINE_SIZE - 1))
   118a8:	e0bffe17 	ldw	r2,-8(fp)
   118ac:	108007cc 	andi	r2,r2,31
   118b0:	10000226 	beq	r2,zero,118bc <alt_icache_flush+0x78>
  {
    __asm__ volatile ("flushi %0" :: "r" (i));
   118b4:	e0bffc17 	ldw	r2,-16(fp)
   118b8:	1000603a 	flushi	r2
  /* 
   * Having flushed the cache, flush any stale instructions in the 
   * pipeline 
   */

  __asm__ volatile ("flushp");
   118bc:	0000203a 	flushp

#endif /* NIOS2_ICACHE_SIZE > 0 */
}
   118c0:	0001883a 	nop
   118c4:	e037883a 	mov	sp,fp
   118c8:	df000017 	ldw	fp,0(sp)
   118cc:	dec00104 	addi	sp,sp,4
   118d0:	f800283a 	ret

000118d4 <alt_exception_cause_generated_bad_addr>:
 * Return: 1: BADADDR (bad_addr argument to handler) is valid
 *         0: BADADDR is not valid
 */
int 
alt_exception_cause_generated_bad_addr(alt_exception_cause cause)
{
   118d4:	defffe04 	addi	sp,sp,-8
   118d8:	df000115 	stw	fp,4(sp)
   118dc:	df000104 	addi	fp,sp,4
   118e0:	e13fff15 	stw	r4,-4(fp)
  switch (cause) {
   118e4:	e0bfff17 	ldw	r2,-4(fp)
   118e8:	10bffe84 	addi	r2,r2,-6
   118ec:	10c00428 	cmpgeui	r3,r2,16
   118f0:	18001a1e 	bne	r3,zero,1195c <alt_exception_cause_generated_bad_addr+0x88>
   118f4:	100690ba 	slli	r3,r2,2
   118f8:	00800074 	movhi	r2,1
   118fc:	10864304 	addi	r2,r2,6412
   11900:	1885883a 	add	r2,r3,r2
   11904:	10800017 	ldw	r2,0(r2)
   11908:	1000683a 	jmp	r2
   1190c:	0001194c 	andi	zero,zero,1125
   11910:	0001194c 	andi	zero,zero,1125
   11914:	0001195c 	xori	zero,zero,1125
   11918:	0001195c 	xori	zero,zero,1125
   1191c:	0001195c 	xori	zero,zero,1125
   11920:	0001194c 	andi	zero,zero,1125
   11924:	00011954 	movui	zero,1125
   11928:	0001195c 	xori	zero,zero,1125
   1192c:	0001194c 	andi	zero,zero,1125
   11930:	0001194c 	andi	zero,zero,1125
   11934:	0001195c 	xori	zero,zero,1125
   11938:	0001194c 	andi	zero,zero,1125
   1193c:	00011954 	movui	zero,1125
   11940:	0001195c 	xori	zero,zero,1125
   11944:	0001195c 	xori	zero,zero,1125
   11948:	0001194c 	andi	zero,zero,1125
  case NIOS2_EXCEPTION_MISALIGNED_TARGET_PC:
  case NIOS2_EXCEPTION_TLB_READ_PERM_VIOLATION:
  case NIOS2_EXCEPTION_TLB_WRITE_PERM_VIOLATION:
  case NIOS2_EXCEPTION_MPU_DATA_REGION_VIOLATION:
  case NIOS2_EXCEPTION_ECC_DATA_ERR:
    return 1;
   1194c:	00800044 	movi	r2,1
   11950:	00000306 	br	11960 <alt_exception_cause_generated_bad_addr+0x8c>

  case NIOS2_EXCEPTION_TLB_MISS:
  case NIOS2_EXCEPTION_ECC_TLB_ERR:
    return 0;
   11954:	0005883a 	mov	r2,zero
   11958:	00000106 	br	11960 <alt_exception_cause_generated_bad_addr+0x8c>

  default:
    return 0;
   1195c:	0005883a 	mov	r2,zero
  }
}
   11960:	e037883a 	mov	sp,fp
   11964:	df000017 	ldw	fp,0(sp)
   11968:	dec00104 	addi	sp,sp,4
   1196c:	f800283a 	ret

00011970 <atexit>:
   11970:	200b883a 	mov	r5,r4
   11974:	000f883a 	mov	r7,zero
   11978:	000d883a 	mov	r6,zero
   1197c:	0009883a 	mov	r4,zero
   11980:	0011a381 	jmpi	11a38 <__register_exitproc>

00011984 <exit>:
   11984:	defffe04 	addi	sp,sp,-8
   11988:	000b883a 	mov	r5,zero
   1198c:	dc000015 	stw	r16,0(sp)
   11990:	dfc00115 	stw	ra,4(sp)
   11994:	2021883a 	mov	r16,r4
   11998:	0011b500 	call	11b50 <__call_exitprocs>
   1199c:	00800074 	movhi	r2,1
   119a0:	108fe804 	addi	r2,r2,16288
   119a4:	11000017 	ldw	r4,0(r2)
   119a8:	20800f17 	ldw	r2,60(r4)
   119ac:	10000126 	beq	r2,zero,119b4 <exit+0x30>
   119b0:	103ee83a 	callr	r2
   119b4:	8009883a 	mov	r4,r16
   119b8:	0011cd00 	call	11cd0 <_exit>

000119bc <memcmp>:
   119bc:	01c000c4 	movi	r7,3
   119c0:	3980192e 	bgeu	r7,r6,11a28 <memcmp+0x6c>
   119c4:	2144b03a 	or	r2,r4,r5
   119c8:	11c4703a 	and	r2,r2,r7
   119cc:	10000f26 	beq	r2,zero,11a0c <memcmp+0x50>
   119d0:	20800003 	ldbu	r2,0(r4)
   119d4:	28c00003 	ldbu	r3,0(r5)
   119d8:	10c0151e 	bne	r2,r3,11a30 <memcmp+0x74>
   119dc:	31bfff84 	addi	r6,r6,-2
   119e0:	01ffffc4 	movi	r7,-1
   119e4:	00000406 	br	119f8 <memcmp+0x3c>
   119e8:	20800003 	ldbu	r2,0(r4)
   119ec:	28c00003 	ldbu	r3,0(r5)
   119f0:	31bfffc4 	addi	r6,r6,-1
   119f4:	10c00e1e 	bne	r2,r3,11a30 <memcmp+0x74>
   119f8:	21000044 	addi	r4,r4,1
   119fc:	29400044 	addi	r5,r5,1
   11a00:	31fff91e 	bne	r6,r7,119e8 <__alt_data_end+0xff0119e8>
   11a04:	0005883a 	mov	r2,zero
   11a08:	f800283a 	ret
   11a0c:	20c00017 	ldw	r3,0(r4)
   11a10:	28800017 	ldw	r2,0(r5)
   11a14:	18bfee1e 	bne	r3,r2,119d0 <__alt_data_end+0xff0119d0>
   11a18:	31bfff04 	addi	r6,r6,-4
   11a1c:	21000104 	addi	r4,r4,4
   11a20:	29400104 	addi	r5,r5,4
   11a24:	39bff936 	bltu	r7,r6,11a0c <__alt_data_end+0xff011a0c>
   11a28:	303fe91e 	bne	r6,zero,119d0 <__alt_data_end+0xff0119d0>
   11a2c:	003ff506 	br	11a04 <__alt_data_end+0xff011a04>
   11a30:	10c5c83a 	sub	r2,r2,r3
   11a34:	f800283a 	ret

00011a38 <__register_exitproc>:
   11a38:	defffa04 	addi	sp,sp,-24
   11a3c:	dc000315 	stw	r16,12(sp)
   11a40:	04000074 	movhi	r16,1
   11a44:	840fe804 	addi	r16,r16,16288
   11a48:	80c00017 	ldw	r3,0(r16)
   11a4c:	dc400415 	stw	r17,16(sp)
   11a50:	dfc00515 	stw	ra,20(sp)
   11a54:	18805217 	ldw	r2,328(r3)
   11a58:	2023883a 	mov	r17,r4
   11a5c:	10003726 	beq	r2,zero,11b3c <__register_exitproc+0x104>
   11a60:	10c00117 	ldw	r3,4(r2)
   11a64:	010007c4 	movi	r4,31
   11a68:	20c00e16 	blt	r4,r3,11aa4 <__register_exitproc+0x6c>
   11a6c:	1a000044 	addi	r8,r3,1
   11a70:	8800221e 	bne	r17,zero,11afc <__register_exitproc+0xc4>
   11a74:	18c00084 	addi	r3,r3,2
   11a78:	18c7883a 	add	r3,r3,r3
   11a7c:	18c7883a 	add	r3,r3,r3
   11a80:	12000115 	stw	r8,4(r2)
   11a84:	10c7883a 	add	r3,r2,r3
   11a88:	19400015 	stw	r5,0(r3)
   11a8c:	0005883a 	mov	r2,zero
   11a90:	dfc00517 	ldw	ra,20(sp)
   11a94:	dc400417 	ldw	r17,16(sp)
   11a98:	dc000317 	ldw	r16,12(sp)
   11a9c:	dec00604 	addi	sp,sp,24
   11aa0:	f800283a 	ret
   11aa4:	00800034 	movhi	r2,0
   11aa8:	108a7a04 	addi	r2,r2,10728
   11aac:	10002626 	beq	r2,zero,11b48 <__register_exitproc+0x110>
   11ab0:	01006404 	movi	r4,400
   11ab4:	d9400015 	stw	r5,0(sp)
   11ab8:	d9800115 	stw	r6,4(sp)
   11abc:	d9c00215 	stw	r7,8(sp)
   11ac0:	00029e80 	call	29e8 <malloc>
   11ac4:	d9400017 	ldw	r5,0(sp)
   11ac8:	d9800117 	ldw	r6,4(sp)
   11acc:	d9c00217 	ldw	r7,8(sp)
   11ad0:	10001d26 	beq	r2,zero,11b48 <__register_exitproc+0x110>
   11ad4:	81000017 	ldw	r4,0(r16)
   11ad8:	10000115 	stw	zero,4(r2)
   11adc:	02000044 	movi	r8,1
   11ae0:	22405217 	ldw	r9,328(r4)
   11ae4:	0007883a 	mov	r3,zero
   11ae8:	12400015 	stw	r9,0(r2)
   11aec:	20805215 	stw	r2,328(r4)
   11af0:	10006215 	stw	zero,392(r2)
   11af4:	10006315 	stw	zero,396(r2)
   11af8:	883fde26 	beq	r17,zero,11a74 <__alt_data_end+0xff011a74>
   11afc:	18c9883a 	add	r4,r3,r3
   11b00:	2109883a 	add	r4,r4,r4
   11b04:	1109883a 	add	r4,r2,r4
   11b08:	21802215 	stw	r6,136(r4)
   11b0c:	01800044 	movi	r6,1
   11b10:	12406217 	ldw	r9,392(r2)
   11b14:	30cc983a 	sll	r6,r6,r3
   11b18:	4992b03a 	or	r9,r9,r6
   11b1c:	12406215 	stw	r9,392(r2)
   11b20:	21c04215 	stw	r7,264(r4)
   11b24:	01000084 	movi	r4,2
   11b28:	893fd21e 	bne	r17,r4,11a74 <__alt_data_end+0xff011a74>
   11b2c:	11006317 	ldw	r4,396(r2)
   11b30:	218cb03a 	or	r6,r4,r6
   11b34:	11806315 	stw	r6,396(r2)
   11b38:	003fce06 	br	11a74 <__alt_data_end+0xff011a74>
   11b3c:	18805304 	addi	r2,r3,332
   11b40:	18805215 	stw	r2,328(r3)
   11b44:	003fc606 	br	11a60 <__alt_data_end+0xff011a60>
   11b48:	00bfffc4 	movi	r2,-1
   11b4c:	003fd006 	br	11a90 <__alt_data_end+0xff011a90>

00011b50 <__call_exitprocs>:
   11b50:	defff504 	addi	sp,sp,-44
   11b54:	df000915 	stw	fp,36(sp)
   11b58:	dd400615 	stw	r21,24(sp)
   11b5c:	dc800315 	stw	r18,12(sp)
   11b60:	dfc00a15 	stw	ra,40(sp)
   11b64:	ddc00815 	stw	r23,32(sp)
   11b68:	dd800715 	stw	r22,28(sp)
   11b6c:	dd000515 	stw	r20,20(sp)
   11b70:	dcc00415 	stw	r19,16(sp)
   11b74:	dc400215 	stw	r17,8(sp)
   11b78:	dc000115 	stw	r16,4(sp)
   11b7c:	d9000015 	stw	r4,0(sp)
   11b80:	2839883a 	mov	fp,r5
   11b84:	04800044 	movi	r18,1
   11b88:	057fffc4 	movi	r21,-1
   11b8c:	00800074 	movhi	r2,1
   11b90:	108fe804 	addi	r2,r2,16288
   11b94:	12000017 	ldw	r8,0(r2)
   11b98:	45005217 	ldw	r20,328(r8)
   11b9c:	44c05204 	addi	r19,r8,328
   11ba0:	a0001c26 	beq	r20,zero,11c14 <__call_exitprocs+0xc4>
   11ba4:	a0800117 	ldw	r2,4(r20)
   11ba8:	15ffffc4 	addi	r23,r2,-1
   11bac:	b8000d16 	blt	r23,zero,11be4 <__call_exitprocs+0x94>
   11bb0:	14000044 	addi	r16,r2,1
   11bb4:	8421883a 	add	r16,r16,r16
   11bb8:	8421883a 	add	r16,r16,r16
   11bbc:	84402004 	addi	r17,r16,128
   11bc0:	a463883a 	add	r17,r20,r17
   11bc4:	a421883a 	add	r16,r20,r16
   11bc8:	e0001e26 	beq	fp,zero,11c44 <__call_exitprocs+0xf4>
   11bcc:	80804017 	ldw	r2,256(r16)
   11bd0:	e0801c26 	beq	fp,r2,11c44 <__call_exitprocs+0xf4>
   11bd4:	bdffffc4 	addi	r23,r23,-1
   11bd8:	843fff04 	addi	r16,r16,-4
   11bdc:	8c7fff04 	addi	r17,r17,-4
   11be0:	bd7ff91e 	bne	r23,r21,11bc8 <__alt_data_end+0xff011bc8>
   11be4:	00800034 	movhi	r2,0
   11be8:	108a7f04 	addi	r2,r2,10748
   11bec:	10000926 	beq	r2,zero,11c14 <__call_exitprocs+0xc4>
   11bf0:	a0800117 	ldw	r2,4(r20)
   11bf4:	1000301e 	bne	r2,zero,11cb8 <__call_exitprocs+0x168>
   11bf8:	a0800017 	ldw	r2,0(r20)
   11bfc:	10003226 	beq	r2,zero,11cc8 <__call_exitprocs+0x178>
   11c00:	a009883a 	mov	r4,r20
   11c04:	98800015 	stw	r2,0(r19)
   11c08:	00029fc0 	call	29fc <free>
   11c0c:	9d000017 	ldw	r20,0(r19)
   11c10:	a03fe41e 	bne	r20,zero,11ba4 <__alt_data_end+0xff011ba4>
   11c14:	dfc00a17 	ldw	ra,40(sp)
   11c18:	df000917 	ldw	fp,36(sp)
   11c1c:	ddc00817 	ldw	r23,32(sp)
   11c20:	dd800717 	ldw	r22,28(sp)
   11c24:	dd400617 	ldw	r21,24(sp)
   11c28:	dd000517 	ldw	r20,20(sp)
   11c2c:	dcc00417 	ldw	r19,16(sp)
   11c30:	dc800317 	ldw	r18,12(sp)
   11c34:	dc400217 	ldw	r17,8(sp)
   11c38:	dc000117 	ldw	r16,4(sp)
   11c3c:	dec00b04 	addi	sp,sp,44
   11c40:	f800283a 	ret
   11c44:	a0800117 	ldw	r2,4(r20)
   11c48:	80c00017 	ldw	r3,0(r16)
   11c4c:	10bfffc4 	addi	r2,r2,-1
   11c50:	15c01426 	beq	r2,r23,11ca4 <__call_exitprocs+0x154>
   11c54:	80000015 	stw	zero,0(r16)
   11c58:	183fde26 	beq	r3,zero,11bd4 <__alt_data_end+0xff011bd4>
   11c5c:	95c8983a 	sll	r4,r18,r23
   11c60:	a0806217 	ldw	r2,392(r20)
   11c64:	a5800117 	ldw	r22,4(r20)
   11c68:	2084703a 	and	r2,r4,r2
   11c6c:	10000b26 	beq	r2,zero,11c9c <__call_exitprocs+0x14c>
   11c70:	a0806317 	ldw	r2,396(r20)
   11c74:	2088703a 	and	r4,r4,r2
   11c78:	20000c1e 	bne	r4,zero,11cac <__call_exitprocs+0x15c>
   11c7c:	89400017 	ldw	r5,0(r17)
   11c80:	d9000017 	ldw	r4,0(sp)
   11c84:	183ee83a 	callr	r3
   11c88:	a0800117 	ldw	r2,4(r20)
   11c8c:	15bfbf1e 	bne	r2,r22,11b8c <__alt_data_end+0xff011b8c>
   11c90:	98800017 	ldw	r2,0(r19)
   11c94:	153fcf26 	beq	r2,r20,11bd4 <__alt_data_end+0xff011bd4>
   11c98:	003fbc06 	br	11b8c <__alt_data_end+0xff011b8c>
   11c9c:	183ee83a 	callr	r3
   11ca0:	003ff906 	br	11c88 <__alt_data_end+0xff011c88>
   11ca4:	a5c00115 	stw	r23,4(r20)
   11ca8:	003feb06 	br	11c58 <__alt_data_end+0xff011c58>
   11cac:	89000017 	ldw	r4,0(r17)
   11cb0:	183ee83a 	callr	r3
   11cb4:	003ff406 	br	11c88 <__alt_data_end+0xff011c88>
   11cb8:	a0800017 	ldw	r2,0(r20)
   11cbc:	a027883a 	mov	r19,r20
   11cc0:	1029883a 	mov	r20,r2
   11cc4:	003fb606 	br	11ba0 <__alt_data_end+0xff011ba0>
   11cc8:	0005883a 	mov	r2,zero
   11ccc:	003ffb06 	br	11cbc <__alt_data_end+0xff011cbc>

00011cd0 <_exit>:
 *
 * ALT_EXIT is mapped onto the _exit() system call in alt_syscall.h
 */

void ALT_EXIT (int exit_code)
{
   11cd0:	defffd04 	addi	sp,sp,-12
   11cd4:	df000215 	stw	fp,8(sp)
   11cd8:	df000204 	addi	fp,sp,8
   11cdc:	e13fff15 	stw	r4,-4(fp)
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Entering _exit() function.\r\n");
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Exit code from main was %d.\r\n",exit_code);
  /* Stop all other threads */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Calling ALT_OS_STOP().\r\n");
  ALT_OS_STOP();
   11ce0:	0001883a 	nop
   11ce4:	e0bfff17 	ldw	r2,-4(fp)
   11ce8:	e0bffe15 	stw	r2,-8(fp)
/*
 * Routine called on exit.
 */
static ALT_INLINE ALT_ALWAYS_INLINE void alt_sim_halt(int exit_code)
{
  register int r2 asm ("r2") = exit_code;
   11cec:	e0bffe17 	ldw	r2,-8(fp)
  __asm__ volatile ("\n0:\n\taddi %0,%0, -1\n\tbgt %0,zero,0b" : : "r" (ALT_CPU_FREQ/100) ); /* Delay for >30ms */

  __asm__ volatile ("break 2" : : "r"(r2), "r"(r3) ALT_GMON_DATA );

#else /* !DEBUG_STUB */
  if (r2) {
   11cf0:	10000226 	beq	r2,zero,11cfc <_exit+0x2c>
    ALT_SIM_FAIL();
   11cf4:	002af070 	cmpltui	zero,zero,43969
   11cf8:	00000106 	br	11d00 <_exit+0x30>
  } else {
    ALT_SIM_PASS();
   11cfc:	002af0b0 	cmpltui	zero,zero,43970
  ALT_SIM_HALT(exit_code);

  /* spin forever, since there's no where to go back to */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Spinning forever.\r\n");
  while (1);
   11d00:	003fff06 	br	11d00 <__alt_data_end+0xff011d00>
